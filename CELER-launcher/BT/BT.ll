; ModuleID = 'add.ll'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.timeval = type { i64, i64 }
%struct.timezone = type { i32, i32 }

@.str = private unnamed_addr constant [11 x i8] c"timer.flag\00", align 1
@.str1 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@timeron = common global i32 0, align 4
@.str2 = private unnamed_addr constant [6 x i8] c"total\00", align 1
@.str3 = private unnamed_addr constant [5 x i8] c"rhsx\00", align 1
@.str4 = private unnamed_addr constant [5 x i8] c"rhsy\00", align 1
@.str5 = private unnamed_addr constant [5 x i8] c"rhsz\00", align 1
@.str6 = private unnamed_addr constant [4 x i8] c"rhs\00", align 1
@.str7 = private unnamed_addr constant [7 x i8] c"xsolve\00", align 1
@.str8 = private unnamed_addr constant [7 x i8] c"ysolve\00", align 1
@.str9 = private unnamed_addr constant [7 x i8] c"zsolve\00", align 1
@.str10 = private unnamed_addr constant [8 x i8] c"redist1\00", align 1
@.str11 = private unnamed_addr constant [8 x i8] c"redist2\00", align 1
@.str12 = private unnamed_addr constant [4 x i8] c"add\00", align 1
@.str13 = private unnamed_addr constant [59 x i8] c"\0A\0A NAS Parallel Benchmarks (NPB3.3-SER-C) - BT Benchmark\0A\0A\00", align 1
@.str14 = private unnamed_addr constant [13 x i8] c"inputbt.data\00", align 1
@.str15 = private unnamed_addr constant [39 x i8] c" Reading from input file inputbt.data\0A\00", align 1
@.str16 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str17 = private unnamed_addr constant [4 x i8] c"%lf\00", align 1
@dt = common global double 0.000000e+00, align 8
@.str18 = private unnamed_addr constant [8 x i8] c"%d%d%d\0A\00", align 1
@grid_points = common global [3 x i32] zeroinitializer, align 4
@.str19 = private unnamed_addr constant [54 x i8] c" No input file inputbt.data. Using compiled defaults\0A\00", align 1
@.str20 = private unnamed_addr constant [20 x i8] c" Size: %4dx%4dx%4d\0A\00", align 1
@.str21 = private unnamed_addr constant [32 x i8] c" Iterations: %4d    dt: %10.6f\0A\00", align 1
@.str22 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str23 = private unnamed_addr constant [13 x i8] c" %d, %d, %d\0A\00", align 1
@.str24 = private unnamed_addr constant [48 x i8] c" Problem size too big for compiled array sizes\0A\00", align 1
@.str25 = private unnamed_addr constant [16 x i8] c" Time step %4d\0A\00", align 1
@.str26 = private unnamed_addr constant [3 x i8] c"BT\00", align 1
@.str27 = private unnamed_addr constant [25 x i8] c"          floating point\00", align 1
@.str28 = private unnamed_addr constant [6 x i8] c"3.3.1\00", align 1
@.str29 = private unnamed_addr constant [12 x i8] c"19 Sep 2018\00", align 1
@.str30 = private unnamed_addr constant [34 x i8] c"$(LLFI_BUILD_ROOT)/llvm/bin/clang\00", align 1
@.str31 = private unnamed_addr constant [6 x i8] c"$(CC)\00", align 1
@.str32 = private unnamed_addr constant [4 x i8] c"-lm\00", align 1
@.str33 = private unnamed_addr constant [12 x i8] c"-I../common\00", align 1
@.str34 = private unnamed_addr constant [14 x i8] c"-g -Wall -O3 \00", align 1
@.str35 = private unnamed_addr constant [7 x i8] c"-O3 -v\00", align 1
@.str36 = private unnamed_addr constant [7 x i8] c"(none)\00", align 1
@.str37 = private unnamed_addr constant [25 x i8] c"  SECTION   Time (secs)\0A\00", align 1
@.str38 = private unnamed_addr constant [25 x i8] c"  %-8s:%9.3f  (%6.2f%%)\0A\00", align 1
@.str39 = private unnamed_addr constant [30 x i8] c"    --> %8s:%9.3f  (%6.2f%%)\0A\00", align 1
@.str40 = private unnamed_addr constant [8 x i8] c"sub-rhs\00", align 1
@.str41 = private unnamed_addr constant [9 x i8] c"rest-rhs\00", align 1
@.str42 = private unnamed_addr constant [9 x i8] c"sub-zsol\00", align 1
@.str43 = private unnamed_addr constant [7 x i8] c"redist\00", align 1
@elapsed_time = common global double 0.000000e+00, align 8
@tx1 = common global double 0.000000e+00, align 8
@tx2 = common global double 0.000000e+00, align 8
@tx3 = common global double 0.000000e+00, align 8
@ty1 = common global double 0.000000e+00, align 8
@ty2 = common global double 0.000000e+00, align 8
@ty3 = common global double 0.000000e+00, align 8
@tz1 = common global double 0.000000e+00, align 8
@tz2 = common global double 0.000000e+00, align 8
@tz3 = common global double 0.000000e+00, align 8
@dx1 = common global double 0.000000e+00, align 8
@dx2 = common global double 0.000000e+00, align 8
@dx3 = common global double 0.000000e+00, align 8
@dx4 = common global double 0.000000e+00, align 8
@dx5 = common global double 0.000000e+00, align 8
@dy1 = common global double 0.000000e+00, align 8
@dy2 = common global double 0.000000e+00, align 8
@dy3 = common global double 0.000000e+00, align 8
@dy4 = common global double 0.000000e+00, align 8
@dy5 = common global double 0.000000e+00, align 8
@dz1 = common global double 0.000000e+00, align 8
@dz2 = common global double 0.000000e+00, align 8
@dz3 = common global double 0.000000e+00, align 8
@dz4 = common global double 0.000000e+00, align 8
@dz5 = common global double 0.000000e+00, align 8
@dssp = common global double 0.000000e+00, align 8
@ce = common global [5 x [13 x double]] zeroinitializer, align 16
@dxmax = common global double 0.000000e+00, align 8
@dymax = common global double 0.000000e+00, align 8
@dzmax = common global double 0.000000e+00, align 8
@xxcon1 = common global double 0.000000e+00, align 8
@xxcon2 = common global double 0.000000e+00, align 8
@xxcon3 = common global double 0.000000e+00, align 8
@xxcon4 = common global double 0.000000e+00, align 8
@xxcon5 = common global double 0.000000e+00, align 8
@dx1tx1 = common global double 0.000000e+00, align 8
@dx2tx1 = common global double 0.000000e+00, align 8
@dx3tx1 = common global double 0.000000e+00, align 8
@dx4tx1 = common global double 0.000000e+00, align 8
@dx5tx1 = common global double 0.000000e+00, align 8
@yycon1 = common global double 0.000000e+00, align 8
@yycon2 = common global double 0.000000e+00, align 8
@yycon3 = common global double 0.000000e+00, align 8
@yycon4 = common global double 0.000000e+00, align 8
@yycon5 = common global double 0.000000e+00, align 8
@dy1ty1 = common global double 0.000000e+00, align 8
@dy2ty1 = common global double 0.000000e+00, align 8
@dy3ty1 = common global double 0.000000e+00, align 8
@dy4ty1 = common global double 0.000000e+00, align 8
@dy5ty1 = common global double 0.000000e+00, align 8
@zzcon1 = common global double 0.000000e+00, align 8
@zzcon2 = common global double 0.000000e+00, align 8
@zzcon3 = common global double 0.000000e+00, align 8
@zzcon4 = common global double 0.000000e+00, align 8
@zzcon5 = common global double 0.000000e+00, align 8
@dz1tz1 = common global double 0.000000e+00, align 8
@dz2tz1 = common global double 0.000000e+00, align 8
@dz3tz1 = common global double 0.000000e+00, align 8
@dz4tz1 = common global double 0.000000e+00, align 8
@dz5tz1 = common global double 0.000000e+00, align 8
@dnxm1 = common global double 0.000000e+00, align 8
@dnym1 = common global double 0.000000e+00, align 8
@dnzm1 = common global double 0.000000e+00, align 8
@c1c2 = common global double 0.000000e+00, align 8
@c1c5 = common global double 0.000000e+00, align 8
@c3c4 = common global double 0.000000e+00, align 8
@c1345 = common global double 0.000000e+00, align 8
@conz1 = common global double 0.000000e+00, align 8
@c1 = common global double 0.000000e+00, align 8
@c2 = common global double 0.000000e+00, align 8
@c3 = common global double 0.000000e+00, align 8
@c4 = common global double 0.000000e+00, align 8
@c5 = common global double 0.000000e+00, align 8
@c4dssp = common global double 0.000000e+00, align 8
@c5dssp = common global double 0.000000e+00, align 8
@dtdssp = common global double 0.000000e+00, align 8
@dttx1 = common global double 0.000000e+00, align 8
@dttx2 = common global double 0.000000e+00, align 8
@dtty1 = common global double 0.000000e+00, align 8
@dtty2 = common global double 0.000000e+00, align 8
@dttz1 = common global double 0.000000e+00, align 8
@dttz2 = common global double 0.000000e+00, align 8
@c2dttx1 = common global double 0.000000e+00, align 8
@c2dtty1 = common global double 0.000000e+00, align 8
@c2dttz1 = common global double 0.000000e+00, align 8
@comz1 = common global double 0.000000e+00, align 8
@comz4 = common global double 0.000000e+00, align 8
@comz5 = common global double 0.000000e+00, align 8
@comz6 = common global double 0.000000e+00, align 8
@c3c4tx3 = common global double 0.000000e+00, align 8
@c3c4ty3 = common global double 0.000000e+00, align 8
@c3c4tz3 = common global double 0.000000e+00, align 8
@c2iv = common global double 0.000000e+00, align 8
@con43 = common global double 0.000000e+00, align 8
@con16 = common global double 0.000000e+00, align 8
@us = common global [12 x [13 x [13 x double]]] zeroinitializer, align 16
@vs = common global [12 x [13 x [13 x double]]] zeroinitializer, align 16
@ws = common global [12 x [13 x [13 x double]]] zeroinitializer, align 16
@qs = common global [12 x [13 x [13 x double]]] zeroinitializer, align 16
@rho_i = common global [12 x [13 x [13 x double]]] zeroinitializer, align 16
@square = common global [12 x [13 x [13 x double]]] zeroinitializer, align 16
@forcing = common global [12 x [13 x [13 x [5 x double]]]] zeroinitializer, align 16
@u = common global [12 x [13 x [13 x [5 x double]]]] zeroinitializer, align 16
@rhs = common global [12 x [13 x [13 x [5 x double]]]] zeroinitializer, align 16
@cuf = common global [13 x double] zeroinitializer, align 16
@q = common global [13 x double] zeroinitializer, align 16
@ue = common global [13 x [5 x double]] zeroinitializer, align 16
@buf = common global [13 x [5 x double]] zeroinitializer, align 16
@fjac = common global [13 x [5 x [5 x double]]] zeroinitializer, align 16
@njac = common global [13 x [5 x [5 x double]]] zeroinitializer, align 16
@lhs = common global [13 x [3 x [5 x [5 x double]]]] zeroinitializer, align 16
@tmp1 = common global double 0.000000e+00, align 8
@tmp2 = common global double 0.000000e+00, align 8
@tmp3 = common global double 0.000000e+00, align 8
@.str44 = private unnamed_addr constant [27 x i8] c"\0A\0A %s Benchmark Completed\0A\00", align 1
@.str145 = private unnamed_addr constant [46 x i8] c" Class           =                        %c\0A\00", align 1
@.str246 = private unnamed_addr constant [38 x i8] c" Size            =             %12ld\0A\00", align 1
@.str347 = private unnamed_addr constant [44 x i8] c" Size            =             %4dx%4dx%4d\0A\00", align 1
@.str448 = private unnamed_addr constant [37 x i8] c" Iterations      =             %12d\0A\00", align 1
@.str549 = private unnamed_addr constant [25 x i8] c" Operation type  = %24s\0A\00", align 1
@.str650 = private unnamed_addr constant [45 x i8] c" Verification    =            NOT PERFORMED\0A\00", align 1
@.str751 = private unnamed_addr constant [45 x i8] c" Verification    =               SUCCESSFUL\0A\00", align 1
@.str852 = private unnamed_addr constant [45 x i8] c" Verification    =             UNSUCCESSFUL\0A\00", align 1
@.str953 = private unnamed_addr constant [37 x i8] c" Version         =             %12s\0A\00", align 1
@.str1054 = private unnamed_addr constant [41 x i8] c"\0A--------------------------------------\0A\00", align 1
@.str1155 = private unnamed_addr constant [39 x i8] c" Please send all errors/feedbacks to:\0A\00", align 1
@.str1256 = private unnamed_addr constant [34 x i8] c" Center for Manycore Programming\0A\00", align 1
@.str1357 = private unnamed_addr constant [21 x i8] c" cmp@aces.snu.ac.kr\0A\00", align 1
@.str1458 = private unnamed_addr constant [24 x i8] c" http://aces.snu.ac.kr\0A\00", align 1
@.str1559 = private unnamed_addr constant [40 x i8] c"--------------------------------------\0A\00", align 1
@elapsed = internal global [64 x double] zeroinitializer, align 16
@start = internal global [64 x double] zeroinitializer, align 16
@.str75 = private unnamed_addr constant [28 x i8] c"\0A\0A %s Benchmark Completed.\0A\00", align 1
@.str176 = private unnamed_addr constant [37 x i8] c" Class           =             %12c\0A\00", align 1
@.str277 = private unnamed_addr constant [8 x i8] c"%15.0lf\00", align 1
@.str378 = private unnamed_addr constant [34 x i8] c" Size            =          %15s\0A\00", align 1
@.str479 = private unnamed_addr constant [37 x i8] c" Size            =             %12d\0A\00", align 1
@.str580 = private unnamed_addr constant [42 x i8] c" Size            =           %4dx%4dx%4d\0A\00", align 1
@.str681 = private unnamed_addr constant [37 x i8] c" Iterations      =             %12d\0A\00", align 1
@.str782 = private unnamed_addr constant [25 x i8] c" Operation type  = %24s\0A\00", align 1
@.str883 = private unnamed_addr constant [37 x i8] c" Verification    =             %12s\0A\00", align 1
@.str984 = private unnamed_addr constant [11 x i8] c"SUCCESSFUL\00", align 1
@.str1085 = private unnamed_addr constant [13 x i8] c"UNSUCCESSFUL\00", align 1
@.str1186 = private unnamed_addr constant [37 x i8] c" Version         =             %12s\0A\00", align 1
@.str1287 = private unnamed_addr constant [37 x i8] c" Compile date    =             %12s\0A\00", align 1
@.str1388 = private unnamed_addr constant [195 x i8] c"\0A--------------------------------------\0A Please send all errors/feedbacks to:\0A Center for Manycore Programming\0A cmp@aces.snu.ac.kr\0A http://aces.snu.ac.kr\0A--------------------------------------\0A\0A\00", align 1
@.str95 = private unnamed_addr constant [44 x i8] c" Verification being performed for class %c\0A\00", align 1
@.str196 = private unnamed_addr constant [41 x i8] c" accuracy setting for epsilon = %20.13E\0A\00", align 1
@.str297 = private unnamed_addr constant [50 x i8] c" DT does not match the reference value of %15.8E\0A\00", align 1
@.str398 = private unnamed_addr constant [16 x i8] c" Unknown class\0A\00", align 1
@.str499 = private unnamed_addr constant [38 x i8] c" Comparison of RMS-norms of residual\0A\00", align 1
@.str5100 = private unnamed_addr constant [24 x i8] c" RMS-norms of residual\0A\00", align 1
@.str6101 = private unnamed_addr constant [22 x i8] c"          %2d%20.13E\0A\00", align 1
@.str7102 = private unnamed_addr constant [36 x i8] c"          %2d%20.13E%20.13E%20.13E\0A\00", align 1
@.str8103 = private unnamed_addr constant [36 x i8] c" FAILURE: %2d%20.13E%20.13E%20.13E\0A\00", align 1
@.str9104 = private unnamed_addr constant [44 x i8] c" Comparison of RMS-norms of solution error\0A\00", align 1
@.str10105 = private unnamed_addr constant [30 x i8] c" RMS-norms of solution error\0A\00", align 1
@.str11106 = private unnamed_addr constant [31 x i8] c" No reference values provided\0A\00", align 1
@.str12107 = private unnamed_addr constant [28 x i8] c" No verification performed\0A\00", align 1
@.str13108 = private unnamed_addr constant [26 x i8] c" Verification Successful\0A\00", align 1
@.str14109 = private unnamed_addr constant [22 x i8] c" Verification failed\0A\00", align 1
@wtime_.sec = internal global i32 -1, align 4

; Function Attrs: nounwind uwtable
define void @add() #0 {
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %m = alloca i32, align 4
  %1 = load i32* @timeron, align 4
  %2 = icmp ne i32 %1, 0
  br i1 %2, label %3, label %4

; <label>:3                                       ; preds = %0
  call void @timer_start(i32 11)
  br label %4

; <label>:4                                       ; preds = %3, %0
  store i32 1, i32* %k, align 4
  br label %5

; <label>:5                                       ; preds = %78, %4
  %6 = load i32* %k, align 4
  %7 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %8 = sub nsw i32 %7, 2
  %9 = icmp sle i32 %6, %8
  br i1 %9, label %10, label %81

; <label>:10                                      ; preds = %5
  store i32 1, i32* %j, align 4
  br label %11

; <label>:11                                      ; preds = %74, %10
  %12 = load i32* %j, align 4
  %13 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %14 = sub nsw i32 %13, 2
  %15 = icmp sle i32 %12, %14
  br i1 %15, label %16, label %77

; <label>:16                                      ; preds = %11
  store i32 1, i32* %i, align 4
  br label %17

; <label>:17                                      ; preds = %70, %16
  %18 = load i32* %i, align 4
  %19 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %20 = sub nsw i32 %19, 2
  %21 = icmp sle i32 %18, %20
  br i1 %21, label %22, label %73

; <label>:22                                      ; preds = %17
  store i32 0, i32* %m, align 4
  br label %23

; <label>:23                                      ; preds = %66, %22
  %24 = load i32* %m, align 4
  %25 = icmp slt i32 %24, 5
  br i1 %25, label %26, label %69

; <label>:26                                      ; preds = %23
  %27 = load i32* %m, align 4
  %28 = sext i32 %27 to i64
  %29 = load i32* %i, align 4
  %30 = sext i32 %29 to i64
  %31 = load i32* %j, align 4
  %32 = sext i32 %31 to i64
  %33 = load i32* %k, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %34
  %36 = getelementptr inbounds [13 x [13 x [5 x double]]]* %35, i32 0, i64 %32
  %37 = getelementptr inbounds [13 x [5 x double]]* %36, i32 0, i64 %30
  %38 = getelementptr inbounds [5 x double]* %37, i32 0, i64 %28
  %39 = load double* %38, align 8
  %40 = load i32* %m, align 4
  %41 = sext i32 %40 to i64
  %42 = load i32* %i, align 4
  %43 = sext i32 %42 to i64
  %44 = load i32* %j, align 4
  %45 = sext i32 %44 to i64
  %46 = load i32* %k, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %47
  %49 = getelementptr inbounds [13 x [13 x [5 x double]]]* %48, i32 0, i64 %45
  %50 = getelementptr inbounds [13 x [5 x double]]* %49, i32 0, i64 %43
  %51 = getelementptr inbounds [5 x double]* %50, i32 0, i64 %41
  %52 = load double* %51, align 8
  %53 = fadd double %39, %52
  %54 = load i32* %m, align 4
  %55 = sext i32 %54 to i64
  %56 = load i32* %i, align 4
  %57 = sext i32 %56 to i64
  %58 = load i32* %j, align 4
  %59 = sext i32 %58 to i64
  %60 = load i32* %k, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %61
  %63 = getelementptr inbounds [13 x [13 x [5 x double]]]* %62, i32 0, i64 %59
  %64 = getelementptr inbounds [13 x [5 x double]]* %63, i32 0, i64 %57
  %65 = getelementptr inbounds [5 x double]* %64, i32 0, i64 %55
  store double %53, double* %65, align 8
  br label %66

; <label>:66                                      ; preds = %26
  %67 = load i32* %m, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* %m, align 4
  br label %23

; <label>:69                                      ; preds = %23
  br label %70

; <label>:70                                      ; preds = %69
  %71 = load i32* %i, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %i, align 4
  br label %17

; <label>:73                                      ; preds = %17
  br label %74

; <label>:74                                      ; preds = %73
  %75 = load i32* %j, align 4
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %j, align 4
  br label %11

; <label>:77                                      ; preds = %11
  br label %78

; <label>:78                                      ; preds = %77
  %79 = load i32* %k, align 4
  %80 = add nsw i32 %79, 1
  store i32 %80, i32* %k, align 4
  br label %5

; <label>:81                                      ; preds = %5
  %82 = load i32* @timeron, align 4
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %84, label %85

; <label>:84                                      ; preds = %81
  call void @timer_stop(i32 11)
  br label %85

; <label>:85                                      ; preds = %84, %81
  ret void
}

; Function Attrs: nounwind uwtable
define void @adi() #0 {
  call void (...)* bitcast (void ()* @compute_rhs to void (...)*)()
  call void (...)* bitcast (void ()* @x_solve to void (...)*)()
  call void (...)* bitcast (void ()* @y_solve to void (...)*)()
  call void (...)* bitcast (void ()* @z_solve to void (...)*)()
  call void (...)* bitcast (void ()* @add to void (...)*)()
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i8**, align 8
  %i = alloca i32, align 4
  %niter = alloca i32, align 4
  %step = alloca i32, align 4
  %navg = alloca double, align 8
  %mflops = alloca double, align 8
  %n3 = alloca double, align 8
  %tmax = alloca double, align 8
  %t = alloca double, align 8
  %trecs = alloca [12 x double], align 16
  %verified = alloca i32, align 4
  %Class = alloca i8, align 1
  %t_names = alloca [12 x i8*], align 16
  %fp = alloca %struct._IO_FILE*, align 8
  %result = alloca i32, align 4
  store i32 0, i32* %1
  store i32 %argc, i32* %2, align 4
  store i8** %argv, i8*** %3, align 8
  %4 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([11 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str1, i32 0, i32 0))
  store %struct._IO_FILE* %4, %struct._IO_FILE** %fp, align 8
  %5 = icmp ne %struct._IO_FILE* %4, null
  br i1 %5, label %6, label %20

; <label>:6                                       ; preds = %0
  store i32 1, i32* @timeron, align 4
  %7 = getelementptr inbounds [12 x i8*]* %t_names, i32 0, i64 1
  store i8* getelementptr inbounds ([6 x i8]* @.str2, i32 0, i32 0), i8** %7, align 8
  %8 = getelementptr inbounds [12 x i8*]* %t_names, i32 0, i64 2
  store i8* getelementptr inbounds ([5 x i8]* @.str3, i32 0, i32 0), i8** %8, align 8
  %9 = getelementptr inbounds [12 x i8*]* %t_names, i32 0, i64 3
  store i8* getelementptr inbounds ([5 x i8]* @.str4, i32 0, i32 0), i8** %9, align 8
  %10 = getelementptr inbounds [12 x i8*]* %t_names, i32 0, i64 4
  store i8* getelementptr inbounds ([5 x i8]* @.str5, i32 0, i32 0), i8** %10, align 8
  %11 = getelementptr inbounds [12 x i8*]* %t_names, i32 0, i64 5
  store i8* getelementptr inbounds ([4 x i8]* @.str6, i32 0, i32 0), i8** %11, align 8
  %12 = getelementptr inbounds [12 x i8*]* %t_names, i32 0, i64 6
  store i8* getelementptr inbounds ([7 x i8]* @.str7, i32 0, i32 0), i8** %12, align 8
  %13 = getelementptr inbounds [12 x i8*]* %t_names, i32 0, i64 7
  store i8* getelementptr inbounds ([7 x i8]* @.str8, i32 0, i32 0), i8** %13, align 8
  %14 = getelementptr inbounds [12 x i8*]* %t_names, i32 0, i64 8
  store i8* getelementptr inbounds ([7 x i8]* @.str9, i32 0, i32 0), i8** %14, align 8
  %15 = getelementptr inbounds [12 x i8*]* %t_names, i32 0, i64 9
  store i8* getelementptr inbounds ([8 x i8]* @.str10, i32 0, i32 0), i8** %15, align 8
  %16 = getelementptr inbounds [12 x i8*]* %t_names, i32 0, i64 10
  store i8* getelementptr inbounds ([8 x i8]* @.str11, i32 0, i32 0), i8** %16, align 8
  %17 = getelementptr inbounds [12 x i8*]* %t_names, i32 0, i64 11
  store i8* getelementptr inbounds ([4 x i8]* @.str12, i32 0, i32 0), i8** %17, align 8
  %18 = load %struct._IO_FILE** %fp, align 8
  %19 = call i32 @fclose(%struct._IO_FILE* %18)
  br label %21

; <label>:20                                      ; preds = %0
  store i32 0, i32* @timeron, align 4
  br label %21

; <label>:21                                      ; preds = %20, %6
  %22 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([59 x i8]* @.str13, i32 0, i32 0))
  %23 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([13 x i8]* @.str14, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str1, i32 0, i32 0))
  store %struct._IO_FILE* %23, %struct._IO_FILE** %fp, align 8
  %24 = icmp ne %struct._IO_FILE* %23, null
  br i1 %24, label %25, label %47

; <label>:25                                      ; preds = %21
  %26 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([39 x i8]* @.str15, i32 0, i32 0))
  %27 = load %struct._IO_FILE** %fp, align 8
  %28 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %27, i8* getelementptr inbounds ([3 x i8]* @.str16, i32 0, i32 0), i32* %niter)
  store i32 %28, i32* %result, align 4
  br label %29

; <label>:29                                      ; preds = %33, %25
  %30 = load %struct._IO_FILE** %fp, align 8
  %31 = call i32 @fgetc(%struct._IO_FILE* %30)
  %32 = icmp ne i32 %31, 10
  br i1 %32, label %33, label %34

; <label>:33                                      ; preds = %29
  br label %29

; <label>:34                                      ; preds = %29
  %35 = load %struct._IO_FILE** %fp, align 8
  %36 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([4 x i8]* @.str17, i32 0, i32 0), double* @dt)
  store i32 %36, i32* %result, align 4
  br label %37

; <label>:37                                      ; preds = %41, %34
  %38 = load %struct._IO_FILE** %fp, align 8
  %39 = call i32 @fgetc(%struct._IO_FILE* %38)
  %40 = icmp ne i32 %39, 10
  br i1 %40, label %41, label %42

; <label>:41                                      ; preds = %37
  br label %37

; <label>:42                                      ; preds = %37
  %43 = load %struct._IO_FILE** %fp, align 8
  %44 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %43, i8* getelementptr inbounds ([8 x i8]* @.str18, i32 0, i32 0), i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2))
  store i32 %44, i32* %result, align 4
  %45 = load %struct._IO_FILE** %fp, align 8
  %46 = call i32 @fclose(%struct._IO_FILE* %45)
  br label %49

; <label>:47                                      ; preds = %21
  %48 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([54 x i8]* @.str19, i32 0, i32 0))
  store i32 60, i32* %niter, align 4
  store double 1.000000e-02, double* @dt, align 8
  store i32 12, i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  store i32 12, i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  store i32 12, i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  br label %49

; <label>:49                                      ; preds = %47, %42
  %50 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %51 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %52 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %53 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([20 x i8]* @.str20, i32 0, i32 0), i32 %50, i32 %51, i32 %52)
  %54 = load i32* %niter, align 4
  %55 = load double* @dt, align 8
  %56 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([32 x i8]* @.str21, i32 0, i32 0), i32 %54, double %55)
  %57 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str22, i32 0, i32 0))
  %58 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %59 = icmp sgt i32 %58, 12
  br i1 %59, label %66, label %60

; <label>:60                                      ; preds = %49
  %61 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %62 = icmp sgt i32 %61, 12
  br i1 %62, label %66, label %63

; <label>:63                                      ; preds = %60
  %64 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %65 = icmp sgt i32 %64, 12
  br i1 %65, label %66, label %72

; <label>:66                                      ; preds = %63, %60, %49
  %67 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %68 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %69 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %70 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([13 x i8]* @.str23, i32 0, i32 0), i32 %67, i32 %68, i32 %69)
  %71 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([48 x i8]* @.str24, i32 0, i32 0))
  store i32 0, i32* %1
  br label %266

; <label>:72                                      ; preds = %63
  call void (...)* bitcast (void ()* @set_constants to void (...)*)()
  store i32 1, i32* %i, align 4
  br label %73

; <label>:73                                      ; preds = %78, %72
  %74 = load i32* %i, align 4
  %75 = icmp sle i32 %74, 11
  br i1 %75, label %76, label %81

; <label>:76                                      ; preds = %73
  %77 = load i32* %i, align 4
  call void @timer_clear(i32 %77)
  br label %78

; <label>:78                                      ; preds = %76
  %79 = load i32* %i, align 4
  %80 = add nsw i32 %79, 1
  store i32 %80, i32* %i, align 4
  br label %73

; <label>:81                                      ; preds = %73
  call void (...)* bitcast (void ()* @initialize to void (...)*)()
  call void (...)* bitcast (void ()* @exact_rhs to void (...)*)()
  call void (...)* bitcast (void ()* @adi to void (...)*)()
  call void (...)* bitcast (void ()* @initialize to void (...)*)()
  store i32 1, i32* %i, align 4
  br label %82

; <label>:82                                      ; preds = %87, %81
  %83 = load i32* %i, align 4
  %84 = icmp sle i32 %83, 11
  br i1 %84, label %85, label %90

; <label>:85                                      ; preds = %82
  %86 = load i32* %i, align 4
  call void @timer_clear(i32 %86)
  br label %87

; <label>:87                                      ; preds = %85
  %88 = load i32* %i, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %i, align 4
  br label %82

; <label>:90                                      ; preds = %82
  call void @timer_start(i32 1)
  store i32 1, i32* %step, align 4
  br label %91

; <label>:91                                      ; preds = %106, %90
  %92 = load i32* %step, align 4
  %93 = load i32* %niter, align 4
  %94 = icmp sle i32 %92, %93
  br i1 %94, label %95, label %109

; <label>:95                                      ; preds = %91
  %96 = load i32* %step, align 4
  %97 = srem i32 %96, 20
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %102, label %99

; <label>:99                                      ; preds = %95
  %100 = load i32* %step, align 4
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %102, label %105

; <label>:102                                     ; preds = %99, %95
  %103 = load i32* %step, align 4
  %104 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([16 x i8]* @.str25, i32 0, i32 0), i32 %103)
  br label %105

; <label>:105                                     ; preds = %102, %99
  call void (...)* bitcast (void ()* @adi to void (...)*)()
  br label %106

; <label>:106                                     ; preds = %105
  %107 = load i32* %step, align 4
  %108 = add nsw i32 %107, 1
  store i32 %108, i32* %step, align 4
  br label %91

; <label>:109                                     ; preds = %91
  call void @timer_stop(i32 1)
  %110 = call double @timer_read(i32 1)
  store double %110, double* %tmax, align 8
  %111 = load i32* %niter, align 4
  call void @verify(i32 %111, i8* %Class, i32* %verified)
  %112 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %113 = sitofp i32 %112 to double
  %114 = fmul double 1.000000e+00, %113
  %115 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %116 = sitofp i32 %115 to double
  %117 = fmul double %114, %116
  %118 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %119 = sitofp i32 %118 to double
  %120 = fmul double %117, %119
  store double %120, double* %n3, align 8
  %121 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %122 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %123 = add nsw i32 %121, %122
  %124 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %125 = add nsw i32 %123, %124
  %126 = sitofp i32 %125 to double
  %127 = fdiv double %126, 3.000000e+00
  store double %127, double* %navg, align 8
  %128 = load double* %tmax, align 8
  %129 = fcmp une double %128, 0.000000e+00
  br i1 %129, label %130, label %147

; <label>:130                                     ; preds = %109
  %131 = load i32* %niter, align 4
  %132 = sitofp i32 %131 to double
  %133 = fmul double 1.000000e-06, %132
  %134 = load double* %n3, align 8
  %135 = fmul double 3.478800e+03, %134
  %136 = load double* %navg, align 8
  %137 = load double* %navg, align 8
  %138 = fmul double %136, %137
  %139 = fmul double 1.765570e+04, %138
  %140 = fsub double %135, %139
  %141 = load double* %navg, align 8
  %142 = fmul double 2.802370e+04, %141
  %143 = fadd double %140, %142
  %144 = fmul double %133, %143
  %145 = load double* %tmax, align 8
  %146 = fdiv double %144, %145
  store double %146, double* %mflops, align 8
  br label %148

; <label>:147                                     ; preds = %109
  store double 0.000000e+00, double* %mflops, align 8
  br label %148

; <label>:148                                     ; preds = %147, %130
  %149 = load i8* %Class, align 1
  %150 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %151 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %152 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %153 = load i32* %niter, align 4
  %154 = load double* %tmax, align 8
  %155 = load double* %mflops, align 8
  %156 = load i32* %verified, align 4
  call void @print_results(i8* getelementptr inbounds ([3 x i8]* @.str26, i32 0, i32 0), i8 signext %149, i32 %150, i32 %151, i32 %152, i32 %153, double %154, double %155, i8* getelementptr inbounds ([25 x i8]* @.str27, i32 0, i32 0), i32 %156, i8* getelementptr inbounds ([6 x i8]* @.str28, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @.str29, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8]* @.str30, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str31, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str32, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @.str33, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str34, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str35, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str36, i32 0, i32 0))
  %157 = load i32* @timeron, align 4
  %158 = icmp ne i32 %157, 0
  br i1 %158, label %159, label %265

; <label>:159                                     ; preds = %148
  store i32 1, i32* %i, align 4
  br label %160

; <label>:160                                     ; preds = %169, %159
  %161 = load i32* %i, align 4
  %162 = icmp sle i32 %161, 11
  br i1 %162, label %163, label %172

; <label>:163                                     ; preds = %160
  %164 = load i32* %i, align 4
  %165 = call double @timer_read(i32 %164)
  %166 = load i32* %i, align 4
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds [12 x double]* %trecs, i32 0, i64 %167
  store double %165, double* %168, align 8
  br label %169

; <label>:169                                     ; preds = %163
  %170 = load i32* %i, align 4
  %171 = add nsw i32 %170, 1
  store i32 %171, i32* %i, align 4
  br label %160

; <label>:172                                     ; preds = %160
  %173 = load double* %tmax, align 8
  %174 = fcmp oeq double %173, 0.000000e+00
  br i1 %174, label %175, label %176

; <label>:175                                     ; preds = %172
  store double 1.000000e+00, double* %tmax, align 8
  br label %176

; <label>:176                                     ; preds = %175, %172
  %177 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([25 x i8]* @.str37, i32 0, i32 0))
  store i32 1, i32* %i, align 4
  br label %178

; <label>:178                                     ; preds = %261, %176
  %179 = load i32* %i, align 4
  %180 = icmp sle i32 %179, 11
  br i1 %180, label %181, label %264

; <label>:181                                     ; preds = %178
  %182 = load i32* %i, align 4
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds [12 x i8*]* %t_names, i32 0, i64 %183
  %185 = load i8** %184, align 8
  %186 = load i32* %i, align 4
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds [12 x double]* %trecs, i32 0, i64 %187
  %189 = load double* %188, align 8
  %190 = load i32* %i, align 4
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds [12 x double]* %trecs, i32 0, i64 %191
  %193 = load double* %192, align 8
  %194 = fmul double %193, 1.000000e+02
  %195 = load double* %tmax, align 8
  %196 = fdiv double %194, %195
  %197 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([25 x i8]* @.str38, i32 0, i32 0), i8* %185, double %189, double %196)
  %198 = load i32* %i, align 4
  %199 = icmp eq i32 %198, 5
  br i1 %199, label %200, label %225

; <label>:200                                     ; preds = %181
  %201 = getelementptr inbounds [12 x double]* %trecs, i32 0, i64 2
  %202 = load double* %201, align 8
  %203 = getelementptr inbounds [12 x double]* %trecs, i32 0, i64 3
  %204 = load double* %203, align 8
  %205 = fadd double %202, %204
  %206 = getelementptr inbounds [12 x double]* %trecs, i32 0, i64 4
  %207 = load double* %206, align 8
  %208 = fadd double %205, %207
  store double %208, double* %t, align 8
  %209 = load double* %t, align 8
  %210 = load double* %t, align 8
  %211 = fmul double %210, 1.000000e+02
  %212 = load double* %tmax, align 8
  %213 = fdiv double %211, %212
  %214 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([30 x i8]* @.str39, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str40, i32 0, i32 0), double %209, double %213)
  %215 = getelementptr inbounds [12 x double]* %trecs, i32 0, i64 5
  %216 = load double* %215, align 8
  %217 = load double* %t, align 8
  %218 = fsub double %216, %217
  store double %218, double* %t, align 8
  %219 = load double* %t, align 8
  %220 = load double* %t, align 8
  %221 = fmul double %220, 1.000000e+02
  %222 = load double* %tmax, align 8
  %223 = fdiv double %221, %222
  %224 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([30 x i8]* @.str39, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str41, i32 0, i32 0), double %219, double %223)
  br label %260

; <label>:225                                     ; preds = %181
  %226 = load i32* %i, align 4
  %227 = icmp eq i32 %226, 8
  br i1 %227, label %228, label %243

; <label>:228                                     ; preds = %225
  %229 = getelementptr inbounds [12 x double]* %trecs, i32 0, i64 8
  %230 = load double* %229, align 8
  %231 = getelementptr inbounds [12 x double]* %trecs, i32 0, i64 9
  %232 = load double* %231, align 8
  %233 = fsub double %230, %232
  %234 = getelementptr inbounds [12 x double]* %trecs, i32 0, i64 10
  %235 = load double* %234, align 8
  %236 = fsub double %233, %235
  store double %236, double* %t, align 8
  %237 = load double* %t, align 8
  %238 = load double* %t, align 8
  %239 = fmul double %238, 1.000000e+02
  %240 = load double* %tmax, align 8
  %241 = fdiv double %239, %240
  %242 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([30 x i8]* @.str39, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str42, i32 0, i32 0), double %237, double %241)
  br label %259

; <label>:243                                     ; preds = %225
  %244 = load i32* %i, align 4
  %245 = icmp eq i32 %244, 10
  br i1 %245, label %246, label %258

; <label>:246                                     ; preds = %243
  %247 = getelementptr inbounds [12 x double]* %trecs, i32 0, i64 9
  %248 = load double* %247, align 8
  %249 = getelementptr inbounds [12 x double]* %trecs, i32 0, i64 10
  %250 = load double* %249, align 8
  %251 = fadd double %248, %250
  store double %251, double* %t, align 8
  %252 = load double* %t, align 8
  %253 = load double* %t, align 8
  %254 = fmul double %253, 1.000000e+02
  %255 = load double* %tmax, align 8
  %256 = fdiv double %254, %255
  %257 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([30 x i8]* @.str39, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str43, i32 0, i32 0), double %252, double %256)
  br label %258

; <label>:258                                     ; preds = %246, %243
  br label %259

; <label>:259                                     ; preds = %258, %228
  br label %260

; <label>:260                                     ; preds = %259, %200
  br label %261

; <label>:261                                     ; preds = %260
  %262 = load i32* %i, align 4
  %263 = add nsw i32 %262, 1
  store i32 %263, i32* %i, align 4
  br label %178

; <label>:264                                     ; preds = %178
  br label %265

; <label>:265                                     ; preds = %264, %148
  store i32 0, i32* %1
  br label %266

; <label>:266                                     ; preds = %265, %66
  %267 = load i32* %1
  ret i32 %267
}

declare %struct._IO_FILE* @fopen(i8*, i8*) #1

declare i32 @fclose(%struct._IO_FILE*) #1

declare i32 @printf(i8*, ...) #1

declare i32 @__isoc99_fscanf(%struct._IO_FILE*, i8*, ...) #1

declare i32 @fgetc(%struct._IO_FILE*) #1

; Function Attrs: nounwind uwtable
define void @c_print_results(i8* %name, i8 signext %class, i32 %n1, i32 %n2, i32 %n3, i32 %niter, double %t, double %mops, i8* %optype, i32 %passed_verification, i8* %npbversion, i8* %compiletime, i8* %cc, i8* %clink, i8* %c_lib, i8* %c_inc, i8* %cflags, i8* %clinkflags) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i8, align 1
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %nn = alloca i64, align 8
  store i8* %name, i8** %1, align 8
  store i8 %class, i8* %2, align 1
  store i32 %n1, i32* %3, align 4
  store i32 %n2, i32* %4, align 4
  store i32 %n3, i32* %5, align 4
  store i32 %niter, i32* %6, align 4
  store double %t, double* %7, align 8
  store double %mops, double* %8, align 8
  store i8* %optype, i8** %9, align 8
  store i32 %passed_verification, i32* %10, align 4
  store i8* %npbversion, i8** %11, align 8
  store i8* %compiletime, i8** %12, align 8
  store i8* %cc, i8** %13, align 8
  store i8* %clink, i8** %14, align 8
  store i8* %c_lib, i8** %15, align 8
  store i8* %c_inc, i8** %16, align 8
  store i8* %cflags, i8** %17, align 8
  store i8* %clinkflags, i8** %18, align 8
  %19 = load i8** %1, align 8
  %20 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([27 x i8]* @.str44, i32 0, i32 0), i8* %19)
  %21 = load i8* %2, align 1
  %22 = sext i8 %21 to i32
  %23 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([46 x i8]* @.str145, i32 0, i32 0), i32 %22)
  %24 = load i32* %5, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %39

; <label>:26                                      ; preds = %0
  %27 = load i32* %3, align 4
  %28 = sext i32 %27 to i64
  store i64 %28, i64* %nn, align 8
  %29 = load i32* %4, align 4
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %31, label %36

; <label>:31                                      ; preds = %26
  %32 = load i32* %4, align 4
  %33 = sext i32 %32 to i64
  %34 = load i64* %nn, align 8
  %35 = mul nsw i64 %34, %33
  store i64 %35, i64* %nn, align 8
  br label %36

; <label>:36                                      ; preds = %31, %26
  %37 = load i64* %nn, align 8
  %38 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str246, i32 0, i32 0), i64 %37)
  br label %44

; <label>:39                                      ; preds = %0
  %40 = load i32* %3, align 4
  %41 = load i32* %4, align 4
  %42 = load i32* %5, align 4
  %43 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([44 x i8]* @.str347, i32 0, i32 0), i32 %40, i32 %41, i32 %42)
  br label %44

; <label>:44                                      ; preds = %39, %36
  %45 = load i32* %6, align 4
  %46 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str448, i32 0, i32 0), i32 %45)
  %47 = load i8** %9, align 8
  %48 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([25 x i8]* @.str549, i32 0, i32 0), i8* %47)
  %49 = load i32* %10, align 4
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %51, label %53

; <label>:51                                      ; preds = %44
  %52 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([45 x i8]* @.str650, i32 0, i32 0))
  br label %61

; <label>:53                                      ; preds = %44
  %54 = load i32* %10, align 4
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %56, label %58

; <label>:56                                      ; preds = %53
  %57 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([45 x i8]* @.str751, i32 0, i32 0))
  br label %60

; <label>:58                                      ; preds = %53
  %59 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([45 x i8]* @.str852, i32 0, i32 0))
  br label %60

; <label>:60                                      ; preds = %58, %56
  br label %61

; <label>:61                                      ; preds = %60, %51
  %62 = load i8** %11, align 8
  %63 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str953, i32 0, i32 0), i8* %62)
  %64 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([41 x i8]* @.str1054, i32 0, i32 0))
  %65 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([39 x i8]* @.str1155, i32 0, i32 0))
  %66 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([34 x i8]* @.str1256, i32 0, i32 0))
  %67 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([21 x i8]* @.str1357, i32 0, i32 0))
  %68 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str1458, i32 0, i32 0))
  %69 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([40 x i8]* @.str1559, i32 0, i32 0))
  ret void
}

; Function Attrs: nounwind uwtable
define void @timer_clear(i32 %n) #0 {
  %1 = alloca i32, align 4
  store i32 %n, i32* %1, align 4
  %2 = load i32* %1, align 4
  %3 = sext i32 %2 to i64
  %4 = getelementptr inbounds [64 x double]* @elapsed, i32 0, i64 %3
  store double 0.000000e+00, double* %4, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @timer_start(i32 %n) #0 {
  %1 = alloca i32, align 4
  store i32 %n, i32* %1, align 4
  %2 = call double @elapsed_time68()
  %3 = load i32* %1, align 4
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds [64 x double]* @start, i32 0, i64 %4
  store double %2, double* %5, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @timer_stop(i32 %n) #0 {
  %1 = alloca i32, align 4
  %t = alloca double, align 8
  %now = alloca double, align 8
  store i32 %n, i32* %1, align 4
  %2 = call double @elapsed_time68()
  store double %2, double* %now, align 8
  %3 = load double* %now, align 8
  %4 = load i32* %1, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds [64 x double]* @start, i32 0, i64 %5
  %7 = load double* %6, align 8
  %8 = fsub double %3, %7
  store double %8, double* %t, align 8
  %9 = load double* %t, align 8
  %10 = load i32* %1, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [64 x double]* @elapsed, i32 0, i64 %11
  %13 = load double* %12, align 8
  %14 = fadd double %13, %9
  store double %14, double* %12, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define double @timer_read(i32 %n) #0 {
  %1 = alloca i32, align 4
  store i32 %n, i32* %1, align 4
  %2 = load i32* %1, align 4
  %3 = sext i32 %2 to i64
  %4 = getelementptr inbounds [64 x double]* @elapsed, i32 0, i64 %3
  %5 = load double* %4, align 8
  ret double %5
}

; Function Attrs: nounwind uwtable
define internal double @elapsed_time68() #0 {
  %t = alloca double, align 8
  call void @wtime_(double* %t)
  %1 = load double* %t, align 8
  ret double %1
}

; Function Attrs: nounwind uwtable
define void @error_norm(double* %rms) #0 {
  %1 = alloca double*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %m = alloca i32, align 4
  %d = alloca i32, align 4
  %xi = alloca double, align 8
  %eta = alloca double, align 8
  %zeta = alloca double, align 8
  %u_exact = alloca [5 x double], align 16
  %add = alloca double, align 8
  store double* %rms, double** %1, align 8
  store i32 0, i32* %m, align 4
  br label %2

; <label>:2                                       ; preds = %10, %0
  %3 = load i32* %m, align 4
  %4 = icmp slt i32 %3, 5
  br i1 %4, label %5, label %13

; <label>:5                                       ; preds = %2
  %6 = load i32* %m, align 4
  %7 = sext i32 %6 to i64
  %8 = load double** %1, align 8
  %9 = getelementptr inbounds double* %8, i64 %7
  store double 0.000000e+00, double* %9, align 8
  br label %10

; <label>:10                                      ; preds = %5
  %11 = load i32* %m, align 4
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %m, align 4
  br label %2

; <label>:13                                      ; preds = %2
  store i32 0, i32* %k, align 4
  br label %14

; <label>:14                                      ; preds = %95, %13
  %15 = load i32* %k, align 4
  %16 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %17 = sub nsw i32 %16, 1
  %18 = icmp sle i32 %15, %17
  br i1 %18, label %19, label %98

; <label>:19                                      ; preds = %14
  %20 = load i32* %k, align 4
  %21 = sitofp i32 %20 to double
  %22 = load double* @dnzm1, align 8
  %23 = fmul double %21, %22
  store double %23, double* %zeta, align 8
  store i32 0, i32* %j, align 4
  br label %24

; <label>:24                                      ; preds = %91, %19
  %25 = load i32* %j, align 4
  %26 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %27 = sub nsw i32 %26, 1
  %28 = icmp sle i32 %25, %27
  br i1 %28, label %29, label %94

; <label>:29                                      ; preds = %24
  %30 = load i32* %j, align 4
  %31 = sitofp i32 %30 to double
  %32 = load double* @dnym1, align 8
  %33 = fmul double %31, %32
  store double %33, double* %eta, align 8
  store i32 0, i32* %i, align 4
  br label %34

; <label>:34                                      ; preds = %87, %29
  %35 = load i32* %i, align 4
  %36 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %37 = sub nsw i32 %36, 1
  %38 = icmp sle i32 %35, %37
  br i1 %38, label %39, label %90

; <label>:39                                      ; preds = %34
  %40 = load i32* %i, align 4
  %41 = sitofp i32 %40 to double
  %42 = load double* @dnxm1, align 8
  %43 = fmul double %41, %42
  store double %43, double* %xi, align 8
  %44 = load double* %xi, align 8
  %45 = load double* %eta, align 8
  %46 = load double* %zeta, align 8
  %47 = getelementptr inbounds [5 x double]* %u_exact, i32 0, i32 0
  call void @exact_solution(double %44, double %45, double %46, double* %47)
  store i32 0, i32* %m, align 4
  br label %48

; <label>:48                                      ; preds = %83, %39
  %49 = load i32* %m, align 4
  %50 = icmp slt i32 %49, 5
  br i1 %50, label %51, label %86

; <label>:51                                      ; preds = %48
  %52 = load i32* %m, align 4
  %53 = sext i32 %52 to i64
  %54 = load i32* %i, align 4
  %55 = sext i32 %54 to i64
  %56 = load i32* %j, align 4
  %57 = sext i32 %56 to i64
  %58 = load i32* %k, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %59
  %61 = getelementptr inbounds [13 x [13 x [5 x double]]]* %60, i32 0, i64 %57
  %62 = getelementptr inbounds [13 x [5 x double]]* %61, i32 0, i64 %55
  %63 = getelementptr inbounds [5 x double]* %62, i32 0, i64 %53
  %64 = load double* %63, align 8
  %65 = load i32* %m, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds [5 x double]* %u_exact, i32 0, i64 %66
  %68 = load double* %67, align 8
  %69 = fsub double %64, %68
  store double %69, double* %add, align 8
  %70 = load i32* %m, align 4
  %71 = sext i32 %70 to i64
  %72 = load double** %1, align 8
  %73 = getelementptr inbounds double* %72, i64 %71
  %74 = load double* %73, align 8
  %75 = load double* %add, align 8
  %76 = load double* %add, align 8
  %77 = fmul double %75, %76
  %78 = fadd double %74, %77
  %79 = load i32* %m, align 4
  %80 = sext i32 %79 to i64
  %81 = load double** %1, align 8
  %82 = getelementptr inbounds double* %81, i64 %80
  store double %78, double* %82, align 8
  br label %83

; <label>:83                                      ; preds = %51
  %84 = load i32* %m, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %m, align 4
  br label %48

; <label>:86                                      ; preds = %48
  br label %87

; <label>:87                                      ; preds = %86
  %88 = load i32* %i, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %i, align 4
  br label %34

; <label>:90                                      ; preds = %34
  br label %91

; <label>:91                                      ; preds = %90
  %92 = load i32* %j, align 4
  %93 = add nsw i32 %92, 1
  store i32 %93, i32* %j, align 4
  br label %24

; <label>:94                                      ; preds = %24
  br label %95

; <label>:95                                      ; preds = %94
  %96 = load i32* %k, align 4
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %k, align 4
  br label %14

; <label>:98                                      ; preds = %14
  store i32 0, i32* %m, align 4
  br label %99

; <label>:99                                      ; preds = %137, %98
  %100 = load i32* %m, align 4
  %101 = icmp slt i32 %100, 5
  br i1 %101, label %102, label %140

; <label>:102                                     ; preds = %99
  store i32 0, i32* %d, align 4
  br label %103

; <label>:103                                     ; preds = %123, %102
  %104 = load i32* %d, align 4
  %105 = icmp slt i32 %104, 3
  br i1 %105, label %106, label %126

; <label>:106                                     ; preds = %103
  %107 = load i32* %m, align 4
  %108 = sext i32 %107 to i64
  %109 = load double** %1, align 8
  %110 = getelementptr inbounds double* %109, i64 %108
  %111 = load double* %110, align 8
  %112 = load i32* %d, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds [3 x i32]* @grid_points, i32 0, i64 %113
  %115 = load i32* %114, align 4
  %116 = sub nsw i32 %115, 2
  %117 = sitofp i32 %116 to double
  %118 = fdiv double %111, %117
  %119 = load i32* %m, align 4
  %120 = sext i32 %119 to i64
  %121 = load double** %1, align 8
  %122 = getelementptr inbounds double* %121, i64 %120
  store double %118, double* %122, align 8
  br label %123

; <label>:123                                     ; preds = %106
  %124 = load i32* %d, align 4
  %125 = add nsw i32 %124, 1
  store i32 %125, i32* %d, align 4
  br label %103

; <label>:126                                     ; preds = %103
  %127 = load i32* %m, align 4
  %128 = sext i32 %127 to i64
  %129 = load double** %1, align 8
  %130 = getelementptr inbounds double* %129, i64 %128
  %131 = load double* %130, align 8
  %132 = call double @sqrt(double %131) #4
  %133 = load i32* %m, align 4
  %134 = sext i32 %133 to i64
  %135 = load double** %1, align 8
  %136 = getelementptr inbounds double* %135, i64 %134
  store double %132, double* %136, align 8
  br label %137

; <label>:137                                     ; preds = %126
  %138 = load i32* %m, align 4
  %139 = add nsw i32 %138, 1
  store i32 %139, i32* %m, align 4
  br label %99

; <label>:140                                     ; preds = %99
  ret void
}

; Function Attrs: nounwind
declare double @sqrt(double) #2

; Function Attrs: nounwind uwtable
define void @rhs_norm(double* %rms) #0 {
  %1 = alloca double*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %d = alloca i32, align 4
  %m = alloca i32, align 4
  %add = alloca double, align 8
  store double* %rms, double** %1, align 8
  store i32 0, i32* %m, align 4
  br label %2

; <label>:2                                       ; preds = %10, %0
  %3 = load i32* %m, align 4
  %4 = icmp slt i32 %3, 5
  br i1 %4, label %5, label %13

; <label>:5                                       ; preds = %2
  %6 = load i32* %m, align 4
  %7 = sext i32 %6 to i64
  %8 = load double** %1, align 8
  %9 = getelementptr inbounds double* %8, i64 %7
  store double 0.000000e+00, double* %9, align 8
  br label %10

; <label>:10                                      ; preds = %5
  %11 = load i32* %m, align 4
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %m, align 4
  br label %2

; <label>:13                                      ; preds = %2
  store i32 1, i32* %k, align 4
  br label %14

; <label>:14                                      ; preds = %74, %13
  %15 = load i32* %k, align 4
  %16 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %17 = sub nsw i32 %16, 2
  %18 = icmp sle i32 %15, %17
  br i1 %18, label %19, label %77

; <label>:19                                      ; preds = %14
  store i32 1, i32* %j, align 4
  br label %20

; <label>:20                                      ; preds = %70, %19
  %21 = load i32* %j, align 4
  %22 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %23 = sub nsw i32 %22, 2
  %24 = icmp sle i32 %21, %23
  br i1 %24, label %25, label %73

; <label>:25                                      ; preds = %20
  store i32 1, i32* %i, align 4
  br label %26

; <label>:26                                      ; preds = %66, %25
  %27 = load i32* %i, align 4
  %28 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %29 = sub nsw i32 %28, 2
  %30 = icmp sle i32 %27, %29
  br i1 %30, label %31, label %69

; <label>:31                                      ; preds = %26
  store i32 0, i32* %m, align 4
  br label %32

; <label>:32                                      ; preds = %62, %31
  %33 = load i32* %m, align 4
  %34 = icmp slt i32 %33, 5
  br i1 %34, label %35, label %65

; <label>:35                                      ; preds = %32
  %36 = load i32* %m, align 4
  %37 = sext i32 %36 to i64
  %38 = load i32* %i, align 4
  %39 = sext i32 %38 to i64
  %40 = load i32* %j, align 4
  %41 = sext i32 %40 to i64
  %42 = load i32* %k, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %43
  %45 = getelementptr inbounds [13 x [13 x [5 x double]]]* %44, i32 0, i64 %41
  %46 = getelementptr inbounds [13 x [5 x double]]* %45, i32 0, i64 %39
  %47 = getelementptr inbounds [5 x double]* %46, i32 0, i64 %37
  %48 = load double* %47, align 8
  store double %48, double* %add, align 8
  %49 = load i32* %m, align 4
  %50 = sext i32 %49 to i64
  %51 = load double** %1, align 8
  %52 = getelementptr inbounds double* %51, i64 %50
  %53 = load double* %52, align 8
  %54 = load double* %add, align 8
  %55 = load double* %add, align 8
  %56 = fmul double %54, %55
  %57 = fadd double %53, %56
  %58 = load i32* %m, align 4
  %59 = sext i32 %58 to i64
  %60 = load double** %1, align 8
  %61 = getelementptr inbounds double* %60, i64 %59
  store double %57, double* %61, align 8
  br label %62

; <label>:62                                      ; preds = %35
  %63 = load i32* %m, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %m, align 4
  br label %32

; <label>:65                                      ; preds = %32
  br label %66

; <label>:66                                      ; preds = %65
  %67 = load i32* %i, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* %i, align 4
  br label %26

; <label>:69                                      ; preds = %26
  br label %70

; <label>:70                                      ; preds = %69
  %71 = load i32* %j, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %j, align 4
  br label %20

; <label>:73                                      ; preds = %20
  br label %74

; <label>:74                                      ; preds = %73
  %75 = load i32* %k, align 4
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %k, align 4
  br label %14

; <label>:77                                      ; preds = %14
  store i32 0, i32* %m, align 4
  br label %78

; <label>:78                                      ; preds = %116, %77
  %79 = load i32* %m, align 4
  %80 = icmp slt i32 %79, 5
  br i1 %80, label %81, label %119

; <label>:81                                      ; preds = %78
  store i32 0, i32* %d, align 4
  br label %82

; <label>:82                                      ; preds = %102, %81
  %83 = load i32* %d, align 4
  %84 = icmp slt i32 %83, 3
  br i1 %84, label %85, label %105

; <label>:85                                      ; preds = %82
  %86 = load i32* %m, align 4
  %87 = sext i32 %86 to i64
  %88 = load double** %1, align 8
  %89 = getelementptr inbounds double* %88, i64 %87
  %90 = load double* %89, align 8
  %91 = load i32* %d, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [3 x i32]* @grid_points, i32 0, i64 %92
  %94 = load i32* %93, align 4
  %95 = sub nsw i32 %94, 2
  %96 = sitofp i32 %95 to double
  %97 = fdiv double %90, %96
  %98 = load i32* %m, align 4
  %99 = sext i32 %98 to i64
  %100 = load double** %1, align 8
  %101 = getelementptr inbounds double* %100, i64 %99
  store double %97, double* %101, align 8
  br label %102

; <label>:102                                     ; preds = %85
  %103 = load i32* %d, align 4
  %104 = add nsw i32 %103, 1
  store i32 %104, i32* %d, align 4
  br label %82

; <label>:105                                     ; preds = %82
  %106 = load i32* %m, align 4
  %107 = sext i32 %106 to i64
  %108 = load double** %1, align 8
  %109 = getelementptr inbounds double* %108, i64 %107
  %110 = load double* %109, align 8
  %111 = call double @sqrt(double %110) #4
  %112 = load i32* %m, align 4
  %113 = sext i32 %112 to i64
  %114 = load double** %1, align 8
  %115 = getelementptr inbounds double* %114, i64 %113
  store double %111, double* %115, align 8
  br label %116

; <label>:116                                     ; preds = %105
  %117 = load i32* %m, align 4
  %118 = add nsw i32 %117, 1
  store i32 %118, i32* %m, align 4
  br label %78

; <label>:119                                     ; preds = %78
  ret void
}

; Function Attrs: nounwind uwtable
define void @exact_rhs() #0 {
  %dtemp = alloca [5 x double], align 16
  %xi = alloca double, align 8
  %eta = alloca double, align 8
  %zeta = alloca double, align 8
  %dtpp = alloca double, align 8
  %m = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %ip1 = alloca i32, align 4
  %im1 = alloca i32, align 4
  %jp1 = alloca i32, align 4
  %jm1 = alloca i32, align 4
  %km1 = alloca i32, align 4
  %kp1 = alloca i32, align 4
  store i32 0, i32* %k, align 4
  br label %1

; <label>:1                                       ; preds = %47, %0
  %2 = load i32* %k, align 4
  %3 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %4 = sub nsw i32 %3, 1
  %5 = icmp sle i32 %2, %4
  br i1 %5, label %6, label %50

; <label>:6                                       ; preds = %1
  store i32 0, i32* %j, align 4
  br label %7

; <label>:7                                       ; preds = %43, %6
  %8 = load i32* %j, align 4
  %9 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %10 = sub nsw i32 %9, 1
  %11 = icmp sle i32 %8, %10
  br i1 %11, label %12, label %46

; <label>:12                                      ; preds = %7
  store i32 0, i32* %i, align 4
  br label %13

; <label>:13                                      ; preds = %39, %12
  %14 = load i32* %i, align 4
  %15 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %16 = sub nsw i32 %15, 1
  %17 = icmp sle i32 %14, %16
  br i1 %17, label %18, label %42

; <label>:18                                      ; preds = %13
  store i32 0, i32* %m, align 4
  br label %19

; <label>:19                                      ; preds = %35, %18
  %20 = load i32* %m, align 4
  %21 = icmp slt i32 %20, 5
  br i1 %21, label %22, label %38

; <label>:22                                      ; preds = %19
  %23 = load i32* %m, align 4
  %24 = sext i32 %23 to i64
  %25 = load i32* %i, align 4
  %26 = sext i32 %25 to i64
  %27 = load i32* %j, align 4
  %28 = sext i32 %27 to i64
  %29 = load i32* %k, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %30
  %32 = getelementptr inbounds [13 x [13 x [5 x double]]]* %31, i32 0, i64 %28
  %33 = getelementptr inbounds [13 x [5 x double]]* %32, i32 0, i64 %26
  %34 = getelementptr inbounds [5 x double]* %33, i32 0, i64 %24
  store double 0.000000e+00, double* %34, align 8
  br label %35

; <label>:35                                      ; preds = %22
  %36 = load i32* %m, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %m, align 4
  br label %19

; <label>:38                                      ; preds = %19
  br label %39

; <label>:39                                      ; preds = %38
  %40 = load i32* %i, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %i, align 4
  br label %13

; <label>:42                                      ; preds = %13
  br label %43

; <label>:43                                      ; preds = %42
  %44 = load i32* %j, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %j, align 4
  br label %7

; <label>:46                                      ; preds = %7
  br label %47

; <label>:47                                      ; preds = %46
  %48 = load i32* %k, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %k, align 4
  br label %1

; <label>:50                                      ; preds = %1
  store i32 1, i32* %k, align 4
  br label %51

; <label>:51                                      ; preds = %1081, %50
  %52 = load i32* %k, align 4
  %53 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %54 = sub nsw i32 %53, 2
  %55 = icmp sle i32 %52, %54
  br i1 %55, label %56, label %1084

; <label>:56                                      ; preds = %51
  %57 = load i32* %k, align 4
  %58 = sitofp i32 %57 to double
  %59 = load double* @dnzm1, align 8
  %60 = fmul double %58, %59
  store double %60, double* %zeta, align 8
  store i32 1, i32* %j, align 4
  br label %61

; <label>:61                                      ; preds = %1077, %56
  %62 = load i32* %j, align 4
  %63 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %64 = sub nsw i32 %63, 2
  %65 = icmp sle i32 %62, %64
  br i1 %65, label %66, label %1080

; <label>:66                                      ; preds = %61
  %67 = load i32* %j, align 4
  %68 = sitofp i32 %67 to double
  %69 = load double* @dnym1, align 8
  %70 = fmul double %68, %69
  store double %70, double* %eta, align 8
  store i32 0, i32* %i, align 4
  br label %71

; <label>:71                                      ; preds = %211, %66
  %72 = load i32* %i, align 4
  %73 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %74 = sub nsw i32 %73, 1
  %75 = icmp sle i32 %72, %74
  br i1 %75, label %76, label %214

; <label>:76                                      ; preds = %71
  %77 = load i32* %i, align 4
  %78 = sitofp i32 %77 to double
  %79 = load double* @dnxm1, align 8
  %80 = fmul double %78, %79
  store double %80, double* %xi, align 8
  %81 = load double* %xi, align 8
  %82 = load double* %eta, align 8
  %83 = load double* %zeta, align 8
  %84 = getelementptr inbounds [5 x double]* %dtemp, i32 0, i32 0
  call void @exact_solution(double %81, double %82, double %83, double* %84)
  store i32 0, i32* %m, align 4
  br label %85

; <label>:85                                      ; preds = %99, %76
  %86 = load i32* %m, align 4
  %87 = icmp slt i32 %86, 5
  br i1 %87, label %88, label %102

; <label>:88                                      ; preds = %85
  %89 = load i32* %m, align 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds [5 x double]* %dtemp, i32 0, i64 %90
  %92 = load double* %91, align 8
  %93 = load i32* %m, align 4
  %94 = sext i32 %93 to i64
  %95 = load i32* %i, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %96
  %98 = getelementptr inbounds [5 x double]* %97, i32 0, i64 %94
  store double %92, double* %98, align 8
  br label %99

; <label>:99                                      ; preds = %88
  %100 = load i32* %m, align 4
  %101 = add nsw i32 %100, 1
  store i32 %101, i32* %m, align 4
  br label %85

; <label>:102                                     ; preds = %85
  %103 = getelementptr inbounds [5 x double]* %dtemp, i32 0, i64 0
  %104 = load double* %103, align 8
  %105 = fdiv double 1.000000e+00, %104
  store double %105, double* %dtpp, align 8
  store i32 1, i32* %m, align 4
  br label %106

; <label>:106                                     ; preds = %122, %102
  %107 = load i32* %m, align 4
  %108 = icmp slt i32 %107, 5
  br i1 %108, label %109, label %125

; <label>:109                                     ; preds = %106
  %110 = load double* %dtpp, align 8
  %111 = load i32* %m, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds [5 x double]* %dtemp, i32 0, i64 %112
  %114 = load double* %113, align 8
  %115 = fmul double %110, %114
  %116 = load i32* %m, align 4
  %117 = sext i32 %116 to i64
  %118 = load i32* %i, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %119
  %121 = getelementptr inbounds [5 x double]* %120, i32 0, i64 %117
  store double %115, double* %121, align 8
  br label %122

; <label>:122                                     ; preds = %109
  %123 = load i32* %m, align 4
  %124 = add nsw i32 %123, 1
  store i32 %124, i32* %m, align 4
  br label %106

; <label>:125                                     ; preds = %106
  %126 = load i32* %i, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %127
  %129 = getelementptr inbounds [5 x double]* %128, i32 0, i64 1
  %130 = load double* %129, align 8
  %131 = load i32* %i, align 4
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %132
  %134 = getelementptr inbounds [5 x double]* %133, i32 0, i64 1
  %135 = load double* %134, align 8
  %136 = fmul double %130, %135
  %137 = load i32* %i, align 4
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds [13 x double]* @cuf, i32 0, i64 %138
  store double %136, double* %139, align 8
  %140 = load i32* %i, align 4
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds [13 x double]* @cuf, i32 0, i64 %141
  %143 = load double* %142, align 8
  %144 = load i32* %i, align 4
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %145
  %147 = getelementptr inbounds [5 x double]* %146, i32 0, i64 2
  %148 = load double* %147, align 8
  %149 = load i32* %i, align 4
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %150
  %152 = getelementptr inbounds [5 x double]* %151, i32 0, i64 2
  %153 = load double* %152, align 8
  %154 = fmul double %148, %153
  %155 = fadd double %143, %154
  %156 = load i32* %i, align 4
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %157
  %159 = getelementptr inbounds [5 x double]* %158, i32 0, i64 3
  %160 = load double* %159, align 8
  %161 = load i32* %i, align 4
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %162
  %164 = getelementptr inbounds [5 x double]* %163, i32 0, i64 3
  %165 = load double* %164, align 8
  %166 = fmul double %160, %165
  %167 = fadd double %155, %166
  %168 = load i32* %i, align 4
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %169
  %171 = getelementptr inbounds [5 x double]* %170, i32 0, i64 0
  store double %167, double* %171, align 8
  %172 = load i32* %i, align 4
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %173
  %175 = getelementptr inbounds [5 x double]* %174, i32 0, i64 1
  %176 = load double* %175, align 8
  %177 = load i32* %i, align 4
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %178
  %180 = getelementptr inbounds [5 x double]* %179, i32 0, i64 1
  %181 = load double* %180, align 8
  %182 = fmul double %176, %181
  %183 = load i32* %i, align 4
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %184
  %186 = getelementptr inbounds [5 x double]* %185, i32 0, i64 2
  %187 = load double* %186, align 8
  %188 = load i32* %i, align 4
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %189
  %191 = getelementptr inbounds [5 x double]* %190, i32 0, i64 2
  %192 = load double* %191, align 8
  %193 = fmul double %187, %192
  %194 = fadd double %182, %193
  %195 = load i32* %i, align 4
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %196
  %198 = getelementptr inbounds [5 x double]* %197, i32 0, i64 3
  %199 = load double* %198, align 8
  %200 = load i32* %i, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %201
  %203 = getelementptr inbounds [5 x double]* %202, i32 0, i64 3
  %204 = load double* %203, align 8
  %205 = fmul double %199, %204
  %206 = fadd double %194, %205
  %207 = fmul double 5.000000e-01, %206
  %208 = load i32* %i, align 4
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds [13 x double]* @q, i32 0, i64 %209
  store double %207, double* %210, align 8
  br label %211

; <label>:211                                     ; preds = %125
  %212 = load i32* %i, align 4
  %213 = add nsw i32 %212, 1
  store i32 %213, i32* %i, align 4
  br label %71

; <label>:214                                     ; preds = %71
  store i32 1, i32* %i, align 4
  br label %215

; <label>:215                                     ; preds = %721, %214
  %216 = load i32* %i, align 4
  %217 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %218 = sub nsw i32 %217, 2
  %219 = icmp sle i32 %216, %218
  br i1 %219, label %220, label %724

; <label>:220                                     ; preds = %215
  %221 = load i32* %i, align 4
  %222 = sub nsw i32 %221, 1
  store i32 %222, i32* %im1, align 4
  %223 = load i32* %i, align 4
  %224 = add nsw i32 %223, 1
  store i32 %224, i32* %ip1, align 4
  %225 = load i32* %i, align 4
  %226 = sext i32 %225 to i64
  %227 = load i32* %j, align 4
  %228 = sext i32 %227 to i64
  %229 = load i32* %k, align 4
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %230
  %232 = getelementptr inbounds [13 x [13 x [5 x double]]]* %231, i32 0, i64 %228
  %233 = getelementptr inbounds [13 x [5 x double]]* %232, i32 0, i64 %226
  %234 = getelementptr inbounds [5 x double]* %233, i32 0, i64 0
  %235 = load double* %234, align 8
  %236 = load double* @tx2, align 8
  %237 = load i32* %ip1, align 4
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %238
  %240 = getelementptr inbounds [5 x double]* %239, i32 0, i64 1
  %241 = load double* %240, align 8
  %242 = load i32* %im1, align 4
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %243
  %245 = getelementptr inbounds [5 x double]* %244, i32 0, i64 1
  %246 = load double* %245, align 8
  %247 = fsub double %241, %246
  %248 = fmul double %236, %247
  %249 = fsub double %235, %248
  %250 = load double* @dx1tx1, align 8
  %251 = load i32* %ip1, align 4
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %252
  %254 = getelementptr inbounds [5 x double]* %253, i32 0, i64 0
  %255 = load double* %254, align 8
  %256 = load i32* %i, align 4
  %257 = sext i32 %256 to i64
  %258 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %257
  %259 = getelementptr inbounds [5 x double]* %258, i32 0, i64 0
  %260 = load double* %259, align 8
  %261 = fmul double 2.000000e+00, %260
  %262 = fsub double %255, %261
  %263 = load i32* %im1, align 4
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %264
  %266 = getelementptr inbounds [5 x double]* %265, i32 0, i64 0
  %267 = load double* %266, align 8
  %268 = fadd double %262, %267
  %269 = fmul double %250, %268
  %270 = fadd double %249, %269
  %271 = load i32* %i, align 4
  %272 = sext i32 %271 to i64
  %273 = load i32* %j, align 4
  %274 = sext i32 %273 to i64
  %275 = load i32* %k, align 4
  %276 = sext i32 %275 to i64
  %277 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %276
  %278 = getelementptr inbounds [13 x [13 x [5 x double]]]* %277, i32 0, i64 %274
  %279 = getelementptr inbounds [13 x [5 x double]]* %278, i32 0, i64 %272
  %280 = getelementptr inbounds [5 x double]* %279, i32 0, i64 0
  store double %270, double* %280, align 8
  %281 = load i32* %i, align 4
  %282 = sext i32 %281 to i64
  %283 = load i32* %j, align 4
  %284 = sext i32 %283 to i64
  %285 = load i32* %k, align 4
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %286
  %288 = getelementptr inbounds [13 x [13 x [5 x double]]]* %287, i32 0, i64 %284
  %289 = getelementptr inbounds [13 x [5 x double]]* %288, i32 0, i64 %282
  %290 = getelementptr inbounds [5 x double]* %289, i32 0, i64 1
  %291 = load double* %290, align 8
  %292 = load double* @tx2, align 8
  %293 = load i32* %ip1, align 4
  %294 = sext i32 %293 to i64
  %295 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %294
  %296 = getelementptr inbounds [5 x double]* %295, i32 0, i64 1
  %297 = load double* %296, align 8
  %298 = load i32* %ip1, align 4
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %299
  %301 = getelementptr inbounds [5 x double]* %300, i32 0, i64 1
  %302 = load double* %301, align 8
  %303 = fmul double %297, %302
  %304 = load double* @c2, align 8
  %305 = load i32* %ip1, align 4
  %306 = sext i32 %305 to i64
  %307 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %306
  %308 = getelementptr inbounds [5 x double]* %307, i32 0, i64 4
  %309 = load double* %308, align 8
  %310 = load i32* %ip1, align 4
  %311 = sext i32 %310 to i64
  %312 = getelementptr inbounds [13 x double]* @q, i32 0, i64 %311
  %313 = load double* %312, align 8
  %314 = fsub double %309, %313
  %315 = fmul double %304, %314
  %316 = fadd double %303, %315
  %317 = load i32* %im1, align 4
  %318 = sext i32 %317 to i64
  %319 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %318
  %320 = getelementptr inbounds [5 x double]* %319, i32 0, i64 1
  %321 = load double* %320, align 8
  %322 = load i32* %im1, align 4
  %323 = sext i32 %322 to i64
  %324 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %323
  %325 = getelementptr inbounds [5 x double]* %324, i32 0, i64 1
  %326 = load double* %325, align 8
  %327 = fmul double %321, %326
  %328 = load double* @c2, align 8
  %329 = load i32* %im1, align 4
  %330 = sext i32 %329 to i64
  %331 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %330
  %332 = getelementptr inbounds [5 x double]* %331, i32 0, i64 4
  %333 = load double* %332, align 8
  %334 = load i32* %im1, align 4
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds [13 x double]* @q, i32 0, i64 %335
  %337 = load double* %336, align 8
  %338 = fsub double %333, %337
  %339 = fmul double %328, %338
  %340 = fadd double %327, %339
  %341 = fsub double %316, %340
  %342 = fmul double %292, %341
  %343 = fsub double %291, %342
  %344 = load double* @xxcon1, align 8
  %345 = load i32* %ip1, align 4
  %346 = sext i32 %345 to i64
  %347 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %346
  %348 = getelementptr inbounds [5 x double]* %347, i32 0, i64 1
  %349 = load double* %348, align 8
  %350 = load i32* %i, align 4
  %351 = sext i32 %350 to i64
  %352 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %351
  %353 = getelementptr inbounds [5 x double]* %352, i32 0, i64 1
  %354 = load double* %353, align 8
  %355 = fmul double 2.000000e+00, %354
  %356 = fsub double %349, %355
  %357 = load i32* %im1, align 4
  %358 = sext i32 %357 to i64
  %359 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %358
  %360 = getelementptr inbounds [5 x double]* %359, i32 0, i64 1
  %361 = load double* %360, align 8
  %362 = fadd double %356, %361
  %363 = fmul double %344, %362
  %364 = fadd double %343, %363
  %365 = load double* @dx2tx1, align 8
  %366 = load i32* %ip1, align 4
  %367 = sext i32 %366 to i64
  %368 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %367
  %369 = getelementptr inbounds [5 x double]* %368, i32 0, i64 1
  %370 = load double* %369, align 8
  %371 = load i32* %i, align 4
  %372 = sext i32 %371 to i64
  %373 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %372
  %374 = getelementptr inbounds [5 x double]* %373, i32 0, i64 1
  %375 = load double* %374, align 8
  %376 = fmul double 2.000000e+00, %375
  %377 = fsub double %370, %376
  %378 = load i32* %im1, align 4
  %379 = sext i32 %378 to i64
  %380 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %379
  %381 = getelementptr inbounds [5 x double]* %380, i32 0, i64 1
  %382 = load double* %381, align 8
  %383 = fadd double %377, %382
  %384 = fmul double %365, %383
  %385 = fadd double %364, %384
  %386 = load i32* %i, align 4
  %387 = sext i32 %386 to i64
  %388 = load i32* %j, align 4
  %389 = sext i32 %388 to i64
  %390 = load i32* %k, align 4
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %391
  %393 = getelementptr inbounds [13 x [13 x [5 x double]]]* %392, i32 0, i64 %389
  %394 = getelementptr inbounds [13 x [5 x double]]* %393, i32 0, i64 %387
  %395 = getelementptr inbounds [5 x double]* %394, i32 0, i64 1
  store double %385, double* %395, align 8
  %396 = load i32* %i, align 4
  %397 = sext i32 %396 to i64
  %398 = load i32* %j, align 4
  %399 = sext i32 %398 to i64
  %400 = load i32* %k, align 4
  %401 = sext i32 %400 to i64
  %402 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %401
  %403 = getelementptr inbounds [13 x [13 x [5 x double]]]* %402, i32 0, i64 %399
  %404 = getelementptr inbounds [13 x [5 x double]]* %403, i32 0, i64 %397
  %405 = getelementptr inbounds [5 x double]* %404, i32 0, i64 2
  %406 = load double* %405, align 8
  %407 = load double* @tx2, align 8
  %408 = load i32* %ip1, align 4
  %409 = sext i32 %408 to i64
  %410 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %409
  %411 = getelementptr inbounds [5 x double]* %410, i32 0, i64 2
  %412 = load double* %411, align 8
  %413 = load i32* %ip1, align 4
  %414 = sext i32 %413 to i64
  %415 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %414
  %416 = getelementptr inbounds [5 x double]* %415, i32 0, i64 1
  %417 = load double* %416, align 8
  %418 = fmul double %412, %417
  %419 = load i32* %im1, align 4
  %420 = sext i32 %419 to i64
  %421 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %420
  %422 = getelementptr inbounds [5 x double]* %421, i32 0, i64 2
  %423 = load double* %422, align 8
  %424 = load i32* %im1, align 4
  %425 = sext i32 %424 to i64
  %426 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %425
  %427 = getelementptr inbounds [5 x double]* %426, i32 0, i64 1
  %428 = load double* %427, align 8
  %429 = fmul double %423, %428
  %430 = fsub double %418, %429
  %431 = fmul double %407, %430
  %432 = fsub double %406, %431
  %433 = load double* @xxcon2, align 8
  %434 = load i32* %ip1, align 4
  %435 = sext i32 %434 to i64
  %436 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %435
  %437 = getelementptr inbounds [5 x double]* %436, i32 0, i64 2
  %438 = load double* %437, align 8
  %439 = load i32* %i, align 4
  %440 = sext i32 %439 to i64
  %441 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %440
  %442 = getelementptr inbounds [5 x double]* %441, i32 0, i64 2
  %443 = load double* %442, align 8
  %444 = fmul double 2.000000e+00, %443
  %445 = fsub double %438, %444
  %446 = load i32* %im1, align 4
  %447 = sext i32 %446 to i64
  %448 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %447
  %449 = getelementptr inbounds [5 x double]* %448, i32 0, i64 2
  %450 = load double* %449, align 8
  %451 = fadd double %445, %450
  %452 = fmul double %433, %451
  %453 = fadd double %432, %452
  %454 = load double* @dx3tx1, align 8
  %455 = load i32* %ip1, align 4
  %456 = sext i32 %455 to i64
  %457 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %456
  %458 = getelementptr inbounds [5 x double]* %457, i32 0, i64 2
  %459 = load double* %458, align 8
  %460 = load i32* %i, align 4
  %461 = sext i32 %460 to i64
  %462 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %461
  %463 = getelementptr inbounds [5 x double]* %462, i32 0, i64 2
  %464 = load double* %463, align 8
  %465 = fmul double 2.000000e+00, %464
  %466 = fsub double %459, %465
  %467 = load i32* %im1, align 4
  %468 = sext i32 %467 to i64
  %469 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %468
  %470 = getelementptr inbounds [5 x double]* %469, i32 0, i64 2
  %471 = load double* %470, align 8
  %472 = fadd double %466, %471
  %473 = fmul double %454, %472
  %474 = fadd double %453, %473
  %475 = load i32* %i, align 4
  %476 = sext i32 %475 to i64
  %477 = load i32* %j, align 4
  %478 = sext i32 %477 to i64
  %479 = load i32* %k, align 4
  %480 = sext i32 %479 to i64
  %481 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %480
  %482 = getelementptr inbounds [13 x [13 x [5 x double]]]* %481, i32 0, i64 %478
  %483 = getelementptr inbounds [13 x [5 x double]]* %482, i32 0, i64 %476
  %484 = getelementptr inbounds [5 x double]* %483, i32 0, i64 2
  store double %474, double* %484, align 8
  %485 = load i32* %i, align 4
  %486 = sext i32 %485 to i64
  %487 = load i32* %j, align 4
  %488 = sext i32 %487 to i64
  %489 = load i32* %k, align 4
  %490 = sext i32 %489 to i64
  %491 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %490
  %492 = getelementptr inbounds [13 x [13 x [5 x double]]]* %491, i32 0, i64 %488
  %493 = getelementptr inbounds [13 x [5 x double]]* %492, i32 0, i64 %486
  %494 = getelementptr inbounds [5 x double]* %493, i32 0, i64 3
  %495 = load double* %494, align 8
  %496 = load double* @tx2, align 8
  %497 = load i32* %ip1, align 4
  %498 = sext i32 %497 to i64
  %499 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %498
  %500 = getelementptr inbounds [5 x double]* %499, i32 0, i64 3
  %501 = load double* %500, align 8
  %502 = load i32* %ip1, align 4
  %503 = sext i32 %502 to i64
  %504 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %503
  %505 = getelementptr inbounds [5 x double]* %504, i32 0, i64 1
  %506 = load double* %505, align 8
  %507 = fmul double %501, %506
  %508 = load i32* %im1, align 4
  %509 = sext i32 %508 to i64
  %510 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %509
  %511 = getelementptr inbounds [5 x double]* %510, i32 0, i64 3
  %512 = load double* %511, align 8
  %513 = load i32* %im1, align 4
  %514 = sext i32 %513 to i64
  %515 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %514
  %516 = getelementptr inbounds [5 x double]* %515, i32 0, i64 1
  %517 = load double* %516, align 8
  %518 = fmul double %512, %517
  %519 = fsub double %507, %518
  %520 = fmul double %496, %519
  %521 = fsub double %495, %520
  %522 = load double* @xxcon2, align 8
  %523 = load i32* %ip1, align 4
  %524 = sext i32 %523 to i64
  %525 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %524
  %526 = getelementptr inbounds [5 x double]* %525, i32 0, i64 3
  %527 = load double* %526, align 8
  %528 = load i32* %i, align 4
  %529 = sext i32 %528 to i64
  %530 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %529
  %531 = getelementptr inbounds [5 x double]* %530, i32 0, i64 3
  %532 = load double* %531, align 8
  %533 = fmul double 2.000000e+00, %532
  %534 = fsub double %527, %533
  %535 = load i32* %im1, align 4
  %536 = sext i32 %535 to i64
  %537 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %536
  %538 = getelementptr inbounds [5 x double]* %537, i32 0, i64 3
  %539 = load double* %538, align 8
  %540 = fadd double %534, %539
  %541 = fmul double %522, %540
  %542 = fadd double %521, %541
  %543 = load double* @dx4tx1, align 8
  %544 = load i32* %ip1, align 4
  %545 = sext i32 %544 to i64
  %546 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %545
  %547 = getelementptr inbounds [5 x double]* %546, i32 0, i64 3
  %548 = load double* %547, align 8
  %549 = load i32* %i, align 4
  %550 = sext i32 %549 to i64
  %551 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %550
  %552 = getelementptr inbounds [5 x double]* %551, i32 0, i64 3
  %553 = load double* %552, align 8
  %554 = fmul double 2.000000e+00, %553
  %555 = fsub double %548, %554
  %556 = load i32* %im1, align 4
  %557 = sext i32 %556 to i64
  %558 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %557
  %559 = getelementptr inbounds [5 x double]* %558, i32 0, i64 3
  %560 = load double* %559, align 8
  %561 = fadd double %555, %560
  %562 = fmul double %543, %561
  %563 = fadd double %542, %562
  %564 = load i32* %i, align 4
  %565 = sext i32 %564 to i64
  %566 = load i32* %j, align 4
  %567 = sext i32 %566 to i64
  %568 = load i32* %k, align 4
  %569 = sext i32 %568 to i64
  %570 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %569
  %571 = getelementptr inbounds [13 x [13 x [5 x double]]]* %570, i32 0, i64 %567
  %572 = getelementptr inbounds [13 x [5 x double]]* %571, i32 0, i64 %565
  %573 = getelementptr inbounds [5 x double]* %572, i32 0, i64 3
  store double %563, double* %573, align 8
  %574 = load i32* %i, align 4
  %575 = sext i32 %574 to i64
  %576 = load i32* %j, align 4
  %577 = sext i32 %576 to i64
  %578 = load i32* %k, align 4
  %579 = sext i32 %578 to i64
  %580 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %579
  %581 = getelementptr inbounds [13 x [13 x [5 x double]]]* %580, i32 0, i64 %577
  %582 = getelementptr inbounds [13 x [5 x double]]* %581, i32 0, i64 %575
  %583 = getelementptr inbounds [5 x double]* %582, i32 0, i64 4
  %584 = load double* %583, align 8
  %585 = load double* @tx2, align 8
  %586 = load i32* %ip1, align 4
  %587 = sext i32 %586 to i64
  %588 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %587
  %589 = getelementptr inbounds [5 x double]* %588, i32 0, i64 1
  %590 = load double* %589, align 8
  %591 = load double* @c1, align 8
  %592 = load i32* %ip1, align 4
  %593 = sext i32 %592 to i64
  %594 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %593
  %595 = getelementptr inbounds [5 x double]* %594, i32 0, i64 4
  %596 = load double* %595, align 8
  %597 = fmul double %591, %596
  %598 = load double* @c2, align 8
  %599 = load i32* %ip1, align 4
  %600 = sext i32 %599 to i64
  %601 = getelementptr inbounds [13 x double]* @q, i32 0, i64 %600
  %602 = load double* %601, align 8
  %603 = fmul double %598, %602
  %604 = fsub double %597, %603
  %605 = fmul double %590, %604
  %606 = load i32* %im1, align 4
  %607 = sext i32 %606 to i64
  %608 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %607
  %609 = getelementptr inbounds [5 x double]* %608, i32 0, i64 1
  %610 = load double* %609, align 8
  %611 = load double* @c1, align 8
  %612 = load i32* %im1, align 4
  %613 = sext i32 %612 to i64
  %614 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %613
  %615 = getelementptr inbounds [5 x double]* %614, i32 0, i64 4
  %616 = load double* %615, align 8
  %617 = fmul double %611, %616
  %618 = load double* @c2, align 8
  %619 = load i32* %im1, align 4
  %620 = sext i32 %619 to i64
  %621 = getelementptr inbounds [13 x double]* @q, i32 0, i64 %620
  %622 = load double* %621, align 8
  %623 = fmul double %618, %622
  %624 = fsub double %617, %623
  %625 = fmul double %610, %624
  %626 = fsub double %605, %625
  %627 = fmul double %585, %626
  %628 = fsub double %584, %627
  %629 = load double* @xxcon3, align 8
  %630 = fmul double 5.000000e-01, %629
  %631 = load i32* %ip1, align 4
  %632 = sext i32 %631 to i64
  %633 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %632
  %634 = getelementptr inbounds [5 x double]* %633, i32 0, i64 0
  %635 = load double* %634, align 8
  %636 = load i32* %i, align 4
  %637 = sext i32 %636 to i64
  %638 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %637
  %639 = getelementptr inbounds [5 x double]* %638, i32 0, i64 0
  %640 = load double* %639, align 8
  %641 = fmul double 2.000000e+00, %640
  %642 = fsub double %635, %641
  %643 = load i32* %im1, align 4
  %644 = sext i32 %643 to i64
  %645 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %644
  %646 = getelementptr inbounds [5 x double]* %645, i32 0, i64 0
  %647 = load double* %646, align 8
  %648 = fadd double %642, %647
  %649 = fmul double %630, %648
  %650 = fadd double %628, %649
  %651 = load double* @xxcon4, align 8
  %652 = load i32* %ip1, align 4
  %653 = sext i32 %652 to i64
  %654 = getelementptr inbounds [13 x double]* @cuf, i32 0, i64 %653
  %655 = load double* %654, align 8
  %656 = load i32* %i, align 4
  %657 = sext i32 %656 to i64
  %658 = getelementptr inbounds [13 x double]* @cuf, i32 0, i64 %657
  %659 = load double* %658, align 8
  %660 = fmul double 2.000000e+00, %659
  %661 = fsub double %655, %660
  %662 = load i32* %im1, align 4
  %663 = sext i32 %662 to i64
  %664 = getelementptr inbounds [13 x double]* @cuf, i32 0, i64 %663
  %665 = load double* %664, align 8
  %666 = fadd double %661, %665
  %667 = fmul double %651, %666
  %668 = fadd double %650, %667
  %669 = load double* @xxcon5, align 8
  %670 = load i32* %ip1, align 4
  %671 = sext i32 %670 to i64
  %672 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %671
  %673 = getelementptr inbounds [5 x double]* %672, i32 0, i64 4
  %674 = load double* %673, align 8
  %675 = load i32* %i, align 4
  %676 = sext i32 %675 to i64
  %677 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %676
  %678 = getelementptr inbounds [5 x double]* %677, i32 0, i64 4
  %679 = load double* %678, align 8
  %680 = fmul double 2.000000e+00, %679
  %681 = fsub double %674, %680
  %682 = load i32* %im1, align 4
  %683 = sext i32 %682 to i64
  %684 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %683
  %685 = getelementptr inbounds [5 x double]* %684, i32 0, i64 4
  %686 = load double* %685, align 8
  %687 = fadd double %681, %686
  %688 = fmul double %669, %687
  %689 = fadd double %668, %688
  %690 = load double* @dx5tx1, align 8
  %691 = load i32* %ip1, align 4
  %692 = sext i32 %691 to i64
  %693 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %692
  %694 = getelementptr inbounds [5 x double]* %693, i32 0, i64 4
  %695 = load double* %694, align 8
  %696 = load i32* %i, align 4
  %697 = sext i32 %696 to i64
  %698 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %697
  %699 = getelementptr inbounds [5 x double]* %698, i32 0, i64 4
  %700 = load double* %699, align 8
  %701 = fmul double 2.000000e+00, %700
  %702 = fsub double %695, %701
  %703 = load i32* %im1, align 4
  %704 = sext i32 %703 to i64
  %705 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %704
  %706 = getelementptr inbounds [5 x double]* %705, i32 0, i64 4
  %707 = load double* %706, align 8
  %708 = fadd double %702, %707
  %709 = fmul double %690, %708
  %710 = fadd double %689, %709
  %711 = load i32* %i, align 4
  %712 = sext i32 %711 to i64
  %713 = load i32* %j, align 4
  %714 = sext i32 %713 to i64
  %715 = load i32* %k, align 4
  %716 = sext i32 %715 to i64
  %717 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %716
  %718 = getelementptr inbounds [13 x [13 x [5 x double]]]* %717, i32 0, i64 %714
  %719 = getelementptr inbounds [13 x [5 x double]]* %718, i32 0, i64 %712
  %720 = getelementptr inbounds [5 x double]* %719, i32 0, i64 4
  store double %710, double* %720, align 8
  br label %721

; <label>:721                                     ; preds = %220
  %722 = load i32* %i, align 4
  %723 = add nsw i32 %722, 1
  store i32 %723, i32* %i, align 4
  br label %215

; <label>:724                                     ; preds = %215
  store i32 0, i32* %m, align 4
  br label %725

; <label>:725                                     ; preds = %849, %724
  %726 = load i32* %m, align 4
  %727 = icmp slt i32 %726, 5
  br i1 %727, label %728, label %852

; <label>:728                                     ; preds = %725
  store i32 1, i32* %i, align 4
  %729 = load i32* %m, align 4
  %730 = sext i32 %729 to i64
  %731 = load i32* %i, align 4
  %732 = sext i32 %731 to i64
  %733 = load i32* %j, align 4
  %734 = sext i32 %733 to i64
  %735 = load i32* %k, align 4
  %736 = sext i32 %735 to i64
  %737 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %736
  %738 = getelementptr inbounds [13 x [13 x [5 x double]]]* %737, i32 0, i64 %734
  %739 = getelementptr inbounds [13 x [5 x double]]* %738, i32 0, i64 %732
  %740 = getelementptr inbounds [5 x double]* %739, i32 0, i64 %730
  %741 = load double* %740, align 8
  %742 = load double* @dssp, align 8
  %743 = load i32* %m, align 4
  %744 = sext i32 %743 to i64
  %745 = load i32* %i, align 4
  %746 = sext i32 %745 to i64
  %747 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %746
  %748 = getelementptr inbounds [5 x double]* %747, i32 0, i64 %744
  %749 = load double* %748, align 8
  %750 = fmul double 5.000000e+00, %749
  %751 = load i32* %m, align 4
  %752 = sext i32 %751 to i64
  %753 = load i32* %i, align 4
  %754 = add nsw i32 %753, 1
  %755 = sext i32 %754 to i64
  %756 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %755
  %757 = getelementptr inbounds [5 x double]* %756, i32 0, i64 %752
  %758 = load double* %757, align 8
  %759 = fmul double 4.000000e+00, %758
  %760 = fsub double %750, %759
  %761 = load i32* %m, align 4
  %762 = sext i32 %761 to i64
  %763 = load i32* %i, align 4
  %764 = add nsw i32 %763, 2
  %765 = sext i32 %764 to i64
  %766 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %765
  %767 = getelementptr inbounds [5 x double]* %766, i32 0, i64 %762
  %768 = load double* %767, align 8
  %769 = fadd double %760, %768
  %770 = fmul double %742, %769
  %771 = fsub double %741, %770
  %772 = load i32* %m, align 4
  %773 = sext i32 %772 to i64
  %774 = load i32* %i, align 4
  %775 = sext i32 %774 to i64
  %776 = load i32* %j, align 4
  %777 = sext i32 %776 to i64
  %778 = load i32* %k, align 4
  %779 = sext i32 %778 to i64
  %780 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %779
  %781 = getelementptr inbounds [13 x [13 x [5 x double]]]* %780, i32 0, i64 %777
  %782 = getelementptr inbounds [13 x [5 x double]]* %781, i32 0, i64 %775
  %783 = getelementptr inbounds [5 x double]* %782, i32 0, i64 %773
  store double %771, double* %783, align 8
  store i32 2, i32* %i, align 4
  %784 = load i32* %m, align 4
  %785 = sext i32 %784 to i64
  %786 = load i32* %i, align 4
  %787 = sext i32 %786 to i64
  %788 = load i32* %j, align 4
  %789 = sext i32 %788 to i64
  %790 = load i32* %k, align 4
  %791 = sext i32 %790 to i64
  %792 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %791
  %793 = getelementptr inbounds [13 x [13 x [5 x double]]]* %792, i32 0, i64 %789
  %794 = getelementptr inbounds [13 x [5 x double]]* %793, i32 0, i64 %787
  %795 = getelementptr inbounds [5 x double]* %794, i32 0, i64 %785
  %796 = load double* %795, align 8
  %797 = load double* @dssp, align 8
  %798 = load i32* %m, align 4
  %799 = sext i32 %798 to i64
  %800 = load i32* %i, align 4
  %801 = sub nsw i32 %800, 1
  %802 = sext i32 %801 to i64
  %803 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %802
  %804 = getelementptr inbounds [5 x double]* %803, i32 0, i64 %799
  %805 = load double* %804, align 8
  %806 = fmul double -4.000000e+00, %805
  %807 = load i32* %m, align 4
  %808 = sext i32 %807 to i64
  %809 = load i32* %i, align 4
  %810 = sext i32 %809 to i64
  %811 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %810
  %812 = getelementptr inbounds [5 x double]* %811, i32 0, i64 %808
  %813 = load double* %812, align 8
  %814 = fmul double 6.000000e+00, %813
  %815 = fadd double %806, %814
  %816 = load i32* %m, align 4
  %817 = sext i32 %816 to i64
  %818 = load i32* %i, align 4
  %819 = add nsw i32 %818, 1
  %820 = sext i32 %819 to i64
  %821 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %820
  %822 = getelementptr inbounds [5 x double]* %821, i32 0, i64 %817
  %823 = load double* %822, align 8
  %824 = fmul double 4.000000e+00, %823
  %825 = fsub double %815, %824
  %826 = load i32* %m, align 4
  %827 = sext i32 %826 to i64
  %828 = load i32* %i, align 4
  %829 = add nsw i32 %828, 2
  %830 = sext i32 %829 to i64
  %831 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %830
  %832 = getelementptr inbounds [5 x double]* %831, i32 0, i64 %827
  %833 = load double* %832, align 8
  %834 = fadd double %825, %833
  %835 = fmul double %797, %834
  %836 = fsub double %796, %835
  %837 = load i32* %m, align 4
  %838 = sext i32 %837 to i64
  %839 = load i32* %i, align 4
  %840 = sext i32 %839 to i64
  %841 = load i32* %j, align 4
  %842 = sext i32 %841 to i64
  %843 = load i32* %k, align 4
  %844 = sext i32 %843 to i64
  %845 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %844
  %846 = getelementptr inbounds [13 x [13 x [5 x double]]]* %845, i32 0, i64 %842
  %847 = getelementptr inbounds [13 x [5 x double]]* %846, i32 0, i64 %840
  %848 = getelementptr inbounds [5 x double]* %847, i32 0, i64 %838
  store double %836, double* %848, align 8
  br label %849

; <label>:849                                     ; preds = %728
  %850 = load i32* %m, align 4
  %851 = add nsw i32 %850, 1
  store i32 %851, i32* %m, align 4
  br label %725

; <label>:852                                     ; preds = %725
  store i32 3, i32* %i, align 4
  br label %853

; <label>:853                                     ; preds = %941, %852
  %854 = load i32* %i, align 4
  %855 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %856 = sub nsw i32 %855, 4
  %857 = icmp sle i32 %854, %856
  br i1 %857, label %858, label %944

; <label>:858                                     ; preds = %853
  store i32 0, i32* %m, align 4
  br label %859

; <label>:859                                     ; preds = %937, %858
  %860 = load i32* %m, align 4
  %861 = icmp slt i32 %860, 5
  br i1 %861, label %862, label %940

; <label>:862                                     ; preds = %859
  %863 = load i32* %m, align 4
  %864 = sext i32 %863 to i64
  %865 = load i32* %i, align 4
  %866 = sext i32 %865 to i64
  %867 = load i32* %j, align 4
  %868 = sext i32 %867 to i64
  %869 = load i32* %k, align 4
  %870 = sext i32 %869 to i64
  %871 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %870
  %872 = getelementptr inbounds [13 x [13 x [5 x double]]]* %871, i32 0, i64 %868
  %873 = getelementptr inbounds [13 x [5 x double]]* %872, i32 0, i64 %866
  %874 = getelementptr inbounds [5 x double]* %873, i32 0, i64 %864
  %875 = load double* %874, align 8
  %876 = load double* @dssp, align 8
  %877 = load i32* %m, align 4
  %878 = sext i32 %877 to i64
  %879 = load i32* %i, align 4
  %880 = sub nsw i32 %879, 2
  %881 = sext i32 %880 to i64
  %882 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %881
  %883 = getelementptr inbounds [5 x double]* %882, i32 0, i64 %878
  %884 = load double* %883, align 8
  %885 = load i32* %m, align 4
  %886 = sext i32 %885 to i64
  %887 = load i32* %i, align 4
  %888 = sub nsw i32 %887, 1
  %889 = sext i32 %888 to i64
  %890 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %889
  %891 = getelementptr inbounds [5 x double]* %890, i32 0, i64 %886
  %892 = load double* %891, align 8
  %893 = fmul double 4.000000e+00, %892
  %894 = fsub double %884, %893
  %895 = load i32* %m, align 4
  %896 = sext i32 %895 to i64
  %897 = load i32* %i, align 4
  %898 = sext i32 %897 to i64
  %899 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %898
  %900 = getelementptr inbounds [5 x double]* %899, i32 0, i64 %896
  %901 = load double* %900, align 8
  %902 = fmul double 6.000000e+00, %901
  %903 = fadd double %894, %902
  %904 = load i32* %m, align 4
  %905 = sext i32 %904 to i64
  %906 = load i32* %i, align 4
  %907 = add nsw i32 %906, 1
  %908 = sext i32 %907 to i64
  %909 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %908
  %910 = getelementptr inbounds [5 x double]* %909, i32 0, i64 %905
  %911 = load double* %910, align 8
  %912 = fmul double 4.000000e+00, %911
  %913 = fsub double %903, %912
  %914 = load i32* %m, align 4
  %915 = sext i32 %914 to i64
  %916 = load i32* %i, align 4
  %917 = add nsw i32 %916, 2
  %918 = sext i32 %917 to i64
  %919 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %918
  %920 = getelementptr inbounds [5 x double]* %919, i32 0, i64 %915
  %921 = load double* %920, align 8
  %922 = fadd double %913, %921
  %923 = fmul double %876, %922
  %924 = fsub double %875, %923
  %925 = load i32* %m, align 4
  %926 = sext i32 %925 to i64
  %927 = load i32* %i, align 4
  %928 = sext i32 %927 to i64
  %929 = load i32* %j, align 4
  %930 = sext i32 %929 to i64
  %931 = load i32* %k, align 4
  %932 = sext i32 %931 to i64
  %933 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %932
  %934 = getelementptr inbounds [13 x [13 x [5 x double]]]* %933, i32 0, i64 %930
  %935 = getelementptr inbounds [13 x [5 x double]]* %934, i32 0, i64 %928
  %936 = getelementptr inbounds [5 x double]* %935, i32 0, i64 %926
  store double %924, double* %936, align 8
  br label %937

; <label>:937                                     ; preds = %862
  %938 = load i32* %m, align 4
  %939 = add nsw i32 %938, 1
  store i32 %939, i32* %m, align 4
  br label %859

; <label>:940                                     ; preds = %859
  br label %941

; <label>:941                                     ; preds = %940
  %942 = load i32* %i, align 4
  %943 = add nsw i32 %942, 1
  store i32 %943, i32* %i, align 4
  br label %853

; <label>:944                                     ; preds = %853
  store i32 0, i32* %m, align 4
  br label %945

; <label>:945                                     ; preds = %1073, %944
  %946 = load i32* %m, align 4
  %947 = icmp slt i32 %946, 5
  br i1 %947, label %948, label %1076

; <label>:948                                     ; preds = %945
  %949 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %950 = sub nsw i32 %949, 3
  store i32 %950, i32* %i, align 4
  %951 = load i32* %m, align 4
  %952 = sext i32 %951 to i64
  %953 = load i32* %i, align 4
  %954 = sext i32 %953 to i64
  %955 = load i32* %j, align 4
  %956 = sext i32 %955 to i64
  %957 = load i32* %k, align 4
  %958 = sext i32 %957 to i64
  %959 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %958
  %960 = getelementptr inbounds [13 x [13 x [5 x double]]]* %959, i32 0, i64 %956
  %961 = getelementptr inbounds [13 x [5 x double]]* %960, i32 0, i64 %954
  %962 = getelementptr inbounds [5 x double]* %961, i32 0, i64 %952
  %963 = load double* %962, align 8
  %964 = load double* @dssp, align 8
  %965 = load i32* %m, align 4
  %966 = sext i32 %965 to i64
  %967 = load i32* %i, align 4
  %968 = sub nsw i32 %967, 2
  %969 = sext i32 %968 to i64
  %970 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %969
  %971 = getelementptr inbounds [5 x double]* %970, i32 0, i64 %966
  %972 = load double* %971, align 8
  %973 = load i32* %m, align 4
  %974 = sext i32 %973 to i64
  %975 = load i32* %i, align 4
  %976 = sub nsw i32 %975, 1
  %977 = sext i32 %976 to i64
  %978 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %977
  %979 = getelementptr inbounds [5 x double]* %978, i32 0, i64 %974
  %980 = load double* %979, align 8
  %981 = fmul double 4.000000e+00, %980
  %982 = fsub double %972, %981
  %983 = load i32* %m, align 4
  %984 = sext i32 %983 to i64
  %985 = load i32* %i, align 4
  %986 = sext i32 %985 to i64
  %987 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %986
  %988 = getelementptr inbounds [5 x double]* %987, i32 0, i64 %984
  %989 = load double* %988, align 8
  %990 = fmul double 6.000000e+00, %989
  %991 = fadd double %982, %990
  %992 = load i32* %m, align 4
  %993 = sext i32 %992 to i64
  %994 = load i32* %i, align 4
  %995 = add nsw i32 %994, 1
  %996 = sext i32 %995 to i64
  %997 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %996
  %998 = getelementptr inbounds [5 x double]* %997, i32 0, i64 %993
  %999 = load double* %998, align 8
  %1000 = fmul double 4.000000e+00, %999
  %1001 = fsub double %991, %1000
  %1002 = fmul double %964, %1001
  %1003 = fsub double %963, %1002
  %1004 = load i32* %m, align 4
  %1005 = sext i32 %1004 to i64
  %1006 = load i32* %i, align 4
  %1007 = sext i32 %1006 to i64
  %1008 = load i32* %j, align 4
  %1009 = sext i32 %1008 to i64
  %1010 = load i32* %k, align 4
  %1011 = sext i32 %1010 to i64
  %1012 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %1011
  %1013 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1012, i32 0, i64 %1009
  %1014 = getelementptr inbounds [13 x [5 x double]]* %1013, i32 0, i64 %1007
  %1015 = getelementptr inbounds [5 x double]* %1014, i32 0, i64 %1005
  store double %1003, double* %1015, align 8
  %1016 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %1017 = sub nsw i32 %1016, 2
  store i32 %1017, i32* %i, align 4
  %1018 = load i32* %m, align 4
  %1019 = sext i32 %1018 to i64
  %1020 = load i32* %i, align 4
  %1021 = sext i32 %1020 to i64
  %1022 = load i32* %j, align 4
  %1023 = sext i32 %1022 to i64
  %1024 = load i32* %k, align 4
  %1025 = sext i32 %1024 to i64
  %1026 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %1025
  %1027 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1026, i32 0, i64 %1023
  %1028 = getelementptr inbounds [13 x [5 x double]]* %1027, i32 0, i64 %1021
  %1029 = getelementptr inbounds [5 x double]* %1028, i32 0, i64 %1019
  %1030 = load double* %1029, align 8
  %1031 = load double* @dssp, align 8
  %1032 = load i32* %m, align 4
  %1033 = sext i32 %1032 to i64
  %1034 = load i32* %i, align 4
  %1035 = sub nsw i32 %1034, 2
  %1036 = sext i32 %1035 to i64
  %1037 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1036
  %1038 = getelementptr inbounds [5 x double]* %1037, i32 0, i64 %1033
  %1039 = load double* %1038, align 8
  %1040 = load i32* %m, align 4
  %1041 = sext i32 %1040 to i64
  %1042 = load i32* %i, align 4
  %1043 = sub nsw i32 %1042, 1
  %1044 = sext i32 %1043 to i64
  %1045 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1044
  %1046 = getelementptr inbounds [5 x double]* %1045, i32 0, i64 %1041
  %1047 = load double* %1046, align 8
  %1048 = fmul double 4.000000e+00, %1047
  %1049 = fsub double %1039, %1048
  %1050 = load i32* %m, align 4
  %1051 = sext i32 %1050 to i64
  %1052 = load i32* %i, align 4
  %1053 = sext i32 %1052 to i64
  %1054 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1053
  %1055 = getelementptr inbounds [5 x double]* %1054, i32 0, i64 %1051
  %1056 = load double* %1055, align 8
  %1057 = fmul double 5.000000e+00, %1056
  %1058 = fadd double %1049, %1057
  %1059 = fmul double %1031, %1058
  %1060 = fsub double %1030, %1059
  %1061 = load i32* %m, align 4
  %1062 = sext i32 %1061 to i64
  %1063 = load i32* %i, align 4
  %1064 = sext i32 %1063 to i64
  %1065 = load i32* %j, align 4
  %1066 = sext i32 %1065 to i64
  %1067 = load i32* %k, align 4
  %1068 = sext i32 %1067 to i64
  %1069 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %1068
  %1070 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1069, i32 0, i64 %1066
  %1071 = getelementptr inbounds [13 x [5 x double]]* %1070, i32 0, i64 %1064
  %1072 = getelementptr inbounds [5 x double]* %1071, i32 0, i64 %1062
  store double %1060, double* %1072, align 8
  br label %1073

; <label>:1073                                    ; preds = %948
  %1074 = load i32* %m, align 4
  %1075 = add nsw i32 %1074, 1
  store i32 %1075, i32* %m, align 4
  br label %945

; <label>:1076                                    ; preds = %945
  br label %1077

; <label>:1077                                    ; preds = %1076
  %1078 = load i32* %j, align 4
  %1079 = add nsw i32 %1078, 1
  store i32 %1079, i32* %j, align 4
  br label %61

; <label>:1080                                    ; preds = %61
  br label %1081

; <label>:1081                                    ; preds = %1080
  %1082 = load i32* %k, align 4
  %1083 = add nsw i32 %1082, 1
  store i32 %1083, i32* %k, align 4
  br label %51

; <label>:1084                                    ; preds = %51
  store i32 1, i32* %k, align 4
  br label %1085

; <label>:1085                                    ; preds = %2115, %1084
  %1086 = load i32* %k, align 4
  %1087 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %1088 = sub nsw i32 %1087, 2
  %1089 = icmp sle i32 %1086, %1088
  br i1 %1089, label %1090, label %2118

; <label>:1090                                    ; preds = %1085
  %1091 = load i32* %k, align 4
  %1092 = sitofp i32 %1091 to double
  %1093 = load double* @dnzm1, align 8
  %1094 = fmul double %1092, %1093
  store double %1094, double* %zeta, align 8
  store i32 1, i32* %i, align 4
  br label %1095

; <label>:1095                                    ; preds = %2111, %1090
  %1096 = load i32* %i, align 4
  %1097 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %1098 = sub nsw i32 %1097, 2
  %1099 = icmp sle i32 %1096, %1098
  br i1 %1099, label %1100, label %2114

; <label>:1100                                    ; preds = %1095
  %1101 = load i32* %i, align 4
  %1102 = sitofp i32 %1101 to double
  %1103 = load double* @dnxm1, align 8
  %1104 = fmul double %1102, %1103
  store double %1104, double* %xi, align 8
  store i32 0, i32* %j, align 4
  br label %1105

; <label>:1105                                    ; preds = %1245, %1100
  %1106 = load i32* %j, align 4
  %1107 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %1108 = sub nsw i32 %1107, 1
  %1109 = icmp sle i32 %1106, %1108
  br i1 %1109, label %1110, label %1248

; <label>:1110                                    ; preds = %1105
  %1111 = load i32* %j, align 4
  %1112 = sitofp i32 %1111 to double
  %1113 = load double* @dnym1, align 8
  %1114 = fmul double %1112, %1113
  store double %1114, double* %eta, align 8
  %1115 = load double* %xi, align 8
  %1116 = load double* %eta, align 8
  %1117 = load double* %zeta, align 8
  %1118 = getelementptr inbounds [5 x double]* %dtemp, i32 0, i32 0
  call void @exact_solution(double %1115, double %1116, double %1117, double* %1118)
  store i32 0, i32* %m, align 4
  br label %1119

; <label>:1119                                    ; preds = %1133, %1110
  %1120 = load i32* %m, align 4
  %1121 = icmp slt i32 %1120, 5
  br i1 %1121, label %1122, label %1136

; <label>:1122                                    ; preds = %1119
  %1123 = load i32* %m, align 4
  %1124 = sext i32 %1123 to i64
  %1125 = getelementptr inbounds [5 x double]* %dtemp, i32 0, i64 %1124
  %1126 = load double* %1125, align 8
  %1127 = load i32* %m, align 4
  %1128 = sext i32 %1127 to i64
  %1129 = load i32* %j, align 4
  %1130 = sext i32 %1129 to i64
  %1131 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1130
  %1132 = getelementptr inbounds [5 x double]* %1131, i32 0, i64 %1128
  store double %1126, double* %1132, align 8
  br label %1133

; <label>:1133                                    ; preds = %1122
  %1134 = load i32* %m, align 4
  %1135 = add nsw i32 %1134, 1
  store i32 %1135, i32* %m, align 4
  br label %1119

; <label>:1136                                    ; preds = %1119
  %1137 = getelementptr inbounds [5 x double]* %dtemp, i32 0, i64 0
  %1138 = load double* %1137, align 8
  %1139 = fdiv double 1.000000e+00, %1138
  store double %1139, double* %dtpp, align 8
  store i32 1, i32* %m, align 4
  br label %1140

; <label>:1140                                    ; preds = %1156, %1136
  %1141 = load i32* %m, align 4
  %1142 = icmp slt i32 %1141, 5
  br i1 %1142, label %1143, label %1159

; <label>:1143                                    ; preds = %1140
  %1144 = load double* %dtpp, align 8
  %1145 = load i32* %m, align 4
  %1146 = sext i32 %1145 to i64
  %1147 = getelementptr inbounds [5 x double]* %dtemp, i32 0, i64 %1146
  %1148 = load double* %1147, align 8
  %1149 = fmul double %1144, %1148
  %1150 = load i32* %m, align 4
  %1151 = sext i32 %1150 to i64
  %1152 = load i32* %j, align 4
  %1153 = sext i32 %1152 to i64
  %1154 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1153
  %1155 = getelementptr inbounds [5 x double]* %1154, i32 0, i64 %1151
  store double %1149, double* %1155, align 8
  br label %1156

; <label>:1156                                    ; preds = %1143
  %1157 = load i32* %m, align 4
  %1158 = add nsw i32 %1157, 1
  store i32 %1158, i32* %m, align 4
  br label %1140

; <label>:1159                                    ; preds = %1140
  %1160 = load i32* %j, align 4
  %1161 = sext i32 %1160 to i64
  %1162 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1161
  %1163 = getelementptr inbounds [5 x double]* %1162, i32 0, i64 2
  %1164 = load double* %1163, align 8
  %1165 = load i32* %j, align 4
  %1166 = sext i32 %1165 to i64
  %1167 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1166
  %1168 = getelementptr inbounds [5 x double]* %1167, i32 0, i64 2
  %1169 = load double* %1168, align 8
  %1170 = fmul double %1164, %1169
  %1171 = load i32* %j, align 4
  %1172 = sext i32 %1171 to i64
  %1173 = getelementptr inbounds [13 x double]* @cuf, i32 0, i64 %1172
  store double %1170, double* %1173, align 8
  %1174 = load i32* %j, align 4
  %1175 = sext i32 %1174 to i64
  %1176 = getelementptr inbounds [13 x double]* @cuf, i32 0, i64 %1175
  %1177 = load double* %1176, align 8
  %1178 = load i32* %j, align 4
  %1179 = sext i32 %1178 to i64
  %1180 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1179
  %1181 = getelementptr inbounds [5 x double]* %1180, i32 0, i64 1
  %1182 = load double* %1181, align 8
  %1183 = load i32* %j, align 4
  %1184 = sext i32 %1183 to i64
  %1185 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1184
  %1186 = getelementptr inbounds [5 x double]* %1185, i32 0, i64 1
  %1187 = load double* %1186, align 8
  %1188 = fmul double %1182, %1187
  %1189 = fadd double %1177, %1188
  %1190 = load i32* %j, align 4
  %1191 = sext i32 %1190 to i64
  %1192 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1191
  %1193 = getelementptr inbounds [5 x double]* %1192, i32 0, i64 3
  %1194 = load double* %1193, align 8
  %1195 = load i32* %j, align 4
  %1196 = sext i32 %1195 to i64
  %1197 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1196
  %1198 = getelementptr inbounds [5 x double]* %1197, i32 0, i64 3
  %1199 = load double* %1198, align 8
  %1200 = fmul double %1194, %1199
  %1201 = fadd double %1189, %1200
  %1202 = load i32* %j, align 4
  %1203 = sext i32 %1202 to i64
  %1204 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1203
  %1205 = getelementptr inbounds [5 x double]* %1204, i32 0, i64 0
  store double %1201, double* %1205, align 8
  %1206 = load i32* %j, align 4
  %1207 = sext i32 %1206 to i64
  %1208 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1207
  %1209 = getelementptr inbounds [5 x double]* %1208, i32 0, i64 1
  %1210 = load double* %1209, align 8
  %1211 = load i32* %j, align 4
  %1212 = sext i32 %1211 to i64
  %1213 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1212
  %1214 = getelementptr inbounds [5 x double]* %1213, i32 0, i64 1
  %1215 = load double* %1214, align 8
  %1216 = fmul double %1210, %1215
  %1217 = load i32* %j, align 4
  %1218 = sext i32 %1217 to i64
  %1219 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1218
  %1220 = getelementptr inbounds [5 x double]* %1219, i32 0, i64 2
  %1221 = load double* %1220, align 8
  %1222 = load i32* %j, align 4
  %1223 = sext i32 %1222 to i64
  %1224 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1223
  %1225 = getelementptr inbounds [5 x double]* %1224, i32 0, i64 2
  %1226 = load double* %1225, align 8
  %1227 = fmul double %1221, %1226
  %1228 = fadd double %1216, %1227
  %1229 = load i32* %j, align 4
  %1230 = sext i32 %1229 to i64
  %1231 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1230
  %1232 = getelementptr inbounds [5 x double]* %1231, i32 0, i64 3
  %1233 = load double* %1232, align 8
  %1234 = load i32* %j, align 4
  %1235 = sext i32 %1234 to i64
  %1236 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1235
  %1237 = getelementptr inbounds [5 x double]* %1236, i32 0, i64 3
  %1238 = load double* %1237, align 8
  %1239 = fmul double %1233, %1238
  %1240 = fadd double %1228, %1239
  %1241 = fmul double 5.000000e-01, %1240
  %1242 = load i32* %j, align 4
  %1243 = sext i32 %1242 to i64
  %1244 = getelementptr inbounds [13 x double]* @q, i32 0, i64 %1243
  store double %1241, double* %1244, align 8
  br label %1245

; <label>:1245                                    ; preds = %1159
  %1246 = load i32* %j, align 4
  %1247 = add nsw i32 %1246, 1
  store i32 %1247, i32* %j, align 4
  br label %1105

; <label>:1248                                    ; preds = %1105
  store i32 1, i32* %j, align 4
  br label %1249

; <label>:1249                                    ; preds = %1755, %1248
  %1250 = load i32* %j, align 4
  %1251 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %1252 = sub nsw i32 %1251, 2
  %1253 = icmp sle i32 %1250, %1252
  br i1 %1253, label %1254, label %1758

; <label>:1254                                    ; preds = %1249
  %1255 = load i32* %j, align 4
  %1256 = sub nsw i32 %1255, 1
  store i32 %1256, i32* %jm1, align 4
  %1257 = load i32* %j, align 4
  %1258 = add nsw i32 %1257, 1
  store i32 %1258, i32* %jp1, align 4
  %1259 = load i32* %i, align 4
  %1260 = sext i32 %1259 to i64
  %1261 = load i32* %j, align 4
  %1262 = sext i32 %1261 to i64
  %1263 = load i32* %k, align 4
  %1264 = sext i32 %1263 to i64
  %1265 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %1264
  %1266 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1265, i32 0, i64 %1262
  %1267 = getelementptr inbounds [13 x [5 x double]]* %1266, i32 0, i64 %1260
  %1268 = getelementptr inbounds [5 x double]* %1267, i32 0, i64 0
  %1269 = load double* %1268, align 8
  %1270 = load double* @ty2, align 8
  %1271 = load i32* %jp1, align 4
  %1272 = sext i32 %1271 to i64
  %1273 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1272
  %1274 = getelementptr inbounds [5 x double]* %1273, i32 0, i64 2
  %1275 = load double* %1274, align 8
  %1276 = load i32* %jm1, align 4
  %1277 = sext i32 %1276 to i64
  %1278 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1277
  %1279 = getelementptr inbounds [5 x double]* %1278, i32 0, i64 2
  %1280 = load double* %1279, align 8
  %1281 = fsub double %1275, %1280
  %1282 = fmul double %1270, %1281
  %1283 = fsub double %1269, %1282
  %1284 = load double* @dy1ty1, align 8
  %1285 = load i32* %jp1, align 4
  %1286 = sext i32 %1285 to i64
  %1287 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1286
  %1288 = getelementptr inbounds [5 x double]* %1287, i32 0, i64 0
  %1289 = load double* %1288, align 8
  %1290 = load i32* %j, align 4
  %1291 = sext i32 %1290 to i64
  %1292 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1291
  %1293 = getelementptr inbounds [5 x double]* %1292, i32 0, i64 0
  %1294 = load double* %1293, align 8
  %1295 = fmul double 2.000000e+00, %1294
  %1296 = fsub double %1289, %1295
  %1297 = load i32* %jm1, align 4
  %1298 = sext i32 %1297 to i64
  %1299 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1298
  %1300 = getelementptr inbounds [5 x double]* %1299, i32 0, i64 0
  %1301 = load double* %1300, align 8
  %1302 = fadd double %1296, %1301
  %1303 = fmul double %1284, %1302
  %1304 = fadd double %1283, %1303
  %1305 = load i32* %i, align 4
  %1306 = sext i32 %1305 to i64
  %1307 = load i32* %j, align 4
  %1308 = sext i32 %1307 to i64
  %1309 = load i32* %k, align 4
  %1310 = sext i32 %1309 to i64
  %1311 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %1310
  %1312 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1311, i32 0, i64 %1308
  %1313 = getelementptr inbounds [13 x [5 x double]]* %1312, i32 0, i64 %1306
  %1314 = getelementptr inbounds [5 x double]* %1313, i32 0, i64 0
  store double %1304, double* %1314, align 8
  %1315 = load i32* %i, align 4
  %1316 = sext i32 %1315 to i64
  %1317 = load i32* %j, align 4
  %1318 = sext i32 %1317 to i64
  %1319 = load i32* %k, align 4
  %1320 = sext i32 %1319 to i64
  %1321 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %1320
  %1322 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1321, i32 0, i64 %1318
  %1323 = getelementptr inbounds [13 x [5 x double]]* %1322, i32 0, i64 %1316
  %1324 = getelementptr inbounds [5 x double]* %1323, i32 0, i64 1
  %1325 = load double* %1324, align 8
  %1326 = load double* @ty2, align 8
  %1327 = load i32* %jp1, align 4
  %1328 = sext i32 %1327 to i64
  %1329 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1328
  %1330 = getelementptr inbounds [5 x double]* %1329, i32 0, i64 1
  %1331 = load double* %1330, align 8
  %1332 = load i32* %jp1, align 4
  %1333 = sext i32 %1332 to i64
  %1334 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1333
  %1335 = getelementptr inbounds [5 x double]* %1334, i32 0, i64 2
  %1336 = load double* %1335, align 8
  %1337 = fmul double %1331, %1336
  %1338 = load i32* %jm1, align 4
  %1339 = sext i32 %1338 to i64
  %1340 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1339
  %1341 = getelementptr inbounds [5 x double]* %1340, i32 0, i64 1
  %1342 = load double* %1341, align 8
  %1343 = load i32* %jm1, align 4
  %1344 = sext i32 %1343 to i64
  %1345 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1344
  %1346 = getelementptr inbounds [5 x double]* %1345, i32 0, i64 2
  %1347 = load double* %1346, align 8
  %1348 = fmul double %1342, %1347
  %1349 = fsub double %1337, %1348
  %1350 = fmul double %1326, %1349
  %1351 = fsub double %1325, %1350
  %1352 = load double* @yycon2, align 8
  %1353 = load i32* %jp1, align 4
  %1354 = sext i32 %1353 to i64
  %1355 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1354
  %1356 = getelementptr inbounds [5 x double]* %1355, i32 0, i64 1
  %1357 = load double* %1356, align 8
  %1358 = load i32* %j, align 4
  %1359 = sext i32 %1358 to i64
  %1360 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1359
  %1361 = getelementptr inbounds [5 x double]* %1360, i32 0, i64 1
  %1362 = load double* %1361, align 8
  %1363 = fmul double 2.000000e+00, %1362
  %1364 = fsub double %1357, %1363
  %1365 = load i32* %jm1, align 4
  %1366 = sext i32 %1365 to i64
  %1367 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1366
  %1368 = getelementptr inbounds [5 x double]* %1367, i32 0, i64 1
  %1369 = load double* %1368, align 8
  %1370 = fadd double %1364, %1369
  %1371 = fmul double %1352, %1370
  %1372 = fadd double %1351, %1371
  %1373 = load double* @dy2ty1, align 8
  %1374 = load i32* %jp1, align 4
  %1375 = sext i32 %1374 to i64
  %1376 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1375
  %1377 = getelementptr inbounds [5 x double]* %1376, i32 0, i64 1
  %1378 = load double* %1377, align 8
  %1379 = load i32* %j, align 4
  %1380 = sext i32 %1379 to i64
  %1381 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1380
  %1382 = getelementptr inbounds [5 x double]* %1381, i32 0, i64 1
  %1383 = load double* %1382, align 8
  %1384 = fmul double 2.000000e+00, %1383
  %1385 = fsub double %1378, %1384
  %1386 = load i32* %jm1, align 4
  %1387 = sext i32 %1386 to i64
  %1388 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1387
  %1389 = getelementptr inbounds [5 x double]* %1388, i32 0, i64 1
  %1390 = load double* %1389, align 8
  %1391 = fadd double %1385, %1390
  %1392 = fmul double %1373, %1391
  %1393 = fadd double %1372, %1392
  %1394 = load i32* %i, align 4
  %1395 = sext i32 %1394 to i64
  %1396 = load i32* %j, align 4
  %1397 = sext i32 %1396 to i64
  %1398 = load i32* %k, align 4
  %1399 = sext i32 %1398 to i64
  %1400 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %1399
  %1401 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1400, i32 0, i64 %1397
  %1402 = getelementptr inbounds [13 x [5 x double]]* %1401, i32 0, i64 %1395
  %1403 = getelementptr inbounds [5 x double]* %1402, i32 0, i64 1
  store double %1393, double* %1403, align 8
  %1404 = load i32* %i, align 4
  %1405 = sext i32 %1404 to i64
  %1406 = load i32* %j, align 4
  %1407 = sext i32 %1406 to i64
  %1408 = load i32* %k, align 4
  %1409 = sext i32 %1408 to i64
  %1410 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %1409
  %1411 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1410, i32 0, i64 %1407
  %1412 = getelementptr inbounds [13 x [5 x double]]* %1411, i32 0, i64 %1405
  %1413 = getelementptr inbounds [5 x double]* %1412, i32 0, i64 2
  %1414 = load double* %1413, align 8
  %1415 = load double* @ty2, align 8
  %1416 = load i32* %jp1, align 4
  %1417 = sext i32 %1416 to i64
  %1418 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1417
  %1419 = getelementptr inbounds [5 x double]* %1418, i32 0, i64 2
  %1420 = load double* %1419, align 8
  %1421 = load i32* %jp1, align 4
  %1422 = sext i32 %1421 to i64
  %1423 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1422
  %1424 = getelementptr inbounds [5 x double]* %1423, i32 0, i64 2
  %1425 = load double* %1424, align 8
  %1426 = fmul double %1420, %1425
  %1427 = load double* @c2, align 8
  %1428 = load i32* %jp1, align 4
  %1429 = sext i32 %1428 to i64
  %1430 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1429
  %1431 = getelementptr inbounds [5 x double]* %1430, i32 0, i64 4
  %1432 = load double* %1431, align 8
  %1433 = load i32* %jp1, align 4
  %1434 = sext i32 %1433 to i64
  %1435 = getelementptr inbounds [13 x double]* @q, i32 0, i64 %1434
  %1436 = load double* %1435, align 8
  %1437 = fsub double %1432, %1436
  %1438 = fmul double %1427, %1437
  %1439 = fadd double %1426, %1438
  %1440 = load i32* %jm1, align 4
  %1441 = sext i32 %1440 to i64
  %1442 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1441
  %1443 = getelementptr inbounds [5 x double]* %1442, i32 0, i64 2
  %1444 = load double* %1443, align 8
  %1445 = load i32* %jm1, align 4
  %1446 = sext i32 %1445 to i64
  %1447 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1446
  %1448 = getelementptr inbounds [5 x double]* %1447, i32 0, i64 2
  %1449 = load double* %1448, align 8
  %1450 = fmul double %1444, %1449
  %1451 = load double* @c2, align 8
  %1452 = load i32* %jm1, align 4
  %1453 = sext i32 %1452 to i64
  %1454 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1453
  %1455 = getelementptr inbounds [5 x double]* %1454, i32 0, i64 4
  %1456 = load double* %1455, align 8
  %1457 = load i32* %jm1, align 4
  %1458 = sext i32 %1457 to i64
  %1459 = getelementptr inbounds [13 x double]* @q, i32 0, i64 %1458
  %1460 = load double* %1459, align 8
  %1461 = fsub double %1456, %1460
  %1462 = fmul double %1451, %1461
  %1463 = fadd double %1450, %1462
  %1464 = fsub double %1439, %1463
  %1465 = fmul double %1415, %1464
  %1466 = fsub double %1414, %1465
  %1467 = load double* @yycon1, align 8
  %1468 = load i32* %jp1, align 4
  %1469 = sext i32 %1468 to i64
  %1470 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1469
  %1471 = getelementptr inbounds [5 x double]* %1470, i32 0, i64 2
  %1472 = load double* %1471, align 8
  %1473 = load i32* %j, align 4
  %1474 = sext i32 %1473 to i64
  %1475 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1474
  %1476 = getelementptr inbounds [5 x double]* %1475, i32 0, i64 2
  %1477 = load double* %1476, align 8
  %1478 = fmul double 2.000000e+00, %1477
  %1479 = fsub double %1472, %1478
  %1480 = load i32* %jm1, align 4
  %1481 = sext i32 %1480 to i64
  %1482 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1481
  %1483 = getelementptr inbounds [5 x double]* %1482, i32 0, i64 2
  %1484 = load double* %1483, align 8
  %1485 = fadd double %1479, %1484
  %1486 = fmul double %1467, %1485
  %1487 = fadd double %1466, %1486
  %1488 = load double* @dy3ty1, align 8
  %1489 = load i32* %jp1, align 4
  %1490 = sext i32 %1489 to i64
  %1491 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1490
  %1492 = getelementptr inbounds [5 x double]* %1491, i32 0, i64 2
  %1493 = load double* %1492, align 8
  %1494 = load i32* %j, align 4
  %1495 = sext i32 %1494 to i64
  %1496 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1495
  %1497 = getelementptr inbounds [5 x double]* %1496, i32 0, i64 2
  %1498 = load double* %1497, align 8
  %1499 = fmul double 2.000000e+00, %1498
  %1500 = fsub double %1493, %1499
  %1501 = load i32* %jm1, align 4
  %1502 = sext i32 %1501 to i64
  %1503 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1502
  %1504 = getelementptr inbounds [5 x double]* %1503, i32 0, i64 2
  %1505 = load double* %1504, align 8
  %1506 = fadd double %1500, %1505
  %1507 = fmul double %1488, %1506
  %1508 = fadd double %1487, %1507
  %1509 = load i32* %i, align 4
  %1510 = sext i32 %1509 to i64
  %1511 = load i32* %j, align 4
  %1512 = sext i32 %1511 to i64
  %1513 = load i32* %k, align 4
  %1514 = sext i32 %1513 to i64
  %1515 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %1514
  %1516 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1515, i32 0, i64 %1512
  %1517 = getelementptr inbounds [13 x [5 x double]]* %1516, i32 0, i64 %1510
  %1518 = getelementptr inbounds [5 x double]* %1517, i32 0, i64 2
  store double %1508, double* %1518, align 8
  %1519 = load i32* %i, align 4
  %1520 = sext i32 %1519 to i64
  %1521 = load i32* %j, align 4
  %1522 = sext i32 %1521 to i64
  %1523 = load i32* %k, align 4
  %1524 = sext i32 %1523 to i64
  %1525 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %1524
  %1526 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1525, i32 0, i64 %1522
  %1527 = getelementptr inbounds [13 x [5 x double]]* %1526, i32 0, i64 %1520
  %1528 = getelementptr inbounds [5 x double]* %1527, i32 0, i64 3
  %1529 = load double* %1528, align 8
  %1530 = load double* @ty2, align 8
  %1531 = load i32* %jp1, align 4
  %1532 = sext i32 %1531 to i64
  %1533 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1532
  %1534 = getelementptr inbounds [5 x double]* %1533, i32 0, i64 3
  %1535 = load double* %1534, align 8
  %1536 = load i32* %jp1, align 4
  %1537 = sext i32 %1536 to i64
  %1538 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1537
  %1539 = getelementptr inbounds [5 x double]* %1538, i32 0, i64 2
  %1540 = load double* %1539, align 8
  %1541 = fmul double %1535, %1540
  %1542 = load i32* %jm1, align 4
  %1543 = sext i32 %1542 to i64
  %1544 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1543
  %1545 = getelementptr inbounds [5 x double]* %1544, i32 0, i64 3
  %1546 = load double* %1545, align 8
  %1547 = load i32* %jm1, align 4
  %1548 = sext i32 %1547 to i64
  %1549 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1548
  %1550 = getelementptr inbounds [5 x double]* %1549, i32 0, i64 2
  %1551 = load double* %1550, align 8
  %1552 = fmul double %1546, %1551
  %1553 = fsub double %1541, %1552
  %1554 = fmul double %1530, %1553
  %1555 = fsub double %1529, %1554
  %1556 = load double* @yycon2, align 8
  %1557 = load i32* %jp1, align 4
  %1558 = sext i32 %1557 to i64
  %1559 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1558
  %1560 = getelementptr inbounds [5 x double]* %1559, i32 0, i64 3
  %1561 = load double* %1560, align 8
  %1562 = load i32* %j, align 4
  %1563 = sext i32 %1562 to i64
  %1564 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1563
  %1565 = getelementptr inbounds [5 x double]* %1564, i32 0, i64 3
  %1566 = load double* %1565, align 8
  %1567 = fmul double 2.000000e+00, %1566
  %1568 = fsub double %1561, %1567
  %1569 = load i32* %jm1, align 4
  %1570 = sext i32 %1569 to i64
  %1571 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1570
  %1572 = getelementptr inbounds [5 x double]* %1571, i32 0, i64 3
  %1573 = load double* %1572, align 8
  %1574 = fadd double %1568, %1573
  %1575 = fmul double %1556, %1574
  %1576 = fadd double %1555, %1575
  %1577 = load double* @dy4ty1, align 8
  %1578 = load i32* %jp1, align 4
  %1579 = sext i32 %1578 to i64
  %1580 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1579
  %1581 = getelementptr inbounds [5 x double]* %1580, i32 0, i64 3
  %1582 = load double* %1581, align 8
  %1583 = load i32* %j, align 4
  %1584 = sext i32 %1583 to i64
  %1585 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1584
  %1586 = getelementptr inbounds [5 x double]* %1585, i32 0, i64 3
  %1587 = load double* %1586, align 8
  %1588 = fmul double 2.000000e+00, %1587
  %1589 = fsub double %1582, %1588
  %1590 = load i32* %jm1, align 4
  %1591 = sext i32 %1590 to i64
  %1592 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1591
  %1593 = getelementptr inbounds [5 x double]* %1592, i32 0, i64 3
  %1594 = load double* %1593, align 8
  %1595 = fadd double %1589, %1594
  %1596 = fmul double %1577, %1595
  %1597 = fadd double %1576, %1596
  %1598 = load i32* %i, align 4
  %1599 = sext i32 %1598 to i64
  %1600 = load i32* %j, align 4
  %1601 = sext i32 %1600 to i64
  %1602 = load i32* %k, align 4
  %1603 = sext i32 %1602 to i64
  %1604 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %1603
  %1605 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1604, i32 0, i64 %1601
  %1606 = getelementptr inbounds [13 x [5 x double]]* %1605, i32 0, i64 %1599
  %1607 = getelementptr inbounds [5 x double]* %1606, i32 0, i64 3
  store double %1597, double* %1607, align 8
  %1608 = load i32* %i, align 4
  %1609 = sext i32 %1608 to i64
  %1610 = load i32* %j, align 4
  %1611 = sext i32 %1610 to i64
  %1612 = load i32* %k, align 4
  %1613 = sext i32 %1612 to i64
  %1614 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %1613
  %1615 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1614, i32 0, i64 %1611
  %1616 = getelementptr inbounds [13 x [5 x double]]* %1615, i32 0, i64 %1609
  %1617 = getelementptr inbounds [5 x double]* %1616, i32 0, i64 4
  %1618 = load double* %1617, align 8
  %1619 = load double* @ty2, align 8
  %1620 = load i32* %jp1, align 4
  %1621 = sext i32 %1620 to i64
  %1622 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1621
  %1623 = getelementptr inbounds [5 x double]* %1622, i32 0, i64 2
  %1624 = load double* %1623, align 8
  %1625 = load double* @c1, align 8
  %1626 = load i32* %jp1, align 4
  %1627 = sext i32 %1626 to i64
  %1628 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1627
  %1629 = getelementptr inbounds [5 x double]* %1628, i32 0, i64 4
  %1630 = load double* %1629, align 8
  %1631 = fmul double %1625, %1630
  %1632 = load double* @c2, align 8
  %1633 = load i32* %jp1, align 4
  %1634 = sext i32 %1633 to i64
  %1635 = getelementptr inbounds [13 x double]* @q, i32 0, i64 %1634
  %1636 = load double* %1635, align 8
  %1637 = fmul double %1632, %1636
  %1638 = fsub double %1631, %1637
  %1639 = fmul double %1624, %1638
  %1640 = load i32* %jm1, align 4
  %1641 = sext i32 %1640 to i64
  %1642 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1641
  %1643 = getelementptr inbounds [5 x double]* %1642, i32 0, i64 2
  %1644 = load double* %1643, align 8
  %1645 = load double* @c1, align 8
  %1646 = load i32* %jm1, align 4
  %1647 = sext i32 %1646 to i64
  %1648 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1647
  %1649 = getelementptr inbounds [5 x double]* %1648, i32 0, i64 4
  %1650 = load double* %1649, align 8
  %1651 = fmul double %1645, %1650
  %1652 = load double* @c2, align 8
  %1653 = load i32* %jm1, align 4
  %1654 = sext i32 %1653 to i64
  %1655 = getelementptr inbounds [13 x double]* @q, i32 0, i64 %1654
  %1656 = load double* %1655, align 8
  %1657 = fmul double %1652, %1656
  %1658 = fsub double %1651, %1657
  %1659 = fmul double %1644, %1658
  %1660 = fsub double %1639, %1659
  %1661 = fmul double %1619, %1660
  %1662 = fsub double %1618, %1661
  %1663 = load double* @yycon3, align 8
  %1664 = fmul double 5.000000e-01, %1663
  %1665 = load i32* %jp1, align 4
  %1666 = sext i32 %1665 to i64
  %1667 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1666
  %1668 = getelementptr inbounds [5 x double]* %1667, i32 0, i64 0
  %1669 = load double* %1668, align 8
  %1670 = load i32* %j, align 4
  %1671 = sext i32 %1670 to i64
  %1672 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1671
  %1673 = getelementptr inbounds [5 x double]* %1672, i32 0, i64 0
  %1674 = load double* %1673, align 8
  %1675 = fmul double 2.000000e+00, %1674
  %1676 = fsub double %1669, %1675
  %1677 = load i32* %jm1, align 4
  %1678 = sext i32 %1677 to i64
  %1679 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1678
  %1680 = getelementptr inbounds [5 x double]* %1679, i32 0, i64 0
  %1681 = load double* %1680, align 8
  %1682 = fadd double %1676, %1681
  %1683 = fmul double %1664, %1682
  %1684 = fadd double %1662, %1683
  %1685 = load double* @yycon4, align 8
  %1686 = load i32* %jp1, align 4
  %1687 = sext i32 %1686 to i64
  %1688 = getelementptr inbounds [13 x double]* @cuf, i32 0, i64 %1687
  %1689 = load double* %1688, align 8
  %1690 = load i32* %j, align 4
  %1691 = sext i32 %1690 to i64
  %1692 = getelementptr inbounds [13 x double]* @cuf, i32 0, i64 %1691
  %1693 = load double* %1692, align 8
  %1694 = fmul double 2.000000e+00, %1693
  %1695 = fsub double %1689, %1694
  %1696 = load i32* %jm1, align 4
  %1697 = sext i32 %1696 to i64
  %1698 = getelementptr inbounds [13 x double]* @cuf, i32 0, i64 %1697
  %1699 = load double* %1698, align 8
  %1700 = fadd double %1695, %1699
  %1701 = fmul double %1685, %1700
  %1702 = fadd double %1684, %1701
  %1703 = load double* @yycon5, align 8
  %1704 = load i32* %jp1, align 4
  %1705 = sext i32 %1704 to i64
  %1706 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1705
  %1707 = getelementptr inbounds [5 x double]* %1706, i32 0, i64 4
  %1708 = load double* %1707, align 8
  %1709 = load i32* %j, align 4
  %1710 = sext i32 %1709 to i64
  %1711 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1710
  %1712 = getelementptr inbounds [5 x double]* %1711, i32 0, i64 4
  %1713 = load double* %1712, align 8
  %1714 = fmul double 2.000000e+00, %1713
  %1715 = fsub double %1708, %1714
  %1716 = load i32* %jm1, align 4
  %1717 = sext i32 %1716 to i64
  %1718 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %1717
  %1719 = getelementptr inbounds [5 x double]* %1718, i32 0, i64 4
  %1720 = load double* %1719, align 8
  %1721 = fadd double %1715, %1720
  %1722 = fmul double %1703, %1721
  %1723 = fadd double %1702, %1722
  %1724 = load double* @dy5ty1, align 8
  %1725 = load i32* %jp1, align 4
  %1726 = sext i32 %1725 to i64
  %1727 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1726
  %1728 = getelementptr inbounds [5 x double]* %1727, i32 0, i64 4
  %1729 = load double* %1728, align 8
  %1730 = load i32* %j, align 4
  %1731 = sext i32 %1730 to i64
  %1732 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1731
  %1733 = getelementptr inbounds [5 x double]* %1732, i32 0, i64 4
  %1734 = load double* %1733, align 8
  %1735 = fmul double 2.000000e+00, %1734
  %1736 = fsub double %1729, %1735
  %1737 = load i32* %jm1, align 4
  %1738 = sext i32 %1737 to i64
  %1739 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1738
  %1740 = getelementptr inbounds [5 x double]* %1739, i32 0, i64 4
  %1741 = load double* %1740, align 8
  %1742 = fadd double %1736, %1741
  %1743 = fmul double %1724, %1742
  %1744 = fadd double %1723, %1743
  %1745 = load i32* %i, align 4
  %1746 = sext i32 %1745 to i64
  %1747 = load i32* %j, align 4
  %1748 = sext i32 %1747 to i64
  %1749 = load i32* %k, align 4
  %1750 = sext i32 %1749 to i64
  %1751 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %1750
  %1752 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1751, i32 0, i64 %1748
  %1753 = getelementptr inbounds [13 x [5 x double]]* %1752, i32 0, i64 %1746
  %1754 = getelementptr inbounds [5 x double]* %1753, i32 0, i64 4
  store double %1744, double* %1754, align 8
  br label %1755

; <label>:1755                                    ; preds = %1254
  %1756 = load i32* %j, align 4
  %1757 = add nsw i32 %1756, 1
  store i32 %1757, i32* %j, align 4
  br label %1249

; <label>:1758                                    ; preds = %1249
  store i32 0, i32* %m, align 4
  br label %1759

; <label>:1759                                    ; preds = %1883, %1758
  %1760 = load i32* %m, align 4
  %1761 = icmp slt i32 %1760, 5
  br i1 %1761, label %1762, label %1886

; <label>:1762                                    ; preds = %1759
  store i32 1, i32* %j, align 4
  %1763 = load i32* %m, align 4
  %1764 = sext i32 %1763 to i64
  %1765 = load i32* %i, align 4
  %1766 = sext i32 %1765 to i64
  %1767 = load i32* %j, align 4
  %1768 = sext i32 %1767 to i64
  %1769 = load i32* %k, align 4
  %1770 = sext i32 %1769 to i64
  %1771 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %1770
  %1772 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1771, i32 0, i64 %1768
  %1773 = getelementptr inbounds [13 x [5 x double]]* %1772, i32 0, i64 %1766
  %1774 = getelementptr inbounds [5 x double]* %1773, i32 0, i64 %1764
  %1775 = load double* %1774, align 8
  %1776 = load double* @dssp, align 8
  %1777 = load i32* %m, align 4
  %1778 = sext i32 %1777 to i64
  %1779 = load i32* %j, align 4
  %1780 = sext i32 %1779 to i64
  %1781 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1780
  %1782 = getelementptr inbounds [5 x double]* %1781, i32 0, i64 %1778
  %1783 = load double* %1782, align 8
  %1784 = fmul double 5.000000e+00, %1783
  %1785 = load i32* %m, align 4
  %1786 = sext i32 %1785 to i64
  %1787 = load i32* %j, align 4
  %1788 = add nsw i32 %1787, 1
  %1789 = sext i32 %1788 to i64
  %1790 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1789
  %1791 = getelementptr inbounds [5 x double]* %1790, i32 0, i64 %1786
  %1792 = load double* %1791, align 8
  %1793 = fmul double 4.000000e+00, %1792
  %1794 = fsub double %1784, %1793
  %1795 = load i32* %m, align 4
  %1796 = sext i32 %1795 to i64
  %1797 = load i32* %j, align 4
  %1798 = add nsw i32 %1797, 2
  %1799 = sext i32 %1798 to i64
  %1800 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1799
  %1801 = getelementptr inbounds [5 x double]* %1800, i32 0, i64 %1796
  %1802 = load double* %1801, align 8
  %1803 = fadd double %1794, %1802
  %1804 = fmul double %1776, %1803
  %1805 = fsub double %1775, %1804
  %1806 = load i32* %m, align 4
  %1807 = sext i32 %1806 to i64
  %1808 = load i32* %i, align 4
  %1809 = sext i32 %1808 to i64
  %1810 = load i32* %j, align 4
  %1811 = sext i32 %1810 to i64
  %1812 = load i32* %k, align 4
  %1813 = sext i32 %1812 to i64
  %1814 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %1813
  %1815 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1814, i32 0, i64 %1811
  %1816 = getelementptr inbounds [13 x [5 x double]]* %1815, i32 0, i64 %1809
  %1817 = getelementptr inbounds [5 x double]* %1816, i32 0, i64 %1807
  store double %1805, double* %1817, align 8
  store i32 2, i32* %j, align 4
  %1818 = load i32* %m, align 4
  %1819 = sext i32 %1818 to i64
  %1820 = load i32* %i, align 4
  %1821 = sext i32 %1820 to i64
  %1822 = load i32* %j, align 4
  %1823 = sext i32 %1822 to i64
  %1824 = load i32* %k, align 4
  %1825 = sext i32 %1824 to i64
  %1826 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %1825
  %1827 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1826, i32 0, i64 %1823
  %1828 = getelementptr inbounds [13 x [5 x double]]* %1827, i32 0, i64 %1821
  %1829 = getelementptr inbounds [5 x double]* %1828, i32 0, i64 %1819
  %1830 = load double* %1829, align 8
  %1831 = load double* @dssp, align 8
  %1832 = load i32* %m, align 4
  %1833 = sext i32 %1832 to i64
  %1834 = load i32* %j, align 4
  %1835 = sub nsw i32 %1834, 1
  %1836 = sext i32 %1835 to i64
  %1837 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1836
  %1838 = getelementptr inbounds [5 x double]* %1837, i32 0, i64 %1833
  %1839 = load double* %1838, align 8
  %1840 = fmul double -4.000000e+00, %1839
  %1841 = load i32* %m, align 4
  %1842 = sext i32 %1841 to i64
  %1843 = load i32* %j, align 4
  %1844 = sext i32 %1843 to i64
  %1845 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1844
  %1846 = getelementptr inbounds [5 x double]* %1845, i32 0, i64 %1842
  %1847 = load double* %1846, align 8
  %1848 = fmul double 6.000000e+00, %1847
  %1849 = fadd double %1840, %1848
  %1850 = load i32* %m, align 4
  %1851 = sext i32 %1850 to i64
  %1852 = load i32* %j, align 4
  %1853 = add nsw i32 %1852, 1
  %1854 = sext i32 %1853 to i64
  %1855 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1854
  %1856 = getelementptr inbounds [5 x double]* %1855, i32 0, i64 %1851
  %1857 = load double* %1856, align 8
  %1858 = fmul double 4.000000e+00, %1857
  %1859 = fsub double %1849, %1858
  %1860 = load i32* %m, align 4
  %1861 = sext i32 %1860 to i64
  %1862 = load i32* %j, align 4
  %1863 = add nsw i32 %1862, 2
  %1864 = sext i32 %1863 to i64
  %1865 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1864
  %1866 = getelementptr inbounds [5 x double]* %1865, i32 0, i64 %1861
  %1867 = load double* %1866, align 8
  %1868 = fadd double %1859, %1867
  %1869 = fmul double %1831, %1868
  %1870 = fsub double %1830, %1869
  %1871 = load i32* %m, align 4
  %1872 = sext i32 %1871 to i64
  %1873 = load i32* %i, align 4
  %1874 = sext i32 %1873 to i64
  %1875 = load i32* %j, align 4
  %1876 = sext i32 %1875 to i64
  %1877 = load i32* %k, align 4
  %1878 = sext i32 %1877 to i64
  %1879 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %1878
  %1880 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1879, i32 0, i64 %1876
  %1881 = getelementptr inbounds [13 x [5 x double]]* %1880, i32 0, i64 %1874
  %1882 = getelementptr inbounds [5 x double]* %1881, i32 0, i64 %1872
  store double %1870, double* %1882, align 8
  br label %1883

; <label>:1883                                    ; preds = %1762
  %1884 = load i32* %m, align 4
  %1885 = add nsw i32 %1884, 1
  store i32 %1885, i32* %m, align 4
  br label %1759

; <label>:1886                                    ; preds = %1759
  store i32 3, i32* %j, align 4
  br label %1887

; <label>:1887                                    ; preds = %1975, %1886
  %1888 = load i32* %j, align 4
  %1889 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %1890 = sub nsw i32 %1889, 4
  %1891 = icmp sle i32 %1888, %1890
  br i1 %1891, label %1892, label %1978

; <label>:1892                                    ; preds = %1887
  store i32 0, i32* %m, align 4
  br label %1893

; <label>:1893                                    ; preds = %1971, %1892
  %1894 = load i32* %m, align 4
  %1895 = icmp slt i32 %1894, 5
  br i1 %1895, label %1896, label %1974

; <label>:1896                                    ; preds = %1893
  %1897 = load i32* %m, align 4
  %1898 = sext i32 %1897 to i64
  %1899 = load i32* %i, align 4
  %1900 = sext i32 %1899 to i64
  %1901 = load i32* %j, align 4
  %1902 = sext i32 %1901 to i64
  %1903 = load i32* %k, align 4
  %1904 = sext i32 %1903 to i64
  %1905 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %1904
  %1906 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1905, i32 0, i64 %1902
  %1907 = getelementptr inbounds [13 x [5 x double]]* %1906, i32 0, i64 %1900
  %1908 = getelementptr inbounds [5 x double]* %1907, i32 0, i64 %1898
  %1909 = load double* %1908, align 8
  %1910 = load double* @dssp, align 8
  %1911 = load i32* %m, align 4
  %1912 = sext i32 %1911 to i64
  %1913 = load i32* %j, align 4
  %1914 = sub nsw i32 %1913, 2
  %1915 = sext i32 %1914 to i64
  %1916 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1915
  %1917 = getelementptr inbounds [5 x double]* %1916, i32 0, i64 %1912
  %1918 = load double* %1917, align 8
  %1919 = load i32* %m, align 4
  %1920 = sext i32 %1919 to i64
  %1921 = load i32* %j, align 4
  %1922 = sub nsw i32 %1921, 1
  %1923 = sext i32 %1922 to i64
  %1924 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1923
  %1925 = getelementptr inbounds [5 x double]* %1924, i32 0, i64 %1920
  %1926 = load double* %1925, align 8
  %1927 = fmul double 4.000000e+00, %1926
  %1928 = fsub double %1918, %1927
  %1929 = load i32* %m, align 4
  %1930 = sext i32 %1929 to i64
  %1931 = load i32* %j, align 4
  %1932 = sext i32 %1931 to i64
  %1933 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1932
  %1934 = getelementptr inbounds [5 x double]* %1933, i32 0, i64 %1930
  %1935 = load double* %1934, align 8
  %1936 = fmul double 6.000000e+00, %1935
  %1937 = fadd double %1928, %1936
  %1938 = load i32* %m, align 4
  %1939 = sext i32 %1938 to i64
  %1940 = load i32* %j, align 4
  %1941 = add nsw i32 %1940, 1
  %1942 = sext i32 %1941 to i64
  %1943 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1942
  %1944 = getelementptr inbounds [5 x double]* %1943, i32 0, i64 %1939
  %1945 = load double* %1944, align 8
  %1946 = fmul double 4.000000e+00, %1945
  %1947 = fsub double %1937, %1946
  %1948 = load i32* %m, align 4
  %1949 = sext i32 %1948 to i64
  %1950 = load i32* %j, align 4
  %1951 = add nsw i32 %1950, 2
  %1952 = sext i32 %1951 to i64
  %1953 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %1952
  %1954 = getelementptr inbounds [5 x double]* %1953, i32 0, i64 %1949
  %1955 = load double* %1954, align 8
  %1956 = fadd double %1947, %1955
  %1957 = fmul double %1910, %1956
  %1958 = fsub double %1909, %1957
  %1959 = load i32* %m, align 4
  %1960 = sext i32 %1959 to i64
  %1961 = load i32* %i, align 4
  %1962 = sext i32 %1961 to i64
  %1963 = load i32* %j, align 4
  %1964 = sext i32 %1963 to i64
  %1965 = load i32* %k, align 4
  %1966 = sext i32 %1965 to i64
  %1967 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %1966
  %1968 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1967, i32 0, i64 %1964
  %1969 = getelementptr inbounds [13 x [5 x double]]* %1968, i32 0, i64 %1962
  %1970 = getelementptr inbounds [5 x double]* %1969, i32 0, i64 %1960
  store double %1958, double* %1970, align 8
  br label %1971

; <label>:1971                                    ; preds = %1896
  %1972 = load i32* %m, align 4
  %1973 = add nsw i32 %1972, 1
  store i32 %1973, i32* %m, align 4
  br label %1893

; <label>:1974                                    ; preds = %1893
  br label %1975

; <label>:1975                                    ; preds = %1974
  %1976 = load i32* %j, align 4
  %1977 = add nsw i32 %1976, 1
  store i32 %1977, i32* %j, align 4
  br label %1887

; <label>:1978                                    ; preds = %1887
  store i32 0, i32* %m, align 4
  br label %1979

; <label>:1979                                    ; preds = %2107, %1978
  %1980 = load i32* %m, align 4
  %1981 = icmp slt i32 %1980, 5
  br i1 %1981, label %1982, label %2110

; <label>:1982                                    ; preds = %1979
  %1983 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %1984 = sub nsw i32 %1983, 3
  store i32 %1984, i32* %j, align 4
  %1985 = load i32* %m, align 4
  %1986 = sext i32 %1985 to i64
  %1987 = load i32* %i, align 4
  %1988 = sext i32 %1987 to i64
  %1989 = load i32* %j, align 4
  %1990 = sext i32 %1989 to i64
  %1991 = load i32* %k, align 4
  %1992 = sext i32 %1991 to i64
  %1993 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %1992
  %1994 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1993, i32 0, i64 %1990
  %1995 = getelementptr inbounds [13 x [5 x double]]* %1994, i32 0, i64 %1988
  %1996 = getelementptr inbounds [5 x double]* %1995, i32 0, i64 %1986
  %1997 = load double* %1996, align 8
  %1998 = load double* @dssp, align 8
  %1999 = load i32* %m, align 4
  %2000 = sext i32 %1999 to i64
  %2001 = load i32* %j, align 4
  %2002 = sub nsw i32 %2001, 2
  %2003 = sext i32 %2002 to i64
  %2004 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2003
  %2005 = getelementptr inbounds [5 x double]* %2004, i32 0, i64 %2000
  %2006 = load double* %2005, align 8
  %2007 = load i32* %m, align 4
  %2008 = sext i32 %2007 to i64
  %2009 = load i32* %j, align 4
  %2010 = sub nsw i32 %2009, 1
  %2011 = sext i32 %2010 to i64
  %2012 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2011
  %2013 = getelementptr inbounds [5 x double]* %2012, i32 0, i64 %2008
  %2014 = load double* %2013, align 8
  %2015 = fmul double 4.000000e+00, %2014
  %2016 = fsub double %2006, %2015
  %2017 = load i32* %m, align 4
  %2018 = sext i32 %2017 to i64
  %2019 = load i32* %j, align 4
  %2020 = sext i32 %2019 to i64
  %2021 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2020
  %2022 = getelementptr inbounds [5 x double]* %2021, i32 0, i64 %2018
  %2023 = load double* %2022, align 8
  %2024 = fmul double 6.000000e+00, %2023
  %2025 = fadd double %2016, %2024
  %2026 = load i32* %m, align 4
  %2027 = sext i32 %2026 to i64
  %2028 = load i32* %j, align 4
  %2029 = add nsw i32 %2028, 1
  %2030 = sext i32 %2029 to i64
  %2031 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2030
  %2032 = getelementptr inbounds [5 x double]* %2031, i32 0, i64 %2027
  %2033 = load double* %2032, align 8
  %2034 = fmul double 4.000000e+00, %2033
  %2035 = fsub double %2025, %2034
  %2036 = fmul double %1998, %2035
  %2037 = fsub double %1997, %2036
  %2038 = load i32* %m, align 4
  %2039 = sext i32 %2038 to i64
  %2040 = load i32* %i, align 4
  %2041 = sext i32 %2040 to i64
  %2042 = load i32* %j, align 4
  %2043 = sext i32 %2042 to i64
  %2044 = load i32* %k, align 4
  %2045 = sext i32 %2044 to i64
  %2046 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %2045
  %2047 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2046, i32 0, i64 %2043
  %2048 = getelementptr inbounds [13 x [5 x double]]* %2047, i32 0, i64 %2041
  %2049 = getelementptr inbounds [5 x double]* %2048, i32 0, i64 %2039
  store double %2037, double* %2049, align 8
  %2050 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %2051 = sub nsw i32 %2050, 2
  store i32 %2051, i32* %j, align 4
  %2052 = load i32* %m, align 4
  %2053 = sext i32 %2052 to i64
  %2054 = load i32* %i, align 4
  %2055 = sext i32 %2054 to i64
  %2056 = load i32* %j, align 4
  %2057 = sext i32 %2056 to i64
  %2058 = load i32* %k, align 4
  %2059 = sext i32 %2058 to i64
  %2060 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %2059
  %2061 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2060, i32 0, i64 %2057
  %2062 = getelementptr inbounds [13 x [5 x double]]* %2061, i32 0, i64 %2055
  %2063 = getelementptr inbounds [5 x double]* %2062, i32 0, i64 %2053
  %2064 = load double* %2063, align 8
  %2065 = load double* @dssp, align 8
  %2066 = load i32* %m, align 4
  %2067 = sext i32 %2066 to i64
  %2068 = load i32* %j, align 4
  %2069 = sub nsw i32 %2068, 2
  %2070 = sext i32 %2069 to i64
  %2071 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2070
  %2072 = getelementptr inbounds [5 x double]* %2071, i32 0, i64 %2067
  %2073 = load double* %2072, align 8
  %2074 = load i32* %m, align 4
  %2075 = sext i32 %2074 to i64
  %2076 = load i32* %j, align 4
  %2077 = sub nsw i32 %2076, 1
  %2078 = sext i32 %2077 to i64
  %2079 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2078
  %2080 = getelementptr inbounds [5 x double]* %2079, i32 0, i64 %2075
  %2081 = load double* %2080, align 8
  %2082 = fmul double 4.000000e+00, %2081
  %2083 = fsub double %2073, %2082
  %2084 = load i32* %m, align 4
  %2085 = sext i32 %2084 to i64
  %2086 = load i32* %j, align 4
  %2087 = sext i32 %2086 to i64
  %2088 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2087
  %2089 = getelementptr inbounds [5 x double]* %2088, i32 0, i64 %2085
  %2090 = load double* %2089, align 8
  %2091 = fmul double 5.000000e+00, %2090
  %2092 = fadd double %2083, %2091
  %2093 = fmul double %2065, %2092
  %2094 = fsub double %2064, %2093
  %2095 = load i32* %m, align 4
  %2096 = sext i32 %2095 to i64
  %2097 = load i32* %i, align 4
  %2098 = sext i32 %2097 to i64
  %2099 = load i32* %j, align 4
  %2100 = sext i32 %2099 to i64
  %2101 = load i32* %k, align 4
  %2102 = sext i32 %2101 to i64
  %2103 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %2102
  %2104 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2103, i32 0, i64 %2100
  %2105 = getelementptr inbounds [13 x [5 x double]]* %2104, i32 0, i64 %2098
  %2106 = getelementptr inbounds [5 x double]* %2105, i32 0, i64 %2096
  store double %2094, double* %2106, align 8
  br label %2107

; <label>:2107                                    ; preds = %1982
  %2108 = load i32* %m, align 4
  %2109 = add nsw i32 %2108, 1
  store i32 %2109, i32* %m, align 4
  br label %1979

; <label>:2110                                    ; preds = %1979
  br label %2111

; <label>:2111                                    ; preds = %2110
  %2112 = load i32* %i, align 4
  %2113 = add nsw i32 %2112, 1
  store i32 %2113, i32* %i, align 4
  br label %1095

; <label>:2114                                    ; preds = %1095
  br label %2115

; <label>:2115                                    ; preds = %2114
  %2116 = load i32* %k, align 4
  %2117 = add nsw i32 %2116, 1
  store i32 %2117, i32* %k, align 4
  br label %1085

; <label>:2118                                    ; preds = %1085
  store i32 1, i32* %j, align 4
  br label %2119

; <label>:2119                                    ; preds = %3149, %2118
  %2120 = load i32* %j, align 4
  %2121 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %2122 = sub nsw i32 %2121, 2
  %2123 = icmp sle i32 %2120, %2122
  br i1 %2123, label %2124, label %3152

; <label>:2124                                    ; preds = %2119
  %2125 = load i32* %j, align 4
  %2126 = sitofp i32 %2125 to double
  %2127 = load double* @dnym1, align 8
  %2128 = fmul double %2126, %2127
  store double %2128, double* %eta, align 8
  store i32 1, i32* %i, align 4
  br label %2129

; <label>:2129                                    ; preds = %3145, %2124
  %2130 = load i32* %i, align 4
  %2131 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %2132 = sub nsw i32 %2131, 2
  %2133 = icmp sle i32 %2130, %2132
  br i1 %2133, label %2134, label %3148

; <label>:2134                                    ; preds = %2129
  %2135 = load i32* %i, align 4
  %2136 = sitofp i32 %2135 to double
  %2137 = load double* @dnxm1, align 8
  %2138 = fmul double %2136, %2137
  store double %2138, double* %xi, align 8
  store i32 0, i32* %k, align 4
  br label %2139

; <label>:2139                                    ; preds = %2279, %2134
  %2140 = load i32* %k, align 4
  %2141 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %2142 = sub nsw i32 %2141, 1
  %2143 = icmp sle i32 %2140, %2142
  br i1 %2143, label %2144, label %2282

; <label>:2144                                    ; preds = %2139
  %2145 = load i32* %k, align 4
  %2146 = sitofp i32 %2145 to double
  %2147 = load double* @dnzm1, align 8
  %2148 = fmul double %2146, %2147
  store double %2148, double* %zeta, align 8
  %2149 = load double* %xi, align 8
  %2150 = load double* %eta, align 8
  %2151 = load double* %zeta, align 8
  %2152 = getelementptr inbounds [5 x double]* %dtemp, i32 0, i32 0
  call void @exact_solution(double %2149, double %2150, double %2151, double* %2152)
  store i32 0, i32* %m, align 4
  br label %2153

; <label>:2153                                    ; preds = %2167, %2144
  %2154 = load i32* %m, align 4
  %2155 = icmp slt i32 %2154, 5
  br i1 %2155, label %2156, label %2170

; <label>:2156                                    ; preds = %2153
  %2157 = load i32* %m, align 4
  %2158 = sext i32 %2157 to i64
  %2159 = getelementptr inbounds [5 x double]* %dtemp, i32 0, i64 %2158
  %2160 = load double* %2159, align 8
  %2161 = load i32* %m, align 4
  %2162 = sext i32 %2161 to i64
  %2163 = load i32* %k, align 4
  %2164 = sext i32 %2163 to i64
  %2165 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2164
  %2166 = getelementptr inbounds [5 x double]* %2165, i32 0, i64 %2162
  store double %2160, double* %2166, align 8
  br label %2167

; <label>:2167                                    ; preds = %2156
  %2168 = load i32* %m, align 4
  %2169 = add nsw i32 %2168, 1
  store i32 %2169, i32* %m, align 4
  br label %2153

; <label>:2170                                    ; preds = %2153
  %2171 = getelementptr inbounds [5 x double]* %dtemp, i32 0, i64 0
  %2172 = load double* %2171, align 8
  %2173 = fdiv double 1.000000e+00, %2172
  store double %2173, double* %dtpp, align 8
  store i32 1, i32* %m, align 4
  br label %2174

; <label>:2174                                    ; preds = %2190, %2170
  %2175 = load i32* %m, align 4
  %2176 = icmp slt i32 %2175, 5
  br i1 %2176, label %2177, label %2193

; <label>:2177                                    ; preds = %2174
  %2178 = load double* %dtpp, align 8
  %2179 = load i32* %m, align 4
  %2180 = sext i32 %2179 to i64
  %2181 = getelementptr inbounds [5 x double]* %dtemp, i32 0, i64 %2180
  %2182 = load double* %2181, align 8
  %2183 = fmul double %2178, %2182
  %2184 = load i32* %m, align 4
  %2185 = sext i32 %2184 to i64
  %2186 = load i32* %k, align 4
  %2187 = sext i32 %2186 to i64
  %2188 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2187
  %2189 = getelementptr inbounds [5 x double]* %2188, i32 0, i64 %2185
  store double %2183, double* %2189, align 8
  br label %2190

; <label>:2190                                    ; preds = %2177
  %2191 = load i32* %m, align 4
  %2192 = add nsw i32 %2191, 1
  store i32 %2192, i32* %m, align 4
  br label %2174

; <label>:2193                                    ; preds = %2174
  %2194 = load i32* %k, align 4
  %2195 = sext i32 %2194 to i64
  %2196 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2195
  %2197 = getelementptr inbounds [5 x double]* %2196, i32 0, i64 3
  %2198 = load double* %2197, align 8
  %2199 = load i32* %k, align 4
  %2200 = sext i32 %2199 to i64
  %2201 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2200
  %2202 = getelementptr inbounds [5 x double]* %2201, i32 0, i64 3
  %2203 = load double* %2202, align 8
  %2204 = fmul double %2198, %2203
  %2205 = load i32* %k, align 4
  %2206 = sext i32 %2205 to i64
  %2207 = getelementptr inbounds [13 x double]* @cuf, i32 0, i64 %2206
  store double %2204, double* %2207, align 8
  %2208 = load i32* %k, align 4
  %2209 = sext i32 %2208 to i64
  %2210 = getelementptr inbounds [13 x double]* @cuf, i32 0, i64 %2209
  %2211 = load double* %2210, align 8
  %2212 = load i32* %k, align 4
  %2213 = sext i32 %2212 to i64
  %2214 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2213
  %2215 = getelementptr inbounds [5 x double]* %2214, i32 0, i64 1
  %2216 = load double* %2215, align 8
  %2217 = load i32* %k, align 4
  %2218 = sext i32 %2217 to i64
  %2219 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2218
  %2220 = getelementptr inbounds [5 x double]* %2219, i32 0, i64 1
  %2221 = load double* %2220, align 8
  %2222 = fmul double %2216, %2221
  %2223 = fadd double %2211, %2222
  %2224 = load i32* %k, align 4
  %2225 = sext i32 %2224 to i64
  %2226 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2225
  %2227 = getelementptr inbounds [5 x double]* %2226, i32 0, i64 2
  %2228 = load double* %2227, align 8
  %2229 = load i32* %k, align 4
  %2230 = sext i32 %2229 to i64
  %2231 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2230
  %2232 = getelementptr inbounds [5 x double]* %2231, i32 0, i64 2
  %2233 = load double* %2232, align 8
  %2234 = fmul double %2228, %2233
  %2235 = fadd double %2223, %2234
  %2236 = load i32* %k, align 4
  %2237 = sext i32 %2236 to i64
  %2238 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2237
  %2239 = getelementptr inbounds [5 x double]* %2238, i32 0, i64 0
  store double %2235, double* %2239, align 8
  %2240 = load i32* %k, align 4
  %2241 = sext i32 %2240 to i64
  %2242 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2241
  %2243 = getelementptr inbounds [5 x double]* %2242, i32 0, i64 1
  %2244 = load double* %2243, align 8
  %2245 = load i32* %k, align 4
  %2246 = sext i32 %2245 to i64
  %2247 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2246
  %2248 = getelementptr inbounds [5 x double]* %2247, i32 0, i64 1
  %2249 = load double* %2248, align 8
  %2250 = fmul double %2244, %2249
  %2251 = load i32* %k, align 4
  %2252 = sext i32 %2251 to i64
  %2253 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2252
  %2254 = getelementptr inbounds [5 x double]* %2253, i32 0, i64 2
  %2255 = load double* %2254, align 8
  %2256 = load i32* %k, align 4
  %2257 = sext i32 %2256 to i64
  %2258 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2257
  %2259 = getelementptr inbounds [5 x double]* %2258, i32 0, i64 2
  %2260 = load double* %2259, align 8
  %2261 = fmul double %2255, %2260
  %2262 = fadd double %2250, %2261
  %2263 = load i32* %k, align 4
  %2264 = sext i32 %2263 to i64
  %2265 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2264
  %2266 = getelementptr inbounds [5 x double]* %2265, i32 0, i64 3
  %2267 = load double* %2266, align 8
  %2268 = load i32* %k, align 4
  %2269 = sext i32 %2268 to i64
  %2270 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2269
  %2271 = getelementptr inbounds [5 x double]* %2270, i32 0, i64 3
  %2272 = load double* %2271, align 8
  %2273 = fmul double %2267, %2272
  %2274 = fadd double %2262, %2273
  %2275 = fmul double 5.000000e-01, %2274
  %2276 = load i32* %k, align 4
  %2277 = sext i32 %2276 to i64
  %2278 = getelementptr inbounds [13 x double]* @q, i32 0, i64 %2277
  store double %2275, double* %2278, align 8
  br label %2279

; <label>:2279                                    ; preds = %2193
  %2280 = load i32* %k, align 4
  %2281 = add nsw i32 %2280, 1
  store i32 %2281, i32* %k, align 4
  br label %2139

; <label>:2282                                    ; preds = %2139
  store i32 1, i32* %k, align 4
  br label %2283

; <label>:2283                                    ; preds = %2789, %2282
  %2284 = load i32* %k, align 4
  %2285 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %2286 = sub nsw i32 %2285, 2
  %2287 = icmp sle i32 %2284, %2286
  br i1 %2287, label %2288, label %2792

; <label>:2288                                    ; preds = %2283
  %2289 = load i32* %k, align 4
  %2290 = sub nsw i32 %2289, 1
  store i32 %2290, i32* %km1, align 4
  %2291 = load i32* %k, align 4
  %2292 = add nsw i32 %2291, 1
  store i32 %2292, i32* %kp1, align 4
  %2293 = load i32* %i, align 4
  %2294 = sext i32 %2293 to i64
  %2295 = load i32* %j, align 4
  %2296 = sext i32 %2295 to i64
  %2297 = load i32* %k, align 4
  %2298 = sext i32 %2297 to i64
  %2299 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %2298
  %2300 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2299, i32 0, i64 %2296
  %2301 = getelementptr inbounds [13 x [5 x double]]* %2300, i32 0, i64 %2294
  %2302 = getelementptr inbounds [5 x double]* %2301, i32 0, i64 0
  %2303 = load double* %2302, align 8
  %2304 = load double* @tz2, align 8
  %2305 = load i32* %kp1, align 4
  %2306 = sext i32 %2305 to i64
  %2307 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2306
  %2308 = getelementptr inbounds [5 x double]* %2307, i32 0, i64 3
  %2309 = load double* %2308, align 8
  %2310 = load i32* %km1, align 4
  %2311 = sext i32 %2310 to i64
  %2312 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2311
  %2313 = getelementptr inbounds [5 x double]* %2312, i32 0, i64 3
  %2314 = load double* %2313, align 8
  %2315 = fsub double %2309, %2314
  %2316 = fmul double %2304, %2315
  %2317 = fsub double %2303, %2316
  %2318 = load double* @dz1tz1, align 8
  %2319 = load i32* %kp1, align 4
  %2320 = sext i32 %2319 to i64
  %2321 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2320
  %2322 = getelementptr inbounds [5 x double]* %2321, i32 0, i64 0
  %2323 = load double* %2322, align 8
  %2324 = load i32* %k, align 4
  %2325 = sext i32 %2324 to i64
  %2326 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2325
  %2327 = getelementptr inbounds [5 x double]* %2326, i32 0, i64 0
  %2328 = load double* %2327, align 8
  %2329 = fmul double 2.000000e+00, %2328
  %2330 = fsub double %2323, %2329
  %2331 = load i32* %km1, align 4
  %2332 = sext i32 %2331 to i64
  %2333 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2332
  %2334 = getelementptr inbounds [5 x double]* %2333, i32 0, i64 0
  %2335 = load double* %2334, align 8
  %2336 = fadd double %2330, %2335
  %2337 = fmul double %2318, %2336
  %2338 = fadd double %2317, %2337
  %2339 = load i32* %i, align 4
  %2340 = sext i32 %2339 to i64
  %2341 = load i32* %j, align 4
  %2342 = sext i32 %2341 to i64
  %2343 = load i32* %k, align 4
  %2344 = sext i32 %2343 to i64
  %2345 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %2344
  %2346 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2345, i32 0, i64 %2342
  %2347 = getelementptr inbounds [13 x [5 x double]]* %2346, i32 0, i64 %2340
  %2348 = getelementptr inbounds [5 x double]* %2347, i32 0, i64 0
  store double %2338, double* %2348, align 8
  %2349 = load i32* %i, align 4
  %2350 = sext i32 %2349 to i64
  %2351 = load i32* %j, align 4
  %2352 = sext i32 %2351 to i64
  %2353 = load i32* %k, align 4
  %2354 = sext i32 %2353 to i64
  %2355 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %2354
  %2356 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2355, i32 0, i64 %2352
  %2357 = getelementptr inbounds [13 x [5 x double]]* %2356, i32 0, i64 %2350
  %2358 = getelementptr inbounds [5 x double]* %2357, i32 0, i64 1
  %2359 = load double* %2358, align 8
  %2360 = load double* @tz2, align 8
  %2361 = load i32* %kp1, align 4
  %2362 = sext i32 %2361 to i64
  %2363 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2362
  %2364 = getelementptr inbounds [5 x double]* %2363, i32 0, i64 1
  %2365 = load double* %2364, align 8
  %2366 = load i32* %kp1, align 4
  %2367 = sext i32 %2366 to i64
  %2368 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2367
  %2369 = getelementptr inbounds [5 x double]* %2368, i32 0, i64 3
  %2370 = load double* %2369, align 8
  %2371 = fmul double %2365, %2370
  %2372 = load i32* %km1, align 4
  %2373 = sext i32 %2372 to i64
  %2374 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2373
  %2375 = getelementptr inbounds [5 x double]* %2374, i32 0, i64 1
  %2376 = load double* %2375, align 8
  %2377 = load i32* %km1, align 4
  %2378 = sext i32 %2377 to i64
  %2379 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2378
  %2380 = getelementptr inbounds [5 x double]* %2379, i32 0, i64 3
  %2381 = load double* %2380, align 8
  %2382 = fmul double %2376, %2381
  %2383 = fsub double %2371, %2382
  %2384 = fmul double %2360, %2383
  %2385 = fsub double %2359, %2384
  %2386 = load double* @zzcon2, align 8
  %2387 = load i32* %kp1, align 4
  %2388 = sext i32 %2387 to i64
  %2389 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2388
  %2390 = getelementptr inbounds [5 x double]* %2389, i32 0, i64 1
  %2391 = load double* %2390, align 8
  %2392 = load i32* %k, align 4
  %2393 = sext i32 %2392 to i64
  %2394 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2393
  %2395 = getelementptr inbounds [5 x double]* %2394, i32 0, i64 1
  %2396 = load double* %2395, align 8
  %2397 = fmul double 2.000000e+00, %2396
  %2398 = fsub double %2391, %2397
  %2399 = load i32* %km1, align 4
  %2400 = sext i32 %2399 to i64
  %2401 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2400
  %2402 = getelementptr inbounds [5 x double]* %2401, i32 0, i64 1
  %2403 = load double* %2402, align 8
  %2404 = fadd double %2398, %2403
  %2405 = fmul double %2386, %2404
  %2406 = fadd double %2385, %2405
  %2407 = load double* @dz2tz1, align 8
  %2408 = load i32* %kp1, align 4
  %2409 = sext i32 %2408 to i64
  %2410 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2409
  %2411 = getelementptr inbounds [5 x double]* %2410, i32 0, i64 1
  %2412 = load double* %2411, align 8
  %2413 = load i32* %k, align 4
  %2414 = sext i32 %2413 to i64
  %2415 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2414
  %2416 = getelementptr inbounds [5 x double]* %2415, i32 0, i64 1
  %2417 = load double* %2416, align 8
  %2418 = fmul double 2.000000e+00, %2417
  %2419 = fsub double %2412, %2418
  %2420 = load i32* %km1, align 4
  %2421 = sext i32 %2420 to i64
  %2422 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2421
  %2423 = getelementptr inbounds [5 x double]* %2422, i32 0, i64 1
  %2424 = load double* %2423, align 8
  %2425 = fadd double %2419, %2424
  %2426 = fmul double %2407, %2425
  %2427 = fadd double %2406, %2426
  %2428 = load i32* %i, align 4
  %2429 = sext i32 %2428 to i64
  %2430 = load i32* %j, align 4
  %2431 = sext i32 %2430 to i64
  %2432 = load i32* %k, align 4
  %2433 = sext i32 %2432 to i64
  %2434 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %2433
  %2435 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2434, i32 0, i64 %2431
  %2436 = getelementptr inbounds [13 x [5 x double]]* %2435, i32 0, i64 %2429
  %2437 = getelementptr inbounds [5 x double]* %2436, i32 0, i64 1
  store double %2427, double* %2437, align 8
  %2438 = load i32* %i, align 4
  %2439 = sext i32 %2438 to i64
  %2440 = load i32* %j, align 4
  %2441 = sext i32 %2440 to i64
  %2442 = load i32* %k, align 4
  %2443 = sext i32 %2442 to i64
  %2444 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %2443
  %2445 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2444, i32 0, i64 %2441
  %2446 = getelementptr inbounds [13 x [5 x double]]* %2445, i32 0, i64 %2439
  %2447 = getelementptr inbounds [5 x double]* %2446, i32 0, i64 2
  %2448 = load double* %2447, align 8
  %2449 = load double* @tz2, align 8
  %2450 = load i32* %kp1, align 4
  %2451 = sext i32 %2450 to i64
  %2452 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2451
  %2453 = getelementptr inbounds [5 x double]* %2452, i32 0, i64 2
  %2454 = load double* %2453, align 8
  %2455 = load i32* %kp1, align 4
  %2456 = sext i32 %2455 to i64
  %2457 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2456
  %2458 = getelementptr inbounds [5 x double]* %2457, i32 0, i64 3
  %2459 = load double* %2458, align 8
  %2460 = fmul double %2454, %2459
  %2461 = load i32* %km1, align 4
  %2462 = sext i32 %2461 to i64
  %2463 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2462
  %2464 = getelementptr inbounds [5 x double]* %2463, i32 0, i64 2
  %2465 = load double* %2464, align 8
  %2466 = load i32* %km1, align 4
  %2467 = sext i32 %2466 to i64
  %2468 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2467
  %2469 = getelementptr inbounds [5 x double]* %2468, i32 0, i64 3
  %2470 = load double* %2469, align 8
  %2471 = fmul double %2465, %2470
  %2472 = fsub double %2460, %2471
  %2473 = fmul double %2449, %2472
  %2474 = fsub double %2448, %2473
  %2475 = load double* @zzcon2, align 8
  %2476 = load i32* %kp1, align 4
  %2477 = sext i32 %2476 to i64
  %2478 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2477
  %2479 = getelementptr inbounds [5 x double]* %2478, i32 0, i64 2
  %2480 = load double* %2479, align 8
  %2481 = load i32* %k, align 4
  %2482 = sext i32 %2481 to i64
  %2483 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2482
  %2484 = getelementptr inbounds [5 x double]* %2483, i32 0, i64 2
  %2485 = load double* %2484, align 8
  %2486 = fmul double 2.000000e+00, %2485
  %2487 = fsub double %2480, %2486
  %2488 = load i32* %km1, align 4
  %2489 = sext i32 %2488 to i64
  %2490 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2489
  %2491 = getelementptr inbounds [5 x double]* %2490, i32 0, i64 2
  %2492 = load double* %2491, align 8
  %2493 = fadd double %2487, %2492
  %2494 = fmul double %2475, %2493
  %2495 = fadd double %2474, %2494
  %2496 = load double* @dz3tz1, align 8
  %2497 = load i32* %kp1, align 4
  %2498 = sext i32 %2497 to i64
  %2499 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2498
  %2500 = getelementptr inbounds [5 x double]* %2499, i32 0, i64 2
  %2501 = load double* %2500, align 8
  %2502 = load i32* %k, align 4
  %2503 = sext i32 %2502 to i64
  %2504 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2503
  %2505 = getelementptr inbounds [5 x double]* %2504, i32 0, i64 2
  %2506 = load double* %2505, align 8
  %2507 = fmul double 2.000000e+00, %2506
  %2508 = fsub double %2501, %2507
  %2509 = load i32* %km1, align 4
  %2510 = sext i32 %2509 to i64
  %2511 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2510
  %2512 = getelementptr inbounds [5 x double]* %2511, i32 0, i64 2
  %2513 = load double* %2512, align 8
  %2514 = fadd double %2508, %2513
  %2515 = fmul double %2496, %2514
  %2516 = fadd double %2495, %2515
  %2517 = load i32* %i, align 4
  %2518 = sext i32 %2517 to i64
  %2519 = load i32* %j, align 4
  %2520 = sext i32 %2519 to i64
  %2521 = load i32* %k, align 4
  %2522 = sext i32 %2521 to i64
  %2523 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %2522
  %2524 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2523, i32 0, i64 %2520
  %2525 = getelementptr inbounds [13 x [5 x double]]* %2524, i32 0, i64 %2518
  %2526 = getelementptr inbounds [5 x double]* %2525, i32 0, i64 2
  store double %2516, double* %2526, align 8
  %2527 = load i32* %i, align 4
  %2528 = sext i32 %2527 to i64
  %2529 = load i32* %j, align 4
  %2530 = sext i32 %2529 to i64
  %2531 = load i32* %k, align 4
  %2532 = sext i32 %2531 to i64
  %2533 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %2532
  %2534 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2533, i32 0, i64 %2530
  %2535 = getelementptr inbounds [13 x [5 x double]]* %2534, i32 0, i64 %2528
  %2536 = getelementptr inbounds [5 x double]* %2535, i32 0, i64 3
  %2537 = load double* %2536, align 8
  %2538 = load double* @tz2, align 8
  %2539 = load i32* %kp1, align 4
  %2540 = sext i32 %2539 to i64
  %2541 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2540
  %2542 = getelementptr inbounds [5 x double]* %2541, i32 0, i64 3
  %2543 = load double* %2542, align 8
  %2544 = load i32* %kp1, align 4
  %2545 = sext i32 %2544 to i64
  %2546 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2545
  %2547 = getelementptr inbounds [5 x double]* %2546, i32 0, i64 3
  %2548 = load double* %2547, align 8
  %2549 = fmul double %2543, %2548
  %2550 = load double* @c2, align 8
  %2551 = load i32* %kp1, align 4
  %2552 = sext i32 %2551 to i64
  %2553 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2552
  %2554 = getelementptr inbounds [5 x double]* %2553, i32 0, i64 4
  %2555 = load double* %2554, align 8
  %2556 = load i32* %kp1, align 4
  %2557 = sext i32 %2556 to i64
  %2558 = getelementptr inbounds [13 x double]* @q, i32 0, i64 %2557
  %2559 = load double* %2558, align 8
  %2560 = fsub double %2555, %2559
  %2561 = fmul double %2550, %2560
  %2562 = fadd double %2549, %2561
  %2563 = load i32* %km1, align 4
  %2564 = sext i32 %2563 to i64
  %2565 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2564
  %2566 = getelementptr inbounds [5 x double]* %2565, i32 0, i64 3
  %2567 = load double* %2566, align 8
  %2568 = load i32* %km1, align 4
  %2569 = sext i32 %2568 to i64
  %2570 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2569
  %2571 = getelementptr inbounds [5 x double]* %2570, i32 0, i64 3
  %2572 = load double* %2571, align 8
  %2573 = fmul double %2567, %2572
  %2574 = load double* @c2, align 8
  %2575 = load i32* %km1, align 4
  %2576 = sext i32 %2575 to i64
  %2577 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2576
  %2578 = getelementptr inbounds [5 x double]* %2577, i32 0, i64 4
  %2579 = load double* %2578, align 8
  %2580 = load i32* %km1, align 4
  %2581 = sext i32 %2580 to i64
  %2582 = getelementptr inbounds [13 x double]* @q, i32 0, i64 %2581
  %2583 = load double* %2582, align 8
  %2584 = fsub double %2579, %2583
  %2585 = fmul double %2574, %2584
  %2586 = fadd double %2573, %2585
  %2587 = fsub double %2562, %2586
  %2588 = fmul double %2538, %2587
  %2589 = fsub double %2537, %2588
  %2590 = load double* @zzcon1, align 8
  %2591 = load i32* %kp1, align 4
  %2592 = sext i32 %2591 to i64
  %2593 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2592
  %2594 = getelementptr inbounds [5 x double]* %2593, i32 0, i64 3
  %2595 = load double* %2594, align 8
  %2596 = load i32* %k, align 4
  %2597 = sext i32 %2596 to i64
  %2598 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2597
  %2599 = getelementptr inbounds [5 x double]* %2598, i32 0, i64 3
  %2600 = load double* %2599, align 8
  %2601 = fmul double 2.000000e+00, %2600
  %2602 = fsub double %2595, %2601
  %2603 = load i32* %km1, align 4
  %2604 = sext i32 %2603 to i64
  %2605 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2604
  %2606 = getelementptr inbounds [5 x double]* %2605, i32 0, i64 3
  %2607 = load double* %2606, align 8
  %2608 = fadd double %2602, %2607
  %2609 = fmul double %2590, %2608
  %2610 = fadd double %2589, %2609
  %2611 = load double* @dz4tz1, align 8
  %2612 = load i32* %kp1, align 4
  %2613 = sext i32 %2612 to i64
  %2614 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2613
  %2615 = getelementptr inbounds [5 x double]* %2614, i32 0, i64 3
  %2616 = load double* %2615, align 8
  %2617 = load i32* %k, align 4
  %2618 = sext i32 %2617 to i64
  %2619 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2618
  %2620 = getelementptr inbounds [5 x double]* %2619, i32 0, i64 3
  %2621 = load double* %2620, align 8
  %2622 = fmul double 2.000000e+00, %2621
  %2623 = fsub double %2616, %2622
  %2624 = load i32* %km1, align 4
  %2625 = sext i32 %2624 to i64
  %2626 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2625
  %2627 = getelementptr inbounds [5 x double]* %2626, i32 0, i64 3
  %2628 = load double* %2627, align 8
  %2629 = fadd double %2623, %2628
  %2630 = fmul double %2611, %2629
  %2631 = fadd double %2610, %2630
  %2632 = load i32* %i, align 4
  %2633 = sext i32 %2632 to i64
  %2634 = load i32* %j, align 4
  %2635 = sext i32 %2634 to i64
  %2636 = load i32* %k, align 4
  %2637 = sext i32 %2636 to i64
  %2638 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %2637
  %2639 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2638, i32 0, i64 %2635
  %2640 = getelementptr inbounds [13 x [5 x double]]* %2639, i32 0, i64 %2633
  %2641 = getelementptr inbounds [5 x double]* %2640, i32 0, i64 3
  store double %2631, double* %2641, align 8
  %2642 = load i32* %i, align 4
  %2643 = sext i32 %2642 to i64
  %2644 = load i32* %j, align 4
  %2645 = sext i32 %2644 to i64
  %2646 = load i32* %k, align 4
  %2647 = sext i32 %2646 to i64
  %2648 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %2647
  %2649 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2648, i32 0, i64 %2645
  %2650 = getelementptr inbounds [13 x [5 x double]]* %2649, i32 0, i64 %2643
  %2651 = getelementptr inbounds [5 x double]* %2650, i32 0, i64 4
  %2652 = load double* %2651, align 8
  %2653 = load double* @tz2, align 8
  %2654 = load i32* %kp1, align 4
  %2655 = sext i32 %2654 to i64
  %2656 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2655
  %2657 = getelementptr inbounds [5 x double]* %2656, i32 0, i64 3
  %2658 = load double* %2657, align 8
  %2659 = load double* @c1, align 8
  %2660 = load i32* %kp1, align 4
  %2661 = sext i32 %2660 to i64
  %2662 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2661
  %2663 = getelementptr inbounds [5 x double]* %2662, i32 0, i64 4
  %2664 = load double* %2663, align 8
  %2665 = fmul double %2659, %2664
  %2666 = load double* @c2, align 8
  %2667 = load i32* %kp1, align 4
  %2668 = sext i32 %2667 to i64
  %2669 = getelementptr inbounds [13 x double]* @q, i32 0, i64 %2668
  %2670 = load double* %2669, align 8
  %2671 = fmul double %2666, %2670
  %2672 = fsub double %2665, %2671
  %2673 = fmul double %2658, %2672
  %2674 = load i32* %km1, align 4
  %2675 = sext i32 %2674 to i64
  %2676 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2675
  %2677 = getelementptr inbounds [5 x double]* %2676, i32 0, i64 3
  %2678 = load double* %2677, align 8
  %2679 = load double* @c1, align 8
  %2680 = load i32* %km1, align 4
  %2681 = sext i32 %2680 to i64
  %2682 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2681
  %2683 = getelementptr inbounds [5 x double]* %2682, i32 0, i64 4
  %2684 = load double* %2683, align 8
  %2685 = fmul double %2679, %2684
  %2686 = load double* @c2, align 8
  %2687 = load i32* %km1, align 4
  %2688 = sext i32 %2687 to i64
  %2689 = getelementptr inbounds [13 x double]* @q, i32 0, i64 %2688
  %2690 = load double* %2689, align 8
  %2691 = fmul double %2686, %2690
  %2692 = fsub double %2685, %2691
  %2693 = fmul double %2678, %2692
  %2694 = fsub double %2673, %2693
  %2695 = fmul double %2653, %2694
  %2696 = fsub double %2652, %2695
  %2697 = load double* @zzcon3, align 8
  %2698 = fmul double 5.000000e-01, %2697
  %2699 = load i32* %kp1, align 4
  %2700 = sext i32 %2699 to i64
  %2701 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2700
  %2702 = getelementptr inbounds [5 x double]* %2701, i32 0, i64 0
  %2703 = load double* %2702, align 8
  %2704 = load i32* %k, align 4
  %2705 = sext i32 %2704 to i64
  %2706 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2705
  %2707 = getelementptr inbounds [5 x double]* %2706, i32 0, i64 0
  %2708 = load double* %2707, align 8
  %2709 = fmul double 2.000000e+00, %2708
  %2710 = fsub double %2703, %2709
  %2711 = load i32* %km1, align 4
  %2712 = sext i32 %2711 to i64
  %2713 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2712
  %2714 = getelementptr inbounds [5 x double]* %2713, i32 0, i64 0
  %2715 = load double* %2714, align 8
  %2716 = fadd double %2710, %2715
  %2717 = fmul double %2698, %2716
  %2718 = fadd double %2696, %2717
  %2719 = load double* @zzcon4, align 8
  %2720 = load i32* %kp1, align 4
  %2721 = sext i32 %2720 to i64
  %2722 = getelementptr inbounds [13 x double]* @cuf, i32 0, i64 %2721
  %2723 = load double* %2722, align 8
  %2724 = load i32* %k, align 4
  %2725 = sext i32 %2724 to i64
  %2726 = getelementptr inbounds [13 x double]* @cuf, i32 0, i64 %2725
  %2727 = load double* %2726, align 8
  %2728 = fmul double 2.000000e+00, %2727
  %2729 = fsub double %2723, %2728
  %2730 = load i32* %km1, align 4
  %2731 = sext i32 %2730 to i64
  %2732 = getelementptr inbounds [13 x double]* @cuf, i32 0, i64 %2731
  %2733 = load double* %2732, align 8
  %2734 = fadd double %2729, %2733
  %2735 = fmul double %2719, %2734
  %2736 = fadd double %2718, %2735
  %2737 = load double* @zzcon5, align 8
  %2738 = load i32* %kp1, align 4
  %2739 = sext i32 %2738 to i64
  %2740 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2739
  %2741 = getelementptr inbounds [5 x double]* %2740, i32 0, i64 4
  %2742 = load double* %2741, align 8
  %2743 = load i32* %k, align 4
  %2744 = sext i32 %2743 to i64
  %2745 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2744
  %2746 = getelementptr inbounds [5 x double]* %2745, i32 0, i64 4
  %2747 = load double* %2746, align 8
  %2748 = fmul double 2.000000e+00, %2747
  %2749 = fsub double %2742, %2748
  %2750 = load i32* %km1, align 4
  %2751 = sext i32 %2750 to i64
  %2752 = getelementptr inbounds [13 x [5 x double]]* @buf, i32 0, i64 %2751
  %2753 = getelementptr inbounds [5 x double]* %2752, i32 0, i64 4
  %2754 = load double* %2753, align 8
  %2755 = fadd double %2749, %2754
  %2756 = fmul double %2737, %2755
  %2757 = fadd double %2736, %2756
  %2758 = load double* @dz5tz1, align 8
  %2759 = load i32* %kp1, align 4
  %2760 = sext i32 %2759 to i64
  %2761 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2760
  %2762 = getelementptr inbounds [5 x double]* %2761, i32 0, i64 4
  %2763 = load double* %2762, align 8
  %2764 = load i32* %k, align 4
  %2765 = sext i32 %2764 to i64
  %2766 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2765
  %2767 = getelementptr inbounds [5 x double]* %2766, i32 0, i64 4
  %2768 = load double* %2767, align 8
  %2769 = fmul double 2.000000e+00, %2768
  %2770 = fsub double %2763, %2769
  %2771 = load i32* %km1, align 4
  %2772 = sext i32 %2771 to i64
  %2773 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2772
  %2774 = getelementptr inbounds [5 x double]* %2773, i32 0, i64 4
  %2775 = load double* %2774, align 8
  %2776 = fadd double %2770, %2775
  %2777 = fmul double %2758, %2776
  %2778 = fadd double %2757, %2777
  %2779 = load i32* %i, align 4
  %2780 = sext i32 %2779 to i64
  %2781 = load i32* %j, align 4
  %2782 = sext i32 %2781 to i64
  %2783 = load i32* %k, align 4
  %2784 = sext i32 %2783 to i64
  %2785 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %2784
  %2786 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2785, i32 0, i64 %2782
  %2787 = getelementptr inbounds [13 x [5 x double]]* %2786, i32 0, i64 %2780
  %2788 = getelementptr inbounds [5 x double]* %2787, i32 0, i64 4
  store double %2778, double* %2788, align 8
  br label %2789

; <label>:2789                                    ; preds = %2288
  %2790 = load i32* %k, align 4
  %2791 = add nsw i32 %2790, 1
  store i32 %2791, i32* %k, align 4
  br label %2283

; <label>:2792                                    ; preds = %2283
  store i32 0, i32* %m, align 4
  br label %2793

; <label>:2793                                    ; preds = %2917, %2792
  %2794 = load i32* %m, align 4
  %2795 = icmp slt i32 %2794, 5
  br i1 %2795, label %2796, label %2920

; <label>:2796                                    ; preds = %2793
  store i32 1, i32* %k, align 4
  %2797 = load i32* %m, align 4
  %2798 = sext i32 %2797 to i64
  %2799 = load i32* %i, align 4
  %2800 = sext i32 %2799 to i64
  %2801 = load i32* %j, align 4
  %2802 = sext i32 %2801 to i64
  %2803 = load i32* %k, align 4
  %2804 = sext i32 %2803 to i64
  %2805 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %2804
  %2806 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2805, i32 0, i64 %2802
  %2807 = getelementptr inbounds [13 x [5 x double]]* %2806, i32 0, i64 %2800
  %2808 = getelementptr inbounds [5 x double]* %2807, i32 0, i64 %2798
  %2809 = load double* %2808, align 8
  %2810 = load double* @dssp, align 8
  %2811 = load i32* %m, align 4
  %2812 = sext i32 %2811 to i64
  %2813 = load i32* %k, align 4
  %2814 = sext i32 %2813 to i64
  %2815 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2814
  %2816 = getelementptr inbounds [5 x double]* %2815, i32 0, i64 %2812
  %2817 = load double* %2816, align 8
  %2818 = fmul double 5.000000e+00, %2817
  %2819 = load i32* %m, align 4
  %2820 = sext i32 %2819 to i64
  %2821 = load i32* %k, align 4
  %2822 = add nsw i32 %2821, 1
  %2823 = sext i32 %2822 to i64
  %2824 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2823
  %2825 = getelementptr inbounds [5 x double]* %2824, i32 0, i64 %2820
  %2826 = load double* %2825, align 8
  %2827 = fmul double 4.000000e+00, %2826
  %2828 = fsub double %2818, %2827
  %2829 = load i32* %m, align 4
  %2830 = sext i32 %2829 to i64
  %2831 = load i32* %k, align 4
  %2832 = add nsw i32 %2831, 2
  %2833 = sext i32 %2832 to i64
  %2834 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2833
  %2835 = getelementptr inbounds [5 x double]* %2834, i32 0, i64 %2830
  %2836 = load double* %2835, align 8
  %2837 = fadd double %2828, %2836
  %2838 = fmul double %2810, %2837
  %2839 = fsub double %2809, %2838
  %2840 = load i32* %m, align 4
  %2841 = sext i32 %2840 to i64
  %2842 = load i32* %i, align 4
  %2843 = sext i32 %2842 to i64
  %2844 = load i32* %j, align 4
  %2845 = sext i32 %2844 to i64
  %2846 = load i32* %k, align 4
  %2847 = sext i32 %2846 to i64
  %2848 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %2847
  %2849 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2848, i32 0, i64 %2845
  %2850 = getelementptr inbounds [13 x [5 x double]]* %2849, i32 0, i64 %2843
  %2851 = getelementptr inbounds [5 x double]* %2850, i32 0, i64 %2841
  store double %2839, double* %2851, align 8
  store i32 2, i32* %k, align 4
  %2852 = load i32* %m, align 4
  %2853 = sext i32 %2852 to i64
  %2854 = load i32* %i, align 4
  %2855 = sext i32 %2854 to i64
  %2856 = load i32* %j, align 4
  %2857 = sext i32 %2856 to i64
  %2858 = load i32* %k, align 4
  %2859 = sext i32 %2858 to i64
  %2860 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %2859
  %2861 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2860, i32 0, i64 %2857
  %2862 = getelementptr inbounds [13 x [5 x double]]* %2861, i32 0, i64 %2855
  %2863 = getelementptr inbounds [5 x double]* %2862, i32 0, i64 %2853
  %2864 = load double* %2863, align 8
  %2865 = load double* @dssp, align 8
  %2866 = load i32* %m, align 4
  %2867 = sext i32 %2866 to i64
  %2868 = load i32* %k, align 4
  %2869 = sub nsw i32 %2868, 1
  %2870 = sext i32 %2869 to i64
  %2871 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2870
  %2872 = getelementptr inbounds [5 x double]* %2871, i32 0, i64 %2867
  %2873 = load double* %2872, align 8
  %2874 = fmul double -4.000000e+00, %2873
  %2875 = load i32* %m, align 4
  %2876 = sext i32 %2875 to i64
  %2877 = load i32* %k, align 4
  %2878 = sext i32 %2877 to i64
  %2879 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2878
  %2880 = getelementptr inbounds [5 x double]* %2879, i32 0, i64 %2876
  %2881 = load double* %2880, align 8
  %2882 = fmul double 6.000000e+00, %2881
  %2883 = fadd double %2874, %2882
  %2884 = load i32* %m, align 4
  %2885 = sext i32 %2884 to i64
  %2886 = load i32* %k, align 4
  %2887 = add nsw i32 %2886, 1
  %2888 = sext i32 %2887 to i64
  %2889 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2888
  %2890 = getelementptr inbounds [5 x double]* %2889, i32 0, i64 %2885
  %2891 = load double* %2890, align 8
  %2892 = fmul double 4.000000e+00, %2891
  %2893 = fsub double %2883, %2892
  %2894 = load i32* %m, align 4
  %2895 = sext i32 %2894 to i64
  %2896 = load i32* %k, align 4
  %2897 = add nsw i32 %2896, 2
  %2898 = sext i32 %2897 to i64
  %2899 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2898
  %2900 = getelementptr inbounds [5 x double]* %2899, i32 0, i64 %2895
  %2901 = load double* %2900, align 8
  %2902 = fadd double %2893, %2901
  %2903 = fmul double %2865, %2902
  %2904 = fsub double %2864, %2903
  %2905 = load i32* %m, align 4
  %2906 = sext i32 %2905 to i64
  %2907 = load i32* %i, align 4
  %2908 = sext i32 %2907 to i64
  %2909 = load i32* %j, align 4
  %2910 = sext i32 %2909 to i64
  %2911 = load i32* %k, align 4
  %2912 = sext i32 %2911 to i64
  %2913 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %2912
  %2914 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2913, i32 0, i64 %2910
  %2915 = getelementptr inbounds [13 x [5 x double]]* %2914, i32 0, i64 %2908
  %2916 = getelementptr inbounds [5 x double]* %2915, i32 0, i64 %2906
  store double %2904, double* %2916, align 8
  br label %2917

; <label>:2917                                    ; preds = %2796
  %2918 = load i32* %m, align 4
  %2919 = add nsw i32 %2918, 1
  store i32 %2919, i32* %m, align 4
  br label %2793

; <label>:2920                                    ; preds = %2793
  store i32 3, i32* %k, align 4
  br label %2921

; <label>:2921                                    ; preds = %3009, %2920
  %2922 = load i32* %k, align 4
  %2923 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %2924 = sub nsw i32 %2923, 4
  %2925 = icmp sle i32 %2922, %2924
  br i1 %2925, label %2926, label %3012

; <label>:2926                                    ; preds = %2921
  store i32 0, i32* %m, align 4
  br label %2927

; <label>:2927                                    ; preds = %3005, %2926
  %2928 = load i32* %m, align 4
  %2929 = icmp slt i32 %2928, 5
  br i1 %2929, label %2930, label %3008

; <label>:2930                                    ; preds = %2927
  %2931 = load i32* %m, align 4
  %2932 = sext i32 %2931 to i64
  %2933 = load i32* %i, align 4
  %2934 = sext i32 %2933 to i64
  %2935 = load i32* %j, align 4
  %2936 = sext i32 %2935 to i64
  %2937 = load i32* %k, align 4
  %2938 = sext i32 %2937 to i64
  %2939 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %2938
  %2940 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2939, i32 0, i64 %2936
  %2941 = getelementptr inbounds [13 x [5 x double]]* %2940, i32 0, i64 %2934
  %2942 = getelementptr inbounds [5 x double]* %2941, i32 0, i64 %2932
  %2943 = load double* %2942, align 8
  %2944 = load double* @dssp, align 8
  %2945 = load i32* %m, align 4
  %2946 = sext i32 %2945 to i64
  %2947 = load i32* %k, align 4
  %2948 = sub nsw i32 %2947, 2
  %2949 = sext i32 %2948 to i64
  %2950 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2949
  %2951 = getelementptr inbounds [5 x double]* %2950, i32 0, i64 %2946
  %2952 = load double* %2951, align 8
  %2953 = load i32* %m, align 4
  %2954 = sext i32 %2953 to i64
  %2955 = load i32* %k, align 4
  %2956 = sub nsw i32 %2955, 1
  %2957 = sext i32 %2956 to i64
  %2958 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2957
  %2959 = getelementptr inbounds [5 x double]* %2958, i32 0, i64 %2954
  %2960 = load double* %2959, align 8
  %2961 = fmul double 4.000000e+00, %2960
  %2962 = fsub double %2952, %2961
  %2963 = load i32* %m, align 4
  %2964 = sext i32 %2963 to i64
  %2965 = load i32* %k, align 4
  %2966 = sext i32 %2965 to i64
  %2967 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2966
  %2968 = getelementptr inbounds [5 x double]* %2967, i32 0, i64 %2964
  %2969 = load double* %2968, align 8
  %2970 = fmul double 6.000000e+00, %2969
  %2971 = fadd double %2962, %2970
  %2972 = load i32* %m, align 4
  %2973 = sext i32 %2972 to i64
  %2974 = load i32* %k, align 4
  %2975 = add nsw i32 %2974, 1
  %2976 = sext i32 %2975 to i64
  %2977 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2976
  %2978 = getelementptr inbounds [5 x double]* %2977, i32 0, i64 %2973
  %2979 = load double* %2978, align 8
  %2980 = fmul double 4.000000e+00, %2979
  %2981 = fsub double %2971, %2980
  %2982 = load i32* %m, align 4
  %2983 = sext i32 %2982 to i64
  %2984 = load i32* %k, align 4
  %2985 = add nsw i32 %2984, 2
  %2986 = sext i32 %2985 to i64
  %2987 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %2986
  %2988 = getelementptr inbounds [5 x double]* %2987, i32 0, i64 %2983
  %2989 = load double* %2988, align 8
  %2990 = fadd double %2981, %2989
  %2991 = fmul double %2944, %2990
  %2992 = fsub double %2943, %2991
  %2993 = load i32* %m, align 4
  %2994 = sext i32 %2993 to i64
  %2995 = load i32* %i, align 4
  %2996 = sext i32 %2995 to i64
  %2997 = load i32* %j, align 4
  %2998 = sext i32 %2997 to i64
  %2999 = load i32* %k, align 4
  %3000 = sext i32 %2999 to i64
  %3001 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %3000
  %3002 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3001, i32 0, i64 %2998
  %3003 = getelementptr inbounds [13 x [5 x double]]* %3002, i32 0, i64 %2996
  %3004 = getelementptr inbounds [5 x double]* %3003, i32 0, i64 %2994
  store double %2992, double* %3004, align 8
  br label %3005

; <label>:3005                                    ; preds = %2930
  %3006 = load i32* %m, align 4
  %3007 = add nsw i32 %3006, 1
  store i32 %3007, i32* %m, align 4
  br label %2927

; <label>:3008                                    ; preds = %2927
  br label %3009

; <label>:3009                                    ; preds = %3008
  %3010 = load i32* %k, align 4
  %3011 = add nsw i32 %3010, 1
  store i32 %3011, i32* %k, align 4
  br label %2921

; <label>:3012                                    ; preds = %2921
  store i32 0, i32* %m, align 4
  br label %3013

; <label>:3013                                    ; preds = %3141, %3012
  %3014 = load i32* %m, align 4
  %3015 = icmp slt i32 %3014, 5
  br i1 %3015, label %3016, label %3144

; <label>:3016                                    ; preds = %3013
  %3017 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %3018 = sub nsw i32 %3017, 3
  store i32 %3018, i32* %k, align 4
  %3019 = load i32* %m, align 4
  %3020 = sext i32 %3019 to i64
  %3021 = load i32* %i, align 4
  %3022 = sext i32 %3021 to i64
  %3023 = load i32* %j, align 4
  %3024 = sext i32 %3023 to i64
  %3025 = load i32* %k, align 4
  %3026 = sext i32 %3025 to i64
  %3027 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %3026
  %3028 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3027, i32 0, i64 %3024
  %3029 = getelementptr inbounds [13 x [5 x double]]* %3028, i32 0, i64 %3022
  %3030 = getelementptr inbounds [5 x double]* %3029, i32 0, i64 %3020
  %3031 = load double* %3030, align 8
  %3032 = load double* @dssp, align 8
  %3033 = load i32* %m, align 4
  %3034 = sext i32 %3033 to i64
  %3035 = load i32* %k, align 4
  %3036 = sub nsw i32 %3035, 2
  %3037 = sext i32 %3036 to i64
  %3038 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %3037
  %3039 = getelementptr inbounds [5 x double]* %3038, i32 0, i64 %3034
  %3040 = load double* %3039, align 8
  %3041 = load i32* %m, align 4
  %3042 = sext i32 %3041 to i64
  %3043 = load i32* %k, align 4
  %3044 = sub nsw i32 %3043, 1
  %3045 = sext i32 %3044 to i64
  %3046 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %3045
  %3047 = getelementptr inbounds [5 x double]* %3046, i32 0, i64 %3042
  %3048 = load double* %3047, align 8
  %3049 = fmul double 4.000000e+00, %3048
  %3050 = fsub double %3040, %3049
  %3051 = load i32* %m, align 4
  %3052 = sext i32 %3051 to i64
  %3053 = load i32* %k, align 4
  %3054 = sext i32 %3053 to i64
  %3055 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %3054
  %3056 = getelementptr inbounds [5 x double]* %3055, i32 0, i64 %3052
  %3057 = load double* %3056, align 8
  %3058 = fmul double 6.000000e+00, %3057
  %3059 = fadd double %3050, %3058
  %3060 = load i32* %m, align 4
  %3061 = sext i32 %3060 to i64
  %3062 = load i32* %k, align 4
  %3063 = add nsw i32 %3062, 1
  %3064 = sext i32 %3063 to i64
  %3065 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %3064
  %3066 = getelementptr inbounds [5 x double]* %3065, i32 0, i64 %3061
  %3067 = load double* %3066, align 8
  %3068 = fmul double 4.000000e+00, %3067
  %3069 = fsub double %3059, %3068
  %3070 = fmul double %3032, %3069
  %3071 = fsub double %3031, %3070
  %3072 = load i32* %m, align 4
  %3073 = sext i32 %3072 to i64
  %3074 = load i32* %i, align 4
  %3075 = sext i32 %3074 to i64
  %3076 = load i32* %j, align 4
  %3077 = sext i32 %3076 to i64
  %3078 = load i32* %k, align 4
  %3079 = sext i32 %3078 to i64
  %3080 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %3079
  %3081 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3080, i32 0, i64 %3077
  %3082 = getelementptr inbounds [13 x [5 x double]]* %3081, i32 0, i64 %3075
  %3083 = getelementptr inbounds [5 x double]* %3082, i32 0, i64 %3073
  store double %3071, double* %3083, align 8
  %3084 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %3085 = sub nsw i32 %3084, 2
  store i32 %3085, i32* %k, align 4
  %3086 = load i32* %m, align 4
  %3087 = sext i32 %3086 to i64
  %3088 = load i32* %i, align 4
  %3089 = sext i32 %3088 to i64
  %3090 = load i32* %j, align 4
  %3091 = sext i32 %3090 to i64
  %3092 = load i32* %k, align 4
  %3093 = sext i32 %3092 to i64
  %3094 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %3093
  %3095 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3094, i32 0, i64 %3091
  %3096 = getelementptr inbounds [13 x [5 x double]]* %3095, i32 0, i64 %3089
  %3097 = getelementptr inbounds [5 x double]* %3096, i32 0, i64 %3087
  %3098 = load double* %3097, align 8
  %3099 = load double* @dssp, align 8
  %3100 = load i32* %m, align 4
  %3101 = sext i32 %3100 to i64
  %3102 = load i32* %k, align 4
  %3103 = sub nsw i32 %3102, 2
  %3104 = sext i32 %3103 to i64
  %3105 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %3104
  %3106 = getelementptr inbounds [5 x double]* %3105, i32 0, i64 %3101
  %3107 = load double* %3106, align 8
  %3108 = load i32* %m, align 4
  %3109 = sext i32 %3108 to i64
  %3110 = load i32* %k, align 4
  %3111 = sub nsw i32 %3110, 1
  %3112 = sext i32 %3111 to i64
  %3113 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %3112
  %3114 = getelementptr inbounds [5 x double]* %3113, i32 0, i64 %3109
  %3115 = load double* %3114, align 8
  %3116 = fmul double 4.000000e+00, %3115
  %3117 = fsub double %3107, %3116
  %3118 = load i32* %m, align 4
  %3119 = sext i32 %3118 to i64
  %3120 = load i32* %k, align 4
  %3121 = sext i32 %3120 to i64
  %3122 = getelementptr inbounds [13 x [5 x double]]* @ue, i32 0, i64 %3121
  %3123 = getelementptr inbounds [5 x double]* %3122, i32 0, i64 %3119
  %3124 = load double* %3123, align 8
  %3125 = fmul double 5.000000e+00, %3124
  %3126 = fadd double %3117, %3125
  %3127 = fmul double %3099, %3126
  %3128 = fsub double %3098, %3127
  %3129 = load i32* %m, align 4
  %3130 = sext i32 %3129 to i64
  %3131 = load i32* %i, align 4
  %3132 = sext i32 %3131 to i64
  %3133 = load i32* %j, align 4
  %3134 = sext i32 %3133 to i64
  %3135 = load i32* %k, align 4
  %3136 = sext i32 %3135 to i64
  %3137 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %3136
  %3138 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3137, i32 0, i64 %3134
  %3139 = getelementptr inbounds [13 x [5 x double]]* %3138, i32 0, i64 %3132
  %3140 = getelementptr inbounds [5 x double]* %3139, i32 0, i64 %3130
  store double %3128, double* %3140, align 8
  br label %3141

; <label>:3141                                    ; preds = %3016
  %3142 = load i32* %m, align 4
  %3143 = add nsw i32 %3142, 1
  store i32 %3143, i32* %m, align 4
  br label %3013

; <label>:3144                                    ; preds = %3013
  br label %3145

; <label>:3145                                    ; preds = %3144
  %3146 = load i32* %i, align 4
  %3147 = add nsw i32 %3146, 1
  store i32 %3147, i32* %i, align 4
  br label %2129

; <label>:3148                                    ; preds = %2129
  br label %3149

; <label>:3149                                    ; preds = %3148
  %3150 = load i32* %j, align 4
  %3151 = add nsw i32 %3150, 1
  store i32 %3151, i32* %j, align 4
  br label %2119

; <label>:3152                                    ; preds = %2119
  store i32 1, i32* %k, align 4
  br label %3153

; <label>:3153                                    ; preds = %3213, %3152
  %3154 = load i32* %k, align 4
  %3155 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %3156 = sub nsw i32 %3155, 2
  %3157 = icmp sle i32 %3154, %3156
  br i1 %3157, label %3158, label %3216

; <label>:3158                                    ; preds = %3153
  store i32 1, i32* %j, align 4
  br label %3159

; <label>:3159                                    ; preds = %3209, %3158
  %3160 = load i32* %j, align 4
  %3161 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %3162 = sub nsw i32 %3161, 2
  %3163 = icmp sle i32 %3160, %3162
  br i1 %3163, label %3164, label %3212

; <label>:3164                                    ; preds = %3159
  store i32 1, i32* %i, align 4
  br label %3165

; <label>:3165                                    ; preds = %3205, %3164
  %3166 = load i32* %i, align 4
  %3167 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %3168 = sub nsw i32 %3167, 2
  %3169 = icmp sle i32 %3166, %3168
  br i1 %3169, label %3170, label %3208

; <label>:3170                                    ; preds = %3165
  store i32 0, i32* %m, align 4
  br label %3171

; <label>:3171                                    ; preds = %3201, %3170
  %3172 = load i32* %m, align 4
  %3173 = icmp slt i32 %3172, 5
  br i1 %3173, label %3174, label %3204

; <label>:3174                                    ; preds = %3171
  %3175 = load i32* %m, align 4
  %3176 = sext i32 %3175 to i64
  %3177 = load i32* %i, align 4
  %3178 = sext i32 %3177 to i64
  %3179 = load i32* %j, align 4
  %3180 = sext i32 %3179 to i64
  %3181 = load i32* %k, align 4
  %3182 = sext i32 %3181 to i64
  %3183 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %3182
  %3184 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3183, i32 0, i64 %3180
  %3185 = getelementptr inbounds [13 x [5 x double]]* %3184, i32 0, i64 %3178
  %3186 = getelementptr inbounds [5 x double]* %3185, i32 0, i64 %3176
  %3187 = load double* %3186, align 8
  %3188 = fmul double -1.000000e+00, %3187
  %3189 = load i32* %m, align 4
  %3190 = sext i32 %3189 to i64
  %3191 = load i32* %i, align 4
  %3192 = sext i32 %3191 to i64
  %3193 = load i32* %j, align 4
  %3194 = sext i32 %3193 to i64
  %3195 = load i32* %k, align 4
  %3196 = sext i32 %3195 to i64
  %3197 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %3196
  %3198 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3197, i32 0, i64 %3194
  %3199 = getelementptr inbounds [13 x [5 x double]]* %3198, i32 0, i64 %3192
  %3200 = getelementptr inbounds [5 x double]* %3199, i32 0, i64 %3190
  store double %3188, double* %3200, align 8
  br label %3201

; <label>:3201                                    ; preds = %3174
  %3202 = load i32* %m, align 4
  %3203 = add nsw i32 %3202, 1
  store i32 %3203, i32* %m, align 4
  br label %3171

; <label>:3204                                    ; preds = %3171
  br label %3205

; <label>:3205                                    ; preds = %3204
  %3206 = load i32* %i, align 4
  %3207 = add nsw i32 %3206, 1
  store i32 %3207, i32* %i, align 4
  br label %3165

; <label>:3208                                    ; preds = %3165
  br label %3209

; <label>:3209                                    ; preds = %3208
  %3210 = load i32* %j, align 4
  %3211 = add nsw i32 %3210, 1
  store i32 %3211, i32* %j, align 4
  br label %3159

; <label>:3212                                    ; preds = %3159
  br label %3213

; <label>:3213                                    ; preds = %3212
  %3214 = load i32* %k, align 4
  %3215 = add nsw i32 %3214, 1
  store i32 %3215, i32* %k, align 4
  br label %3153

; <label>:3216                                    ; preds = %3153
  ret void
}

; Function Attrs: nounwind uwtable
define void @exact_solution(double %xi, double %eta, double %zeta, double* %dtemp) #0 {
  %1 = alloca double, align 8
  %2 = alloca double, align 8
  %3 = alloca double, align 8
  %4 = alloca double*, align 8
  %m = alloca i32, align 4
  store double %xi, double* %1, align 8
  store double %eta, double* %2, align 8
  store double %zeta, double* %3, align 8
  store double* %dtemp, double** %4, align 8
  store i32 0, i32* %m, align 4
  br label %5

; <label>:5                                       ; preds = %114, %0
  %6 = load i32* %m, align 4
  %7 = icmp slt i32 %6, 5
  br i1 %7, label %8, label %117

; <label>:8                                       ; preds = %5
  %9 = load i32* %m, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %10
  %12 = getelementptr inbounds [13 x double]* %11, i32 0, i64 0
  %13 = load double* %12, align 8
  %14 = load double* %1, align 8
  %15 = load i32* %m, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %16
  %18 = getelementptr inbounds [13 x double]* %17, i32 0, i64 1
  %19 = load double* %18, align 8
  %20 = load double* %1, align 8
  %21 = load i32* %m, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %22
  %24 = getelementptr inbounds [13 x double]* %23, i32 0, i64 4
  %25 = load double* %24, align 8
  %26 = load double* %1, align 8
  %27 = load i32* %m, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %28
  %30 = getelementptr inbounds [13 x double]* %29, i32 0, i64 7
  %31 = load double* %30, align 8
  %32 = load double* %1, align 8
  %33 = load i32* %m, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %34
  %36 = getelementptr inbounds [13 x double]* %35, i32 0, i64 10
  %37 = load double* %36, align 8
  %38 = fmul double %32, %37
  %39 = fadd double %31, %38
  %40 = fmul double %26, %39
  %41 = fadd double %25, %40
  %42 = fmul double %20, %41
  %43 = fadd double %19, %42
  %44 = fmul double %14, %43
  %45 = fadd double %13, %44
  %46 = load double* %2, align 8
  %47 = load i32* %m, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %48
  %50 = getelementptr inbounds [13 x double]* %49, i32 0, i64 2
  %51 = load double* %50, align 8
  %52 = load double* %2, align 8
  %53 = load i32* %m, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %54
  %56 = getelementptr inbounds [13 x double]* %55, i32 0, i64 5
  %57 = load double* %56, align 8
  %58 = load double* %2, align 8
  %59 = load i32* %m, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %60
  %62 = getelementptr inbounds [13 x double]* %61, i32 0, i64 8
  %63 = load double* %62, align 8
  %64 = load double* %2, align 8
  %65 = load i32* %m, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %66
  %68 = getelementptr inbounds [13 x double]* %67, i32 0, i64 11
  %69 = load double* %68, align 8
  %70 = fmul double %64, %69
  %71 = fadd double %63, %70
  %72 = fmul double %58, %71
  %73 = fadd double %57, %72
  %74 = fmul double %52, %73
  %75 = fadd double %51, %74
  %76 = fmul double %46, %75
  %77 = fadd double %45, %76
  %78 = load double* %3, align 8
  %79 = load i32* %m, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %80
  %82 = getelementptr inbounds [13 x double]* %81, i32 0, i64 3
  %83 = load double* %82, align 8
  %84 = load double* %3, align 8
  %85 = load i32* %m, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %86
  %88 = getelementptr inbounds [13 x double]* %87, i32 0, i64 6
  %89 = load double* %88, align 8
  %90 = load double* %3, align 8
  %91 = load i32* %m, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %92
  %94 = getelementptr inbounds [13 x double]* %93, i32 0, i64 9
  %95 = load double* %94, align 8
  %96 = load double* %3, align 8
  %97 = load i32* %m, align 4
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %98
  %100 = getelementptr inbounds [13 x double]* %99, i32 0, i64 12
  %101 = load double* %100, align 8
  %102 = fmul double %96, %101
  %103 = fadd double %95, %102
  %104 = fmul double %90, %103
  %105 = fadd double %89, %104
  %106 = fmul double %84, %105
  %107 = fadd double %83, %106
  %108 = fmul double %78, %107
  %109 = fadd double %77, %108
  %110 = load i32* %m, align 4
  %111 = sext i32 %110 to i64
  %112 = load double** %4, align 8
  %113 = getelementptr inbounds double* %112, i64 %111
  store double %109, double* %113, align 8
  br label %114

; <label>:114                                     ; preds = %8
  %115 = load i32* %m, align 4
  %116 = add nsw i32 %115, 1
  store i32 %116, i32* %m, align 4
  br label %5

; <label>:117                                     ; preds = %5
  ret void
}

; Function Attrs: nounwind uwtable
define void @initialize() #0 {
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %m = alloca i32, align 4
  %ix = alloca i32, align 4
  %iy = alloca i32, align 4
  %iz = alloca i32, align 4
  %xi = alloca double, align 8
  %eta = alloca double, align 8
  %zeta = alloca double, align 8
  %Pface = alloca [2 x [3 x [5 x double]]], align 16
  %Pxi = alloca double, align 8
  %Peta = alloca double, align 8
  %Pzeta = alloca double, align 8
  %temp = alloca [5 x double], align 16
  store i32 0, i32* %k, align 4
  br label %1

; <label>:1                                       ; preds = %47, %0
  %2 = load i32* %k, align 4
  %3 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %4 = sub nsw i32 %3, 1
  %5 = icmp sle i32 %2, %4
  br i1 %5, label %6, label %50

; <label>:6                                       ; preds = %1
  store i32 0, i32* %j, align 4
  br label %7

; <label>:7                                       ; preds = %43, %6
  %8 = load i32* %j, align 4
  %9 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %10 = sub nsw i32 %9, 1
  %11 = icmp sle i32 %8, %10
  br i1 %11, label %12, label %46

; <label>:12                                      ; preds = %7
  store i32 0, i32* %i, align 4
  br label %13

; <label>:13                                      ; preds = %39, %12
  %14 = load i32* %i, align 4
  %15 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %16 = sub nsw i32 %15, 1
  %17 = icmp sle i32 %14, %16
  br i1 %17, label %18, label %42

; <label>:18                                      ; preds = %13
  store i32 0, i32* %m, align 4
  br label %19

; <label>:19                                      ; preds = %35, %18
  %20 = load i32* %m, align 4
  %21 = icmp slt i32 %20, 5
  br i1 %21, label %22, label %38

; <label>:22                                      ; preds = %19
  %23 = load i32* %m, align 4
  %24 = sext i32 %23 to i64
  %25 = load i32* %i, align 4
  %26 = sext i32 %25 to i64
  %27 = load i32* %j, align 4
  %28 = sext i32 %27 to i64
  %29 = load i32* %k, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %30
  %32 = getelementptr inbounds [13 x [13 x [5 x double]]]* %31, i32 0, i64 %28
  %33 = getelementptr inbounds [13 x [5 x double]]* %32, i32 0, i64 %26
  %34 = getelementptr inbounds [5 x double]* %33, i32 0, i64 %24
  store double 1.000000e+00, double* %34, align 8
  br label %35

; <label>:35                                      ; preds = %22
  %36 = load i32* %m, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %m, align 4
  br label %19

; <label>:38                                      ; preds = %19
  br label %39

; <label>:39                                      ; preds = %38
  %40 = load i32* %i, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %i, align 4
  br label %13

; <label>:42                                      ; preds = %13
  br label %43

; <label>:43                                      ; preds = %42
  %44 = load i32* %j, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %j, align 4
  br label %7

; <label>:46                                      ; preds = %7
  br label %47

; <label>:47                                      ; preds = %46
  %48 = load i32* %k, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %k, align 4
  br label %1

; <label>:50                                      ; preds = %1
  store i32 0, i32* %k, align 4
  br label %51

; <label>:51                                      ; preds = %237, %50
  %52 = load i32* %k, align 4
  %53 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %54 = sub nsw i32 %53, 1
  %55 = icmp sle i32 %52, %54
  br i1 %55, label %56, label %240

; <label>:56                                      ; preds = %51
  %57 = load i32* %k, align 4
  %58 = sitofp i32 %57 to double
  %59 = load double* @dnzm1, align 8
  %60 = fmul double %58, %59
  store double %60, double* %zeta, align 8
  store i32 0, i32* %j, align 4
  br label %61

; <label>:61                                      ; preds = %233, %56
  %62 = load i32* %j, align 4
  %63 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %64 = sub nsw i32 %63, 1
  %65 = icmp sle i32 %62, %64
  br i1 %65, label %66, label %236

; <label>:66                                      ; preds = %61
  %67 = load i32* %j, align 4
  %68 = sitofp i32 %67 to double
  %69 = load double* @dnym1, align 8
  %70 = fmul double %68, %69
  store double %70, double* %eta, align 8
  store i32 0, i32* %i, align 4
  br label %71

; <label>:71                                      ; preds = %229, %66
  %72 = load i32* %i, align 4
  %73 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %74 = sub nsw i32 %73, 1
  %75 = icmp sle i32 %72, %74
  br i1 %75, label %76, label %232

; <label>:76                                      ; preds = %71
  %77 = load i32* %i, align 4
  %78 = sitofp i32 %77 to double
  %79 = load double* @dnxm1, align 8
  %80 = fmul double %78, %79
  store double %80, double* %xi, align 8
  store i32 0, i32* %ix, align 4
  br label %81

; <label>:81                                      ; preds = %94, %76
  %82 = load i32* %ix, align 4
  %83 = icmp slt i32 %82, 2
  br i1 %83, label %84, label %97

; <label>:84                                      ; preds = %81
  %85 = load i32* %ix, align 4
  %86 = sitofp i32 %85 to double
  %87 = load double* %eta, align 8
  %88 = load double* %zeta, align 8
  %89 = load i32* %ix, align 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds [2 x [3 x [5 x double]]]* %Pface, i32 0, i64 %90
  %92 = getelementptr inbounds [3 x [5 x double]]* %91, i32 0, i64 0
  %93 = getelementptr inbounds [5 x double]* %92, i32 0, i64 0
  call void @exact_solution(double %86, double %87, double %88, double* %93)
  br label %94

; <label>:94                                      ; preds = %84
  %95 = load i32* %ix, align 4
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* %ix, align 4
  br label %81

; <label>:97                                      ; preds = %81
  store i32 0, i32* %iy, align 4
  br label %98

; <label>:98                                      ; preds = %111, %97
  %99 = load i32* %iy, align 4
  %100 = icmp slt i32 %99, 2
  br i1 %100, label %101, label %114

; <label>:101                                     ; preds = %98
  %102 = load double* %xi, align 8
  %103 = load i32* %iy, align 4
  %104 = sitofp i32 %103 to double
  %105 = load double* %zeta, align 8
  %106 = load i32* %iy, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [2 x [3 x [5 x double]]]* %Pface, i32 0, i64 %107
  %109 = getelementptr inbounds [3 x [5 x double]]* %108, i32 0, i64 1
  %110 = getelementptr inbounds [5 x double]* %109, i32 0, i64 0
  call void @exact_solution(double %102, double %104, double %105, double* %110)
  br label %111

; <label>:111                                     ; preds = %101
  %112 = load i32* %iy, align 4
  %113 = add nsw i32 %112, 1
  store i32 %113, i32* %iy, align 4
  br label %98

; <label>:114                                     ; preds = %98
  store i32 0, i32* %iz, align 4
  br label %115

; <label>:115                                     ; preds = %128, %114
  %116 = load i32* %iz, align 4
  %117 = icmp slt i32 %116, 2
  br i1 %117, label %118, label %131

; <label>:118                                     ; preds = %115
  %119 = load double* %xi, align 8
  %120 = load double* %eta, align 8
  %121 = load i32* %iz, align 4
  %122 = sitofp i32 %121 to double
  %123 = load i32* %iz, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds [2 x [3 x [5 x double]]]* %Pface, i32 0, i64 %124
  %126 = getelementptr inbounds [3 x [5 x double]]* %125, i32 0, i64 2
  %127 = getelementptr inbounds [5 x double]* %126, i32 0, i64 0
  call void @exact_solution(double %119, double %120, double %122, double* %127)
  br label %128

; <label>:128                                     ; preds = %118
  %129 = load i32* %iz, align 4
  %130 = add nsw i32 %129, 1
  store i32 %130, i32* %iz, align 4
  br label %115

; <label>:131                                     ; preds = %115
  store i32 0, i32* %m, align 4
  br label %132

; <label>:132                                     ; preds = %225, %131
  %133 = load i32* %m, align 4
  %134 = icmp slt i32 %133, 5
  br i1 %134, label %135, label %228

; <label>:135                                     ; preds = %132
  %136 = load double* %xi, align 8
  %137 = load i32* %m, align 4
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds [2 x [3 x [5 x double]]]* %Pface, i32 0, i64 1
  %140 = getelementptr inbounds [3 x [5 x double]]* %139, i32 0, i64 0
  %141 = getelementptr inbounds [5 x double]* %140, i32 0, i64 %138
  %142 = load double* %141, align 8
  %143 = fmul double %136, %142
  %144 = load double* %xi, align 8
  %145 = fsub double 1.000000e+00, %144
  %146 = load i32* %m, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds [2 x [3 x [5 x double]]]* %Pface, i32 0, i64 0
  %149 = getelementptr inbounds [3 x [5 x double]]* %148, i32 0, i64 0
  %150 = getelementptr inbounds [5 x double]* %149, i32 0, i64 %147
  %151 = load double* %150, align 8
  %152 = fmul double %145, %151
  %153 = fadd double %143, %152
  store double %153, double* %Pxi, align 8
  %154 = load double* %eta, align 8
  %155 = load i32* %m, align 4
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds [2 x [3 x [5 x double]]]* %Pface, i32 0, i64 1
  %158 = getelementptr inbounds [3 x [5 x double]]* %157, i32 0, i64 1
  %159 = getelementptr inbounds [5 x double]* %158, i32 0, i64 %156
  %160 = load double* %159, align 8
  %161 = fmul double %154, %160
  %162 = load double* %eta, align 8
  %163 = fsub double 1.000000e+00, %162
  %164 = load i32* %m, align 4
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds [2 x [3 x [5 x double]]]* %Pface, i32 0, i64 0
  %167 = getelementptr inbounds [3 x [5 x double]]* %166, i32 0, i64 1
  %168 = getelementptr inbounds [5 x double]* %167, i32 0, i64 %165
  %169 = load double* %168, align 8
  %170 = fmul double %163, %169
  %171 = fadd double %161, %170
  store double %171, double* %Peta, align 8
  %172 = load double* %zeta, align 8
  %173 = load i32* %m, align 4
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds [2 x [3 x [5 x double]]]* %Pface, i32 0, i64 1
  %176 = getelementptr inbounds [3 x [5 x double]]* %175, i32 0, i64 2
  %177 = getelementptr inbounds [5 x double]* %176, i32 0, i64 %174
  %178 = load double* %177, align 8
  %179 = fmul double %172, %178
  %180 = load double* %zeta, align 8
  %181 = fsub double 1.000000e+00, %180
  %182 = load i32* %m, align 4
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds [2 x [3 x [5 x double]]]* %Pface, i32 0, i64 0
  %185 = getelementptr inbounds [3 x [5 x double]]* %184, i32 0, i64 2
  %186 = getelementptr inbounds [5 x double]* %185, i32 0, i64 %183
  %187 = load double* %186, align 8
  %188 = fmul double %181, %187
  %189 = fadd double %179, %188
  store double %189, double* %Pzeta, align 8
  %190 = load double* %Pxi, align 8
  %191 = load double* %Peta, align 8
  %192 = fadd double %190, %191
  %193 = load double* %Pzeta, align 8
  %194 = fadd double %192, %193
  %195 = load double* %Pxi, align 8
  %196 = load double* %Peta, align 8
  %197 = fmul double %195, %196
  %198 = fsub double %194, %197
  %199 = load double* %Pxi, align 8
  %200 = load double* %Pzeta, align 8
  %201 = fmul double %199, %200
  %202 = fsub double %198, %201
  %203 = load double* %Peta, align 8
  %204 = load double* %Pzeta, align 8
  %205 = fmul double %203, %204
  %206 = fsub double %202, %205
  %207 = load double* %Pxi, align 8
  %208 = load double* %Peta, align 8
  %209 = fmul double %207, %208
  %210 = load double* %Pzeta, align 8
  %211 = fmul double %209, %210
  %212 = fadd double %206, %211
  %213 = load i32* %m, align 4
  %214 = sext i32 %213 to i64
  %215 = load i32* %i, align 4
  %216 = sext i32 %215 to i64
  %217 = load i32* %j, align 4
  %218 = sext i32 %217 to i64
  %219 = load i32* %k, align 4
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %220
  %222 = getelementptr inbounds [13 x [13 x [5 x double]]]* %221, i32 0, i64 %218
  %223 = getelementptr inbounds [13 x [5 x double]]* %222, i32 0, i64 %216
  %224 = getelementptr inbounds [5 x double]* %223, i32 0, i64 %214
  store double %212, double* %224, align 8
  br label %225

; <label>:225                                     ; preds = %135
  %226 = load i32* %m, align 4
  %227 = add nsw i32 %226, 1
  store i32 %227, i32* %m, align 4
  br label %132

; <label>:228                                     ; preds = %132
  br label %229

; <label>:229                                     ; preds = %228
  %230 = load i32* %i, align 4
  %231 = add nsw i32 %230, 1
  store i32 %231, i32* %i, align 4
  br label %71

; <label>:232                                     ; preds = %71
  br label %233

; <label>:233                                     ; preds = %232
  %234 = load i32* %j, align 4
  %235 = add nsw i32 %234, 1
  store i32 %235, i32* %j, align 4
  br label %61

; <label>:236                                     ; preds = %61
  br label %237

; <label>:237                                     ; preds = %236
  %238 = load i32* %k, align 4
  %239 = add nsw i32 %238, 1
  store i32 %239, i32* %k, align 4
  br label %51

; <label>:240                                     ; preds = %51
  store i32 0, i32* %i, align 4
  store double 0.000000e+00, double* %xi, align 8
  store i32 0, i32* %k, align 4
  br label %241

; <label>:241                                     ; preds = %293, %240
  %242 = load i32* %k, align 4
  %243 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %244 = sub nsw i32 %243, 1
  %245 = icmp sle i32 %242, %244
  br i1 %245, label %246, label %296

; <label>:246                                     ; preds = %241
  %247 = load i32* %k, align 4
  %248 = sitofp i32 %247 to double
  %249 = load double* @dnzm1, align 8
  %250 = fmul double %248, %249
  store double %250, double* %zeta, align 8
  store i32 0, i32* %j, align 4
  br label %251

; <label>:251                                     ; preds = %289, %246
  %252 = load i32* %j, align 4
  %253 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %254 = sub nsw i32 %253, 1
  %255 = icmp sle i32 %252, %254
  br i1 %255, label %256, label %292

; <label>:256                                     ; preds = %251
  %257 = load i32* %j, align 4
  %258 = sitofp i32 %257 to double
  %259 = load double* @dnym1, align 8
  %260 = fmul double %258, %259
  store double %260, double* %eta, align 8
  %261 = load double* %xi, align 8
  %262 = load double* %eta, align 8
  %263 = load double* %zeta, align 8
  %264 = getelementptr inbounds [5 x double]* %temp, i32 0, i32 0
  call void @exact_solution(double %261, double %262, double %263, double* %264)
  store i32 0, i32* %m, align 4
  br label %265

; <label>:265                                     ; preds = %285, %256
  %266 = load i32* %m, align 4
  %267 = icmp slt i32 %266, 5
  br i1 %267, label %268, label %288

; <label>:268                                     ; preds = %265
  %269 = load i32* %m, align 4
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds [5 x double]* %temp, i32 0, i64 %270
  %272 = load double* %271, align 8
  %273 = load i32* %m, align 4
  %274 = sext i32 %273 to i64
  %275 = load i32* %i, align 4
  %276 = sext i32 %275 to i64
  %277 = load i32* %j, align 4
  %278 = sext i32 %277 to i64
  %279 = load i32* %k, align 4
  %280 = sext i32 %279 to i64
  %281 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %280
  %282 = getelementptr inbounds [13 x [13 x [5 x double]]]* %281, i32 0, i64 %278
  %283 = getelementptr inbounds [13 x [5 x double]]* %282, i32 0, i64 %276
  %284 = getelementptr inbounds [5 x double]* %283, i32 0, i64 %274
  store double %272, double* %284, align 8
  br label %285

; <label>:285                                     ; preds = %268
  %286 = load i32* %m, align 4
  %287 = add nsw i32 %286, 1
  store i32 %287, i32* %m, align 4
  br label %265

; <label>:288                                     ; preds = %265
  br label %289

; <label>:289                                     ; preds = %288
  %290 = load i32* %j, align 4
  %291 = add nsw i32 %290, 1
  store i32 %291, i32* %j, align 4
  br label %251

; <label>:292                                     ; preds = %251
  br label %293

; <label>:293                                     ; preds = %292
  %294 = load i32* %k, align 4
  %295 = add nsw i32 %294, 1
  store i32 %295, i32* %k, align 4
  br label %241

; <label>:296                                     ; preds = %241
  %297 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %298 = sub nsw i32 %297, 1
  store i32 %298, i32* %i, align 4
  store double 1.000000e+00, double* %xi, align 8
  store i32 0, i32* %k, align 4
  br label %299

; <label>:299                                     ; preds = %351, %296
  %300 = load i32* %k, align 4
  %301 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %302 = sub nsw i32 %301, 1
  %303 = icmp sle i32 %300, %302
  br i1 %303, label %304, label %354

; <label>:304                                     ; preds = %299
  %305 = load i32* %k, align 4
  %306 = sitofp i32 %305 to double
  %307 = load double* @dnzm1, align 8
  %308 = fmul double %306, %307
  store double %308, double* %zeta, align 8
  store i32 0, i32* %j, align 4
  br label %309

; <label>:309                                     ; preds = %347, %304
  %310 = load i32* %j, align 4
  %311 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %312 = sub nsw i32 %311, 1
  %313 = icmp sle i32 %310, %312
  br i1 %313, label %314, label %350

; <label>:314                                     ; preds = %309
  %315 = load i32* %j, align 4
  %316 = sitofp i32 %315 to double
  %317 = load double* @dnym1, align 8
  %318 = fmul double %316, %317
  store double %318, double* %eta, align 8
  %319 = load double* %xi, align 8
  %320 = load double* %eta, align 8
  %321 = load double* %zeta, align 8
  %322 = getelementptr inbounds [5 x double]* %temp, i32 0, i32 0
  call void @exact_solution(double %319, double %320, double %321, double* %322)
  store i32 0, i32* %m, align 4
  br label %323

; <label>:323                                     ; preds = %343, %314
  %324 = load i32* %m, align 4
  %325 = icmp slt i32 %324, 5
  br i1 %325, label %326, label %346

; <label>:326                                     ; preds = %323
  %327 = load i32* %m, align 4
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds [5 x double]* %temp, i32 0, i64 %328
  %330 = load double* %329, align 8
  %331 = load i32* %m, align 4
  %332 = sext i32 %331 to i64
  %333 = load i32* %i, align 4
  %334 = sext i32 %333 to i64
  %335 = load i32* %j, align 4
  %336 = sext i32 %335 to i64
  %337 = load i32* %k, align 4
  %338 = sext i32 %337 to i64
  %339 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %338
  %340 = getelementptr inbounds [13 x [13 x [5 x double]]]* %339, i32 0, i64 %336
  %341 = getelementptr inbounds [13 x [5 x double]]* %340, i32 0, i64 %334
  %342 = getelementptr inbounds [5 x double]* %341, i32 0, i64 %332
  store double %330, double* %342, align 8
  br label %343

; <label>:343                                     ; preds = %326
  %344 = load i32* %m, align 4
  %345 = add nsw i32 %344, 1
  store i32 %345, i32* %m, align 4
  br label %323

; <label>:346                                     ; preds = %323
  br label %347

; <label>:347                                     ; preds = %346
  %348 = load i32* %j, align 4
  %349 = add nsw i32 %348, 1
  store i32 %349, i32* %j, align 4
  br label %309

; <label>:350                                     ; preds = %309
  br label %351

; <label>:351                                     ; preds = %350
  %352 = load i32* %k, align 4
  %353 = add nsw i32 %352, 1
  store i32 %353, i32* %k, align 4
  br label %299

; <label>:354                                     ; preds = %299
  store i32 0, i32* %j, align 4
  store double 0.000000e+00, double* %eta, align 8
  store i32 0, i32* %k, align 4
  br label %355

; <label>:355                                     ; preds = %407, %354
  %356 = load i32* %k, align 4
  %357 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %358 = sub nsw i32 %357, 1
  %359 = icmp sle i32 %356, %358
  br i1 %359, label %360, label %410

; <label>:360                                     ; preds = %355
  %361 = load i32* %k, align 4
  %362 = sitofp i32 %361 to double
  %363 = load double* @dnzm1, align 8
  %364 = fmul double %362, %363
  store double %364, double* %zeta, align 8
  store i32 0, i32* %i, align 4
  br label %365

; <label>:365                                     ; preds = %403, %360
  %366 = load i32* %i, align 4
  %367 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %368 = sub nsw i32 %367, 1
  %369 = icmp sle i32 %366, %368
  br i1 %369, label %370, label %406

; <label>:370                                     ; preds = %365
  %371 = load i32* %i, align 4
  %372 = sitofp i32 %371 to double
  %373 = load double* @dnxm1, align 8
  %374 = fmul double %372, %373
  store double %374, double* %xi, align 8
  %375 = load double* %xi, align 8
  %376 = load double* %eta, align 8
  %377 = load double* %zeta, align 8
  %378 = getelementptr inbounds [5 x double]* %temp, i32 0, i32 0
  call void @exact_solution(double %375, double %376, double %377, double* %378)
  store i32 0, i32* %m, align 4
  br label %379

; <label>:379                                     ; preds = %399, %370
  %380 = load i32* %m, align 4
  %381 = icmp slt i32 %380, 5
  br i1 %381, label %382, label %402

; <label>:382                                     ; preds = %379
  %383 = load i32* %m, align 4
  %384 = sext i32 %383 to i64
  %385 = getelementptr inbounds [5 x double]* %temp, i32 0, i64 %384
  %386 = load double* %385, align 8
  %387 = load i32* %m, align 4
  %388 = sext i32 %387 to i64
  %389 = load i32* %i, align 4
  %390 = sext i32 %389 to i64
  %391 = load i32* %j, align 4
  %392 = sext i32 %391 to i64
  %393 = load i32* %k, align 4
  %394 = sext i32 %393 to i64
  %395 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %394
  %396 = getelementptr inbounds [13 x [13 x [5 x double]]]* %395, i32 0, i64 %392
  %397 = getelementptr inbounds [13 x [5 x double]]* %396, i32 0, i64 %390
  %398 = getelementptr inbounds [5 x double]* %397, i32 0, i64 %388
  store double %386, double* %398, align 8
  br label %399

; <label>:399                                     ; preds = %382
  %400 = load i32* %m, align 4
  %401 = add nsw i32 %400, 1
  store i32 %401, i32* %m, align 4
  br label %379

; <label>:402                                     ; preds = %379
  br label %403

; <label>:403                                     ; preds = %402
  %404 = load i32* %i, align 4
  %405 = add nsw i32 %404, 1
  store i32 %405, i32* %i, align 4
  br label %365

; <label>:406                                     ; preds = %365
  br label %407

; <label>:407                                     ; preds = %406
  %408 = load i32* %k, align 4
  %409 = add nsw i32 %408, 1
  store i32 %409, i32* %k, align 4
  br label %355

; <label>:410                                     ; preds = %355
  %411 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %412 = sub nsw i32 %411, 1
  store i32 %412, i32* %j, align 4
  store double 1.000000e+00, double* %eta, align 8
  store i32 0, i32* %k, align 4
  br label %413

; <label>:413                                     ; preds = %465, %410
  %414 = load i32* %k, align 4
  %415 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %416 = sub nsw i32 %415, 1
  %417 = icmp sle i32 %414, %416
  br i1 %417, label %418, label %468

; <label>:418                                     ; preds = %413
  %419 = load i32* %k, align 4
  %420 = sitofp i32 %419 to double
  %421 = load double* @dnzm1, align 8
  %422 = fmul double %420, %421
  store double %422, double* %zeta, align 8
  store i32 0, i32* %i, align 4
  br label %423

; <label>:423                                     ; preds = %461, %418
  %424 = load i32* %i, align 4
  %425 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %426 = sub nsw i32 %425, 1
  %427 = icmp sle i32 %424, %426
  br i1 %427, label %428, label %464

; <label>:428                                     ; preds = %423
  %429 = load i32* %i, align 4
  %430 = sitofp i32 %429 to double
  %431 = load double* @dnxm1, align 8
  %432 = fmul double %430, %431
  store double %432, double* %xi, align 8
  %433 = load double* %xi, align 8
  %434 = load double* %eta, align 8
  %435 = load double* %zeta, align 8
  %436 = getelementptr inbounds [5 x double]* %temp, i32 0, i32 0
  call void @exact_solution(double %433, double %434, double %435, double* %436)
  store i32 0, i32* %m, align 4
  br label %437

; <label>:437                                     ; preds = %457, %428
  %438 = load i32* %m, align 4
  %439 = icmp slt i32 %438, 5
  br i1 %439, label %440, label %460

; <label>:440                                     ; preds = %437
  %441 = load i32* %m, align 4
  %442 = sext i32 %441 to i64
  %443 = getelementptr inbounds [5 x double]* %temp, i32 0, i64 %442
  %444 = load double* %443, align 8
  %445 = load i32* %m, align 4
  %446 = sext i32 %445 to i64
  %447 = load i32* %i, align 4
  %448 = sext i32 %447 to i64
  %449 = load i32* %j, align 4
  %450 = sext i32 %449 to i64
  %451 = load i32* %k, align 4
  %452 = sext i32 %451 to i64
  %453 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %452
  %454 = getelementptr inbounds [13 x [13 x [5 x double]]]* %453, i32 0, i64 %450
  %455 = getelementptr inbounds [13 x [5 x double]]* %454, i32 0, i64 %448
  %456 = getelementptr inbounds [5 x double]* %455, i32 0, i64 %446
  store double %444, double* %456, align 8
  br label %457

; <label>:457                                     ; preds = %440
  %458 = load i32* %m, align 4
  %459 = add nsw i32 %458, 1
  store i32 %459, i32* %m, align 4
  br label %437

; <label>:460                                     ; preds = %437
  br label %461

; <label>:461                                     ; preds = %460
  %462 = load i32* %i, align 4
  %463 = add nsw i32 %462, 1
  store i32 %463, i32* %i, align 4
  br label %423

; <label>:464                                     ; preds = %423
  br label %465

; <label>:465                                     ; preds = %464
  %466 = load i32* %k, align 4
  %467 = add nsw i32 %466, 1
  store i32 %467, i32* %k, align 4
  br label %413

; <label>:468                                     ; preds = %413
  store i32 0, i32* %k, align 4
  store double 0.000000e+00, double* %zeta, align 8
  store i32 0, i32* %j, align 4
  br label %469

; <label>:469                                     ; preds = %521, %468
  %470 = load i32* %j, align 4
  %471 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %472 = sub nsw i32 %471, 1
  %473 = icmp sle i32 %470, %472
  br i1 %473, label %474, label %524

; <label>:474                                     ; preds = %469
  %475 = load i32* %j, align 4
  %476 = sitofp i32 %475 to double
  %477 = load double* @dnym1, align 8
  %478 = fmul double %476, %477
  store double %478, double* %eta, align 8
  store i32 0, i32* %i, align 4
  br label %479

; <label>:479                                     ; preds = %517, %474
  %480 = load i32* %i, align 4
  %481 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %482 = sub nsw i32 %481, 1
  %483 = icmp sle i32 %480, %482
  br i1 %483, label %484, label %520

; <label>:484                                     ; preds = %479
  %485 = load i32* %i, align 4
  %486 = sitofp i32 %485 to double
  %487 = load double* @dnxm1, align 8
  %488 = fmul double %486, %487
  store double %488, double* %xi, align 8
  %489 = load double* %xi, align 8
  %490 = load double* %eta, align 8
  %491 = load double* %zeta, align 8
  %492 = getelementptr inbounds [5 x double]* %temp, i32 0, i32 0
  call void @exact_solution(double %489, double %490, double %491, double* %492)
  store i32 0, i32* %m, align 4
  br label %493

; <label>:493                                     ; preds = %513, %484
  %494 = load i32* %m, align 4
  %495 = icmp slt i32 %494, 5
  br i1 %495, label %496, label %516

; <label>:496                                     ; preds = %493
  %497 = load i32* %m, align 4
  %498 = sext i32 %497 to i64
  %499 = getelementptr inbounds [5 x double]* %temp, i32 0, i64 %498
  %500 = load double* %499, align 8
  %501 = load i32* %m, align 4
  %502 = sext i32 %501 to i64
  %503 = load i32* %i, align 4
  %504 = sext i32 %503 to i64
  %505 = load i32* %j, align 4
  %506 = sext i32 %505 to i64
  %507 = load i32* %k, align 4
  %508 = sext i32 %507 to i64
  %509 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %508
  %510 = getelementptr inbounds [13 x [13 x [5 x double]]]* %509, i32 0, i64 %506
  %511 = getelementptr inbounds [13 x [5 x double]]* %510, i32 0, i64 %504
  %512 = getelementptr inbounds [5 x double]* %511, i32 0, i64 %502
  store double %500, double* %512, align 8
  br label %513

; <label>:513                                     ; preds = %496
  %514 = load i32* %m, align 4
  %515 = add nsw i32 %514, 1
  store i32 %515, i32* %m, align 4
  br label %493

; <label>:516                                     ; preds = %493
  br label %517

; <label>:517                                     ; preds = %516
  %518 = load i32* %i, align 4
  %519 = add nsw i32 %518, 1
  store i32 %519, i32* %i, align 4
  br label %479

; <label>:520                                     ; preds = %479
  br label %521

; <label>:521                                     ; preds = %520
  %522 = load i32* %j, align 4
  %523 = add nsw i32 %522, 1
  store i32 %523, i32* %j, align 4
  br label %469

; <label>:524                                     ; preds = %469
  %525 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %526 = sub nsw i32 %525, 1
  store i32 %526, i32* %k, align 4
  store double 1.000000e+00, double* %zeta, align 8
  store i32 0, i32* %j, align 4
  br label %527

; <label>:527                                     ; preds = %579, %524
  %528 = load i32* %j, align 4
  %529 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %530 = sub nsw i32 %529, 1
  %531 = icmp sle i32 %528, %530
  br i1 %531, label %532, label %582

; <label>:532                                     ; preds = %527
  %533 = load i32* %j, align 4
  %534 = sitofp i32 %533 to double
  %535 = load double* @dnym1, align 8
  %536 = fmul double %534, %535
  store double %536, double* %eta, align 8
  store i32 0, i32* %i, align 4
  br label %537

; <label>:537                                     ; preds = %575, %532
  %538 = load i32* %i, align 4
  %539 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %540 = sub nsw i32 %539, 1
  %541 = icmp sle i32 %538, %540
  br i1 %541, label %542, label %578

; <label>:542                                     ; preds = %537
  %543 = load i32* %i, align 4
  %544 = sitofp i32 %543 to double
  %545 = load double* @dnxm1, align 8
  %546 = fmul double %544, %545
  store double %546, double* %xi, align 8
  %547 = load double* %xi, align 8
  %548 = load double* %eta, align 8
  %549 = load double* %zeta, align 8
  %550 = getelementptr inbounds [5 x double]* %temp, i32 0, i32 0
  call void @exact_solution(double %547, double %548, double %549, double* %550)
  store i32 0, i32* %m, align 4
  br label %551

; <label>:551                                     ; preds = %571, %542
  %552 = load i32* %m, align 4
  %553 = icmp slt i32 %552, 5
  br i1 %553, label %554, label %574

; <label>:554                                     ; preds = %551
  %555 = load i32* %m, align 4
  %556 = sext i32 %555 to i64
  %557 = getelementptr inbounds [5 x double]* %temp, i32 0, i64 %556
  %558 = load double* %557, align 8
  %559 = load i32* %m, align 4
  %560 = sext i32 %559 to i64
  %561 = load i32* %i, align 4
  %562 = sext i32 %561 to i64
  %563 = load i32* %j, align 4
  %564 = sext i32 %563 to i64
  %565 = load i32* %k, align 4
  %566 = sext i32 %565 to i64
  %567 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %566
  %568 = getelementptr inbounds [13 x [13 x [5 x double]]]* %567, i32 0, i64 %564
  %569 = getelementptr inbounds [13 x [5 x double]]* %568, i32 0, i64 %562
  %570 = getelementptr inbounds [5 x double]* %569, i32 0, i64 %560
  store double %558, double* %570, align 8
  br label %571

; <label>:571                                     ; preds = %554
  %572 = load i32* %m, align 4
  %573 = add nsw i32 %572, 1
  store i32 %573, i32* %m, align 4
  br label %551

; <label>:574                                     ; preds = %551
  br label %575

; <label>:575                                     ; preds = %574
  %576 = load i32* %i, align 4
  %577 = add nsw i32 %576, 1
  store i32 %577, i32* %i, align 4
  br label %537

; <label>:578                                     ; preds = %537
  br label %579

; <label>:579                                     ; preds = %578
  %580 = load i32* %j, align 4
  %581 = add nsw i32 %580, 1
  store i32 %581, i32* %j, align 4
  br label %527

; <label>:582                                     ; preds = %527
  ret void
}

; Function Attrs: nounwind uwtable
define void @lhsinit([3 x [5 x [5 x double]]]* %lhs, i32 %size) #0 {
  %1 = alloca [3 x [5 x [5 x double]]]*, align 8
  %2 = alloca i32, align 4
  %i = alloca i32, align 4
  %m = alloca i32, align 4
  %n = alloca i32, align 4
  store [3 x [5 x [5 x double]]]* %lhs, [3 x [5 x [5 x double]]]** %1, align 8
  store i32 %size, i32* %2, align 4
  %3 = load i32* %2, align 4
  store i32 %3, i32* %i, align 4
  store i32 0, i32* %n, align 4
  br label %4

; <label>:4                                       ; preds = %76, %0
  %5 = load i32* %n, align 4
  %6 = icmp slt i32 %5, 5
  br i1 %6, label %7, label %79

; <label>:7                                       ; preds = %4
  store i32 0, i32* %m, align 4
  br label %8

; <label>:8                                       ; preds = %72, %7
  %9 = load i32* %m, align 4
  %10 = icmp slt i32 %9, 5
  br i1 %10, label %11, label %75

; <label>:11                                      ; preds = %8
  %12 = load i32* %m, align 4
  %13 = sext i32 %12 to i64
  %14 = load i32* %n, align 4
  %15 = sext i32 %14 to i64
  %16 = load [3 x [5 x [5 x double]]]** %1, align 8
  %17 = getelementptr inbounds [3 x [5 x [5 x double]]]* %16, i64 0
  %18 = getelementptr inbounds [3 x [5 x [5 x double]]]* %17, i32 0, i64 0
  %19 = getelementptr inbounds [5 x [5 x double]]* %18, i32 0, i64 %15
  %20 = getelementptr inbounds [5 x double]* %19, i32 0, i64 %13
  store double 0.000000e+00, double* %20, align 8
  %21 = load i32* %m, align 4
  %22 = sext i32 %21 to i64
  %23 = load i32* %n, align 4
  %24 = sext i32 %23 to i64
  %25 = load [3 x [5 x [5 x double]]]** %1, align 8
  %26 = getelementptr inbounds [3 x [5 x [5 x double]]]* %25, i64 0
  %27 = getelementptr inbounds [3 x [5 x [5 x double]]]* %26, i32 0, i64 1
  %28 = getelementptr inbounds [5 x [5 x double]]* %27, i32 0, i64 %24
  %29 = getelementptr inbounds [5 x double]* %28, i32 0, i64 %22
  store double 0.000000e+00, double* %29, align 8
  %30 = load i32* %m, align 4
  %31 = sext i32 %30 to i64
  %32 = load i32* %n, align 4
  %33 = sext i32 %32 to i64
  %34 = load [3 x [5 x [5 x double]]]** %1, align 8
  %35 = getelementptr inbounds [3 x [5 x [5 x double]]]* %34, i64 0
  %36 = getelementptr inbounds [3 x [5 x [5 x double]]]* %35, i32 0, i64 2
  %37 = getelementptr inbounds [5 x [5 x double]]* %36, i32 0, i64 %33
  %38 = getelementptr inbounds [5 x double]* %37, i32 0, i64 %31
  store double 0.000000e+00, double* %38, align 8
  %39 = load i32* %m, align 4
  %40 = sext i32 %39 to i64
  %41 = load i32* %n, align 4
  %42 = sext i32 %41 to i64
  %43 = load i32* %i, align 4
  %44 = sext i32 %43 to i64
  %45 = load [3 x [5 x [5 x double]]]** %1, align 8
  %46 = getelementptr inbounds [3 x [5 x [5 x double]]]* %45, i64 %44
  %47 = getelementptr inbounds [3 x [5 x [5 x double]]]* %46, i32 0, i64 0
  %48 = getelementptr inbounds [5 x [5 x double]]* %47, i32 0, i64 %42
  %49 = getelementptr inbounds [5 x double]* %48, i32 0, i64 %40
  store double 0.000000e+00, double* %49, align 8
  %50 = load i32* %m, align 4
  %51 = sext i32 %50 to i64
  %52 = load i32* %n, align 4
  %53 = sext i32 %52 to i64
  %54 = load i32* %i, align 4
  %55 = sext i32 %54 to i64
  %56 = load [3 x [5 x [5 x double]]]** %1, align 8
  %57 = getelementptr inbounds [3 x [5 x [5 x double]]]* %56, i64 %55
  %58 = getelementptr inbounds [3 x [5 x [5 x double]]]* %57, i32 0, i64 1
  %59 = getelementptr inbounds [5 x [5 x double]]* %58, i32 0, i64 %53
  %60 = getelementptr inbounds [5 x double]* %59, i32 0, i64 %51
  store double 0.000000e+00, double* %60, align 8
  %61 = load i32* %m, align 4
  %62 = sext i32 %61 to i64
  %63 = load i32* %n, align 4
  %64 = sext i32 %63 to i64
  %65 = load i32* %i, align 4
  %66 = sext i32 %65 to i64
  %67 = load [3 x [5 x [5 x double]]]** %1, align 8
  %68 = getelementptr inbounds [3 x [5 x [5 x double]]]* %67, i64 %66
  %69 = getelementptr inbounds [3 x [5 x [5 x double]]]* %68, i32 0, i64 2
  %70 = getelementptr inbounds [5 x [5 x double]]* %69, i32 0, i64 %64
  %71 = getelementptr inbounds [5 x double]* %70, i32 0, i64 %62
  store double 0.000000e+00, double* %71, align 8
  br label %72

; <label>:72                                      ; preds = %11
  %73 = load i32* %m, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %m, align 4
  br label %8

; <label>:75                                      ; preds = %8
  br label %76

; <label>:76                                      ; preds = %75
  %77 = load i32* %n, align 4
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %n, align 4
  br label %4

; <label>:79                                      ; preds = %4
  store i32 0, i32* %m, align 4
  br label %80

; <label>:80                                      ; preds = %104, %79
  %81 = load i32* %m, align 4
  %82 = icmp slt i32 %81, 5
  br i1 %82, label %83, label %107

; <label>:83                                      ; preds = %80
  %84 = load i32* %m, align 4
  %85 = sext i32 %84 to i64
  %86 = load i32* %m, align 4
  %87 = sext i32 %86 to i64
  %88 = load [3 x [5 x [5 x double]]]** %1, align 8
  %89 = getelementptr inbounds [3 x [5 x [5 x double]]]* %88, i64 0
  %90 = getelementptr inbounds [3 x [5 x [5 x double]]]* %89, i32 0, i64 1
  %91 = getelementptr inbounds [5 x [5 x double]]* %90, i32 0, i64 %87
  %92 = getelementptr inbounds [5 x double]* %91, i32 0, i64 %85
  store double 1.000000e+00, double* %92, align 8
  %93 = load i32* %m, align 4
  %94 = sext i32 %93 to i64
  %95 = load i32* %m, align 4
  %96 = sext i32 %95 to i64
  %97 = load i32* %i, align 4
  %98 = sext i32 %97 to i64
  %99 = load [3 x [5 x [5 x double]]]** %1, align 8
  %100 = getelementptr inbounds [3 x [5 x [5 x double]]]* %99, i64 %98
  %101 = getelementptr inbounds [3 x [5 x [5 x double]]]* %100, i32 0, i64 1
  %102 = getelementptr inbounds [5 x [5 x double]]* %101, i32 0, i64 %96
  %103 = getelementptr inbounds [5 x double]* %102, i32 0, i64 %94
  store double 1.000000e+00, double* %103, align 8
  br label %104

; <label>:104                                     ; preds = %83
  %105 = load i32* %m, align 4
  %106 = add nsw i32 %105, 1
  store i32 %106, i32* %m, align 4
  br label %80

; <label>:107                                     ; preds = %80
  ret void
}

; Function Attrs: nounwind uwtable
define void @print_results(i8* %name, i8 signext %class, i32 %n1, i32 %n2, i32 %n3, i32 %niter, double %t, double %mops, i8* %optype, i32 %verified, i8* %npbversion, i8* %compiletime, i8* %cs1, i8* %cs2, i8* %cs3, i8* %cs4, i8* %cs5, i8* %cs6, i8* %cs7) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i8, align 1
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %size = alloca [16 x i8], align 16
  %j = alloca i32, align 4
  store i8* %name, i8** %1, align 8
  store i8 %class, i8* %2, align 1
  store i32 %n1, i32* %3, align 4
  store i32 %n2, i32* %4, align 4
  store i32 %n3, i32* %5, align 4
  store i32 %niter, i32* %6, align 4
  store double %t, double* %7, align 8
  store double %mops, double* %8, align 8
  store i8* %optype, i8** %9, align 8
  store i32 %verified, i32* %10, align 4
  store i8* %npbversion, i8** %11, align 8
  store i8* %compiletime, i8** %12, align 8
  store i8* %cs1, i8** %13, align 8
  store i8* %cs2, i8** %14, align 8
  store i8* %cs3, i8** %15, align 8
  store i8* %cs4, i8** %16, align 8
  store i8* %cs5, i8** %17, align 8
  store i8* %cs6, i8** %18, align 8
  store i8* %cs7, i8** %19, align 8
  %20 = load i8** %1, align 8
  %21 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([28 x i8]* @.str75, i32 0, i32 0), i8* %20)
  %22 = load i8* %2, align 1
  %23 = sext i8 %22 to i32
  %24 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str176, i32 0, i32 0), i32 %23)
  %25 = load i32* %4, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %71

; <label>:27                                      ; preds = %0
  %28 = load i32* %5, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %71

; <label>:30                                      ; preds = %27
  %31 = load i8** %1, align 8
  %32 = getelementptr inbounds i8* %31, i64 0
  %33 = load i8* %32, align 1
  %34 = sext i8 %33 to i32
  %35 = icmp eq i32 %34, 69
  br i1 %35, label %36, label %67

; <label>:36                                      ; preds = %30
  %37 = load i8** %1, align 8
  %38 = getelementptr inbounds i8* %37, i64 1
  %39 = load i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %40, 80
  br i1 %41, label %42, label %67

; <label>:42                                      ; preds = %36
  %43 = getelementptr inbounds [16 x i8]* %size, i32 0, i32 0
  %44 = load i32* %3, align 4
  %45 = sitofp i32 %44 to double
  %46 = call double @pow(double 2.000000e+00, double %45) #4
  %47 = call i32 (i8*, i8*, ...)* @sprintf(i8* %43, i8* getelementptr inbounds ([8 x i8]* @.str277, i32 0, i32 0), double %46) #4
  store i32 14, i32* %j, align 4
  %48 = load i32* %j, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [16 x i8]* %size, i32 0, i64 %49
  %51 = load i8* %50, align 1
  %52 = sext i8 %51 to i32
  %53 = icmp eq i32 %52, 46
  br i1 %53, label %54, label %60

; <label>:54                                      ; preds = %42
  %55 = load i32* %j, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [16 x i8]* %size, i32 0, i64 %56
  store i8 32, i8* %57, align 1
  %58 = load i32* %j, align 4
  %59 = add nsw i32 %58, -1
  store i32 %59, i32* %j, align 4
  br label %60

; <label>:60                                      ; preds = %54, %42
  %61 = load i32* %j, align 4
  %62 = add nsw i32 %61, 1
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [16 x i8]* %size, i32 0, i64 %63
  store i8 0, i8* %64, align 1
  %65 = getelementptr inbounds [16 x i8]* %size, i32 0, i32 0
  %66 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([34 x i8]* @.str378, i32 0, i32 0), i8* %65)
  br label %70

; <label>:67                                      ; preds = %36, %30
  %68 = load i32* %3, align 4
  %69 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str479, i32 0, i32 0), i32 %68)
  br label %70

; <label>:70                                      ; preds = %67, %60
  br label %76

; <label>:71                                      ; preds = %27, %0
  %72 = load i32* %3, align 4
  %73 = load i32* %4, align 4
  %74 = load i32* %5, align 4
  %75 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([42 x i8]* @.str580, i32 0, i32 0), i32 %72, i32 %73, i32 %74)
  br label %76

; <label>:76                                      ; preds = %71, %70
  %77 = load i32* %6, align 4
  %78 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str681, i32 0, i32 0), i32 %77)
  %79 = load i8** %9, align 8
  %80 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([25 x i8]* @.str782, i32 0, i32 0), i8* %79)
  %81 = load i32* %10, align 4
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %83, label %85

; <label>:83                                      ; preds = %76
  %84 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str883, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str984, i32 0, i32 0))
  br label %87

; <label>:85                                      ; preds = %76
  %86 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str883, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str1085, i32 0, i32 0))
  br label %87

; <label>:87                                      ; preds = %85, %83
  %88 = load i8** %11, align 8
  %89 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str1186, i32 0, i32 0), i8* %88)
  %90 = load i8** %12, align 8
  %91 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str1287, i32 0, i32 0), i8* %90)
  %92 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([195 x i8]* @.str1388, i32 0, i32 0))
  ret void
}

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: nounwind
declare double @pow(double, double) #2

; Function Attrs: nounwind uwtable
define double @randlc(double* %x, double %a) #0 {
  %1 = alloca double*, align 8
  %2 = alloca double, align 8
  %r23 = alloca double, align 8
  %r46 = alloca double, align 8
  %t23 = alloca double, align 8
  %t46 = alloca double, align 8
  %t1 = alloca double, align 8
  %t2 = alloca double, align 8
  %t3 = alloca double, align 8
  %t4 = alloca double, align 8
  %a1 = alloca double, align 8
  %a2 = alloca double, align 8
  %x1 = alloca double, align 8
  %x2 = alloca double, align 8
  %z = alloca double, align 8
  %r = alloca double, align 8
  store double* %x, double** %1, align 8
  store double %a, double* %2, align 8
  store double 0x3E80000000000000, double* %r23, align 8
  store double 0x3D10000000000000, double* %r46, align 8
  store double 8.388608e+06, double* %t23, align 8
  store double 0x42D0000000000000, double* %t46, align 8
  %3 = load double* %2, align 8
  %4 = fmul double 0x3E80000000000000, %3
  store double %4, double* %t1, align 8
  %5 = load double* %t1, align 8
  %6 = fptosi double %5 to i32
  %7 = sitofp i32 %6 to double
  store double %7, double* %a1, align 8
  %8 = load double* %2, align 8
  %9 = load double* %a1, align 8
  %10 = fmul double 8.388608e+06, %9
  %11 = fsub double %8, %10
  store double %11, double* %a2, align 8
  %12 = load double** %1, align 8
  %13 = load double* %12, align 8
  %14 = fmul double 0x3E80000000000000, %13
  store double %14, double* %t1, align 8
  %15 = load double* %t1, align 8
  %16 = fptosi double %15 to i32
  %17 = sitofp i32 %16 to double
  store double %17, double* %x1, align 8
  %18 = load double** %1, align 8
  %19 = load double* %18, align 8
  %20 = load double* %x1, align 8
  %21 = fmul double 8.388608e+06, %20
  %22 = fsub double %19, %21
  store double %22, double* %x2, align 8
  %23 = load double* %a1, align 8
  %24 = load double* %x2, align 8
  %25 = fmul double %23, %24
  %26 = load double* %a2, align 8
  %27 = load double* %x1, align 8
  %28 = fmul double %26, %27
  %29 = fadd double %25, %28
  store double %29, double* %t1, align 8
  %30 = load double* %t1, align 8
  %31 = fmul double 0x3E80000000000000, %30
  %32 = fptosi double %31 to i32
  %33 = sitofp i32 %32 to double
  store double %33, double* %t2, align 8
  %34 = load double* %t1, align 8
  %35 = load double* %t2, align 8
  %36 = fmul double 8.388608e+06, %35
  %37 = fsub double %34, %36
  store double %37, double* %z, align 8
  %38 = load double* %z, align 8
  %39 = fmul double 8.388608e+06, %38
  %40 = load double* %a2, align 8
  %41 = load double* %x2, align 8
  %42 = fmul double %40, %41
  %43 = fadd double %39, %42
  store double %43, double* %t3, align 8
  %44 = load double* %t3, align 8
  %45 = fmul double 0x3D10000000000000, %44
  %46 = fptosi double %45 to i32
  %47 = sitofp i32 %46 to double
  store double %47, double* %t4, align 8
  %48 = load double* %t3, align 8
  %49 = load double* %t4, align 8
  %50 = fmul double 0x42D0000000000000, %49
  %51 = fsub double %48, %50
  %52 = load double** %1, align 8
  store double %51, double* %52, align 8
  %53 = load double** %1, align 8
  %54 = load double* %53, align 8
  %55 = fmul double 0x3D10000000000000, %54
  store double %55, double* %r, align 8
  %56 = load double* %r, align 8
  ret double %56
}

; Function Attrs: nounwind uwtable
define void @vranlc(i32 %n, double* %x, double %a, double* %y) #0 {
  %1 = alloca i32, align 4
  %2 = alloca double*, align 8
  %3 = alloca double, align 8
  %4 = alloca double*, align 8
  %r23 = alloca double, align 8
  %r46 = alloca double, align 8
  %t23 = alloca double, align 8
  %t46 = alloca double, align 8
  %t1 = alloca double, align 8
  %t2 = alloca double, align 8
  %t3 = alloca double, align 8
  %t4 = alloca double, align 8
  %a1 = alloca double, align 8
  %a2 = alloca double, align 8
  %x1 = alloca double, align 8
  %x2 = alloca double, align 8
  %z = alloca double, align 8
  %i = alloca i32, align 4
  store i32 %n, i32* %1, align 4
  store double* %x, double** %2, align 8
  store double %a, double* %3, align 8
  store double* %y, double** %4, align 8
  store double 0x3E80000000000000, double* %r23, align 8
  store double 0x3D10000000000000, double* %r46, align 8
  store double 8.388608e+06, double* %t23, align 8
  store double 0x42D0000000000000, double* %t46, align 8
  %5 = load double* %3, align 8
  %6 = fmul double 0x3E80000000000000, %5
  store double %6, double* %t1, align 8
  %7 = load double* %t1, align 8
  %8 = fptosi double %7 to i32
  %9 = sitofp i32 %8 to double
  store double %9, double* %a1, align 8
  %10 = load double* %3, align 8
  %11 = load double* %a1, align 8
  %12 = fmul double 8.388608e+06, %11
  %13 = fsub double %10, %12
  store double %13, double* %a2, align 8
  store i32 0, i32* %i, align 4
  br label %14

; <label>:14                                      ; preds = %67, %0
  %15 = load i32* %i, align 4
  %16 = load i32* %1, align 4
  %17 = icmp slt i32 %15, %16
  br i1 %17, label %18, label %70

; <label>:18                                      ; preds = %14
  %19 = load double** %2, align 8
  %20 = load double* %19, align 8
  %21 = fmul double 0x3E80000000000000, %20
  store double %21, double* %t1, align 8
  %22 = load double* %t1, align 8
  %23 = fptosi double %22 to i32
  %24 = sitofp i32 %23 to double
  store double %24, double* %x1, align 8
  %25 = load double** %2, align 8
  %26 = load double* %25, align 8
  %27 = load double* %x1, align 8
  %28 = fmul double 8.388608e+06, %27
  %29 = fsub double %26, %28
  store double %29, double* %x2, align 8
  %30 = load double* %a1, align 8
  %31 = load double* %x2, align 8
  %32 = fmul double %30, %31
  %33 = load double* %a2, align 8
  %34 = load double* %x1, align 8
  %35 = fmul double %33, %34
  %36 = fadd double %32, %35
  store double %36, double* %t1, align 8
  %37 = load double* %t1, align 8
  %38 = fmul double 0x3E80000000000000, %37
  %39 = fptosi double %38 to i32
  %40 = sitofp i32 %39 to double
  store double %40, double* %t2, align 8
  %41 = load double* %t1, align 8
  %42 = load double* %t2, align 8
  %43 = fmul double 8.388608e+06, %42
  %44 = fsub double %41, %43
  store double %44, double* %z, align 8
  %45 = load double* %z, align 8
  %46 = fmul double 8.388608e+06, %45
  %47 = load double* %a2, align 8
  %48 = load double* %x2, align 8
  %49 = fmul double %47, %48
  %50 = fadd double %46, %49
  store double %50, double* %t3, align 8
  %51 = load double* %t3, align 8
  %52 = fmul double 0x3D10000000000000, %51
  %53 = fptosi double %52 to i32
  %54 = sitofp i32 %53 to double
  store double %54, double* %t4, align 8
  %55 = load double* %t3, align 8
  %56 = load double* %t4, align 8
  %57 = fmul double 0x42D0000000000000, %56
  %58 = fsub double %55, %57
  %59 = load double** %2, align 8
  store double %58, double* %59, align 8
  %60 = load double** %2, align 8
  %61 = load double* %60, align 8
  %62 = fmul double 0x3D10000000000000, %61
  %63 = load i32* %i, align 4
  %64 = sext i32 %63 to i64
  %65 = load double** %4, align 8
  %66 = getelementptr inbounds double* %65, i64 %64
  store double %62, double* %66, align 8
  br label %67

; <label>:67                                      ; preds = %18
  %68 = load i32* %i, align 4
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %i, align 4
  br label %14

; <label>:70                                      ; preds = %14
  ret void
}

; Function Attrs: nounwind uwtable
define void @compute_rhs() #0 {
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %m = alloca i32, align 4
  %rho_inv = alloca double, align 8
  %uijk = alloca double, align 8
  %up1 = alloca double, align 8
  %um1 = alloca double, align 8
  %vijk = alloca double, align 8
  %vp1 = alloca double, align 8
  %vm1 = alloca double, align 8
  %wijk = alloca double, align 8
  %wp1 = alloca double, align 8
  %wm1 = alloca double, align 8
  %1 = load i32* @timeron, align 4
  %2 = icmp ne i32 %1, 0
  br i1 %2, label %3, label %4

; <label>:3                                       ; preds = %0
  call void @timer_start(i32 5)
  br label %4

; <label>:4                                       ; preds = %3, %0
  store i32 0, i32* %k, align 4
  br label %5

; <label>:5                                       ; preds = %223, %4
  %6 = load i32* %k, align 4
  %7 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %8 = sub nsw i32 %7, 1
  %9 = icmp sle i32 %6, %8
  br i1 %9, label %10, label %226

; <label>:10                                      ; preds = %5
  store i32 0, i32* %j, align 4
  br label %11

; <label>:11                                      ; preds = %219, %10
  %12 = load i32* %j, align 4
  %13 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %14 = sub nsw i32 %13, 1
  %15 = icmp sle i32 %12, %14
  br i1 %15, label %16, label %222

; <label>:16                                      ; preds = %11
  store i32 0, i32* %i, align 4
  br label %17

; <label>:17                                      ; preds = %215, %16
  %18 = load i32* %i, align 4
  %19 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %20 = sub nsw i32 %19, 1
  %21 = icmp sle i32 %18, %20
  br i1 %21, label %22, label %218

; <label>:22                                      ; preds = %17
  %23 = load i32* %i, align 4
  %24 = sext i32 %23 to i64
  %25 = load i32* %j, align 4
  %26 = sext i32 %25 to i64
  %27 = load i32* %k, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %28
  %30 = getelementptr inbounds [13 x [13 x [5 x double]]]* %29, i32 0, i64 %26
  %31 = getelementptr inbounds [13 x [5 x double]]* %30, i32 0, i64 %24
  %32 = getelementptr inbounds [5 x double]* %31, i32 0, i64 0
  %33 = load double* %32, align 8
  %34 = fdiv double 1.000000e+00, %33
  store double %34, double* %rho_inv, align 8
  %35 = load double* %rho_inv, align 8
  %36 = load i32* %i, align 4
  %37 = sext i32 %36 to i64
  %38 = load i32* %j, align 4
  %39 = sext i32 %38 to i64
  %40 = load i32* %k, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [12 x [13 x [13 x double]]]* @rho_i, i32 0, i64 %41
  %43 = getelementptr inbounds [13 x [13 x double]]* %42, i32 0, i64 %39
  %44 = getelementptr inbounds [13 x double]* %43, i32 0, i64 %37
  store double %35, double* %44, align 8
  %45 = load i32* %i, align 4
  %46 = sext i32 %45 to i64
  %47 = load i32* %j, align 4
  %48 = sext i32 %47 to i64
  %49 = load i32* %k, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %50
  %52 = getelementptr inbounds [13 x [13 x [5 x double]]]* %51, i32 0, i64 %48
  %53 = getelementptr inbounds [13 x [5 x double]]* %52, i32 0, i64 %46
  %54 = getelementptr inbounds [5 x double]* %53, i32 0, i64 1
  %55 = load double* %54, align 8
  %56 = load double* %rho_inv, align 8
  %57 = fmul double %55, %56
  %58 = load i32* %i, align 4
  %59 = sext i32 %58 to i64
  %60 = load i32* %j, align 4
  %61 = sext i32 %60 to i64
  %62 = load i32* %k, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [12 x [13 x [13 x double]]]* @us, i32 0, i64 %63
  %65 = getelementptr inbounds [13 x [13 x double]]* %64, i32 0, i64 %61
  %66 = getelementptr inbounds [13 x double]* %65, i32 0, i64 %59
  store double %57, double* %66, align 8
  %67 = load i32* %i, align 4
  %68 = sext i32 %67 to i64
  %69 = load i32* %j, align 4
  %70 = sext i32 %69 to i64
  %71 = load i32* %k, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %72
  %74 = getelementptr inbounds [13 x [13 x [5 x double]]]* %73, i32 0, i64 %70
  %75 = getelementptr inbounds [13 x [5 x double]]* %74, i32 0, i64 %68
  %76 = getelementptr inbounds [5 x double]* %75, i32 0, i64 2
  %77 = load double* %76, align 8
  %78 = load double* %rho_inv, align 8
  %79 = fmul double %77, %78
  %80 = load i32* %i, align 4
  %81 = sext i32 %80 to i64
  %82 = load i32* %j, align 4
  %83 = sext i32 %82 to i64
  %84 = load i32* %k, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [12 x [13 x [13 x double]]]* @vs, i32 0, i64 %85
  %87 = getelementptr inbounds [13 x [13 x double]]* %86, i32 0, i64 %83
  %88 = getelementptr inbounds [13 x double]* %87, i32 0, i64 %81
  store double %79, double* %88, align 8
  %89 = load i32* %i, align 4
  %90 = sext i32 %89 to i64
  %91 = load i32* %j, align 4
  %92 = sext i32 %91 to i64
  %93 = load i32* %k, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %94
  %96 = getelementptr inbounds [13 x [13 x [5 x double]]]* %95, i32 0, i64 %92
  %97 = getelementptr inbounds [13 x [5 x double]]* %96, i32 0, i64 %90
  %98 = getelementptr inbounds [5 x double]* %97, i32 0, i64 3
  %99 = load double* %98, align 8
  %100 = load double* %rho_inv, align 8
  %101 = fmul double %99, %100
  %102 = load i32* %i, align 4
  %103 = sext i32 %102 to i64
  %104 = load i32* %j, align 4
  %105 = sext i32 %104 to i64
  %106 = load i32* %k, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [12 x [13 x [13 x double]]]* @ws, i32 0, i64 %107
  %109 = getelementptr inbounds [13 x [13 x double]]* %108, i32 0, i64 %105
  %110 = getelementptr inbounds [13 x double]* %109, i32 0, i64 %103
  store double %101, double* %110, align 8
  %111 = load i32* %i, align 4
  %112 = sext i32 %111 to i64
  %113 = load i32* %j, align 4
  %114 = sext i32 %113 to i64
  %115 = load i32* %k, align 4
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %116
  %118 = getelementptr inbounds [13 x [13 x [5 x double]]]* %117, i32 0, i64 %114
  %119 = getelementptr inbounds [13 x [5 x double]]* %118, i32 0, i64 %112
  %120 = getelementptr inbounds [5 x double]* %119, i32 0, i64 1
  %121 = load double* %120, align 8
  %122 = load i32* %i, align 4
  %123 = sext i32 %122 to i64
  %124 = load i32* %j, align 4
  %125 = sext i32 %124 to i64
  %126 = load i32* %k, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %127
  %129 = getelementptr inbounds [13 x [13 x [5 x double]]]* %128, i32 0, i64 %125
  %130 = getelementptr inbounds [13 x [5 x double]]* %129, i32 0, i64 %123
  %131 = getelementptr inbounds [5 x double]* %130, i32 0, i64 1
  %132 = load double* %131, align 8
  %133 = fmul double %121, %132
  %134 = load i32* %i, align 4
  %135 = sext i32 %134 to i64
  %136 = load i32* %j, align 4
  %137 = sext i32 %136 to i64
  %138 = load i32* %k, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %139
  %141 = getelementptr inbounds [13 x [13 x [5 x double]]]* %140, i32 0, i64 %137
  %142 = getelementptr inbounds [13 x [5 x double]]* %141, i32 0, i64 %135
  %143 = getelementptr inbounds [5 x double]* %142, i32 0, i64 2
  %144 = load double* %143, align 8
  %145 = load i32* %i, align 4
  %146 = sext i32 %145 to i64
  %147 = load i32* %j, align 4
  %148 = sext i32 %147 to i64
  %149 = load i32* %k, align 4
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %150
  %152 = getelementptr inbounds [13 x [13 x [5 x double]]]* %151, i32 0, i64 %148
  %153 = getelementptr inbounds [13 x [5 x double]]* %152, i32 0, i64 %146
  %154 = getelementptr inbounds [5 x double]* %153, i32 0, i64 2
  %155 = load double* %154, align 8
  %156 = fmul double %144, %155
  %157 = fadd double %133, %156
  %158 = load i32* %i, align 4
  %159 = sext i32 %158 to i64
  %160 = load i32* %j, align 4
  %161 = sext i32 %160 to i64
  %162 = load i32* %k, align 4
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %163
  %165 = getelementptr inbounds [13 x [13 x [5 x double]]]* %164, i32 0, i64 %161
  %166 = getelementptr inbounds [13 x [5 x double]]* %165, i32 0, i64 %159
  %167 = getelementptr inbounds [5 x double]* %166, i32 0, i64 3
  %168 = load double* %167, align 8
  %169 = load i32* %i, align 4
  %170 = sext i32 %169 to i64
  %171 = load i32* %j, align 4
  %172 = sext i32 %171 to i64
  %173 = load i32* %k, align 4
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %174
  %176 = getelementptr inbounds [13 x [13 x [5 x double]]]* %175, i32 0, i64 %172
  %177 = getelementptr inbounds [13 x [5 x double]]* %176, i32 0, i64 %170
  %178 = getelementptr inbounds [5 x double]* %177, i32 0, i64 3
  %179 = load double* %178, align 8
  %180 = fmul double %168, %179
  %181 = fadd double %157, %180
  %182 = fmul double 5.000000e-01, %181
  %183 = load double* %rho_inv, align 8
  %184 = fmul double %182, %183
  %185 = load i32* %i, align 4
  %186 = sext i32 %185 to i64
  %187 = load i32* %j, align 4
  %188 = sext i32 %187 to i64
  %189 = load i32* %k, align 4
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds [12 x [13 x [13 x double]]]* @square, i32 0, i64 %190
  %192 = getelementptr inbounds [13 x [13 x double]]* %191, i32 0, i64 %188
  %193 = getelementptr inbounds [13 x double]* %192, i32 0, i64 %186
  store double %184, double* %193, align 8
  %194 = load i32* %i, align 4
  %195 = sext i32 %194 to i64
  %196 = load i32* %j, align 4
  %197 = sext i32 %196 to i64
  %198 = load i32* %k, align 4
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds [12 x [13 x [13 x double]]]* @square, i32 0, i64 %199
  %201 = getelementptr inbounds [13 x [13 x double]]* %200, i32 0, i64 %197
  %202 = getelementptr inbounds [13 x double]* %201, i32 0, i64 %195
  %203 = load double* %202, align 8
  %204 = load double* %rho_inv, align 8
  %205 = fmul double %203, %204
  %206 = load i32* %i, align 4
  %207 = sext i32 %206 to i64
  %208 = load i32* %j, align 4
  %209 = sext i32 %208 to i64
  %210 = load i32* %k, align 4
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds [12 x [13 x [13 x double]]]* @qs, i32 0, i64 %211
  %213 = getelementptr inbounds [13 x [13 x double]]* %212, i32 0, i64 %209
  %214 = getelementptr inbounds [13 x double]* %213, i32 0, i64 %207
  store double %205, double* %214, align 8
  br label %215

; <label>:215                                     ; preds = %22
  %216 = load i32* %i, align 4
  %217 = add nsw i32 %216, 1
  store i32 %217, i32* %i, align 4
  br label %17

; <label>:218                                     ; preds = %17
  br label %219

; <label>:219                                     ; preds = %218
  %220 = load i32* %j, align 4
  %221 = add nsw i32 %220, 1
  store i32 %221, i32* %j, align 4
  br label %11

; <label>:222                                     ; preds = %11
  br label %223

; <label>:223                                     ; preds = %222
  %224 = load i32* %k, align 4
  %225 = add nsw i32 %224, 1
  store i32 %225, i32* %k, align 4
  br label %5

; <label>:226                                     ; preds = %5
  store i32 0, i32* %k, align 4
  br label %227

; <label>:227                                     ; preds = %286, %226
  %228 = load i32* %k, align 4
  %229 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %230 = sub nsw i32 %229, 1
  %231 = icmp sle i32 %228, %230
  br i1 %231, label %232, label %289

; <label>:232                                     ; preds = %227
  store i32 0, i32* %j, align 4
  br label %233

; <label>:233                                     ; preds = %282, %232
  %234 = load i32* %j, align 4
  %235 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %236 = sub nsw i32 %235, 1
  %237 = icmp sle i32 %234, %236
  br i1 %237, label %238, label %285

; <label>:238                                     ; preds = %233
  store i32 0, i32* %i, align 4
  br label %239

; <label>:239                                     ; preds = %278, %238
  %240 = load i32* %i, align 4
  %241 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %242 = sub nsw i32 %241, 1
  %243 = icmp sle i32 %240, %242
  br i1 %243, label %244, label %281

; <label>:244                                     ; preds = %239
  store i32 0, i32* %m, align 4
  br label %245

; <label>:245                                     ; preds = %274, %244
  %246 = load i32* %m, align 4
  %247 = icmp slt i32 %246, 5
  br i1 %247, label %248, label %277

; <label>:248                                     ; preds = %245
  %249 = load i32* %m, align 4
  %250 = sext i32 %249 to i64
  %251 = load i32* %i, align 4
  %252 = sext i32 %251 to i64
  %253 = load i32* %j, align 4
  %254 = sext i32 %253 to i64
  %255 = load i32* %k, align 4
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @forcing, i32 0, i64 %256
  %258 = getelementptr inbounds [13 x [13 x [5 x double]]]* %257, i32 0, i64 %254
  %259 = getelementptr inbounds [13 x [5 x double]]* %258, i32 0, i64 %252
  %260 = getelementptr inbounds [5 x double]* %259, i32 0, i64 %250
  %261 = load double* %260, align 8
  %262 = load i32* %m, align 4
  %263 = sext i32 %262 to i64
  %264 = load i32* %i, align 4
  %265 = sext i32 %264 to i64
  %266 = load i32* %j, align 4
  %267 = sext i32 %266 to i64
  %268 = load i32* %k, align 4
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %269
  %271 = getelementptr inbounds [13 x [13 x [5 x double]]]* %270, i32 0, i64 %267
  %272 = getelementptr inbounds [13 x [5 x double]]* %271, i32 0, i64 %265
  %273 = getelementptr inbounds [5 x double]* %272, i32 0, i64 %263
  store double %261, double* %273, align 8
  br label %274

; <label>:274                                     ; preds = %248
  %275 = load i32* %m, align 4
  %276 = add nsw i32 %275, 1
  store i32 %276, i32* %m, align 4
  br label %245

; <label>:277                                     ; preds = %245
  br label %278

; <label>:278                                     ; preds = %277
  %279 = load i32* %i, align 4
  %280 = add nsw i32 %279, 1
  store i32 %280, i32* %i, align 4
  br label %239

; <label>:281                                     ; preds = %239
  br label %282

; <label>:282                                     ; preds = %281
  %283 = load i32* %j, align 4
  %284 = add nsw i32 %283, 1
  store i32 %284, i32* %j, align 4
  br label %233

; <label>:285                                     ; preds = %233
  br label %286

; <label>:286                                     ; preds = %285
  %287 = load i32* %k, align 4
  %288 = add nsw i32 %287, 1
  store i32 %288, i32* %k, align 4
  br label %227

; <label>:289                                     ; preds = %227
  %290 = load i32* @timeron, align 4
  %291 = icmp ne i32 %290, 0
  br i1 %291, label %292, label %293

; <label>:292                                     ; preds = %289
  call void @timer_start(i32 2)
  br label %293

; <label>:293                                     ; preds = %292, %289
  store i32 1, i32* %k, align 4
  br label %294

; <label>:294                                     ; preds = %1630, %293
  %295 = load i32* %k, align 4
  %296 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %297 = sub nsw i32 %296, 2
  %298 = icmp sle i32 %295, %297
  br i1 %298, label %299, label %1633

; <label>:299                                     ; preds = %294
  store i32 1, i32* %j, align 4
  br label %300

; <label>:300                                     ; preds = %1114, %299
  %301 = load i32* %j, align 4
  %302 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %303 = sub nsw i32 %302, 2
  %304 = icmp sle i32 %301, %303
  br i1 %304, label %305, label %1117

; <label>:305                                     ; preds = %300
  store i32 1, i32* %i, align 4
  br label %306

; <label>:306                                     ; preds = %1110, %305
  %307 = load i32* %i, align 4
  %308 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %309 = sub nsw i32 %308, 2
  %310 = icmp sle i32 %307, %309
  br i1 %310, label %311, label %1113

; <label>:311                                     ; preds = %306
  %312 = load i32* %i, align 4
  %313 = sext i32 %312 to i64
  %314 = load i32* %j, align 4
  %315 = sext i32 %314 to i64
  %316 = load i32* %k, align 4
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds [12 x [13 x [13 x double]]]* @us, i32 0, i64 %317
  %319 = getelementptr inbounds [13 x [13 x double]]* %318, i32 0, i64 %315
  %320 = getelementptr inbounds [13 x double]* %319, i32 0, i64 %313
  %321 = load double* %320, align 8
  store double %321, double* %uijk, align 8
  %322 = load i32* %i, align 4
  %323 = add nsw i32 %322, 1
  %324 = sext i32 %323 to i64
  %325 = load i32* %j, align 4
  %326 = sext i32 %325 to i64
  %327 = load i32* %k, align 4
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds [12 x [13 x [13 x double]]]* @us, i32 0, i64 %328
  %330 = getelementptr inbounds [13 x [13 x double]]* %329, i32 0, i64 %326
  %331 = getelementptr inbounds [13 x double]* %330, i32 0, i64 %324
  %332 = load double* %331, align 8
  store double %332, double* %up1, align 8
  %333 = load i32* %i, align 4
  %334 = sub nsw i32 %333, 1
  %335 = sext i32 %334 to i64
  %336 = load i32* %j, align 4
  %337 = sext i32 %336 to i64
  %338 = load i32* %k, align 4
  %339 = sext i32 %338 to i64
  %340 = getelementptr inbounds [12 x [13 x [13 x double]]]* @us, i32 0, i64 %339
  %341 = getelementptr inbounds [13 x [13 x double]]* %340, i32 0, i64 %337
  %342 = getelementptr inbounds [13 x double]* %341, i32 0, i64 %335
  %343 = load double* %342, align 8
  store double %343, double* %um1, align 8
  %344 = load i32* %i, align 4
  %345 = sext i32 %344 to i64
  %346 = load i32* %j, align 4
  %347 = sext i32 %346 to i64
  %348 = load i32* %k, align 4
  %349 = sext i32 %348 to i64
  %350 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %349
  %351 = getelementptr inbounds [13 x [13 x [5 x double]]]* %350, i32 0, i64 %347
  %352 = getelementptr inbounds [13 x [5 x double]]* %351, i32 0, i64 %345
  %353 = getelementptr inbounds [5 x double]* %352, i32 0, i64 0
  %354 = load double* %353, align 8
  %355 = load double* @dx1tx1, align 8
  %356 = load i32* %i, align 4
  %357 = add nsw i32 %356, 1
  %358 = sext i32 %357 to i64
  %359 = load i32* %j, align 4
  %360 = sext i32 %359 to i64
  %361 = load i32* %k, align 4
  %362 = sext i32 %361 to i64
  %363 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %362
  %364 = getelementptr inbounds [13 x [13 x [5 x double]]]* %363, i32 0, i64 %360
  %365 = getelementptr inbounds [13 x [5 x double]]* %364, i32 0, i64 %358
  %366 = getelementptr inbounds [5 x double]* %365, i32 0, i64 0
  %367 = load double* %366, align 8
  %368 = load i32* %i, align 4
  %369 = sext i32 %368 to i64
  %370 = load i32* %j, align 4
  %371 = sext i32 %370 to i64
  %372 = load i32* %k, align 4
  %373 = sext i32 %372 to i64
  %374 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %373
  %375 = getelementptr inbounds [13 x [13 x [5 x double]]]* %374, i32 0, i64 %371
  %376 = getelementptr inbounds [13 x [5 x double]]* %375, i32 0, i64 %369
  %377 = getelementptr inbounds [5 x double]* %376, i32 0, i64 0
  %378 = load double* %377, align 8
  %379 = fmul double 2.000000e+00, %378
  %380 = fsub double %367, %379
  %381 = load i32* %i, align 4
  %382 = sub nsw i32 %381, 1
  %383 = sext i32 %382 to i64
  %384 = load i32* %j, align 4
  %385 = sext i32 %384 to i64
  %386 = load i32* %k, align 4
  %387 = sext i32 %386 to i64
  %388 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %387
  %389 = getelementptr inbounds [13 x [13 x [5 x double]]]* %388, i32 0, i64 %385
  %390 = getelementptr inbounds [13 x [5 x double]]* %389, i32 0, i64 %383
  %391 = getelementptr inbounds [5 x double]* %390, i32 0, i64 0
  %392 = load double* %391, align 8
  %393 = fadd double %380, %392
  %394 = fmul double %355, %393
  %395 = fadd double %354, %394
  %396 = load double* @tx2, align 8
  %397 = load i32* %i, align 4
  %398 = add nsw i32 %397, 1
  %399 = sext i32 %398 to i64
  %400 = load i32* %j, align 4
  %401 = sext i32 %400 to i64
  %402 = load i32* %k, align 4
  %403 = sext i32 %402 to i64
  %404 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %403
  %405 = getelementptr inbounds [13 x [13 x [5 x double]]]* %404, i32 0, i64 %401
  %406 = getelementptr inbounds [13 x [5 x double]]* %405, i32 0, i64 %399
  %407 = getelementptr inbounds [5 x double]* %406, i32 0, i64 1
  %408 = load double* %407, align 8
  %409 = load i32* %i, align 4
  %410 = sub nsw i32 %409, 1
  %411 = sext i32 %410 to i64
  %412 = load i32* %j, align 4
  %413 = sext i32 %412 to i64
  %414 = load i32* %k, align 4
  %415 = sext i32 %414 to i64
  %416 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %415
  %417 = getelementptr inbounds [13 x [13 x [5 x double]]]* %416, i32 0, i64 %413
  %418 = getelementptr inbounds [13 x [5 x double]]* %417, i32 0, i64 %411
  %419 = getelementptr inbounds [5 x double]* %418, i32 0, i64 1
  %420 = load double* %419, align 8
  %421 = fsub double %408, %420
  %422 = fmul double %396, %421
  %423 = fsub double %395, %422
  %424 = load i32* %i, align 4
  %425 = sext i32 %424 to i64
  %426 = load i32* %j, align 4
  %427 = sext i32 %426 to i64
  %428 = load i32* %k, align 4
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %429
  %431 = getelementptr inbounds [13 x [13 x [5 x double]]]* %430, i32 0, i64 %427
  %432 = getelementptr inbounds [13 x [5 x double]]* %431, i32 0, i64 %425
  %433 = getelementptr inbounds [5 x double]* %432, i32 0, i64 0
  store double %423, double* %433, align 8
  %434 = load i32* %i, align 4
  %435 = sext i32 %434 to i64
  %436 = load i32* %j, align 4
  %437 = sext i32 %436 to i64
  %438 = load i32* %k, align 4
  %439 = sext i32 %438 to i64
  %440 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %439
  %441 = getelementptr inbounds [13 x [13 x [5 x double]]]* %440, i32 0, i64 %437
  %442 = getelementptr inbounds [13 x [5 x double]]* %441, i32 0, i64 %435
  %443 = getelementptr inbounds [5 x double]* %442, i32 0, i64 1
  %444 = load double* %443, align 8
  %445 = load double* @dx2tx1, align 8
  %446 = load i32* %i, align 4
  %447 = add nsw i32 %446, 1
  %448 = sext i32 %447 to i64
  %449 = load i32* %j, align 4
  %450 = sext i32 %449 to i64
  %451 = load i32* %k, align 4
  %452 = sext i32 %451 to i64
  %453 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %452
  %454 = getelementptr inbounds [13 x [13 x [5 x double]]]* %453, i32 0, i64 %450
  %455 = getelementptr inbounds [13 x [5 x double]]* %454, i32 0, i64 %448
  %456 = getelementptr inbounds [5 x double]* %455, i32 0, i64 1
  %457 = load double* %456, align 8
  %458 = load i32* %i, align 4
  %459 = sext i32 %458 to i64
  %460 = load i32* %j, align 4
  %461 = sext i32 %460 to i64
  %462 = load i32* %k, align 4
  %463 = sext i32 %462 to i64
  %464 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %463
  %465 = getelementptr inbounds [13 x [13 x [5 x double]]]* %464, i32 0, i64 %461
  %466 = getelementptr inbounds [13 x [5 x double]]* %465, i32 0, i64 %459
  %467 = getelementptr inbounds [5 x double]* %466, i32 0, i64 1
  %468 = load double* %467, align 8
  %469 = fmul double 2.000000e+00, %468
  %470 = fsub double %457, %469
  %471 = load i32* %i, align 4
  %472 = sub nsw i32 %471, 1
  %473 = sext i32 %472 to i64
  %474 = load i32* %j, align 4
  %475 = sext i32 %474 to i64
  %476 = load i32* %k, align 4
  %477 = sext i32 %476 to i64
  %478 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %477
  %479 = getelementptr inbounds [13 x [13 x [5 x double]]]* %478, i32 0, i64 %475
  %480 = getelementptr inbounds [13 x [5 x double]]* %479, i32 0, i64 %473
  %481 = getelementptr inbounds [5 x double]* %480, i32 0, i64 1
  %482 = load double* %481, align 8
  %483 = fadd double %470, %482
  %484 = fmul double %445, %483
  %485 = fadd double %444, %484
  %486 = load double* @xxcon2, align 8
  %487 = load double* @con43, align 8
  %488 = fmul double %486, %487
  %489 = load double* %up1, align 8
  %490 = load double* %uijk, align 8
  %491 = fmul double 2.000000e+00, %490
  %492 = fsub double %489, %491
  %493 = load double* %um1, align 8
  %494 = fadd double %492, %493
  %495 = fmul double %488, %494
  %496 = fadd double %485, %495
  %497 = load double* @tx2, align 8
  %498 = load i32* %i, align 4
  %499 = add nsw i32 %498, 1
  %500 = sext i32 %499 to i64
  %501 = load i32* %j, align 4
  %502 = sext i32 %501 to i64
  %503 = load i32* %k, align 4
  %504 = sext i32 %503 to i64
  %505 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %504
  %506 = getelementptr inbounds [13 x [13 x [5 x double]]]* %505, i32 0, i64 %502
  %507 = getelementptr inbounds [13 x [5 x double]]* %506, i32 0, i64 %500
  %508 = getelementptr inbounds [5 x double]* %507, i32 0, i64 1
  %509 = load double* %508, align 8
  %510 = load double* %up1, align 8
  %511 = fmul double %509, %510
  %512 = load i32* %i, align 4
  %513 = sub nsw i32 %512, 1
  %514 = sext i32 %513 to i64
  %515 = load i32* %j, align 4
  %516 = sext i32 %515 to i64
  %517 = load i32* %k, align 4
  %518 = sext i32 %517 to i64
  %519 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %518
  %520 = getelementptr inbounds [13 x [13 x [5 x double]]]* %519, i32 0, i64 %516
  %521 = getelementptr inbounds [13 x [5 x double]]* %520, i32 0, i64 %514
  %522 = getelementptr inbounds [5 x double]* %521, i32 0, i64 1
  %523 = load double* %522, align 8
  %524 = load double* %um1, align 8
  %525 = fmul double %523, %524
  %526 = fsub double %511, %525
  %527 = load i32* %i, align 4
  %528 = add nsw i32 %527, 1
  %529 = sext i32 %528 to i64
  %530 = load i32* %j, align 4
  %531 = sext i32 %530 to i64
  %532 = load i32* %k, align 4
  %533 = sext i32 %532 to i64
  %534 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %533
  %535 = getelementptr inbounds [13 x [13 x [5 x double]]]* %534, i32 0, i64 %531
  %536 = getelementptr inbounds [13 x [5 x double]]* %535, i32 0, i64 %529
  %537 = getelementptr inbounds [5 x double]* %536, i32 0, i64 4
  %538 = load double* %537, align 8
  %539 = load i32* %i, align 4
  %540 = add nsw i32 %539, 1
  %541 = sext i32 %540 to i64
  %542 = load i32* %j, align 4
  %543 = sext i32 %542 to i64
  %544 = load i32* %k, align 4
  %545 = sext i32 %544 to i64
  %546 = getelementptr inbounds [12 x [13 x [13 x double]]]* @square, i32 0, i64 %545
  %547 = getelementptr inbounds [13 x [13 x double]]* %546, i32 0, i64 %543
  %548 = getelementptr inbounds [13 x double]* %547, i32 0, i64 %541
  %549 = load double* %548, align 8
  %550 = fsub double %538, %549
  %551 = load i32* %i, align 4
  %552 = sub nsw i32 %551, 1
  %553 = sext i32 %552 to i64
  %554 = load i32* %j, align 4
  %555 = sext i32 %554 to i64
  %556 = load i32* %k, align 4
  %557 = sext i32 %556 to i64
  %558 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %557
  %559 = getelementptr inbounds [13 x [13 x [5 x double]]]* %558, i32 0, i64 %555
  %560 = getelementptr inbounds [13 x [5 x double]]* %559, i32 0, i64 %553
  %561 = getelementptr inbounds [5 x double]* %560, i32 0, i64 4
  %562 = load double* %561, align 8
  %563 = fsub double %550, %562
  %564 = load i32* %i, align 4
  %565 = sub nsw i32 %564, 1
  %566 = sext i32 %565 to i64
  %567 = load i32* %j, align 4
  %568 = sext i32 %567 to i64
  %569 = load i32* %k, align 4
  %570 = sext i32 %569 to i64
  %571 = getelementptr inbounds [12 x [13 x [13 x double]]]* @square, i32 0, i64 %570
  %572 = getelementptr inbounds [13 x [13 x double]]* %571, i32 0, i64 %568
  %573 = getelementptr inbounds [13 x double]* %572, i32 0, i64 %566
  %574 = load double* %573, align 8
  %575 = fadd double %563, %574
  %576 = load double* @c2, align 8
  %577 = fmul double %575, %576
  %578 = fadd double %526, %577
  %579 = fmul double %497, %578
  %580 = fsub double %496, %579
  %581 = load i32* %i, align 4
  %582 = sext i32 %581 to i64
  %583 = load i32* %j, align 4
  %584 = sext i32 %583 to i64
  %585 = load i32* %k, align 4
  %586 = sext i32 %585 to i64
  %587 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %586
  %588 = getelementptr inbounds [13 x [13 x [5 x double]]]* %587, i32 0, i64 %584
  %589 = getelementptr inbounds [13 x [5 x double]]* %588, i32 0, i64 %582
  %590 = getelementptr inbounds [5 x double]* %589, i32 0, i64 1
  store double %580, double* %590, align 8
  %591 = load i32* %i, align 4
  %592 = sext i32 %591 to i64
  %593 = load i32* %j, align 4
  %594 = sext i32 %593 to i64
  %595 = load i32* %k, align 4
  %596 = sext i32 %595 to i64
  %597 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %596
  %598 = getelementptr inbounds [13 x [13 x [5 x double]]]* %597, i32 0, i64 %594
  %599 = getelementptr inbounds [13 x [5 x double]]* %598, i32 0, i64 %592
  %600 = getelementptr inbounds [5 x double]* %599, i32 0, i64 2
  %601 = load double* %600, align 8
  %602 = load double* @dx3tx1, align 8
  %603 = load i32* %i, align 4
  %604 = add nsw i32 %603, 1
  %605 = sext i32 %604 to i64
  %606 = load i32* %j, align 4
  %607 = sext i32 %606 to i64
  %608 = load i32* %k, align 4
  %609 = sext i32 %608 to i64
  %610 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %609
  %611 = getelementptr inbounds [13 x [13 x [5 x double]]]* %610, i32 0, i64 %607
  %612 = getelementptr inbounds [13 x [5 x double]]* %611, i32 0, i64 %605
  %613 = getelementptr inbounds [5 x double]* %612, i32 0, i64 2
  %614 = load double* %613, align 8
  %615 = load i32* %i, align 4
  %616 = sext i32 %615 to i64
  %617 = load i32* %j, align 4
  %618 = sext i32 %617 to i64
  %619 = load i32* %k, align 4
  %620 = sext i32 %619 to i64
  %621 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %620
  %622 = getelementptr inbounds [13 x [13 x [5 x double]]]* %621, i32 0, i64 %618
  %623 = getelementptr inbounds [13 x [5 x double]]* %622, i32 0, i64 %616
  %624 = getelementptr inbounds [5 x double]* %623, i32 0, i64 2
  %625 = load double* %624, align 8
  %626 = fmul double 2.000000e+00, %625
  %627 = fsub double %614, %626
  %628 = load i32* %i, align 4
  %629 = sub nsw i32 %628, 1
  %630 = sext i32 %629 to i64
  %631 = load i32* %j, align 4
  %632 = sext i32 %631 to i64
  %633 = load i32* %k, align 4
  %634 = sext i32 %633 to i64
  %635 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %634
  %636 = getelementptr inbounds [13 x [13 x [5 x double]]]* %635, i32 0, i64 %632
  %637 = getelementptr inbounds [13 x [5 x double]]* %636, i32 0, i64 %630
  %638 = getelementptr inbounds [5 x double]* %637, i32 0, i64 2
  %639 = load double* %638, align 8
  %640 = fadd double %627, %639
  %641 = fmul double %602, %640
  %642 = fadd double %601, %641
  %643 = load double* @xxcon2, align 8
  %644 = load i32* %i, align 4
  %645 = add nsw i32 %644, 1
  %646 = sext i32 %645 to i64
  %647 = load i32* %j, align 4
  %648 = sext i32 %647 to i64
  %649 = load i32* %k, align 4
  %650 = sext i32 %649 to i64
  %651 = getelementptr inbounds [12 x [13 x [13 x double]]]* @vs, i32 0, i64 %650
  %652 = getelementptr inbounds [13 x [13 x double]]* %651, i32 0, i64 %648
  %653 = getelementptr inbounds [13 x double]* %652, i32 0, i64 %646
  %654 = load double* %653, align 8
  %655 = load i32* %i, align 4
  %656 = sext i32 %655 to i64
  %657 = load i32* %j, align 4
  %658 = sext i32 %657 to i64
  %659 = load i32* %k, align 4
  %660 = sext i32 %659 to i64
  %661 = getelementptr inbounds [12 x [13 x [13 x double]]]* @vs, i32 0, i64 %660
  %662 = getelementptr inbounds [13 x [13 x double]]* %661, i32 0, i64 %658
  %663 = getelementptr inbounds [13 x double]* %662, i32 0, i64 %656
  %664 = load double* %663, align 8
  %665 = fmul double 2.000000e+00, %664
  %666 = fsub double %654, %665
  %667 = load i32* %i, align 4
  %668 = sub nsw i32 %667, 1
  %669 = sext i32 %668 to i64
  %670 = load i32* %j, align 4
  %671 = sext i32 %670 to i64
  %672 = load i32* %k, align 4
  %673 = sext i32 %672 to i64
  %674 = getelementptr inbounds [12 x [13 x [13 x double]]]* @vs, i32 0, i64 %673
  %675 = getelementptr inbounds [13 x [13 x double]]* %674, i32 0, i64 %671
  %676 = getelementptr inbounds [13 x double]* %675, i32 0, i64 %669
  %677 = load double* %676, align 8
  %678 = fadd double %666, %677
  %679 = fmul double %643, %678
  %680 = fadd double %642, %679
  %681 = load double* @tx2, align 8
  %682 = load i32* %i, align 4
  %683 = add nsw i32 %682, 1
  %684 = sext i32 %683 to i64
  %685 = load i32* %j, align 4
  %686 = sext i32 %685 to i64
  %687 = load i32* %k, align 4
  %688 = sext i32 %687 to i64
  %689 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %688
  %690 = getelementptr inbounds [13 x [13 x [5 x double]]]* %689, i32 0, i64 %686
  %691 = getelementptr inbounds [13 x [5 x double]]* %690, i32 0, i64 %684
  %692 = getelementptr inbounds [5 x double]* %691, i32 0, i64 2
  %693 = load double* %692, align 8
  %694 = load double* %up1, align 8
  %695 = fmul double %693, %694
  %696 = load i32* %i, align 4
  %697 = sub nsw i32 %696, 1
  %698 = sext i32 %697 to i64
  %699 = load i32* %j, align 4
  %700 = sext i32 %699 to i64
  %701 = load i32* %k, align 4
  %702 = sext i32 %701 to i64
  %703 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %702
  %704 = getelementptr inbounds [13 x [13 x [5 x double]]]* %703, i32 0, i64 %700
  %705 = getelementptr inbounds [13 x [5 x double]]* %704, i32 0, i64 %698
  %706 = getelementptr inbounds [5 x double]* %705, i32 0, i64 2
  %707 = load double* %706, align 8
  %708 = load double* %um1, align 8
  %709 = fmul double %707, %708
  %710 = fsub double %695, %709
  %711 = fmul double %681, %710
  %712 = fsub double %680, %711
  %713 = load i32* %i, align 4
  %714 = sext i32 %713 to i64
  %715 = load i32* %j, align 4
  %716 = sext i32 %715 to i64
  %717 = load i32* %k, align 4
  %718 = sext i32 %717 to i64
  %719 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %718
  %720 = getelementptr inbounds [13 x [13 x [5 x double]]]* %719, i32 0, i64 %716
  %721 = getelementptr inbounds [13 x [5 x double]]* %720, i32 0, i64 %714
  %722 = getelementptr inbounds [5 x double]* %721, i32 0, i64 2
  store double %712, double* %722, align 8
  %723 = load i32* %i, align 4
  %724 = sext i32 %723 to i64
  %725 = load i32* %j, align 4
  %726 = sext i32 %725 to i64
  %727 = load i32* %k, align 4
  %728 = sext i32 %727 to i64
  %729 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %728
  %730 = getelementptr inbounds [13 x [13 x [5 x double]]]* %729, i32 0, i64 %726
  %731 = getelementptr inbounds [13 x [5 x double]]* %730, i32 0, i64 %724
  %732 = getelementptr inbounds [5 x double]* %731, i32 0, i64 3
  %733 = load double* %732, align 8
  %734 = load double* @dx4tx1, align 8
  %735 = load i32* %i, align 4
  %736 = add nsw i32 %735, 1
  %737 = sext i32 %736 to i64
  %738 = load i32* %j, align 4
  %739 = sext i32 %738 to i64
  %740 = load i32* %k, align 4
  %741 = sext i32 %740 to i64
  %742 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %741
  %743 = getelementptr inbounds [13 x [13 x [5 x double]]]* %742, i32 0, i64 %739
  %744 = getelementptr inbounds [13 x [5 x double]]* %743, i32 0, i64 %737
  %745 = getelementptr inbounds [5 x double]* %744, i32 0, i64 3
  %746 = load double* %745, align 8
  %747 = load i32* %i, align 4
  %748 = sext i32 %747 to i64
  %749 = load i32* %j, align 4
  %750 = sext i32 %749 to i64
  %751 = load i32* %k, align 4
  %752 = sext i32 %751 to i64
  %753 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %752
  %754 = getelementptr inbounds [13 x [13 x [5 x double]]]* %753, i32 0, i64 %750
  %755 = getelementptr inbounds [13 x [5 x double]]* %754, i32 0, i64 %748
  %756 = getelementptr inbounds [5 x double]* %755, i32 0, i64 3
  %757 = load double* %756, align 8
  %758 = fmul double 2.000000e+00, %757
  %759 = fsub double %746, %758
  %760 = load i32* %i, align 4
  %761 = sub nsw i32 %760, 1
  %762 = sext i32 %761 to i64
  %763 = load i32* %j, align 4
  %764 = sext i32 %763 to i64
  %765 = load i32* %k, align 4
  %766 = sext i32 %765 to i64
  %767 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %766
  %768 = getelementptr inbounds [13 x [13 x [5 x double]]]* %767, i32 0, i64 %764
  %769 = getelementptr inbounds [13 x [5 x double]]* %768, i32 0, i64 %762
  %770 = getelementptr inbounds [5 x double]* %769, i32 0, i64 3
  %771 = load double* %770, align 8
  %772 = fadd double %759, %771
  %773 = fmul double %734, %772
  %774 = fadd double %733, %773
  %775 = load double* @xxcon2, align 8
  %776 = load i32* %i, align 4
  %777 = add nsw i32 %776, 1
  %778 = sext i32 %777 to i64
  %779 = load i32* %j, align 4
  %780 = sext i32 %779 to i64
  %781 = load i32* %k, align 4
  %782 = sext i32 %781 to i64
  %783 = getelementptr inbounds [12 x [13 x [13 x double]]]* @ws, i32 0, i64 %782
  %784 = getelementptr inbounds [13 x [13 x double]]* %783, i32 0, i64 %780
  %785 = getelementptr inbounds [13 x double]* %784, i32 0, i64 %778
  %786 = load double* %785, align 8
  %787 = load i32* %i, align 4
  %788 = sext i32 %787 to i64
  %789 = load i32* %j, align 4
  %790 = sext i32 %789 to i64
  %791 = load i32* %k, align 4
  %792 = sext i32 %791 to i64
  %793 = getelementptr inbounds [12 x [13 x [13 x double]]]* @ws, i32 0, i64 %792
  %794 = getelementptr inbounds [13 x [13 x double]]* %793, i32 0, i64 %790
  %795 = getelementptr inbounds [13 x double]* %794, i32 0, i64 %788
  %796 = load double* %795, align 8
  %797 = fmul double 2.000000e+00, %796
  %798 = fsub double %786, %797
  %799 = load i32* %i, align 4
  %800 = sub nsw i32 %799, 1
  %801 = sext i32 %800 to i64
  %802 = load i32* %j, align 4
  %803 = sext i32 %802 to i64
  %804 = load i32* %k, align 4
  %805 = sext i32 %804 to i64
  %806 = getelementptr inbounds [12 x [13 x [13 x double]]]* @ws, i32 0, i64 %805
  %807 = getelementptr inbounds [13 x [13 x double]]* %806, i32 0, i64 %803
  %808 = getelementptr inbounds [13 x double]* %807, i32 0, i64 %801
  %809 = load double* %808, align 8
  %810 = fadd double %798, %809
  %811 = fmul double %775, %810
  %812 = fadd double %774, %811
  %813 = load double* @tx2, align 8
  %814 = load i32* %i, align 4
  %815 = add nsw i32 %814, 1
  %816 = sext i32 %815 to i64
  %817 = load i32* %j, align 4
  %818 = sext i32 %817 to i64
  %819 = load i32* %k, align 4
  %820 = sext i32 %819 to i64
  %821 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %820
  %822 = getelementptr inbounds [13 x [13 x [5 x double]]]* %821, i32 0, i64 %818
  %823 = getelementptr inbounds [13 x [5 x double]]* %822, i32 0, i64 %816
  %824 = getelementptr inbounds [5 x double]* %823, i32 0, i64 3
  %825 = load double* %824, align 8
  %826 = load double* %up1, align 8
  %827 = fmul double %825, %826
  %828 = load i32* %i, align 4
  %829 = sub nsw i32 %828, 1
  %830 = sext i32 %829 to i64
  %831 = load i32* %j, align 4
  %832 = sext i32 %831 to i64
  %833 = load i32* %k, align 4
  %834 = sext i32 %833 to i64
  %835 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %834
  %836 = getelementptr inbounds [13 x [13 x [5 x double]]]* %835, i32 0, i64 %832
  %837 = getelementptr inbounds [13 x [5 x double]]* %836, i32 0, i64 %830
  %838 = getelementptr inbounds [5 x double]* %837, i32 0, i64 3
  %839 = load double* %838, align 8
  %840 = load double* %um1, align 8
  %841 = fmul double %839, %840
  %842 = fsub double %827, %841
  %843 = fmul double %813, %842
  %844 = fsub double %812, %843
  %845 = load i32* %i, align 4
  %846 = sext i32 %845 to i64
  %847 = load i32* %j, align 4
  %848 = sext i32 %847 to i64
  %849 = load i32* %k, align 4
  %850 = sext i32 %849 to i64
  %851 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %850
  %852 = getelementptr inbounds [13 x [13 x [5 x double]]]* %851, i32 0, i64 %848
  %853 = getelementptr inbounds [13 x [5 x double]]* %852, i32 0, i64 %846
  %854 = getelementptr inbounds [5 x double]* %853, i32 0, i64 3
  store double %844, double* %854, align 8
  %855 = load i32* %i, align 4
  %856 = sext i32 %855 to i64
  %857 = load i32* %j, align 4
  %858 = sext i32 %857 to i64
  %859 = load i32* %k, align 4
  %860 = sext i32 %859 to i64
  %861 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %860
  %862 = getelementptr inbounds [13 x [13 x [5 x double]]]* %861, i32 0, i64 %858
  %863 = getelementptr inbounds [13 x [5 x double]]* %862, i32 0, i64 %856
  %864 = getelementptr inbounds [5 x double]* %863, i32 0, i64 4
  %865 = load double* %864, align 8
  %866 = load double* @dx5tx1, align 8
  %867 = load i32* %i, align 4
  %868 = add nsw i32 %867, 1
  %869 = sext i32 %868 to i64
  %870 = load i32* %j, align 4
  %871 = sext i32 %870 to i64
  %872 = load i32* %k, align 4
  %873 = sext i32 %872 to i64
  %874 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %873
  %875 = getelementptr inbounds [13 x [13 x [5 x double]]]* %874, i32 0, i64 %871
  %876 = getelementptr inbounds [13 x [5 x double]]* %875, i32 0, i64 %869
  %877 = getelementptr inbounds [5 x double]* %876, i32 0, i64 4
  %878 = load double* %877, align 8
  %879 = load i32* %i, align 4
  %880 = sext i32 %879 to i64
  %881 = load i32* %j, align 4
  %882 = sext i32 %881 to i64
  %883 = load i32* %k, align 4
  %884 = sext i32 %883 to i64
  %885 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %884
  %886 = getelementptr inbounds [13 x [13 x [5 x double]]]* %885, i32 0, i64 %882
  %887 = getelementptr inbounds [13 x [5 x double]]* %886, i32 0, i64 %880
  %888 = getelementptr inbounds [5 x double]* %887, i32 0, i64 4
  %889 = load double* %888, align 8
  %890 = fmul double 2.000000e+00, %889
  %891 = fsub double %878, %890
  %892 = load i32* %i, align 4
  %893 = sub nsw i32 %892, 1
  %894 = sext i32 %893 to i64
  %895 = load i32* %j, align 4
  %896 = sext i32 %895 to i64
  %897 = load i32* %k, align 4
  %898 = sext i32 %897 to i64
  %899 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %898
  %900 = getelementptr inbounds [13 x [13 x [5 x double]]]* %899, i32 0, i64 %896
  %901 = getelementptr inbounds [13 x [5 x double]]* %900, i32 0, i64 %894
  %902 = getelementptr inbounds [5 x double]* %901, i32 0, i64 4
  %903 = load double* %902, align 8
  %904 = fadd double %891, %903
  %905 = fmul double %866, %904
  %906 = fadd double %865, %905
  %907 = load double* @xxcon3, align 8
  %908 = load i32* %i, align 4
  %909 = add nsw i32 %908, 1
  %910 = sext i32 %909 to i64
  %911 = load i32* %j, align 4
  %912 = sext i32 %911 to i64
  %913 = load i32* %k, align 4
  %914 = sext i32 %913 to i64
  %915 = getelementptr inbounds [12 x [13 x [13 x double]]]* @qs, i32 0, i64 %914
  %916 = getelementptr inbounds [13 x [13 x double]]* %915, i32 0, i64 %912
  %917 = getelementptr inbounds [13 x double]* %916, i32 0, i64 %910
  %918 = load double* %917, align 8
  %919 = load i32* %i, align 4
  %920 = sext i32 %919 to i64
  %921 = load i32* %j, align 4
  %922 = sext i32 %921 to i64
  %923 = load i32* %k, align 4
  %924 = sext i32 %923 to i64
  %925 = getelementptr inbounds [12 x [13 x [13 x double]]]* @qs, i32 0, i64 %924
  %926 = getelementptr inbounds [13 x [13 x double]]* %925, i32 0, i64 %922
  %927 = getelementptr inbounds [13 x double]* %926, i32 0, i64 %920
  %928 = load double* %927, align 8
  %929 = fmul double 2.000000e+00, %928
  %930 = fsub double %918, %929
  %931 = load i32* %i, align 4
  %932 = sub nsw i32 %931, 1
  %933 = sext i32 %932 to i64
  %934 = load i32* %j, align 4
  %935 = sext i32 %934 to i64
  %936 = load i32* %k, align 4
  %937 = sext i32 %936 to i64
  %938 = getelementptr inbounds [12 x [13 x [13 x double]]]* @qs, i32 0, i64 %937
  %939 = getelementptr inbounds [13 x [13 x double]]* %938, i32 0, i64 %935
  %940 = getelementptr inbounds [13 x double]* %939, i32 0, i64 %933
  %941 = load double* %940, align 8
  %942 = fadd double %930, %941
  %943 = fmul double %907, %942
  %944 = fadd double %906, %943
  %945 = load double* @xxcon4, align 8
  %946 = load double* %up1, align 8
  %947 = load double* %up1, align 8
  %948 = fmul double %946, %947
  %949 = load double* %uijk, align 8
  %950 = fmul double 2.000000e+00, %949
  %951 = load double* %uijk, align 8
  %952 = fmul double %950, %951
  %953 = fsub double %948, %952
  %954 = load double* %um1, align 8
  %955 = load double* %um1, align 8
  %956 = fmul double %954, %955
  %957 = fadd double %953, %956
  %958 = fmul double %945, %957
  %959 = fadd double %944, %958
  %960 = load double* @xxcon5, align 8
  %961 = load i32* %i, align 4
  %962 = add nsw i32 %961, 1
  %963 = sext i32 %962 to i64
  %964 = load i32* %j, align 4
  %965 = sext i32 %964 to i64
  %966 = load i32* %k, align 4
  %967 = sext i32 %966 to i64
  %968 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %967
  %969 = getelementptr inbounds [13 x [13 x [5 x double]]]* %968, i32 0, i64 %965
  %970 = getelementptr inbounds [13 x [5 x double]]* %969, i32 0, i64 %963
  %971 = getelementptr inbounds [5 x double]* %970, i32 0, i64 4
  %972 = load double* %971, align 8
  %973 = load i32* %i, align 4
  %974 = add nsw i32 %973, 1
  %975 = sext i32 %974 to i64
  %976 = load i32* %j, align 4
  %977 = sext i32 %976 to i64
  %978 = load i32* %k, align 4
  %979 = sext i32 %978 to i64
  %980 = getelementptr inbounds [12 x [13 x [13 x double]]]* @rho_i, i32 0, i64 %979
  %981 = getelementptr inbounds [13 x [13 x double]]* %980, i32 0, i64 %977
  %982 = getelementptr inbounds [13 x double]* %981, i32 0, i64 %975
  %983 = load double* %982, align 8
  %984 = fmul double %972, %983
  %985 = load i32* %i, align 4
  %986 = sext i32 %985 to i64
  %987 = load i32* %j, align 4
  %988 = sext i32 %987 to i64
  %989 = load i32* %k, align 4
  %990 = sext i32 %989 to i64
  %991 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %990
  %992 = getelementptr inbounds [13 x [13 x [5 x double]]]* %991, i32 0, i64 %988
  %993 = getelementptr inbounds [13 x [5 x double]]* %992, i32 0, i64 %986
  %994 = getelementptr inbounds [5 x double]* %993, i32 0, i64 4
  %995 = load double* %994, align 8
  %996 = fmul double 2.000000e+00, %995
  %997 = load i32* %i, align 4
  %998 = sext i32 %997 to i64
  %999 = load i32* %j, align 4
  %1000 = sext i32 %999 to i64
  %1001 = load i32* %k, align 4
  %1002 = sext i32 %1001 to i64
  %1003 = getelementptr inbounds [12 x [13 x [13 x double]]]* @rho_i, i32 0, i64 %1002
  %1004 = getelementptr inbounds [13 x [13 x double]]* %1003, i32 0, i64 %1000
  %1005 = getelementptr inbounds [13 x double]* %1004, i32 0, i64 %998
  %1006 = load double* %1005, align 8
  %1007 = fmul double %996, %1006
  %1008 = fsub double %984, %1007
  %1009 = load i32* %i, align 4
  %1010 = sub nsw i32 %1009, 1
  %1011 = sext i32 %1010 to i64
  %1012 = load i32* %j, align 4
  %1013 = sext i32 %1012 to i64
  %1014 = load i32* %k, align 4
  %1015 = sext i32 %1014 to i64
  %1016 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1015
  %1017 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1016, i32 0, i64 %1013
  %1018 = getelementptr inbounds [13 x [5 x double]]* %1017, i32 0, i64 %1011
  %1019 = getelementptr inbounds [5 x double]* %1018, i32 0, i64 4
  %1020 = load double* %1019, align 8
  %1021 = load i32* %i, align 4
  %1022 = sub nsw i32 %1021, 1
  %1023 = sext i32 %1022 to i64
  %1024 = load i32* %j, align 4
  %1025 = sext i32 %1024 to i64
  %1026 = load i32* %k, align 4
  %1027 = sext i32 %1026 to i64
  %1028 = getelementptr inbounds [12 x [13 x [13 x double]]]* @rho_i, i32 0, i64 %1027
  %1029 = getelementptr inbounds [13 x [13 x double]]* %1028, i32 0, i64 %1025
  %1030 = getelementptr inbounds [13 x double]* %1029, i32 0, i64 %1023
  %1031 = load double* %1030, align 8
  %1032 = fmul double %1020, %1031
  %1033 = fadd double %1008, %1032
  %1034 = fmul double %960, %1033
  %1035 = fadd double %959, %1034
  %1036 = load double* @tx2, align 8
  %1037 = load double* @c1, align 8
  %1038 = load i32* %i, align 4
  %1039 = add nsw i32 %1038, 1
  %1040 = sext i32 %1039 to i64
  %1041 = load i32* %j, align 4
  %1042 = sext i32 %1041 to i64
  %1043 = load i32* %k, align 4
  %1044 = sext i32 %1043 to i64
  %1045 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1044
  %1046 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1045, i32 0, i64 %1042
  %1047 = getelementptr inbounds [13 x [5 x double]]* %1046, i32 0, i64 %1040
  %1048 = getelementptr inbounds [5 x double]* %1047, i32 0, i64 4
  %1049 = load double* %1048, align 8
  %1050 = fmul double %1037, %1049
  %1051 = load double* @c2, align 8
  %1052 = load i32* %i, align 4
  %1053 = add nsw i32 %1052, 1
  %1054 = sext i32 %1053 to i64
  %1055 = load i32* %j, align 4
  %1056 = sext i32 %1055 to i64
  %1057 = load i32* %k, align 4
  %1058 = sext i32 %1057 to i64
  %1059 = getelementptr inbounds [12 x [13 x [13 x double]]]* @square, i32 0, i64 %1058
  %1060 = getelementptr inbounds [13 x [13 x double]]* %1059, i32 0, i64 %1056
  %1061 = getelementptr inbounds [13 x double]* %1060, i32 0, i64 %1054
  %1062 = load double* %1061, align 8
  %1063 = fmul double %1051, %1062
  %1064 = fsub double %1050, %1063
  %1065 = load double* %up1, align 8
  %1066 = fmul double %1064, %1065
  %1067 = load double* @c1, align 8
  %1068 = load i32* %i, align 4
  %1069 = sub nsw i32 %1068, 1
  %1070 = sext i32 %1069 to i64
  %1071 = load i32* %j, align 4
  %1072 = sext i32 %1071 to i64
  %1073 = load i32* %k, align 4
  %1074 = sext i32 %1073 to i64
  %1075 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1074
  %1076 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1075, i32 0, i64 %1072
  %1077 = getelementptr inbounds [13 x [5 x double]]* %1076, i32 0, i64 %1070
  %1078 = getelementptr inbounds [5 x double]* %1077, i32 0, i64 4
  %1079 = load double* %1078, align 8
  %1080 = fmul double %1067, %1079
  %1081 = load double* @c2, align 8
  %1082 = load i32* %i, align 4
  %1083 = sub nsw i32 %1082, 1
  %1084 = sext i32 %1083 to i64
  %1085 = load i32* %j, align 4
  %1086 = sext i32 %1085 to i64
  %1087 = load i32* %k, align 4
  %1088 = sext i32 %1087 to i64
  %1089 = getelementptr inbounds [12 x [13 x [13 x double]]]* @square, i32 0, i64 %1088
  %1090 = getelementptr inbounds [13 x [13 x double]]* %1089, i32 0, i64 %1086
  %1091 = getelementptr inbounds [13 x double]* %1090, i32 0, i64 %1084
  %1092 = load double* %1091, align 8
  %1093 = fmul double %1081, %1092
  %1094 = fsub double %1080, %1093
  %1095 = load double* %um1, align 8
  %1096 = fmul double %1094, %1095
  %1097 = fsub double %1066, %1096
  %1098 = fmul double %1036, %1097
  %1099 = fsub double %1035, %1098
  %1100 = load i32* %i, align 4
  %1101 = sext i32 %1100 to i64
  %1102 = load i32* %j, align 4
  %1103 = sext i32 %1102 to i64
  %1104 = load i32* %k, align 4
  %1105 = sext i32 %1104 to i64
  %1106 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %1105
  %1107 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1106, i32 0, i64 %1103
  %1108 = getelementptr inbounds [13 x [5 x double]]* %1107, i32 0, i64 %1101
  %1109 = getelementptr inbounds [5 x double]* %1108, i32 0, i64 4
  store double %1099, double* %1109, align 8
  br label %1110

; <label>:1110                                    ; preds = %311
  %1111 = load i32* %i, align 4
  %1112 = add nsw i32 %1111, 1
  store i32 %1112, i32* %i, align 4
  br label %306

; <label>:1113                                    ; preds = %306
  br label %1114

; <label>:1114                                    ; preds = %1113
  %1115 = load i32* %j, align 4
  %1116 = add nsw i32 %1115, 1
  store i32 %1116, i32* %j, align 4
  br label %300

; <label>:1117                                    ; preds = %300
  store i32 1, i32* %j, align 4
  br label %1118

; <label>:1118                                    ; preds = %1302, %1117
  %1119 = load i32* %j, align 4
  %1120 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %1121 = sub nsw i32 %1120, 2
  %1122 = icmp sle i32 %1119, %1121
  br i1 %1122, label %1123, label %1305

; <label>:1123                                    ; preds = %1118
  store i32 1, i32* %i, align 4
  store i32 0, i32* %m, align 4
  br label %1124

; <label>:1124                                    ; preds = %1201, %1123
  %1125 = load i32* %m, align 4
  %1126 = icmp slt i32 %1125, 5
  br i1 %1126, label %1127, label %1204

; <label>:1127                                    ; preds = %1124
  %1128 = load i32* %m, align 4
  %1129 = sext i32 %1128 to i64
  %1130 = load i32* %i, align 4
  %1131 = sext i32 %1130 to i64
  %1132 = load i32* %j, align 4
  %1133 = sext i32 %1132 to i64
  %1134 = load i32* %k, align 4
  %1135 = sext i32 %1134 to i64
  %1136 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %1135
  %1137 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1136, i32 0, i64 %1133
  %1138 = getelementptr inbounds [13 x [5 x double]]* %1137, i32 0, i64 %1131
  %1139 = getelementptr inbounds [5 x double]* %1138, i32 0, i64 %1129
  %1140 = load double* %1139, align 8
  %1141 = load double* @dssp, align 8
  %1142 = load i32* %m, align 4
  %1143 = sext i32 %1142 to i64
  %1144 = load i32* %i, align 4
  %1145 = sext i32 %1144 to i64
  %1146 = load i32* %j, align 4
  %1147 = sext i32 %1146 to i64
  %1148 = load i32* %k, align 4
  %1149 = sext i32 %1148 to i64
  %1150 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1149
  %1151 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1150, i32 0, i64 %1147
  %1152 = getelementptr inbounds [13 x [5 x double]]* %1151, i32 0, i64 %1145
  %1153 = getelementptr inbounds [5 x double]* %1152, i32 0, i64 %1143
  %1154 = load double* %1153, align 8
  %1155 = fmul double 5.000000e+00, %1154
  %1156 = load i32* %m, align 4
  %1157 = sext i32 %1156 to i64
  %1158 = load i32* %i, align 4
  %1159 = add nsw i32 %1158, 1
  %1160 = sext i32 %1159 to i64
  %1161 = load i32* %j, align 4
  %1162 = sext i32 %1161 to i64
  %1163 = load i32* %k, align 4
  %1164 = sext i32 %1163 to i64
  %1165 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1164
  %1166 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1165, i32 0, i64 %1162
  %1167 = getelementptr inbounds [13 x [5 x double]]* %1166, i32 0, i64 %1160
  %1168 = getelementptr inbounds [5 x double]* %1167, i32 0, i64 %1157
  %1169 = load double* %1168, align 8
  %1170 = fmul double 4.000000e+00, %1169
  %1171 = fsub double %1155, %1170
  %1172 = load i32* %m, align 4
  %1173 = sext i32 %1172 to i64
  %1174 = load i32* %i, align 4
  %1175 = add nsw i32 %1174, 2
  %1176 = sext i32 %1175 to i64
  %1177 = load i32* %j, align 4
  %1178 = sext i32 %1177 to i64
  %1179 = load i32* %k, align 4
  %1180 = sext i32 %1179 to i64
  %1181 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1180
  %1182 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1181, i32 0, i64 %1178
  %1183 = getelementptr inbounds [13 x [5 x double]]* %1182, i32 0, i64 %1176
  %1184 = getelementptr inbounds [5 x double]* %1183, i32 0, i64 %1173
  %1185 = load double* %1184, align 8
  %1186 = fadd double %1171, %1185
  %1187 = fmul double %1141, %1186
  %1188 = fsub double %1140, %1187
  %1189 = load i32* %m, align 4
  %1190 = sext i32 %1189 to i64
  %1191 = load i32* %i, align 4
  %1192 = sext i32 %1191 to i64
  %1193 = load i32* %j, align 4
  %1194 = sext i32 %1193 to i64
  %1195 = load i32* %k, align 4
  %1196 = sext i32 %1195 to i64
  %1197 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %1196
  %1198 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1197, i32 0, i64 %1194
  %1199 = getelementptr inbounds [13 x [5 x double]]* %1198, i32 0, i64 %1192
  %1200 = getelementptr inbounds [5 x double]* %1199, i32 0, i64 %1190
  store double %1188, double* %1200, align 8
  br label %1201

; <label>:1201                                    ; preds = %1127
  %1202 = load i32* %m, align 4
  %1203 = add nsw i32 %1202, 1
  store i32 %1203, i32* %m, align 4
  br label %1124

; <label>:1204                                    ; preds = %1124
  store i32 2, i32* %i, align 4
  store i32 0, i32* %m, align 4
  br label %1205

; <label>:1205                                    ; preds = %1298, %1204
  %1206 = load i32* %m, align 4
  %1207 = icmp slt i32 %1206, 5
  br i1 %1207, label %1208, label %1301

; <label>:1208                                    ; preds = %1205
  %1209 = load i32* %m, align 4
  %1210 = sext i32 %1209 to i64
  %1211 = load i32* %i, align 4
  %1212 = sext i32 %1211 to i64
  %1213 = load i32* %j, align 4
  %1214 = sext i32 %1213 to i64
  %1215 = load i32* %k, align 4
  %1216 = sext i32 %1215 to i64
  %1217 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %1216
  %1218 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1217, i32 0, i64 %1214
  %1219 = getelementptr inbounds [13 x [5 x double]]* %1218, i32 0, i64 %1212
  %1220 = getelementptr inbounds [5 x double]* %1219, i32 0, i64 %1210
  %1221 = load double* %1220, align 8
  %1222 = load double* @dssp, align 8
  %1223 = load i32* %m, align 4
  %1224 = sext i32 %1223 to i64
  %1225 = load i32* %i, align 4
  %1226 = sub nsw i32 %1225, 1
  %1227 = sext i32 %1226 to i64
  %1228 = load i32* %j, align 4
  %1229 = sext i32 %1228 to i64
  %1230 = load i32* %k, align 4
  %1231 = sext i32 %1230 to i64
  %1232 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1231
  %1233 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1232, i32 0, i64 %1229
  %1234 = getelementptr inbounds [13 x [5 x double]]* %1233, i32 0, i64 %1227
  %1235 = getelementptr inbounds [5 x double]* %1234, i32 0, i64 %1224
  %1236 = load double* %1235, align 8
  %1237 = fmul double -4.000000e+00, %1236
  %1238 = load i32* %m, align 4
  %1239 = sext i32 %1238 to i64
  %1240 = load i32* %i, align 4
  %1241 = sext i32 %1240 to i64
  %1242 = load i32* %j, align 4
  %1243 = sext i32 %1242 to i64
  %1244 = load i32* %k, align 4
  %1245 = sext i32 %1244 to i64
  %1246 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1245
  %1247 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1246, i32 0, i64 %1243
  %1248 = getelementptr inbounds [13 x [5 x double]]* %1247, i32 0, i64 %1241
  %1249 = getelementptr inbounds [5 x double]* %1248, i32 0, i64 %1239
  %1250 = load double* %1249, align 8
  %1251 = fmul double 6.000000e+00, %1250
  %1252 = fadd double %1237, %1251
  %1253 = load i32* %m, align 4
  %1254 = sext i32 %1253 to i64
  %1255 = load i32* %i, align 4
  %1256 = add nsw i32 %1255, 1
  %1257 = sext i32 %1256 to i64
  %1258 = load i32* %j, align 4
  %1259 = sext i32 %1258 to i64
  %1260 = load i32* %k, align 4
  %1261 = sext i32 %1260 to i64
  %1262 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1261
  %1263 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1262, i32 0, i64 %1259
  %1264 = getelementptr inbounds [13 x [5 x double]]* %1263, i32 0, i64 %1257
  %1265 = getelementptr inbounds [5 x double]* %1264, i32 0, i64 %1254
  %1266 = load double* %1265, align 8
  %1267 = fmul double 4.000000e+00, %1266
  %1268 = fsub double %1252, %1267
  %1269 = load i32* %m, align 4
  %1270 = sext i32 %1269 to i64
  %1271 = load i32* %i, align 4
  %1272 = add nsw i32 %1271, 2
  %1273 = sext i32 %1272 to i64
  %1274 = load i32* %j, align 4
  %1275 = sext i32 %1274 to i64
  %1276 = load i32* %k, align 4
  %1277 = sext i32 %1276 to i64
  %1278 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1277
  %1279 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1278, i32 0, i64 %1275
  %1280 = getelementptr inbounds [13 x [5 x double]]* %1279, i32 0, i64 %1273
  %1281 = getelementptr inbounds [5 x double]* %1280, i32 0, i64 %1270
  %1282 = load double* %1281, align 8
  %1283 = fadd double %1268, %1282
  %1284 = fmul double %1222, %1283
  %1285 = fsub double %1221, %1284
  %1286 = load i32* %m, align 4
  %1287 = sext i32 %1286 to i64
  %1288 = load i32* %i, align 4
  %1289 = sext i32 %1288 to i64
  %1290 = load i32* %j, align 4
  %1291 = sext i32 %1290 to i64
  %1292 = load i32* %k, align 4
  %1293 = sext i32 %1292 to i64
  %1294 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %1293
  %1295 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1294, i32 0, i64 %1291
  %1296 = getelementptr inbounds [13 x [5 x double]]* %1295, i32 0, i64 %1289
  %1297 = getelementptr inbounds [5 x double]* %1296, i32 0, i64 %1287
  store double %1285, double* %1297, align 8
  br label %1298

; <label>:1298                                    ; preds = %1208
  %1299 = load i32* %m, align 4
  %1300 = add nsw i32 %1299, 1
  store i32 %1300, i32* %m, align 4
  br label %1205

; <label>:1301                                    ; preds = %1205
  br label %1302

; <label>:1302                                    ; preds = %1301
  %1303 = load i32* %j, align 4
  %1304 = add nsw i32 %1303, 1
  store i32 %1304, i32* %j, align 4
  br label %1118

; <label>:1305                                    ; preds = %1118
  store i32 1, i32* %j, align 4
  br label %1306

; <label>:1306                                    ; preds = %1434, %1305
  %1307 = load i32* %j, align 4
  %1308 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %1309 = sub nsw i32 %1308, 2
  %1310 = icmp sle i32 %1307, %1309
  br i1 %1310, label %1311, label %1437

; <label>:1311                                    ; preds = %1306
  store i32 3, i32* %i, align 4
  br label %1312

; <label>:1312                                    ; preds = %1430, %1311
  %1313 = load i32* %i, align 4
  %1314 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %1315 = sub nsw i32 %1314, 4
  %1316 = icmp sle i32 %1313, %1315
  br i1 %1316, label %1317, label %1433

; <label>:1317                                    ; preds = %1312
  store i32 0, i32* %m, align 4
  br label %1318

; <label>:1318                                    ; preds = %1426, %1317
  %1319 = load i32* %m, align 4
  %1320 = icmp slt i32 %1319, 5
  br i1 %1320, label %1321, label %1429

; <label>:1321                                    ; preds = %1318
  %1322 = load i32* %m, align 4
  %1323 = sext i32 %1322 to i64
  %1324 = load i32* %i, align 4
  %1325 = sext i32 %1324 to i64
  %1326 = load i32* %j, align 4
  %1327 = sext i32 %1326 to i64
  %1328 = load i32* %k, align 4
  %1329 = sext i32 %1328 to i64
  %1330 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %1329
  %1331 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1330, i32 0, i64 %1327
  %1332 = getelementptr inbounds [13 x [5 x double]]* %1331, i32 0, i64 %1325
  %1333 = getelementptr inbounds [5 x double]* %1332, i32 0, i64 %1323
  %1334 = load double* %1333, align 8
  %1335 = load double* @dssp, align 8
  %1336 = load i32* %m, align 4
  %1337 = sext i32 %1336 to i64
  %1338 = load i32* %i, align 4
  %1339 = sub nsw i32 %1338, 2
  %1340 = sext i32 %1339 to i64
  %1341 = load i32* %j, align 4
  %1342 = sext i32 %1341 to i64
  %1343 = load i32* %k, align 4
  %1344 = sext i32 %1343 to i64
  %1345 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1344
  %1346 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1345, i32 0, i64 %1342
  %1347 = getelementptr inbounds [13 x [5 x double]]* %1346, i32 0, i64 %1340
  %1348 = getelementptr inbounds [5 x double]* %1347, i32 0, i64 %1337
  %1349 = load double* %1348, align 8
  %1350 = load i32* %m, align 4
  %1351 = sext i32 %1350 to i64
  %1352 = load i32* %i, align 4
  %1353 = sub nsw i32 %1352, 1
  %1354 = sext i32 %1353 to i64
  %1355 = load i32* %j, align 4
  %1356 = sext i32 %1355 to i64
  %1357 = load i32* %k, align 4
  %1358 = sext i32 %1357 to i64
  %1359 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1358
  %1360 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1359, i32 0, i64 %1356
  %1361 = getelementptr inbounds [13 x [5 x double]]* %1360, i32 0, i64 %1354
  %1362 = getelementptr inbounds [5 x double]* %1361, i32 0, i64 %1351
  %1363 = load double* %1362, align 8
  %1364 = fmul double 4.000000e+00, %1363
  %1365 = fsub double %1349, %1364
  %1366 = load i32* %m, align 4
  %1367 = sext i32 %1366 to i64
  %1368 = load i32* %i, align 4
  %1369 = sext i32 %1368 to i64
  %1370 = load i32* %j, align 4
  %1371 = sext i32 %1370 to i64
  %1372 = load i32* %k, align 4
  %1373 = sext i32 %1372 to i64
  %1374 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1373
  %1375 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1374, i32 0, i64 %1371
  %1376 = getelementptr inbounds [13 x [5 x double]]* %1375, i32 0, i64 %1369
  %1377 = getelementptr inbounds [5 x double]* %1376, i32 0, i64 %1367
  %1378 = load double* %1377, align 8
  %1379 = fmul double 6.000000e+00, %1378
  %1380 = fadd double %1365, %1379
  %1381 = load i32* %m, align 4
  %1382 = sext i32 %1381 to i64
  %1383 = load i32* %i, align 4
  %1384 = add nsw i32 %1383, 1
  %1385 = sext i32 %1384 to i64
  %1386 = load i32* %j, align 4
  %1387 = sext i32 %1386 to i64
  %1388 = load i32* %k, align 4
  %1389 = sext i32 %1388 to i64
  %1390 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1389
  %1391 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1390, i32 0, i64 %1387
  %1392 = getelementptr inbounds [13 x [5 x double]]* %1391, i32 0, i64 %1385
  %1393 = getelementptr inbounds [5 x double]* %1392, i32 0, i64 %1382
  %1394 = load double* %1393, align 8
  %1395 = fmul double 4.000000e+00, %1394
  %1396 = fsub double %1380, %1395
  %1397 = load i32* %m, align 4
  %1398 = sext i32 %1397 to i64
  %1399 = load i32* %i, align 4
  %1400 = add nsw i32 %1399, 2
  %1401 = sext i32 %1400 to i64
  %1402 = load i32* %j, align 4
  %1403 = sext i32 %1402 to i64
  %1404 = load i32* %k, align 4
  %1405 = sext i32 %1404 to i64
  %1406 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1405
  %1407 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1406, i32 0, i64 %1403
  %1408 = getelementptr inbounds [13 x [5 x double]]* %1407, i32 0, i64 %1401
  %1409 = getelementptr inbounds [5 x double]* %1408, i32 0, i64 %1398
  %1410 = load double* %1409, align 8
  %1411 = fadd double %1396, %1410
  %1412 = fmul double %1335, %1411
  %1413 = fsub double %1334, %1412
  %1414 = load i32* %m, align 4
  %1415 = sext i32 %1414 to i64
  %1416 = load i32* %i, align 4
  %1417 = sext i32 %1416 to i64
  %1418 = load i32* %j, align 4
  %1419 = sext i32 %1418 to i64
  %1420 = load i32* %k, align 4
  %1421 = sext i32 %1420 to i64
  %1422 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %1421
  %1423 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1422, i32 0, i64 %1419
  %1424 = getelementptr inbounds [13 x [5 x double]]* %1423, i32 0, i64 %1417
  %1425 = getelementptr inbounds [5 x double]* %1424, i32 0, i64 %1415
  store double %1413, double* %1425, align 8
  br label %1426

; <label>:1426                                    ; preds = %1321
  %1427 = load i32* %m, align 4
  %1428 = add nsw i32 %1427, 1
  store i32 %1428, i32* %m, align 4
  br label %1318

; <label>:1429                                    ; preds = %1318
  br label %1430

; <label>:1430                                    ; preds = %1429
  %1431 = load i32* %i, align 4
  %1432 = add nsw i32 %1431, 1
  store i32 %1432, i32* %i, align 4
  br label %1312

; <label>:1433                                    ; preds = %1312
  br label %1434

; <label>:1434                                    ; preds = %1433
  %1435 = load i32* %j, align 4
  %1436 = add nsw i32 %1435, 1
  store i32 %1436, i32* %j, align 4
  br label %1306

; <label>:1437                                    ; preds = %1306
  store i32 1, i32* %j, align 4
  br label %1438

; <label>:1438                                    ; preds = %1626, %1437
  %1439 = load i32* %j, align 4
  %1440 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %1441 = sub nsw i32 %1440, 2
  %1442 = icmp sle i32 %1439, %1441
  br i1 %1442, label %1443, label %1629

; <label>:1443                                    ; preds = %1438
  %1444 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %1445 = sub nsw i32 %1444, 3
  store i32 %1445, i32* %i, align 4
  store i32 0, i32* %m, align 4
  br label %1446

; <label>:1446                                    ; preds = %1539, %1443
  %1447 = load i32* %m, align 4
  %1448 = icmp slt i32 %1447, 5
  br i1 %1448, label %1449, label %1542

; <label>:1449                                    ; preds = %1446
  %1450 = load i32* %m, align 4
  %1451 = sext i32 %1450 to i64
  %1452 = load i32* %i, align 4
  %1453 = sext i32 %1452 to i64
  %1454 = load i32* %j, align 4
  %1455 = sext i32 %1454 to i64
  %1456 = load i32* %k, align 4
  %1457 = sext i32 %1456 to i64
  %1458 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %1457
  %1459 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1458, i32 0, i64 %1455
  %1460 = getelementptr inbounds [13 x [5 x double]]* %1459, i32 0, i64 %1453
  %1461 = getelementptr inbounds [5 x double]* %1460, i32 0, i64 %1451
  %1462 = load double* %1461, align 8
  %1463 = load double* @dssp, align 8
  %1464 = load i32* %m, align 4
  %1465 = sext i32 %1464 to i64
  %1466 = load i32* %i, align 4
  %1467 = sub nsw i32 %1466, 2
  %1468 = sext i32 %1467 to i64
  %1469 = load i32* %j, align 4
  %1470 = sext i32 %1469 to i64
  %1471 = load i32* %k, align 4
  %1472 = sext i32 %1471 to i64
  %1473 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1472
  %1474 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1473, i32 0, i64 %1470
  %1475 = getelementptr inbounds [13 x [5 x double]]* %1474, i32 0, i64 %1468
  %1476 = getelementptr inbounds [5 x double]* %1475, i32 0, i64 %1465
  %1477 = load double* %1476, align 8
  %1478 = load i32* %m, align 4
  %1479 = sext i32 %1478 to i64
  %1480 = load i32* %i, align 4
  %1481 = sub nsw i32 %1480, 1
  %1482 = sext i32 %1481 to i64
  %1483 = load i32* %j, align 4
  %1484 = sext i32 %1483 to i64
  %1485 = load i32* %k, align 4
  %1486 = sext i32 %1485 to i64
  %1487 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1486
  %1488 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1487, i32 0, i64 %1484
  %1489 = getelementptr inbounds [13 x [5 x double]]* %1488, i32 0, i64 %1482
  %1490 = getelementptr inbounds [5 x double]* %1489, i32 0, i64 %1479
  %1491 = load double* %1490, align 8
  %1492 = fmul double 4.000000e+00, %1491
  %1493 = fsub double %1477, %1492
  %1494 = load i32* %m, align 4
  %1495 = sext i32 %1494 to i64
  %1496 = load i32* %i, align 4
  %1497 = sext i32 %1496 to i64
  %1498 = load i32* %j, align 4
  %1499 = sext i32 %1498 to i64
  %1500 = load i32* %k, align 4
  %1501 = sext i32 %1500 to i64
  %1502 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1501
  %1503 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1502, i32 0, i64 %1499
  %1504 = getelementptr inbounds [13 x [5 x double]]* %1503, i32 0, i64 %1497
  %1505 = getelementptr inbounds [5 x double]* %1504, i32 0, i64 %1495
  %1506 = load double* %1505, align 8
  %1507 = fmul double 6.000000e+00, %1506
  %1508 = fadd double %1493, %1507
  %1509 = load i32* %m, align 4
  %1510 = sext i32 %1509 to i64
  %1511 = load i32* %i, align 4
  %1512 = add nsw i32 %1511, 1
  %1513 = sext i32 %1512 to i64
  %1514 = load i32* %j, align 4
  %1515 = sext i32 %1514 to i64
  %1516 = load i32* %k, align 4
  %1517 = sext i32 %1516 to i64
  %1518 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1517
  %1519 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1518, i32 0, i64 %1515
  %1520 = getelementptr inbounds [13 x [5 x double]]* %1519, i32 0, i64 %1513
  %1521 = getelementptr inbounds [5 x double]* %1520, i32 0, i64 %1510
  %1522 = load double* %1521, align 8
  %1523 = fmul double 4.000000e+00, %1522
  %1524 = fsub double %1508, %1523
  %1525 = fmul double %1463, %1524
  %1526 = fsub double %1462, %1525
  %1527 = load i32* %m, align 4
  %1528 = sext i32 %1527 to i64
  %1529 = load i32* %i, align 4
  %1530 = sext i32 %1529 to i64
  %1531 = load i32* %j, align 4
  %1532 = sext i32 %1531 to i64
  %1533 = load i32* %k, align 4
  %1534 = sext i32 %1533 to i64
  %1535 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %1534
  %1536 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1535, i32 0, i64 %1532
  %1537 = getelementptr inbounds [13 x [5 x double]]* %1536, i32 0, i64 %1530
  %1538 = getelementptr inbounds [5 x double]* %1537, i32 0, i64 %1528
  store double %1526, double* %1538, align 8
  br label %1539

; <label>:1539                                    ; preds = %1449
  %1540 = load i32* %m, align 4
  %1541 = add nsw i32 %1540, 1
  store i32 %1541, i32* %m, align 4
  br label %1446

; <label>:1542                                    ; preds = %1446
  %1543 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %1544 = sub nsw i32 %1543, 2
  store i32 %1544, i32* %i, align 4
  store i32 0, i32* %m, align 4
  br label %1545

; <label>:1545                                    ; preds = %1622, %1542
  %1546 = load i32* %m, align 4
  %1547 = icmp slt i32 %1546, 5
  br i1 %1547, label %1548, label %1625

; <label>:1548                                    ; preds = %1545
  %1549 = load i32* %m, align 4
  %1550 = sext i32 %1549 to i64
  %1551 = load i32* %i, align 4
  %1552 = sext i32 %1551 to i64
  %1553 = load i32* %j, align 4
  %1554 = sext i32 %1553 to i64
  %1555 = load i32* %k, align 4
  %1556 = sext i32 %1555 to i64
  %1557 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %1556
  %1558 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1557, i32 0, i64 %1554
  %1559 = getelementptr inbounds [13 x [5 x double]]* %1558, i32 0, i64 %1552
  %1560 = getelementptr inbounds [5 x double]* %1559, i32 0, i64 %1550
  %1561 = load double* %1560, align 8
  %1562 = load double* @dssp, align 8
  %1563 = load i32* %m, align 4
  %1564 = sext i32 %1563 to i64
  %1565 = load i32* %i, align 4
  %1566 = sub nsw i32 %1565, 2
  %1567 = sext i32 %1566 to i64
  %1568 = load i32* %j, align 4
  %1569 = sext i32 %1568 to i64
  %1570 = load i32* %k, align 4
  %1571 = sext i32 %1570 to i64
  %1572 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1571
  %1573 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1572, i32 0, i64 %1569
  %1574 = getelementptr inbounds [13 x [5 x double]]* %1573, i32 0, i64 %1567
  %1575 = getelementptr inbounds [5 x double]* %1574, i32 0, i64 %1564
  %1576 = load double* %1575, align 8
  %1577 = load i32* %m, align 4
  %1578 = sext i32 %1577 to i64
  %1579 = load i32* %i, align 4
  %1580 = sub nsw i32 %1579, 1
  %1581 = sext i32 %1580 to i64
  %1582 = load i32* %j, align 4
  %1583 = sext i32 %1582 to i64
  %1584 = load i32* %k, align 4
  %1585 = sext i32 %1584 to i64
  %1586 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1585
  %1587 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1586, i32 0, i64 %1583
  %1588 = getelementptr inbounds [13 x [5 x double]]* %1587, i32 0, i64 %1581
  %1589 = getelementptr inbounds [5 x double]* %1588, i32 0, i64 %1578
  %1590 = load double* %1589, align 8
  %1591 = fmul double 4.000000e+00, %1590
  %1592 = fsub double %1576, %1591
  %1593 = load i32* %m, align 4
  %1594 = sext i32 %1593 to i64
  %1595 = load i32* %i, align 4
  %1596 = sext i32 %1595 to i64
  %1597 = load i32* %j, align 4
  %1598 = sext i32 %1597 to i64
  %1599 = load i32* %k, align 4
  %1600 = sext i32 %1599 to i64
  %1601 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1600
  %1602 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1601, i32 0, i64 %1598
  %1603 = getelementptr inbounds [13 x [5 x double]]* %1602, i32 0, i64 %1596
  %1604 = getelementptr inbounds [5 x double]* %1603, i32 0, i64 %1594
  %1605 = load double* %1604, align 8
  %1606 = fmul double 5.000000e+00, %1605
  %1607 = fadd double %1592, %1606
  %1608 = fmul double %1562, %1607
  %1609 = fsub double %1561, %1608
  %1610 = load i32* %m, align 4
  %1611 = sext i32 %1610 to i64
  %1612 = load i32* %i, align 4
  %1613 = sext i32 %1612 to i64
  %1614 = load i32* %j, align 4
  %1615 = sext i32 %1614 to i64
  %1616 = load i32* %k, align 4
  %1617 = sext i32 %1616 to i64
  %1618 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %1617
  %1619 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1618, i32 0, i64 %1615
  %1620 = getelementptr inbounds [13 x [5 x double]]* %1619, i32 0, i64 %1613
  %1621 = getelementptr inbounds [5 x double]* %1620, i32 0, i64 %1611
  store double %1609, double* %1621, align 8
  br label %1622

; <label>:1622                                    ; preds = %1548
  %1623 = load i32* %m, align 4
  %1624 = add nsw i32 %1623, 1
  store i32 %1624, i32* %m, align 4
  br label %1545

; <label>:1625                                    ; preds = %1545
  br label %1626

; <label>:1626                                    ; preds = %1625
  %1627 = load i32* %j, align 4
  %1628 = add nsw i32 %1627, 1
  store i32 %1628, i32* %j, align 4
  br label %1438

; <label>:1629                                    ; preds = %1438
  br label %1630

; <label>:1630                                    ; preds = %1629
  %1631 = load i32* %k, align 4
  %1632 = add nsw i32 %1631, 1
  store i32 %1632, i32* %k, align 4
  br label %294

; <label>:1633                                    ; preds = %294
  %1634 = load i32* @timeron, align 4
  %1635 = icmp ne i32 %1634, 0
  br i1 %1635, label %1636, label %1637

; <label>:1636                                    ; preds = %1633
  call void @timer_stop(i32 2)
  br label %1637

; <label>:1637                                    ; preds = %1636, %1633
  %1638 = load i32* @timeron, align 4
  %1639 = icmp ne i32 %1638, 0
  br i1 %1639, label %1640, label %1641

; <label>:1640                                    ; preds = %1637
  call void @timer_start(i32 3)
  br label %1641

; <label>:1641                                    ; preds = %1640, %1637
  store i32 1, i32* %k, align 4
  br label %1642

; <label>:1642                                    ; preds = %2998, %1641
  %1643 = load i32* %k, align 4
  %1644 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %1645 = sub nsw i32 %1644, 2
  %1646 = icmp sle i32 %1643, %1645
  br i1 %1646, label %1647, label %3001

; <label>:1647                                    ; preds = %1642
  store i32 1, i32* %j, align 4
  br label %1648

; <label>:1648                                    ; preds = %2462, %1647
  %1649 = load i32* %j, align 4
  %1650 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %1651 = sub nsw i32 %1650, 2
  %1652 = icmp sle i32 %1649, %1651
  br i1 %1652, label %1653, label %2465

; <label>:1653                                    ; preds = %1648
  store i32 1, i32* %i, align 4
  br label %1654

; <label>:1654                                    ; preds = %2458, %1653
  %1655 = load i32* %i, align 4
  %1656 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %1657 = sub nsw i32 %1656, 2
  %1658 = icmp sle i32 %1655, %1657
  br i1 %1658, label %1659, label %2461

; <label>:1659                                    ; preds = %1654
  %1660 = load i32* %i, align 4
  %1661 = sext i32 %1660 to i64
  %1662 = load i32* %j, align 4
  %1663 = sext i32 %1662 to i64
  %1664 = load i32* %k, align 4
  %1665 = sext i32 %1664 to i64
  %1666 = getelementptr inbounds [12 x [13 x [13 x double]]]* @vs, i32 0, i64 %1665
  %1667 = getelementptr inbounds [13 x [13 x double]]* %1666, i32 0, i64 %1663
  %1668 = getelementptr inbounds [13 x double]* %1667, i32 0, i64 %1661
  %1669 = load double* %1668, align 8
  store double %1669, double* %vijk, align 8
  %1670 = load i32* %i, align 4
  %1671 = sext i32 %1670 to i64
  %1672 = load i32* %j, align 4
  %1673 = add nsw i32 %1672, 1
  %1674 = sext i32 %1673 to i64
  %1675 = load i32* %k, align 4
  %1676 = sext i32 %1675 to i64
  %1677 = getelementptr inbounds [12 x [13 x [13 x double]]]* @vs, i32 0, i64 %1676
  %1678 = getelementptr inbounds [13 x [13 x double]]* %1677, i32 0, i64 %1674
  %1679 = getelementptr inbounds [13 x double]* %1678, i32 0, i64 %1671
  %1680 = load double* %1679, align 8
  store double %1680, double* %vp1, align 8
  %1681 = load i32* %i, align 4
  %1682 = sext i32 %1681 to i64
  %1683 = load i32* %j, align 4
  %1684 = sub nsw i32 %1683, 1
  %1685 = sext i32 %1684 to i64
  %1686 = load i32* %k, align 4
  %1687 = sext i32 %1686 to i64
  %1688 = getelementptr inbounds [12 x [13 x [13 x double]]]* @vs, i32 0, i64 %1687
  %1689 = getelementptr inbounds [13 x [13 x double]]* %1688, i32 0, i64 %1685
  %1690 = getelementptr inbounds [13 x double]* %1689, i32 0, i64 %1682
  %1691 = load double* %1690, align 8
  store double %1691, double* %vm1, align 8
  %1692 = load i32* %i, align 4
  %1693 = sext i32 %1692 to i64
  %1694 = load i32* %j, align 4
  %1695 = sext i32 %1694 to i64
  %1696 = load i32* %k, align 4
  %1697 = sext i32 %1696 to i64
  %1698 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %1697
  %1699 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1698, i32 0, i64 %1695
  %1700 = getelementptr inbounds [13 x [5 x double]]* %1699, i32 0, i64 %1693
  %1701 = getelementptr inbounds [5 x double]* %1700, i32 0, i64 0
  %1702 = load double* %1701, align 8
  %1703 = load double* @dy1ty1, align 8
  %1704 = load i32* %i, align 4
  %1705 = sext i32 %1704 to i64
  %1706 = load i32* %j, align 4
  %1707 = add nsw i32 %1706, 1
  %1708 = sext i32 %1707 to i64
  %1709 = load i32* %k, align 4
  %1710 = sext i32 %1709 to i64
  %1711 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1710
  %1712 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1711, i32 0, i64 %1708
  %1713 = getelementptr inbounds [13 x [5 x double]]* %1712, i32 0, i64 %1705
  %1714 = getelementptr inbounds [5 x double]* %1713, i32 0, i64 0
  %1715 = load double* %1714, align 8
  %1716 = load i32* %i, align 4
  %1717 = sext i32 %1716 to i64
  %1718 = load i32* %j, align 4
  %1719 = sext i32 %1718 to i64
  %1720 = load i32* %k, align 4
  %1721 = sext i32 %1720 to i64
  %1722 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1721
  %1723 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1722, i32 0, i64 %1719
  %1724 = getelementptr inbounds [13 x [5 x double]]* %1723, i32 0, i64 %1717
  %1725 = getelementptr inbounds [5 x double]* %1724, i32 0, i64 0
  %1726 = load double* %1725, align 8
  %1727 = fmul double 2.000000e+00, %1726
  %1728 = fsub double %1715, %1727
  %1729 = load i32* %i, align 4
  %1730 = sext i32 %1729 to i64
  %1731 = load i32* %j, align 4
  %1732 = sub nsw i32 %1731, 1
  %1733 = sext i32 %1732 to i64
  %1734 = load i32* %k, align 4
  %1735 = sext i32 %1734 to i64
  %1736 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1735
  %1737 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1736, i32 0, i64 %1733
  %1738 = getelementptr inbounds [13 x [5 x double]]* %1737, i32 0, i64 %1730
  %1739 = getelementptr inbounds [5 x double]* %1738, i32 0, i64 0
  %1740 = load double* %1739, align 8
  %1741 = fadd double %1728, %1740
  %1742 = fmul double %1703, %1741
  %1743 = fadd double %1702, %1742
  %1744 = load double* @ty2, align 8
  %1745 = load i32* %i, align 4
  %1746 = sext i32 %1745 to i64
  %1747 = load i32* %j, align 4
  %1748 = add nsw i32 %1747, 1
  %1749 = sext i32 %1748 to i64
  %1750 = load i32* %k, align 4
  %1751 = sext i32 %1750 to i64
  %1752 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1751
  %1753 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1752, i32 0, i64 %1749
  %1754 = getelementptr inbounds [13 x [5 x double]]* %1753, i32 0, i64 %1746
  %1755 = getelementptr inbounds [5 x double]* %1754, i32 0, i64 2
  %1756 = load double* %1755, align 8
  %1757 = load i32* %i, align 4
  %1758 = sext i32 %1757 to i64
  %1759 = load i32* %j, align 4
  %1760 = sub nsw i32 %1759, 1
  %1761 = sext i32 %1760 to i64
  %1762 = load i32* %k, align 4
  %1763 = sext i32 %1762 to i64
  %1764 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1763
  %1765 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1764, i32 0, i64 %1761
  %1766 = getelementptr inbounds [13 x [5 x double]]* %1765, i32 0, i64 %1758
  %1767 = getelementptr inbounds [5 x double]* %1766, i32 0, i64 2
  %1768 = load double* %1767, align 8
  %1769 = fsub double %1756, %1768
  %1770 = fmul double %1744, %1769
  %1771 = fsub double %1743, %1770
  %1772 = load i32* %i, align 4
  %1773 = sext i32 %1772 to i64
  %1774 = load i32* %j, align 4
  %1775 = sext i32 %1774 to i64
  %1776 = load i32* %k, align 4
  %1777 = sext i32 %1776 to i64
  %1778 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %1777
  %1779 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1778, i32 0, i64 %1775
  %1780 = getelementptr inbounds [13 x [5 x double]]* %1779, i32 0, i64 %1773
  %1781 = getelementptr inbounds [5 x double]* %1780, i32 0, i64 0
  store double %1771, double* %1781, align 8
  %1782 = load i32* %i, align 4
  %1783 = sext i32 %1782 to i64
  %1784 = load i32* %j, align 4
  %1785 = sext i32 %1784 to i64
  %1786 = load i32* %k, align 4
  %1787 = sext i32 %1786 to i64
  %1788 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %1787
  %1789 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1788, i32 0, i64 %1785
  %1790 = getelementptr inbounds [13 x [5 x double]]* %1789, i32 0, i64 %1783
  %1791 = getelementptr inbounds [5 x double]* %1790, i32 0, i64 1
  %1792 = load double* %1791, align 8
  %1793 = load double* @dy2ty1, align 8
  %1794 = load i32* %i, align 4
  %1795 = sext i32 %1794 to i64
  %1796 = load i32* %j, align 4
  %1797 = add nsw i32 %1796, 1
  %1798 = sext i32 %1797 to i64
  %1799 = load i32* %k, align 4
  %1800 = sext i32 %1799 to i64
  %1801 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1800
  %1802 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1801, i32 0, i64 %1798
  %1803 = getelementptr inbounds [13 x [5 x double]]* %1802, i32 0, i64 %1795
  %1804 = getelementptr inbounds [5 x double]* %1803, i32 0, i64 1
  %1805 = load double* %1804, align 8
  %1806 = load i32* %i, align 4
  %1807 = sext i32 %1806 to i64
  %1808 = load i32* %j, align 4
  %1809 = sext i32 %1808 to i64
  %1810 = load i32* %k, align 4
  %1811 = sext i32 %1810 to i64
  %1812 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1811
  %1813 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1812, i32 0, i64 %1809
  %1814 = getelementptr inbounds [13 x [5 x double]]* %1813, i32 0, i64 %1807
  %1815 = getelementptr inbounds [5 x double]* %1814, i32 0, i64 1
  %1816 = load double* %1815, align 8
  %1817 = fmul double 2.000000e+00, %1816
  %1818 = fsub double %1805, %1817
  %1819 = load i32* %i, align 4
  %1820 = sext i32 %1819 to i64
  %1821 = load i32* %j, align 4
  %1822 = sub nsw i32 %1821, 1
  %1823 = sext i32 %1822 to i64
  %1824 = load i32* %k, align 4
  %1825 = sext i32 %1824 to i64
  %1826 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1825
  %1827 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1826, i32 0, i64 %1823
  %1828 = getelementptr inbounds [13 x [5 x double]]* %1827, i32 0, i64 %1820
  %1829 = getelementptr inbounds [5 x double]* %1828, i32 0, i64 1
  %1830 = load double* %1829, align 8
  %1831 = fadd double %1818, %1830
  %1832 = fmul double %1793, %1831
  %1833 = fadd double %1792, %1832
  %1834 = load double* @yycon2, align 8
  %1835 = load i32* %i, align 4
  %1836 = sext i32 %1835 to i64
  %1837 = load i32* %j, align 4
  %1838 = add nsw i32 %1837, 1
  %1839 = sext i32 %1838 to i64
  %1840 = load i32* %k, align 4
  %1841 = sext i32 %1840 to i64
  %1842 = getelementptr inbounds [12 x [13 x [13 x double]]]* @us, i32 0, i64 %1841
  %1843 = getelementptr inbounds [13 x [13 x double]]* %1842, i32 0, i64 %1839
  %1844 = getelementptr inbounds [13 x double]* %1843, i32 0, i64 %1836
  %1845 = load double* %1844, align 8
  %1846 = load i32* %i, align 4
  %1847 = sext i32 %1846 to i64
  %1848 = load i32* %j, align 4
  %1849 = sext i32 %1848 to i64
  %1850 = load i32* %k, align 4
  %1851 = sext i32 %1850 to i64
  %1852 = getelementptr inbounds [12 x [13 x [13 x double]]]* @us, i32 0, i64 %1851
  %1853 = getelementptr inbounds [13 x [13 x double]]* %1852, i32 0, i64 %1849
  %1854 = getelementptr inbounds [13 x double]* %1853, i32 0, i64 %1847
  %1855 = load double* %1854, align 8
  %1856 = fmul double 2.000000e+00, %1855
  %1857 = fsub double %1845, %1856
  %1858 = load i32* %i, align 4
  %1859 = sext i32 %1858 to i64
  %1860 = load i32* %j, align 4
  %1861 = sub nsw i32 %1860, 1
  %1862 = sext i32 %1861 to i64
  %1863 = load i32* %k, align 4
  %1864 = sext i32 %1863 to i64
  %1865 = getelementptr inbounds [12 x [13 x [13 x double]]]* @us, i32 0, i64 %1864
  %1866 = getelementptr inbounds [13 x [13 x double]]* %1865, i32 0, i64 %1862
  %1867 = getelementptr inbounds [13 x double]* %1866, i32 0, i64 %1859
  %1868 = load double* %1867, align 8
  %1869 = fadd double %1857, %1868
  %1870 = fmul double %1834, %1869
  %1871 = fadd double %1833, %1870
  %1872 = load double* @ty2, align 8
  %1873 = load i32* %i, align 4
  %1874 = sext i32 %1873 to i64
  %1875 = load i32* %j, align 4
  %1876 = add nsw i32 %1875, 1
  %1877 = sext i32 %1876 to i64
  %1878 = load i32* %k, align 4
  %1879 = sext i32 %1878 to i64
  %1880 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1879
  %1881 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1880, i32 0, i64 %1877
  %1882 = getelementptr inbounds [13 x [5 x double]]* %1881, i32 0, i64 %1874
  %1883 = getelementptr inbounds [5 x double]* %1882, i32 0, i64 1
  %1884 = load double* %1883, align 8
  %1885 = load double* %vp1, align 8
  %1886 = fmul double %1884, %1885
  %1887 = load i32* %i, align 4
  %1888 = sext i32 %1887 to i64
  %1889 = load i32* %j, align 4
  %1890 = sub nsw i32 %1889, 1
  %1891 = sext i32 %1890 to i64
  %1892 = load i32* %k, align 4
  %1893 = sext i32 %1892 to i64
  %1894 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1893
  %1895 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1894, i32 0, i64 %1891
  %1896 = getelementptr inbounds [13 x [5 x double]]* %1895, i32 0, i64 %1888
  %1897 = getelementptr inbounds [5 x double]* %1896, i32 0, i64 1
  %1898 = load double* %1897, align 8
  %1899 = load double* %vm1, align 8
  %1900 = fmul double %1898, %1899
  %1901 = fsub double %1886, %1900
  %1902 = fmul double %1872, %1901
  %1903 = fsub double %1871, %1902
  %1904 = load i32* %i, align 4
  %1905 = sext i32 %1904 to i64
  %1906 = load i32* %j, align 4
  %1907 = sext i32 %1906 to i64
  %1908 = load i32* %k, align 4
  %1909 = sext i32 %1908 to i64
  %1910 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %1909
  %1911 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1910, i32 0, i64 %1907
  %1912 = getelementptr inbounds [13 x [5 x double]]* %1911, i32 0, i64 %1905
  %1913 = getelementptr inbounds [5 x double]* %1912, i32 0, i64 1
  store double %1903, double* %1913, align 8
  %1914 = load i32* %i, align 4
  %1915 = sext i32 %1914 to i64
  %1916 = load i32* %j, align 4
  %1917 = sext i32 %1916 to i64
  %1918 = load i32* %k, align 4
  %1919 = sext i32 %1918 to i64
  %1920 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %1919
  %1921 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1920, i32 0, i64 %1917
  %1922 = getelementptr inbounds [13 x [5 x double]]* %1921, i32 0, i64 %1915
  %1923 = getelementptr inbounds [5 x double]* %1922, i32 0, i64 2
  %1924 = load double* %1923, align 8
  %1925 = load double* @dy3ty1, align 8
  %1926 = load i32* %i, align 4
  %1927 = sext i32 %1926 to i64
  %1928 = load i32* %j, align 4
  %1929 = add nsw i32 %1928, 1
  %1930 = sext i32 %1929 to i64
  %1931 = load i32* %k, align 4
  %1932 = sext i32 %1931 to i64
  %1933 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1932
  %1934 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1933, i32 0, i64 %1930
  %1935 = getelementptr inbounds [13 x [5 x double]]* %1934, i32 0, i64 %1927
  %1936 = getelementptr inbounds [5 x double]* %1935, i32 0, i64 2
  %1937 = load double* %1936, align 8
  %1938 = load i32* %i, align 4
  %1939 = sext i32 %1938 to i64
  %1940 = load i32* %j, align 4
  %1941 = sext i32 %1940 to i64
  %1942 = load i32* %k, align 4
  %1943 = sext i32 %1942 to i64
  %1944 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1943
  %1945 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1944, i32 0, i64 %1941
  %1946 = getelementptr inbounds [13 x [5 x double]]* %1945, i32 0, i64 %1939
  %1947 = getelementptr inbounds [5 x double]* %1946, i32 0, i64 2
  %1948 = load double* %1947, align 8
  %1949 = fmul double 2.000000e+00, %1948
  %1950 = fsub double %1937, %1949
  %1951 = load i32* %i, align 4
  %1952 = sext i32 %1951 to i64
  %1953 = load i32* %j, align 4
  %1954 = sub nsw i32 %1953, 1
  %1955 = sext i32 %1954 to i64
  %1956 = load i32* %k, align 4
  %1957 = sext i32 %1956 to i64
  %1958 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1957
  %1959 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1958, i32 0, i64 %1955
  %1960 = getelementptr inbounds [13 x [5 x double]]* %1959, i32 0, i64 %1952
  %1961 = getelementptr inbounds [5 x double]* %1960, i32 0, i64 2
  %1962 = load double* %1961, align 8
  %1963 = fadd double %1950, %1962
  %1964 = fmul double %1925, %1963
  %1965 = fadd double %1924, %1964
  %1966 = load double* @yycon2, align 8
  %1967 = load double* @con43, align 8
  %1968 = fmul double %1966, %1967
  %1969 = load double* %vp1, align 8
  %1970 = load double* %vijk, align 8
  %1971 = fmul double 2.000000e+00, %1970
  %1972 = fsub double %1969, %1971
  %1973 = load double* %vm1, align 8
  %1974 = fadd double %1972, %1973
  %1975 = fmul double %1968, %1974
  %1976 = fadd double %1965, %1975
  %1977 = load double* @ty2, align 8
  %1978 = load i32* %i, align 4
  %1979 = sext i32 %1978 to i64
  %1980 = load i32* %j, align 4
  %1981 = add nsw i32 %1980, 1
  %1982 = sext i32 %1981 to i64
  %1983 = load i32* %k, align 4
  %1984 = sext i32 %1983 to i64
  %1985 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1984
  %1986 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1985, i32 0, i64 %1982
  %1987 = getelementptr inbounds [13 x [5 x double]]* %1986, i32 0, i64 %1979
  %1988 = getelementptr inbounds [5 x double]* %1987, i32 0, i64 2
  %1989 = load double* %1988, align 8
  %1990 = load double* %vp1, align 8
  %1991 = fmul double %1989, %1990
  %1992 = load i32* %i, align 4
  %1993 = sext i32 %1992 to i64
  %1994 = load i32* %j, align 4
  %1995 = sub nsw i32 %1994, 1
  %1996 = sext i32 %1995 to i64
  %1997 = load i32* %k, align 4
  %1998 = sext i32 %1997 to i64
  %1999 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %1998
  %2000 = getelementptr inbounds [13 x [13 x [5 x double]]]* %1999, i32 0, i64 %1996
  %2001 = getelementptr inbounds [13 x [5 x double]]* %2000, i32 0, i64 %1993
  %2002 = getelementptr inbounds [5 x double]* %2001, i32 0, i64 2
  %2003 = load double* %2002, align 8
  %2004 = load double* %vm1, align 8
  %2005 = fmul double %2003, %2004
  %2006 = fsub double %1991, %2005
  %2007 = load i32* %i, align 4
  %2008 = sext i32 %2007 to i64
  %2009 = load i32* %j, align 4
  %2010 = add nsw i32 %2009, 1
  %2011 = sext i32 %2010 to i64
  %2012 = load i32* %k, align 4
  %2013 = sext i32 %2012 to i64
  %2014 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2013
  %2015 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2014, i32 0, i64 %2011
  %2016 = getelementptr inbounds [13 x [5 x double]]* %2015, i32 0, i64 %2008
  %2017 = getelementptr inbounds [5 x double]* %2016, i32 0, i64 4
  %2018 = load double* %2017, align 8
  %2019 = load i32* %i, align 4
  %2020 = sext i32 %2019 to i64
  %2021 = load i32* %j, align 4
  %2022 = add nsw i32 %2021, 1
  %2023 = sext i32 %2022 to i64
  %2024 = load i32* %k, align 4
  %2025 = sext i32 %2024 to i64
  %2026 = getelementptr inbounds [12 x [13 x [13 x double]]]* @square, i32 0, i64 %2025
  %2027 = getelementptr inbounds [13 x [13 x double]]* %2026, i32 0, i64 %2023
  %2028 = getelementptr inbounds [13 x double]* %2027, i32 0, i64 %2020
  %2029 = load double* %2028, align 8
  %2030 = fsub double %2018, %2029
  %2031 = load i32* %i, align 4
  %2032 = sext i32 %2031 to i64
  %2033 = load i32* %j, align 4
  %2034 = sub nsw i32 %2033, 1
  %2035 = sext i32 %2034 to i64
  %2036 = load i32* %k, align 4
  %2037 = sext i32 %2036 to i64
  %2038 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2037
  %2039 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2038, i32 0, i64 %2035
  %2040 = getelementptr inbounds [13 x [5 x double]]* %2039, i32 0, i64 %2032
  %2041 = getelementptr inbounds [5 x double]* %2040, i32 0, i64 4
  %2042 = load double* %2041, align 8
  %2043 = fsub double %2030, %2042
  %2044 = load i32* %i, align 4
  %2045 = sext i32 %2044 to i64
  %2046 = load i32* %j, align 4
  %2047 = sub nsw i32 %2046, 1
  %2048 = sext i32 %2047 to i64
  %2049 = load i32* %k, align 4
  %2050 = sext i32 %2049 to i64
  %2051 = getelementptr inbounds [12 x [13 x [13 x double]]]* @square, i32 0, i64 %2050
  %2052 = getelementptr inbounds [13 x [13 x double]]* %2051, i32 0, i64 %2048
  %2053 = getelementptr inbounds [13 x double]* %2052, i32 0, i64 %2045
  %2054 = load double* %2053, align 8
  %2055 = fadd double %2043, %2054
  %2056 = load double* @c2, align 8
  %2057 = fmul double %2055, %2056
  %2058 = fadd double %2006, %2057
  %2059 = fmul double %1977, %2058
  %2060 = fsub double %1976, %2059
  %2061 = load i32* %i, align 4
  %2062 = sext i32 %2061 to i64
  %2063 = load i32* %j, align 4
  %2064 = sext i32 %2063 to i64
  %2065 = load i32* %k, align 4
  %2066 = sext i32 %2065 to i64
  %2067 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2066
  %2068 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2067, i32 0, i64 %2064
  %2069 = getelementptr inbounds [13 x [5 x double]]* %2068, i32 0, i64 %2062
  %2070 = getelementptr inbounds [5 x double]* %2069, i32 0, i64 2
  store double %2060, double* %2070, align 8
  %2071 = load i32* %i, align 4
  %2072 = sext i32 %2071 to i64
  %2073 = load i32* %j, align 4
  %2074 = sext i32 %2073 to i64
  %2075 = load i32* %k, align 4
  %2076 = sext i32 %2075 to i64
  %2077 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2076
  %2078 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2077, i32 0, i64 %2074
  %2079 = getelementptr inbounds [13 x [5 x double]]* %2078, i32 0, i64 %2072
  %2080 = getelementptr inbounds [5 x double]* %2079, i32 0, i64 3
  %2081 = load double* %2080, align 8
  %2082 = load double* @dy4ty1, align 8
  %2083 = load i32* %i, align 4
  %2084 = sext i32 %2083 to i64
  %2085 = load i32* %j, align 4
  %2086 = add nsw i32 %2085, 1
  %2087 = sext i32 %2086 to i64
  %2088 = load i32* %k, align 4
  %2089 = sext i32 %2088 to i64
  %2090 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2089
  %2091 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2090, i32 0, i64 %2087
  %2092 = getelementptr inbounds [13 x [5 x double]]* %2091, i32 0, i64 %2084
  %2093 = getelementptr inbounds [5 x double]* %2092, i32 0, i64 3
  %2094 = load double* %2093, align 8
  %2095 = load i32* %i, align 4
  %2096 = sext i32 %2095 to i64
  %2097 = load i32* %j, align 4
  %2098 = sext i32 %2097 to i64
  %2099 = load i32* %k, align 4
  %2100 = sext i32 %2099 to i64
  %2101 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2100
  %2102 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2101, i32 0, i64 %2098
  %2103 = getelementptr inbounds [13 x [5 x double]]* %2102, i32 0, i64 %2096
  %2104 = getelementptr inbounds [5 x double]* %2103, i32 0, i64 3
  %2105 = load double* %2104, align 8
  %2106 = fmul double 2.000000e+00, %2105
  %2107 = fsub double %2094, %2106
  %2108 = load i32* %i, align 4
  %2109 = sext i32 %2108 to i64
  %2110 = load i32* %j, align 4
  %2111 = sub nsw i32 %2110, 1
  %2112 = sext i32 %2111 to i64
  %2113 = load i32* %k, align 4
  %2114 = sext i32 %2113 to i64
  %2115 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2114
  %2116 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2115, i32 0, i64 %2112
  %2117 = getelementptr inbounds [13 x [5 x double]]* %2116, i32 0, i64 %2109
  %2118 = getelementptr inbounds [5 x double]* %2117, i32 0, i64 3
  %2119 = load double* %2118, align 8
  %2120 = fadd double %2107, %2119
  %2121 = fmul double %2082, %2120
  %2122 = fadd double %2081, %2121
  %2123 = load double* @yycon2, align 8
  %2124 = load i32* %i, align 4
  %2125 = sext i32 %2124 to i64
  %2126 = load i32* %j, align 4
  %2127 = add nsw i32 %2126, 1
  %2128 = sext i32 %2127 to i64
  %2129 = load i32* %k, align 4
  %2130 = sext i32 %2129 to i64
  %2131 = getelementptr inbounds [12 x [13 x [13 x double]]]* @ws, i32 0, i64 %2130
  %2132 = getelementptr inbounds [13 x [13 x double]]* %2131, i32 0, i64 %2128
  %2133 = getelementptr inbounds [13 x double]* %2132, i32 0, i64 %2125
  %2134 = load double* %2133, align 8
  %2135 = load i32* %i, align 4
  %2136 = sext i32 %2135 to i64
  %2137 = load i32* %j, align 4
  %2138 = sext i32 %2137 to i64
  %2139 = load i32* %k, align 4
  %2140 = sext i32 %2139 to i64
  %2141 = getelementptr inbounds [12 x [13 x [13 x double]]]* @ws, i32 0, i64 %2140
  %2142 = getelementptr inbounds [13 x [13 x double]]* %2141, i32 0, i64 %2138
  %2143 = getelementptr inbounds [13 x double]* %2142, i32 0, i64 %2136
  %2144 = load double* %2143, align 8
  %2145 = fmul double 2.000000e+00, %2144
  %2146 = fsub double %2134, %2145
  %2147 = load i32* %i, align 4
  %2148 = sext i32 %2147 to i64
  %2149 = load i32* %j, align 4
  %2150 = sub nsw i32 %2149, 1
  %2151 = sext i32 %2150 to i64
  %2152 = load i32* %k, align 4
  %2153 = sext i32 %2152 to i64
  %2154 = getelementptr inbounds [12 x [13 x [13 x double]]]* @ws, i32 0, i64 %2153
  %2155 = getelementptr inbounds [13 x [13 x double]]* %2154, i32 0, i64 %2151
  %2156 = getelementptr inbounds [13 x double]* %2155, i32 0, i64 %2148
  %2157 = load double* %2156, align 8
  %2158 = fadd double %2146, %2157
  %2159 = fmul double %2123, %2158
  %2160 = fadd double %2122, %2159
  %2161 = load double* @ty2, align 8
  %2162 = load i32* %i, align 4
  %2163 = sext i32 %2162 to i64
  %2164 = load i32* %j, align 4
  %2165 = add nsw i32 %2164, 1
  %2166 = sext i32 %2165 to i64
  %2167 = load i32* %k, align 4
  %2168 = sext i32 %2167 to i64
  %2169 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2168
  %2170 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2169, i32 0, i64 %2166
  %2171 = getelementptr inbounds [13 x [5 x double]]* %2170, i32 0, i64 %2163
  %2172 = getelementptr inbounds [5 x double]* %2171, i32 0, i64 3
  %2173 = load double* %2172, align 8
  %2174 = load double* %vp1, align 8
  %2175 = fmul double %2173, %2174
  %2176 = load i32* %i, align 4
  %2177 = sext i32 %2176 to i64
  %2178 = load i32* %j, align 4
  %2179 = sub nsw i32 %2178, 1
  %2180 = sext i32 %2179 to i64
  %2181 = load i32* %k, align 4
  %2182 = sext i32 %2181 to i64
  %2183 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2182
  %2184 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2183, i32 0, i64 %2180
  %2185 = getelementptr inbounds [13 x [5 x double]]* %2184, i32 0, i64 %2177
  %2186 = getelementptr inbounds [5 x double]* %2185, i32 0, i64 3
  %2187 = load double* %2186, align 8
  %2188 = load double* %vm1, align 8
  %2189 = fmul double %2187, %2188
  %2190 = fsub double %2175, %2189
  %2191 = fmul double %2161, %2190
  %2192 = fsub double %2160, %2191
  %2193 = load i32* %i, align 4
  %2194 = sext i32 %2193 to i64
  %2195 = load i32* %j, align 4
  %2196 = sext i32 %2195 to i64
  %2197 = load i32* %k, align 4
  %2198 = sext i32 %2197 to i64
  %2199 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2198
  %2200 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2199, i32 0, i64 %2196
  %2201 = getelementptr inbounds [13 x [5 x double]]* %2200, i32 0, i64 %2194
  %2202 = getelementptr inbounds [5 x double]* %2201, i32 0, i64 3
  store double %2192, double* %2202, align 8
  %2203 = load i32* %i, align 4
  %2204 = sext i32 %2203 to i64
  %2205 = load i32* %j, align 4
  %2206 = sext i32 %2205 to i64
  %2207 = load i32* %k, align 4
  %2208 = sext i32 %2207 to i64
  %2209 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2208
  %2210 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2209, i32 0, i64 %2206
  %2211 = getelementptr inbounds [13 x [5 x double]]* %2210, i32 0, i64 %2204
  %2212 = getelementptr inbounds [5 x double]* %2211, i32 0, i64 4
  %2213 = load double* %2212, align 8
  %2214 = load double* @dy5ty1, align 8
  %2215 = load i32* %i, align 4
  %2216 = sext i32 %2215 to i64
  %2217 = load i32* %j, align 4
  %2218 = add nsw i32 %2217, 1
  %2219 = sext i32 %2218 to i64
  %2220 = load i32* %k, align 4
  %2221 = sext i32 %2220 to i64
  %2222 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2221
  %2223 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2222, i32 0, i64 %2219
  %2224 = getelementptr inbounds [13 x [5 x double]]* %2223, i32 0, i64 %2216
  %2225 = getelementptr inbounds [5 x double]* %2224, i32 0, i64 4
  %2226 = load double* %2225, align 8
  %2227 = load i32* %i, align 4
  %2228 = sext i32 %2227 to i64
  %2229 = load i32* %j, align 4
  %2230 = sext i32 %2229 to i64
  %2231 = load i32* %k, align 4
  %2232 = sext i32 %2231 to i64
  %2233 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2232
  %2234 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2233, i32 0, i64 %2230
  %2235 = getelementptr inbounds [13 x [5 x double]]* %2234, i32 0, i64 %2228
  %2236 = getelementptr inbounds [5 x double]* %2235, i32 0, i64 4
  %2237 = load double* %2236, align 8
  %2238 = fmul double 2.000000e+00, %2237
  %2239 = fsub double %2226, %2238
  %2240 = load i32* %i, align 4
  %2241 = sext i32 %2240 to i64
  %2242 = load i32* %j, align 4
  %2243 = sub nsw i32 %2242, 1
  %2244 = sext i32 %2243 to i64
  %2245 = load i32* %k, align 4
  %2246 = sext i32 %2245 to i64
  %2247 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2246
  %2248 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2247, i32 0, i64 %2244
  %2249 = getelementptr inbounds [13 x [5 x double]]* %2248, i32 0, i64 %2241
  %2250 = getelementptr inbounds [5 x double]* %2249, i32 0, i64 4
  %2251 = load double* %2250, align 8
  %2252 = fadd double %2239, %2251
  %2253 = fmul double %2214, %2252
  %2254 = fadd double %2213, %2253
  %2255 = load double* @yycon3, align 8
  %2256 = load i32* %i, align 4
  %2257 = sext i32 %2256 to i64
  %2258 = load i32* %j, align 4
  %2259 = add nsw i32 %2258, 1
  %2260 = sext i32 %2259 to i64
  %2261 = load i32* %k, align 4
  %2262 = sext i32 %2261 to i64
  %2263 = getelementptr inbounds [12 x [13 x [13 x double]]]* @qs, i32 0, i64 %2262
  %2264 = getelementptr inbounds [13 x [13 x double]]* %2263, i32 0, i64 %2260
  %2265 = getelementptr inbounds [13 x double]* %2264, i32 0, i64 %2257
  %2266 = load double* %2265, align 8
  %2267 = load i32* %i, align 4
  %2268 = sext i32 %2267 to i64
  %2269 = load i32* %j, align 4
  %2270 = sext i32 %2269 to i64
  %2271 = load i32* %k, align 4
  %2272 = sext i32 %2271 to i64
  %2273 = getelementptr inbounds [12 x [13 x [13 x double]]]* @qs, i32 0, i64 %2272
  %2274 = getelementptr inbounds [13 x [13 x double]]* %2273, i32 0, i64 %2270
  %2275 = getelementptr inbounds [13 x double]* %2274, i32 0, i64 %2268
  %2276 = load double* %2275, align 8
  %2277 = fmul double 2.000000e+00, %2276
  %2278 = fsub double %2266, %2277
  %2279 = load i32* %i, align 4
  %2280 = sext i32 %2279 to i64
  %2281 = load i32* %j, align 4
  %2282 = sub nsw i32 %2281, 1
  %2283 = sext i32 %2282 to i64
  %2284 = load i32* %k, align 4
  %2285 = sext i32 %2284 to i64
  %2286 = getelementptr inbounds [12 x [13 x [13 x double]]]* @qs, i32 0, i64 %2285
  %2287 = getelementptr inbounds [13 x [13 x double]]* %2286, i32 0, i64 %2283
  %2288 = getelementptr inbounds [13 x double]* %2287, i32 0, i64 %2280
  %2289 = load double* %2288, align 8
  %2290 = fadd double %2278, %2289
  %2291 = fmul double %2255, %2290
  %2292 = fadd double %2254, %2291
  %2293 = load double* @yycon4, align 8
  %2294 = load double* %vp1, align 8
  %2295 = load double* %vp1, align 8
  %2296 = fmul double %2294, %2295
  %2297 = load double* %vijk, align 8
  %2298 = fmul double 2.000000e+00, %2297
  %2299 = load double* %vijk, align 8
  %2300 = fmul double %2298, %2299
  %2301 = fsub double %2296, %2300
  %2302 = load double* %vm1, align 8
  %2303 = load double* %vm1, align 8
  %2304 = fmul double %2302, %2303
  %2305 = fadd double %2301, %2304
  %2306 = fmul double %2293, %2305
  %2307 = fadd double %2292, %2306
  %2308 = load double* @yycon5, align 8
  %2309 = load i32* %i, align 4
  %2310 = sext i32 %2309 to i64
  %2311 = load i32* %j, align 4
  %2312 = add nsw i32 %2311, 1
  %2313 = sext i32 %2312 to i64
  %2314 = load i32* %k, align 4
  %2315 = sext i32 %2314 to i64
  %2316 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2315
  %2317 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2316, i32 0, i64 %2313
  %2318 = getelementptr inbounds [13 x [5 x double]]* %2317, i32 0, i64 %2310
  %2319 = getelementptr inbounds [5 x double]* %2318, i32 0, i64 4
  %2320 = load double* %2319, align 8
  %2321 = load i32* %i, align 4
  %2322 = sext i32 %2321 to i64
  %2323 = load i32* %j, align 4
  %2324 = add nsw i32 %2323, 1
  %2325 = sext i32 %2324 to i64
  %2326 = load i32* %k, align 4
  %2327 = sext i32 %2326 to i64
  %2328 = getelementptr inbounds [12 x [13 x [13 x double]]]* @rho_i, i32 0, i64 %2327
  %2329 = getelementptr inbounds [13 x [13 x double]]* %2328, i32 0, i64 %2325
  %2330 = getelementptr inbounds [13 x double]* %2329, i32 0, i64 %2322
  %2331 = load double* %2330, align 8
  %2332 = fmul double %2320, %2331
  %2333 = load i32* %i, align 4
  %2334 = sext i32 %2333 to i64
  %2335 = load i32* %j, align 4
  %2336 = sext i32 %2335 to i64
  %2337 = load i32* %k, align 4
  %2338 = sext i32 %2337 to i64
  %2339 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2338
  %2340 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2339, i32 0, i64 %2336
  %2341 = getelementptr inbounds [13 x [5 x double]]* %2340, i32 0, i64 %2334
  %2342 = getelementptr inbounds [5 x double]* %2341, i32 0, i64 4
  %2343 = load double* %2342, align 8
  %2344 = fmul double 2.000000e+00, %2343
  %2345 = load i32* %i, align 4
  %2346 = sext i32 %2345 to i64
  %2347 = load i32* %j, align 4
  %2348 = sext i32 %2347 to i64
  %2349 = load i32* %k, align 4
  %2350 = sext i32 %2349 to i64
  %2351 = getelementptr inbounds [12 x [13 x [13 x double]]]* @rho_i, i32 0, i64 %2350
  %2352 = getelementptr inbounds [13 x [13 x double]]* %2351, i32 0, i64 %2348
  %2353 = getelementptr inbounds [13 x double]* %2352, i32 0, i64 %2346
  %2354 = load double* %2353, align 8
  %2355 = fmul double %2344, %2354
  %2356 = fsub double %2332, %2355
  %2357 = load i32* %i, align 4
  %2358 = sext i32 %2357 to i64
  %2359 = load i32* %j, align 4
  %2360 = sub nsw i32 %2359, 1
  %2361 = sext i32 %2360 to i64
  %2362 = load i32* %k, align 4
  %2363 = sext i32 %2362 to i64
  %2364 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2363
  %2365 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2364, i32 0, i64 %2361
  %2366 = getelementptr inbounds [13 x [5 x double]]* %2365, i32 0, i64 %2358
  %2367 = getelementptr inbounds [5 x double]* %2366, i32 0, i64 4
  %2368 = load double* %2367, align 8
  %2369 = load i32* %i, align 4
  %2370 = sext i32 %2369 to i64
  %2371 = load i32* %j, align 4
  %2372 = sub nsw i32 %2371, 1
  %2373 = sext i32 %2372 to i64
  %2374 = load i32* %k, align 4
  %2375 = sext i32 %2374 to i64
  %2376 = getelementptr inbounds [12 x [13 x [13 x double]]]* @rho_i, i32 0, i64 %2375
  %2377 = getelementptr inbounds [13 x [13 x double]]* %2376, i32 0, i64 %2373
  %2378 = getelementptr inbounds [13 x double]* %2377, i32 0, i64 %2370
  %2379 = load double* %2378, align 8
  %2380 = fmul double %2368, %2379
  %2381 = fadd double %2356, %2380
  %2382 = fmul double %2308, %2381
  %2383 = fadd double %2307, %2382
  %2384 = load double* @ty2, align 8
  %2385 = load double* @c1, align 8
  %2386 = load i32* %i, align 4
  %2387 = sext i32 %2386 to i64
  %2388 = load i32* %j, align 4
  %2389 = add nsw i32 %2388, 1
  %2390 = sext i32 %2389 to i64
  %2391 = load i32* %k, align 4
  %2392 = sext i32 %2391 to i64
  %2393 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2392
  %2394 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2393, i32 0, i64 %2390
  %2395 = getelementptr inbounds [13 x [5 x double]]* %2394, i32 0, i64 %2387
  %2396 = getelementptr inbounds [5 x double]* %2395, i32 0, i64 4
  %2397 = load double* %2396, align 8
  %2398 = fmul double %2385, %2397
  %2399 = load double* @c2, align 8
  %2400 = load i32* %i, align 4
  %2401 = sext i32 %2400 to i64
  %2402 = load i32* %j, align 4
  %2403 = add nsw i32 %2402, 1
  %2404 = sext i32 %2403 to i64
  %2405 = load i32* %k, align 4
  %2406 = sext i32 %2405 to i64
  %2407 = getelementptr inbounds [12 x [13 x [13 x double]]]* @square, i32 0, i64 %2406
  %2408 = getelementptr inbounds [13 x [13 x double]]* %2407, i32 0, i64 %2404
  %2409 = getelementptr inbounds [13 x double]* %2408, i32 0, i64 %2401
  %2410 = load double* %2409, align 8
  %2411 = fmul double %2399, %2410
  %2412 = fsub double %2398, %2411
  %2413 = load double* %vp1, align 8
  %2414 = fmul double %2412, %2413
  %2415 = load double* @c1, align 8
  %2416 = load i32* %i, align 4
  %2417 = sext i32 %2416 to i64
  %2418 = load i32* %j, align 4
  %2419 = sub nsw i32 %2418, 1
  %2420 = sext i32 %2419 to i64
  %2421 = load i32* %k, align 4
  %2422 = sext i32 %2421 to i64
  %2423 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2422
  %2424 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2423, i32 0, i64 %2420
  %2425 = getelementptr inbounds [13 x [5 x double]]* %2424, i32 0, i64 %2417
  %2426 = getelementptr inbounds [5 x double]* %2425, i32 0, i64 4
  %2427 = load double* %2426, align 8
  %2428 = fmul double %2415, %2427
  %2429 = load double* @c2, align 8
  %2430 = load i32* %i, align 4
  %2431 = sext i32 %2430 to i64
  %2432 = load i32* %j, align 4
  %2433 = sub nsw i32 %2432, 1
  %2434 = sext i32 %2433 to i64
  %2435 = load i32* %k, align 4
  %2436 = sext i32 %2435 to i64
  %2437 = getelementptr inbounds [12 x [13 x [13 x double]]]* @square, i32 0, i64 %2436
  %2438 = getelementptr inbounds [13 x [13 x double]]* %2437, i32 0, i64 %2434
  %2439 = getelementptr inbounds [13 x double]* %2438, i32 0, i64 %2431
  %2440 = load double* %2439, align 8
  %2441 = fmul double %2429, %2440
  %2442 = fsub double %2428, %2441
  %2443 = load double* %vm1, align 8
  %2444 = fmul double %2442, %2443
  %2445 = fsub double %2414, %2444
  %2446 = fmul double %2384, %2445
  %2447 = fsub double %2383, %2446
  %2448 = load i32* %i, align 4
  %2449 = sext i32 %2448 to i64
  %2450 = load i32* %j, align 4
  %2451 = sext i32 %2450 to i64
  %2452 = load i32* %k, align 4
  %2453 = sext i32 %2452 to i64
  %2454 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2453
  %2455 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2454, i32 0, i64 %2451
  %2456 = getelementptr inbounds [13 x [5 x double]]* %2455, i32 0, i64 %2449
  %2457 = getelementptr inbounds [5 x double]* %2456, i32 0, i64 4
  store double %2447, double* %2457, align 8
  br label %2458

; <label>:2458                                    ; preds = %1659
  %2459 = load i32* %i, align 4
  %2460 = add nsw i32 %2459, 1
  store i32 %2460, i32* %i, align 4
  br label %1654

; <label>:2461                                    ; preds = %1654
  br label %2462

; <label>:2462                                    ; preds = %2461
  %2463 = load i32* %j, align 4
  %2464 = add nsw i32 %2463, 1
  store i32 %2464, i32* %j, align 4
  br label %1648

; <label>:2465                                    ; preds = %1648
  store i32 1, i32* %j, align 4
  store i32 1, i32* %i, align 4
  br label %2466

; <label>:2466                                    ; preds = %2553, %2465
  %2467 = load i32* %i, align 4
  %2468 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %2469 = sub nsw i32 %2468, 2
  %2470 = icmp sle i32 %2467, %2469
  br i1 %2470, label %2471, label %2556

; <label>:2471                                    ; preds = %2466
  store i32 0, i32* %m, align 4
  br label %2472

; <label>:2472                                    ; preds = %2549, %2471
  %2473 = load i32* %m, align 4
  %2474 = icmp slt i32 %2473, 5
  br i1 %2474, label %2475, label %2552

; <label>:2475                                    ; preds = %2472
  %2476 = load i32* %m, align 4
  %2477 = sext i32 %2476 to i64
  %2478 = load i32* %i, align 4
  %2479 = sext i32 %2478 to i64
  %2480 = load i32* %j, align 4
  %2481 = sext i32 %2480 to i64
  %2482 = load i32* %k, align 4
  %2483 = sext i32 %2482 to i64
  %2484 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2483
  %2485 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2484, i32 0, i64 %2481
  %2486 = getelementptr inbounds [13 x [5 x double]]* %2485, i32 0, i64 %2479
  %2487 = getelementptr inbounds [5 x double]* %2486, i32 0, i64 %2477
  %2488 = load double* %2487, align 8
  %2489 = load double* @dssp, align 8
  %2490 = load i32* %m, align 4
  %2491 = sext i32 %2490 to i64
  %2492 = load i32* %i, align 4
  %2493 = sext i32 %2492 to i64
  %2494 = load i32* %j, align 4
  %2495 = sext i32 %2494 to i64
  %2496 = load i32* %k, align 4
  %2497 = sext i32 %2496 to i64
  %2498 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2497
  %2499 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2498, i32 0, i64 %2495
  %2500 = getelementptr inbounds [13 x [5 x double]]* %2499, i32 0, i64 %2493
  %2501 = getelementptr inbounds [5 x double]* %2500, i32 0, i64 %2491
  %2502 = load double* %2501, align 8
  %2503 = fmul double 5.000000e+00, %2502
  %2504 = load i32* %m, align 4
  %2505 = sext i32 %2504 to i64
  %2506 = load i32* %i, align 4
  %2507 = sext i32 %2506 to i64
  %2508 = load i32* %j, align 4
  %2509 = add nsw i32 %2508, 1
  %2510 = sext i32 %2509 to i64
  %2511 = load i32* %k, align 4
  %2512 = sext i32 %2511 to i64
  %2513 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2512
  %2514 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2513, i32 0, i64 %2510
  %2515 = getelementptr inbounds [13 x [5 x double]]* %2514, i32 0, i64 %2507
  %2516 = getelementptr inbounds [5 x double]* %2515, i32 0, i64 %2505
  %2517 = load double* %2516, align 8
  %2518 = fmul double 4.000000e+00, %2517
  %2519 = fsub double %2503, %2518
  %2520 = load i32* %m, align 4
  %2521 = sext i32 %2520 to i64
  %2522 = load i32* %i, align 4
  %2523 = sext i32 %2522 to i64
  %2524 = load i32* %j, align 4
  %2525 = add nsw i32 %2524, 2
  %2526 = sext i32 %2525 to i64
  %2527 = load i32* %k, align 4
  %2528 = sext i32 %2527 to i64
  %2529 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2528
  %2530 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2529, i32 0, i64 %2526
  %2531 = getelementptr inbounds [13 x [5 x double]]* %2530, i32 0, i64 %2523
  %2532 = getelementptr inbounds [5 x double]* %2531, i32 0, i64 %2521
  %2533 = load double* %2532, align 8
  %2534 = fadd double %2519, %2533
  %2535 = fmul double %2489, %2534
  %2536 = fsub double %2488, %2535
  %2537 = load i32* %m, align 4
  %2538 = sext i32 %2537 to i64
  %2539 = load i32* %i, align 4
  %2540 = sext i32 %2539 to i64
  %2541 = load i32* %j, align 4
  %2542 = sext i32 %2541 to i64
  %2543 = load i32* %k, align 4
  %2544 = sext i32 %2543 to i64
  %2545 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2544
  %2546 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2545, i32 0, i64 %2542
  %2547 = getelementptr inbounds [13 x [5 x double]]* %2546, i32 0, i64 %2540
  %2548 = getelementptr inbounds [5 x double]* %2547, i32 0, i64 %2538
  store double %2536, double* %2548, align 8
  br label %2549

; <label>:2549                                    ; preds = %2475
  %2550 = load i32* %m, align 4
  %2551 = add nsw i32 %2550, 1
  store i32 %2551, i32* %m, align 4
  br label %2472

; <label>:2552                                    ; preds = %2472
  br label %2553

; <label>:2553                                    ; preds = %2552
  %2554 = load i32* %i, align 4
  %2555 = add nsw i32 %2554, 1
  store i32 %2555, i32* %i, align 4
  br label %2466

; <label>:2556                                    ; preds = %2466
  store i32 2, i32* %j, align 4
  store i32 1, i32* %i, align 4
  br label %2557

; <label>:2557                                    ; preds = %2660, %2556
  %2558 = load i32* %i, align 4
  %2559 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %2560 = sub nsw i32 %2559, 2
  %2561 = icmp sle i32 %2558, %2560
  br i1 %2561, label %2562, label %2663

; <label>:2562                                    ; preds = %2557
  store i32 0, i32* %m, align 4
  br label %2563

; <label>:2563                                    ; preds = %2656, %2562
  %2564 = load i32* %m, align 4
  %2565 = icmp slt i32 %2564, 5
  br i1 %2565, label %2566, label %2659

; <label>:2566                                    ; preds = %2563
  %2567 = load i32* %m, align 4
  %2568 = sext i32 %2567 to i64
  %2569 = load i32* %i, align 4
  %2570 = sext i32 %2569 to i64
  %2571 = load i32* %j, align 4
  %2572 = sext i32 %2571 to i64
  %2573 = load i32* %k, align 4
  %2574 = sext i32 %2573 to i64
  %2575 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2574
  %2576 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2575, i32 0, i64 %2572
  %2577 = getelementptr inbounds [13 x [5 x double]]* %2576, i32 0, i64 %2570
  %2578 = getelementptr inbounds [5 x double]* %2577, i32 0, i64 %2568
  %2579 = load double* %2578, align 8
  %2580 = load double* @dssp, align 8
  %2581 = load i32* %m, align 4
  %2582 = sext i32 %2581 to i64
  %2583 = load i32* %i, align 4
  %2584 = sext i32 %2583 to i64
  %2585 = load i32* %j, align 4
  %2586 = sub nsw i32 %2585, 1
  %2587 = sext i32 %2586 to i64
  %2588 = load i32* %k, align 4
  %2589 = sext i32 %2588 to i64
  %2590 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2589
  %2591 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2590, i32 0, i64 %2587
  %2592 = getelementptr inbounds [13 x [5 x double]]* %2591, i32 0, i64 %2584
  %2593 = getelementptr inbounds [5 x double]* %2592, i32 0, i64 %2582
  %2594 = load double* %2593, align 8
  %2595 = fmul double -4.000000e+00, %2594
  %2596 = load i32* %m, align 4
  %2597 = sext i32 %2596 to i64
  %2598 = load i32* %i, align 4
  %2599 = sext i32 %2598 to i64
  %2600 = load i32* %j, align 4
  %2601 = sext i32 %2600 to i64
  %2602 = load i32* %k, align 4
  %2603 = sext i32 %2602 to i64
  %2604 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2603
  %2605 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2604, i32 0, i64 %2601
  %2606 = getelementptr inbounds [13 x [5 x double]]* %2605, i32 0, i64 %2599
  %2607 = getelementptr inbounds [5 x double]* %2606, i32 0, i64 %2597
  %2608 = load double* %2607, align 8
  %2609 = fmul double 6.000000e+00, %2608
  %2610 = fadd double %2595, %2609
  %2611 = load i32* %m, align 4
  %2612 = sext i32 %2611 to i64
  %2613 = load i32* %i, align 4
  %2614 = sext i32 %2613 to i64
  %2615 = load i32* %j, align 4
  %2616 = add nsw i32 %2615, 1
  %2617 = sext i32 %2616 to i64
  %2618 = load i32* %k, align 4
  %2619 = sext i32 %2618 to i64
  %2620 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2619
  %2621 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2620, i32 0, i64 %2617
  %2622 = getelementptr inbounds [13 x [5 x double]]* %2621, i32 0, i64 %2614
  %2623 = getelementptr inbounds [5 x double]* %2622, i32 0, i64 %2612
  %2624 = load double* %2623, align 8
  %2625 = fmul double 4.000000e+00, %2624
  %2626 = fsub double %2610, %2625
  %2627 = load i32* %m, align 4
  %2628 = sext i32 %2627 to i64
  %2629 = load i32* %i, align 4
  %2630 = sext i32 %2629 to i64
  %2631 = load i32* %j, align 4
  %2632 = add nsw i32 %2631, 2
  %2633 = sext i32 %2632 to i64
  %2634 = load i32* %k, align 4
  %2635 = sext i32 %2634 to i64
  %2636 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2635
  %2637 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2636, i32 0, i64 %2633
  %2638 = getelementptr inbounds [13 x [5 x double]]* %2637, i32 0, i64 %2630
  %2639 = getelementptr inbounds [5 x double]* %2638, i32 0, i64 %2628
  %2640 = load double* %2639, align 8
  %2641 = fadd double %2626, %2640
  %2642 = fmul double %2580, %2641
  %2643 = fsub double %2579, %2642
  %2644 = load i32* %m, align 4
  %2645 = sext i32 %2644 to i64
  %2646 = load i32* %i, align 4
  %2647 = sext i32 %2646 to i64
  %2648 = load i32* %j, align 4
  %2649 = sext i32 %2648 to i64
  %2650 = load i32* %k, align 4
  %2651 = sext i32 %2650 to i64
  %2652 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2651
  %2653 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2652, i32 0, i64 %2649
  %2654 = getelementptr inbounds [13 x [5 x double]]* %2653, i32 0, i64 %2647
  %2655 = getelementptr inbounds [5 x double]* %2654, i32 0, i64 %2645
  store double %2643, double* %2655, align 8
  br label %2656

; <label>:2656                                    ; preds = %2566
  %2657 = load i32* %m, align 4
  %2658 = add nsw i32 %2657, 1
  store i32 %2658, i32* %m, align 4
  br label %2563

; <label>:2659                                    ; preds = %2563
  br label %2660

; <label>:2660                                    ; preds = %2659
  %2661 = load i32* %i, align 4
  %2662 = add nsw i32 %2661, 1
  store i32 %2662, i32* %i, align 4
  br label %2557

; <label>:2663                                    ; preds = %2557
  store i32 3, i32* %j, align 4
  br label %2664

; <label>:2664                                    ; preds = %2792, %2663
  %2665 = load i32* %j, align 4
  %2666 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %2667 = sub nsw i32 %2666, 4
  %2668 = icmp sle i32 %2665, %2667
  br i1 %2668, label %2669, label %2795

; <label>:2669                                    ; preds = %2664
  store i32 1, i32* %i, align 4
  br label %2670

; <label>:2670                                    ; preds = %2788, %2669
  %2671 = load i32* %i, align 4
  %2672 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %2673 = sub nsw i32 %2672, 2
  %2674 = icmp sle i32 %2671, %2673
  br i1 %2674, label %2675, label %2791

; <label>:2675                                    ; preds = %2670
  store i32 0, i32* %m, align 4
  br label %2676

; <label>:2676                                    ; preds = %2784, %2675
  %2677 = load i32* %m, align 4
  %2678 = icmp slt i32 %2677, 5
  br i1 %2678, label %2679, label %2787

; <label>:2679                                    ; preds = %2676
  %2680 = load i32* %m, align 4
  %2681 = sext i32 %2680 to i64
  %2682 = load i32* %i, align 4
  %2683 = sext i32 %2682 to i64
  %2684 = load i32* %j, align 4
  %2685 = sext i32 %2684 to i64
  %2686 = load i32* %k, align 4
  %2687 = sext i32 %2686 to i64
  %2688 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2687
  %2689 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2688, i32 0, i64 %2685
  %2690 = getelementptr inbounds [13 x [5 x double]]* %2689, i32 0, i64 %2683
  %2691 = getelementptr inbounds [5 x double]* %2690, i32 0, i64 %2681
  %2692 = load double* %2691, align 8
  %2693 = load double* @dssp, align 8
  %2694 = load i32* %m, align 4
  %2695 = sext i32 %2694 to i64
  %2696 = load i32* %i, align 4
  %2697 = sext i32 %2696 to i64
  %2698 = load i32* %j, align 4
  %2699 = sub nsw i32 %2698, 2
  %2700 = sext i32 %2699 to i64
  %2701 = load i32* %k, align 4
  %2702 = sext i32 %2701 to i64
  %2703 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2702
  %2704 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2703, i32 0, i64 %2700
  %2705 = getelementptr inbounds [13 x [5 x double]]* %2704, i32 0, i64 %2697
  %2706 = getelementptr inbounds [5 x double]* %2705, i32 0, i64 %2695
  %2707 = load double* %2706, align 8
  %2708 = load i32* %m, align 4
  %2709 = sext i32 %2708 to i64
  %2710 = load i32* %i, align 4
  %2711 = sext i32 %2710 to i64
  %2712 = load i32* %j, align 4
  %2713 = sub nsw i32 %2712, 1
  %2714 = sext i32 %2713 to i64
  %2715 = load i32* %k, align 4
  %2716 = sext i32 %2715 to i64
  %2717 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2716
  %2718 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2717, i32 0, i64 %2714
  %2719 = getelementptr inbounds [13 x [5 x double]]* %2718, i32 0, i64 %2711
  %2720 = getelementptr inbounds [5 x double]* %2719, i32 0, i64 %2709
  %2721 = load double* %2720, align 8
  %2722 = fmul double 4.000000e+00, %2721
  %2723 = fsub double %2707, %2722
  %2724 = load i32* %m, align 4
  %2725 = sext i32 %2724 to i64
  %2726 = load i32* %i, align 4
  %2727 = sext i32 %2726 to i64
  %2728 = load i32* %j, align 4
  %2729 = sext i32 %2728 to i64
  %2730 = load i32* %k, align 4
  %2731 = sext i32 %2730 to i64
  %2732 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2731
  %2733 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2732, i32 0, i64 %2729
  %2734 = getelementptr inbounds [13 x [5 x double]]* %2733, i32 0, i64 %2727
  %2735 = getelementptr inbounds [5 x double]* %2734, i32 0, i64 %2725
  %2736 = load double* %2735, align 8
  %2737 = fmul double 6.000000e+00, %2736
  %2738 = fadd double %2723, %2737
  %2739 = load i32* %m, align 4
  %2740 = sext i32 %2739 to i64
  %2741 = load i32* %i, align 4
  %2742 = sext i32 %2741 to i64
  %2743 = load i32* %j, align 4
  %2744 = add nsw i32 %2743, 1
  %2745 = sext i32 %2744 to i64
  %2746 = load i32* %k, align 4
  %2747 = sext i32 %2746 to i64
  %2748 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2747
  %2749 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2748, i32 0, i64 %2745
  %2750 = getelementptr inbounds [13 x [5 x double]]* %2749, i32 0, i64 %2742
  %2751 = getelementptr inbounds [5 x double]* %2750, i32 0, i64 %2740
  %2752 = load double* %2751, align 8
  %2753 = fmul double 4.000000e+00, %2752
  %2754 = fsub double %2738, %2753
  %2755 = load i32* %m, align 4
  %2756 = sext i32 %2755 to i64
  %2757 = load i32* %i, align 4
  %2758 = sext i32 %2757 to i64
  %2759 = load i32* %j, align 4
  %2760 = add nsw i32 %2759, 2
  %2761 = sext i32 %2760 to i64
  %2762 = load i32* %k, align 4
  %2763 = sext i32 %2762 to i64
  %2764 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2763
  %2765 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2764, i32 0, i64 %2761
  %2766 = getelementptr inbounds [13 x [5 x double]]* %2765, i32 0, i64 %2758
  %2767 = getelementptr inbounds [5 x double]* %2766, i32 0, i64 %2756
  %2768 = load double* %2767, align 8
  %2769 = fadd double %2754, %2768
  %2770 = fmul double %2693, %2769
  %2771 = fsub double %2692, %2770
  %2772 = load i32* %m, align 4
  %2773 = sext i32 %2772 to i64
  %2774 = load i32* %i, align 4
  %2775 = sext i32 %2774 to i64
  %2776 = load i32* %j, align 4
  %2777 = sext i32 %2776 to i64
  %2778 = load i32* %k, align 4
  %2779 = sext i32 %2778 to i64
  %2780 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2779
  %2781 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2780, i32 0, i64 %2777
  %2782 = getelementptr inbounds [13 x [5 x double]]* %2781, i32 0, i64 %2775
  %2783 = getelementptr inbounds [5 x double]* %2782, i32 0, i64 %2773
  store double %2771, double* %2783, align 8
  br label %2784

; <label>:2784                                    ; preds = %2679
  %2785 = load i32* %m, align 4
  %2786 = add nsw i32 %2785, 1
  store i32 %2786, i32* %m, align 4
  br label %2676

; <label>:2787                                    ; preds = %2676
  br label %2788

; <label>:2788                                    ; preds = %2787
  %2789 = load i32* %i, align 4
  %2790 = add nsw i32 %2789, 1
  store i32 %2790, i32* %i, align 4
  br label %2670

; <label>:2791                                    ; preds = %2670
  br label %2792

; <label>:2792                                    ; preds = %2791
  %2793 = load i32* %j, align 4
  %2794 = add nsw i32 %2793, 1
  store i32 %2794, i32* %j, align 4
  br label %2664

; <label>:2795                                    ; preds = %2664
  %2796 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %2797 = sub nsw i32 %2796, 3
  store i32 %2797, i32* %j, align 4
  store i32 1, i32* %i, align 4
  br label %2798

; <label>:2798                                    ; preds = %2901, %2795
  %2799 = load i32* %i, align 4
  %2800 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %2801 = sub nsw i32 %2800, 2
  %2802 = icmp sle i32 %2799, %2801
  br i1 %2802, label %2803, label %2904

; <label>:2803                                    ; preds = %2798
  store i32 0, i32* %m, align 4
  br label %2804

; <label>:2804                                    ; preds = %2897, %2803
  %2805 = load i32* %m, align 4
  %2806 = icmp slt i32 %2805, 5
  br i1 %2806, label %2807, label %2900

; <label>:2807                                    ; preds = %2804
  %2808 = load i32* %m, align 4
  %2809 = sext i32 %2808 to i64
  %2810 = load i32* %i, align 4
  %2811 = sext i32 %2810 to i64
  %2812 = load i32* %j, align 4
  %2813 = sext i32 %2812 to i64
  %2814 = load i32* %k, align 4
  %2815 = sext i32 %2814 to i64
  %2816 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2815
  %2817 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2816, i32 0, i64 %2813
  %2818 = getelementptr inbounds [13 x [5 x double]]* %2817, i32 0, i64 %2811
  %2819 = getelementptr inbounds [5 x double]* %2818, i32 0, i64 %2809
  %2820 = load double* %2819, align 8
  %2821 = load double* @dssp, align 8
  %2822 = load i32* %m, align 4
  %2823 = sext i32 %2822 to i64
  %2824 = load i32* %i, align 4
  %2825 = sext i32 %2824 to i64
  %2826 = load i32* %j, align 4
  %2827 = sub nsw i32 %2826, 2
  %2828 = sext i32 %2827 to i64
  %2829 = load i32* %k, align 4
  %2830 = sext i32 %2829 to i64
  %2831 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2830
  %2832 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2831, i32 0, i64 %2828
  %2833 = getelementptr inbounds [13 x [5 x double]]* %2832, i32 0, i64 %2825
  %2834 = getelementptr inbounds [5 x double]* %2833, i32 0, i64 %2823
  %2835 = load double* %2834, align 8
  %2836 = load i32* %m, align 4
  %2837 = sext i32 %2836 to i64
  %2838 = load i32* %i, align 4
  %2839 = sext i32 %2838 to i64
  %2840 = load i32* %j, align 4
  %2841 = sub nsw i32 %2840, 1
  %2842 = sext i32 %2841 to i64
  %2843 = load i32* %k, align 4
  %2844 = sext i32 %2843 to i64
  %2845 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2844
  %2846 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2845, i32 0, i64 %2842
  %2847 = getelementptr inbounds [13 x [5 x double]]* %2846, i32 0, i64 %2839
  %2848 = getelementptr inbounds [5 x double]* %2847, i32 0, i64 %2837
  %2849 = load double* %2848, align 8
  %2850 = fmul double 4.000000e+00, %2849
  %2851 = fsub double %2835, %2850
  %2852 = load i32* %m, align 4
  %2853 = sext i32 %2852 to i64
  %2854 = load i32* %i, align 4
  %2855 = sext i32 %2854 to i64
  %2856 = load i32* %j, align 4
  %2857 = sext i32 %2856 to i64
  %2858 = load i32* %k, align 4
  %2859 = sext i32 %2858 to i64
  %2860 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2859
  %2861 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2860, i32 0, i64 %2857
  %2862 = getelementptr inbounds [13 x [5 x double]]* %2861, i32 0, i64 %2855
  %2863 = getelementptr inbounds [5 x double]* %2862, i32 0, i64 %2853
  %2864 = load double* %2863, align 8
  %2865 = fmul double 6.000000e+00, %2864
  %2866 = fadd double %2851, %2865
  %2867 = load i32* %m, align 4
  %2868 = sext i32 %2867 to i64
  %2869 = load i32* %i, align 4
  %2870 = sext i32 %2869 to i64
  %2871 = load i32* %j, align 4
  %2872 = add nsw i32 %2871, 1
  %2873 = sext i32 %2872 to i64
  %2874 = load i32* %k, align 4
  %2875 = sext i32 %2874 to i64
  %2876 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2875
  %2877 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2876, i32 0, i64 %2873
  %2878 = getelementptr inbounds [13 x [5 x double]]* %2877, i32 0, i64 %2870
  %2879 = getelementptr inbounds [5 x double]* %2878, i32 0, i64 %2868
  %2880 = load double* %2879, align 8
  %2881 = fmul double 4.000000e+00, %2880
  %2882 = fsub double %2866, %2881
  %2883 = fmul double %2821, %2882
  %2884 = fsub double %2820, %2883
  %2885 = load i32* %m, align 4
  %2886 = sext i32 %2885 to i64
  %2887 = load i32* %i, align 4
  %2888 = sext i32 %2887 to i64
  %2889 = load i32* %j, align 4
  %2890 = sext i32 %2889 to i64
  %2891 = load i32* %k, align 4
  %2892 = sext i32 %2891 to i64
  %2893 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2892
  %2894 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2893, i32 0, i64 %2890
  %2895 = getelementptr inbounds [13 x [5 x double]]* %2894, i32 0, i64 %2888
  %2896 = getelementptr inbounds [5 x double]* %2895, i32 0, i64 %2886
  store double %2884, double* %2896, align 8
  br label %2897

; <label>:2897                                    ; preds = %2807
  %2898 = load i32* %m, align 4
  %2899 = add nsw i32 %2898, 1
  store i32 %2899, i32* %m, align 4
  br label %2804

; <label>:2900                                    ; preds = %2804
  br label %2901

; <label>:2901                                    ; preds = %2900
  %2902 = load i32* %i, align 4
  %2903 = add nsw i32 %2902, 1
  store i32 %2903, i32* %i, align 4
  br label %2798

; <label>:2904                                    ; preds = %2798
  %2905 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %2906 = sub nsw i32 %2905, 2
  store i32 %2906, i32* %j, align 4
  store i32 1, i32* %i, align 4
  br label %2907

; <label>:2907                                    ; preds = %2994, %2904
  %2908 = load i32* %i, align 4
  %2909 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %2910 = sub nsw i32 %2909, 2
  %2911 = icmp sle i32 %2908, %2910
  br i1 %2911, label %2912, label %2997

; <label>:2912                                    ; preds = %2907
  store i32 0, i32* %m, align 4
  br label %2913

; <label>:2913                                    ; preds = %2990, %2912
  %2914 = load i32* %m, align 4
  %2915 = icmp slt i32 %2914, 5
  br i1 %2915, label %2916, label %2993

; <label>:2916                                    ; preds = %2913
  %2917 = load i32* %m, align 4
  %2918 = sext i32 %2917 to i64
  %2919 = load i32* %i, align 4
  %2920 = sext i32 %2919 to i64
  %2921 = load i32* %j, align 4
  %2922 = sext i32 %2921 to i64
  %2923 = load i32* %k, align 4
  %2924 = sext i32 %2923 to i64
  %2925 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2924
  %2926 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2925, i32 0, i64 %2922
  %2927 = getelementptr inbounds [13 x [5 x double]]* %2926, i32 0, i64 %2920
  %2928 = getelementptr inbounds [5 x double]* %2927, i32 0, i64 %2918
  %2929 = load double* %2928, align 8
  %2930 = load double* @dssp, align 8
  %2931 = load i32* %m, align 4
  %2932 = sext i32 %2931 to i64
  %2933 = load i32* %i, align 4
  %2934 = sext i32 %2933 to i64
  %2935 = load i32* %j, align 4
  %2936 = sub nsw i32 %2935, 2
  %2937 = sext i32 %2936 to i64
  %2938 = load i32* %k, align 4
  %2939 = sext i32 %2938 to i64
  %2940 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2939
  %2941 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2940, i32 0, i64 %2937
  %2942 = getelementptr inbounds [13 x [5 x double]]* %2941, i32 0, i64 %2934
  %2943 = getelementptr inbounds [5 x double]* %2942, i32 0, i64 %2932
  %2944 = load double* %2943, align 8
  %2945 = load i32* %m, align 4
  %2946 = sext i32 %2945 to i64
  %2947 = load i32* %i, align 4
  %2948 = sext i32 %2947 to i64
  %2949 = load i32* %j, align 4
  %2950 = sub nsw i32 %2949, 1
  %2951 = sext i32 %2950 to i64
  %2952 = load i32* %k, align 4
  %2953 = sext i32 %2952 to i64
  %2954 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2953
  %2955 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2954, i32 0, i64 %2951
  %2956 = getelementptr inbounds [13 x [5 x double]]* %2955, i32 0, i64 %2948
  %2957 = getelementptr inbounds [5 x double]* %2956, i32 0, i64 %2946
  %2958 = load double* %2957, align 8
  %2959 = fmul double 4.000000e+00, %2958
  %2960 = fsub double %2944, %2959
  %2961 = load i32* %m, align 4
  %2962 = sext i32 %2961 to i64
  %2963 = load i32* %i, align 4
  %2964 = sext i32 %2963 to i64
  %2965 = load i32* %j, align 4
  %2966 = sext i32 %2965 to i64
  %2967 = load i32* %k, align 4
  %2968 = sext i32 %2967 to i64
  %2969 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %2968
  %2970 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2969, i32 0, i64 %2966
  %2971 = getelementptr inbounds [13 x [5 x double]]* %2970, i32 0, i64 %2964
  %2972 = getelementptr inbounds [5 x double]* %2971, i32 0, i64 %2962
  %2973 = load double* %2972, align 8
  %2974 = fmul double 5.000000e+00, %2973
  %2975 = fadd double %2960, %2974
  %2976 = fmul double %2930, %2975
  %2977 = fsub double %2929, %2976
  %2978 = load i32* %m, align 4
  %2979 = sext i32 %2978 to i64
  %2980 = load i32* %i, align 4
  %2981 = sext i32 %2980 to i64
  %2982 = load i32* %j, align 4
  %2983 = sext i32 %2982 to i64
  %2984 = load i32* %k, align 4
  %2985 = sext i32 %2984 to i64
  %2986 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2985
  %2987 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2986, i32 0, i64 %2983
  %2988 = getelementptr inbounds [13 x [5 x double]]* %2987, i32 0, i64 %2981
  %2989 = getelementptr inbounds [5 x double]* %2988, i32 0, i64 %2979
  store double %2977, double* %2989, align 8
  br label %2990

; <label>:2990                                    ; preds = %2916
  %2991 = load i32* %m, align 4
  %2992 = add nsw i32 %2991, 1
  store i32 %2992, i32* %m, align 4
  br label %2913

; <label>:2993                                    ; preds = %2913
  br label %2994

; <label>:2994                                    ; preds = %2993
  %2995 = load i32* %i, align 4
  %2996 = add nsw i32 %2995, 1
  store i32 %2996, i32* %i, align 4
  br label %2907

; <label>:2997                                    ; preds = %2907
  br label %2998

; <label>:2998                                    ; preds = %2997
  %2999 = load i32* %k, align 4
  %3000 = add nsw i32 %2999, 1
  store i32 %3000, i32* %k, align 4
  br label %1642

; <label>:3001                                    ; preds = %1642
  %3002 = load i32* @timeron, align 4
  %3003 = icmp ne i32 %3002, 0
  br i1 %3003, label %3004, label %3005

; <label>:3004                                    ; preds = %3001
  call void @timer_stop(i32 3)
  br label %3005

; <label>:3005                                    ; preds = %3004, %3001
  %3006 = load i32* @timeron, align 4
  %3007 = icmp ne i32 %3006, 0
  br i1 %3007, label %3008, label %3009

; <label>:3008                                    ; preds = %3005
  call void @timer_start(i32 4)
  br label %3009

; <label>:3009                                    ; preds = %3008, %3005
  store i32 1, i32* %k, align 4
  br label %3010

; <label>:3010                                    ; preds = %3834, %3009
  %3011 = load i32* %k, align 4
  %3012 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %3013 = sub nsw i32 %3012, 2
  %3014 = icmp sle i32 %3011, %3013
  br i1 %3014, label %3015, label %3837

; <label>:3015                                    ; preds = %3010
  store i32 1, i32* %j, align 4
  br label %3016

; <label>:3016                                    ; preds = %3830, %3015
  %3017 = load i32* %j, align 4
  %3018 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %3019 = sub nsw i32 %3018, 2
  %3020 = icmp sle i32 %3017, %3019
  br i1 %3020, label %3021, label %3833

; <label>:3021                                    ; preds = %3016
  store i32 1, i32* %i, align 4
  br label %3022

; <label>:3022                                    ; preds = %3826, %3021
  %3023 = load i32* %i, align 4
  %3024 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %3025 = sub nsw i32 %3024, 2
  %3026 = icmp sle i32 %3023, %3025
  br i1 %3026, label %3027, label %3829

; <label>:3027                                    ; preds = %3022
  %3028 = load i32* %i, align 4
  %3029 = sext i32 %3028 to i64
  %3030 = load i32* %j, align 4
  %3031 = sext i32 %3030 to i64
  %3032 = load i32* %k, align 4
  %3033 = sext i32 %3032 to i64
  %3034 = getelementptr inbounds [12 x [13 x [13 x double]]]* @ws, i32 0, i64 %3033
  %3035 = getelementptr inbounds [13 x [13 x double]]* %3034, i32 0, i64 %3031
  %3036 = getelementptr inbounds [13 x double]* %3035, i32 0, i64 %3029
  %3037 = load double* %3036, align 8
  store double %3037, double* %wijk, align 8
  %3038 = load i32* %i, align 4
  %3039 = sext i32 %3038 to i64
  %3040 = load i32* %j, align 4
  %3041 = sext i32 %3040 to i64
  %3042 = load i32* %k, align 4
  %3043 = add nsw i32 %3042, 1
  %3044 = sext i32 %3043 to i64
  %3045 = getelementptr inbounds [12 x [13 x [13 x double]]]* @ws, i32 0, i64 %3044
  %3046 = getelementptr inbounds [13 x [13 x double]]* %3045, i32 0, i64 %3041
  %3047 = getelementptr inbounds [13 x double]* %3046, i32 0, i64 %3039
  %3048 = load double* %3047, align 8
  store double %3048, double* %wp1, align 8
  %3049 = load i32* %i, align 4
  %3050 = sext i32 %3049 to i64
  %3051 = load i32* %j, align 4
  %3052 = sext i32 %3051 to i64
  %3053 = load i32* %k, align 4
  %3054 = sub nsw i32 %3053, 1
  %3055 = sext i32 %3054 to i64
  %3056 = getelementptr inbounds [12 x [13 x [13 x double]]]* @ws, i32 0, i64 %3055
  %3057 = getelementptr inbounds [13 x [13 x double]]* %3056, i32 0, i64 %3052
  %3058 = getelementptr inbounds [13 x double]* %3057, i32 0, i64 %3050
  %3059 = load double* %3058, align 8
  store double %3059, double* %wm1, align 8
  %3060 = load i32* %i, align 4
  %3061 = sext i32 %3060 to i64
  %3062 = load i32* %j, align 4
  %3063 = sext i32 %3062 to i64
  %3064 = load i32* %k, align 4
  %3065 = sext i32 %3064 to i64
  %3066 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %3065
  %3067 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3066, i32 0, i64 %3063
  %3068 = getelementptr inbounds [13 x [5 x double]]* %3067, i32 0, i64 %3061
  %3069 = getelementptr inbounds [5 x double]* %3068, i32 0, i64 0
  %3070 = load double* %3069, align 8
  %3071 = load double* @dz1tz1, align 8
  %3072 = load i32* %i, align 4
  %3073 = sext i32 %3072 to i64
  %3074 = load i32* %j, align 4
  %3075 = sext i32 %3074 to i64
  %3076 = load i32* %k, align 4
  %3077 = add nsw i32 %3076, 1
  %3078 = sext i32 %3077 to i64
  %3079 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3078
  %3080 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3079, i32 0, i64 %3075
  %3081 = getelementptr inbounds [13 x [5 x double]]* %3080, i32 0, i64 %3073
  %3082 = getelementptr inbounds [5 x double]* %3081, i32 0, i64 0
  %3083 = load double* %3082, align 8
  %3084 = load i32* %i, align 4
  %3085 = sext i32 %3084 to i64
  %3086 = load i32* %j, align 4
  %3087 = sext i32 %3086 to i64
  %3088 = load i32* %k, align 4
  %3089 = sext i32 %3088 to i64
  %3090 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3089
  %3091 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3090, i32 0, i64 %3087
  %3092 = getelementptr inbounds [13 x [5 x double]]* %3091, i32 0, i64 %3085
  %3093 = getelementptr inbounds [5 x double]* %3092, i32 0, i64 0
  %3094 = load double* %3093, align 8
  %3095 = fmul double 2.000000e+00, %3094
  %3096 = fsub double %3083, %3095
  %3097 = load i32* %i, align 4
  %3098 = sext i32 %3097 to i64
  %3099 = load i32* %j, align 4
  %3100 = sext i32 %3099 to i64
  %3101 = load i32* %k, align 4
  %3102 = sub nsw i32 %3101, 1
  %3103 = sext i32 %3102 to i64
  %3104 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3103
  %3105 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3104, i32 0, i64 %3100
  %3106 = getelementptr inbounds [13 x [5 x double]]* %3105, i32 0, i64 %3098
  %3107 = getelementptr inbounds [5 x double]* %3106, i32 0, i64 0
  %3108 = load double* %3107, align 8
  %3109 = fadd double %3096, %3108
  %3110 = fmul double %3071, %3109
  %3111 = fadd double %3070, %3110
  %3112 = load double* @tz2, align 8
  %3113 = load i32* %i, align 4
  %3114 = sext i32 %3113 to i64
  %3115 = load i32* %j, align 4
  %3116 = sext i32 %3115 to i64
  %3117 = load i32* %k, align 4
  %3118 = add nsw i32 %3117, 1
  %3119 = sext i32 %3118 to i64
  %3120 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3119
  %3121 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3120, i32 0, i64 %3116
  %3122 = getelementptr inbounds [13 x [5 x double]]* %3121, i32 0, i64 %3114
  %3123 = getelementptr inbounds [5 x double]* %3122, i32 0, i64 3
  %3124 = load double* %3123, align 8
  %3125 = load i32* %i, align 4
  %3126 = sext i32 %3125 to i64
  %3127 = load i32* %j, align 4
  %3128 = sext i32 %3127 to i64
  %3129 = load i32* %k, align 4
  %3130 = sub nsw i32 %3129, 1
  %3131 = sext i32 %3130 to i64
  %3132 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3131
  %3133 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3132, i32 0, i64 %3128
  %3134 = getelementptr inbounds [13 x [5 x double]]* %3133, i32 0, i64 %3126
  %3135 = getelementptr inbounds [5 x double]* %3134, i32 0, i64 3
  %3136 = load double* %3135, align 8
  %3137 = fsub double %3124, %3136
  %3138 = fmul double %3112, %3137
  %3139 = fsub double %3111, %3138
  %3140 = load i32* %i, align 4
  %3141 = sext i32 %3140 to i64
  %3142 = load i32* %j, align 4
  %3143 = sext i32 %3142 to i64
  %3144 = load i32* %k, align 4
  %3145 = sext i32 %3144 to i64
  %3146 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %3145
  %3147 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3146, i32 0, i64 %3143
  %3148 = getelementptr inbounds [13 x [5 x double]]* %3147, i32 0, i64 %3141
  %3149 = getelementptr inbounds [5 x double]* %3148, i32 0, i64 0
  store double %3139, double* %3149, align 8
  %3150 = load i32* %i, align 4
  %3151 = sext i32 %3150 to i64
  %3152 = load i32* %j, align 4
  %3153 = sext i32 %3152 to i64
  %3154 = load i32* %k, align 4
  %3155 = sext i32 %3154 to i64
  %3156 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %3155
  %3157 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3156, i32 0, i64 %3153
  %3158 = getelementptr inbounds [13 x [5 x double]]* %3157, i32 0, i64 %3151
  %3159 = getelementptr inbounds [5 x double]* %3158, i32 0, i64 1
  %3160 = load double* %3159, align 8
  %3161 = load double* @dz2tz1, align 8
  %3162 = load i32* %i, align 4
  %3163 = sext i32 %3162 to i64
  %3164 = load i32* %j, align 4
  %3165 = sext i32 %3164 to i64
  %3166 = load i32* %k, align 4
  %3167 = add nsw i32 %3166, 1
  %3168 = sext i32 %3167 to i64
  %3169 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3168
  %3170 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3169, i32 0, i64 %3165
  %3171 = getelementptr inbounds [13 x [5 x double]]* %3170, i32 0, i64 %3163
  %3172 = getelementptr inbounds [5 x double]* %3171, i32 0, i64 1
  %3173 = load double* %3172, align 8
  %3174 = load i32* %i, align 4
  %3175 = sext i32 %3174 to i64
  %3176 = load i32* %j, align 4
  %3177 = sext i32 %3176 to i64
  %3178 = load i32* %k, align 4
  %3179 = sext i32 %3178 to i64
  %3180 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3179
  %3181 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3180, i32 0, i64 %3177
  %3182 = getelementptr inbounds [13 x [5 x double]]* %3181, i32 0, i64 %3175
  %3183 = getelementptr inbounds [5 x double]* %3182, i32 0, i64 1
  %3184 = load double* %3183, align 8
  %3185 = fmul double 2.000000e+00, %3184
  %3186 = fsub double %3173, %3185
  %3187 = load i32* %i, align 4
  %3188 = sext i32 %3187 to i64
  %3189 = load i32* %j, align 4
  %3190 = sext i32 %3189 to i64
  %3191 = load i32* %k, align 4
  %3192 = sub nsw i32 %3191, 1
  %3193 = sext i32 %3192 to i64
  %3194 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3193
  %3195 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3194, i32 0, i64 %3190
  %3196 = getelementptr inbounds [13 x [5 x double]]* %3195, i32 0, i64 %3188
  %3197 = getelementptr inbounds [5 x double]* %3196, i32 0, i64 1
  %3198 = load double* %3197, align 8
  %3199 = fadd double %3186, %3198
  %3200 = fmul double %3161, %3199
  %3201 = fadd double %3160, %3200
  %3202 = load double* @zzcon2, align 8
  %3203 = load i32* %i, align 4
  %3204 = sext i32 %3203 to i64
  %3205 = load i32* %j, align 4
  %3206 = sext i32 %3205 to i64
  %3207 = load i32* %k, align 4
  %3208 = add nsw i32 %3207, 1
  %3209 = sext i32 %3208 to i64
  %3210 = getelementptr inbounds [12 x [13 x [13 x double]]]* @us, i32 0, i64 %3209
  %3211 = getelementptr inbounds [13 x [13 x double]]* %3210, i32 0, i64 %3206
  %3212 = getelementptr inbounds [13 x double]* %3211, i32 0, i64 %3204
  %3213 = load double* %3212, align 8
  %3214 = load i32* %i, align 4
  %3215 = sext i32 %3214 to i64
  %3216 = load i32* %j, align 4
  %3217 = sext i32 %3216 to i64
  %3218 = load i32* %k, align 4
  %3219 = sext i32 %3218 to i64
  %3220 = getelementptr inbounds [12 x [13 x [13 x double]]]* @us, i32 0, i64 %3219
  %3221 = getelementptr inbounds [13 x [13 x double]]* %3220, i32 0, i64 %3217
  %3222 = getelementptr inbounds [13 x double]* %3221, i32 0, i64 %3215
  %3223 = load double* %3222, align 8
  %3224 = fmul double 2.000000e+00, %3223
  %3225 = fsub double %3213, %3224
  %3226 = load i32* %i, align 4
  %3227 = sext i32 %3226 to i64
  %3228 = load i32* %j, align 4
  %3229 = sext i32 %3228 to i64
  %3230 = load i32* %k, align 4
  %3231 = sub nsw i32 %3230, 1
  %3232 = sext i32 %3231 to i64
  %3233 = getelementptr inbounds [12 x [13 x [13 x double]]]* @us, i32 0, i64 %3232
  %3234 = getelementptr inbounds [13 x [13 x double]]* %3233, i32 0, i64 %3229
  %3235 = getelementptr inbounds [13 x double]* %3234, i32 0, i64 %3227
  %3236 = load double* %3235, align 8
  %3237 = fadd double %3225, %3236
  %3238 = fmul double %3202, %3237
  %3239 = fadd double %3201, %3238
  %3240 = load double* @tz2, align 8
  %3241 = load i32* %i, align 4
  %3242 = sext i32 %3241 to i64
  %3243 = load i32* %j, align 4
  %3244 = sext i32 %3243 to i64
  %3245 = load i32* %k, align 4
  %3246 = add nsw i32 %3245, 1
  %3247 = sext i32 %3246 to i64
  %3248 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3247
  %3249 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3248, i32 0, i64 %3244
  %3250 = getelementptr inbounds [13 x [5 x double]]* %3249, i32 0, i64 %3242
  %3251 = getelementptr inbounds [5 x double]* %3250, i32 0, i64 1
  %3252 = load double* %3251, align 8
  %3253 = load double* %wp1, align 8
  %3254 = fmul double %3252, %3253
  %3255 = load i32* %i, align 4
  %3256 = sext i32 %3255 to i64
  %3257 = load i32* %j, align 4
  %3258 = sext i32 %3257 to i64
  %3259 = load i32* %k, align 4
  %3260 = sub nsw i32 %3259, 1
  %3261 = sext i32 %3260 to i64
  %3262 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3261
  %3263 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3262, i32 0, i64 %3258
  %3264 = getelementptr inbounds [13 x [5 x double]]* %3263, i32 0, i64 %3256
  %3265 = getelementptr inbounds [5 x double]* %3264, i32 0, i64 1
  %3266 = load double* %3265, align 8
  %3267 = load double* %wm1, align 8
  %3268 = fmul double %3266, %3267
  %3269 = fsub double %3254, %3268
  %3270 = fmul double %3240, %3269
  %3271 = fsub double %3239, %3270
  %3272 = load i32* %i, align 4
  %3273 = sext i32 %3272 to i64
  %3274 = load i32* %j, align 4
  %3275 = sext i32 %3274 to i64
  %3276 = load i32* %k, align 4
  %3277 = sext i32 %3276 to i64
  %3278 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %3277
  %3279 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3278, i32 0, i64 %3275
  %3280 = getelementptr inbounds [13 x [5 x double]]* %3279, i32 0, i64 %3273
  %3281 = getelementptr inbounds [5 x double]* %3280, i32 0, i64 1
  store double %3271, double* %3281, align 8
  %3282 = load i32* %i, align 4
  %3283 = sext i32 %3282 to i64
  %3284 = load i32* %j, align 4
  %3285 = sext i32 %3284 to i64
  %3286 = load i32* %k, align 4
  %3287 = sext i32 %3286 to i64
  %3288 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %3287
  %3289 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3288, i32 0, i64 %3285
  %3290 = getelementptr inbounds [13 x [5 x double]]* %3289, i32 0, i64 %3283
  %3291 = getelementptr inbounds [5 x double]* %3290, i32 0, i64 2
  %3292 = load double* %3291, align 8
  %3293 = load double* @dz3tz1, align 8
  %3294 = load i32* %i, align 4
  %3295 = sext i32 %3294 to i64
  %3296 = load i32* %j, align 4
  %3297 = sext i32 %3296 to i64
  %3298 = load i32* %k, align 4
  %3299 = add nsw i32 %3298, 1
  %3300 = sext i32 %3299 to i64
  %3301 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3300
  %3302 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3301, i32 0, i64 %3297
  %3303 = getelementptr inbounds [13 x [5 x double]]* %3302, i32 0, i64 %3295
  %3304 = getelementptr inbounds [5 x double]* %3303, i32 0, i64 2
  %3305 = load double* %3304, align 8
  %3306 = load i32* %i, align 4
  %3307 = sext i32 %3306 to i64
  %3308 = load i32* %j, align 4
  %3309 = sext i32 %3308 to i64
  %3310 = load i32* %k, align 4
  %3311 = sext i32 %3310 to i64
  %3312 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3311
  %3313 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3312, i32 0, i64 %3309
  %3314 = getelementptr inbounds [13 x [5 x double]]* %3313, i32 0, i64 %3307
  %3315 = getelementptr inbounds [5 x double]* %3314, i32 0, i64 2
  %3316 = load double* %3315, align 8
  %3317 = fmul double 2.000000e+00, %3316
  %3318 = fsub double %3305, %3317
  %3319 = load i32* %i, align 4
  %3320 = sext i32 %3319 to i64
  %3321 = load i32* %j, align 4
  %3322 = sext i32 %3321 to i64
  %3323 = load i32* %k, align 4
  %3324 = sub nsw i32 %3323, 1
  %3325 = sext i32 %3324 to i64
  %3326 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3325
  %3327 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3326, i32 0, i64 %3322
  %3328 = getelementptr inbounds [13 x [5 x double]]* %3327, i32 0, i64 %3320
  %3329 = getelementptr inbounds [5 x double]* %3328, i32 0, i64 2
  %3330 = load double* %3329, align 8
  %3331 = fadd double %3318, %3330
  %3332 = fmul double %3293, %3331
  %3333 = fadd double %3292, %3332
  %3334 = load double* @zzcon2, align 8
  %3335 = load i32* %i, align 4
  %3336 = sext i32 %3335 to i64
  %3337 = load i32* %j, align 4
  %3338 = sext i32 %3337 to i64
  %3339 = load i32* %k, align 4
  %3340 = add nsw i32 %3339, 1
  %3341 = sext i32 %3340 to i64
  %3342 = getelementptr inbounds [12 x [13 x [13 x double]]]* @vs, i32 0, i64 %3341
  %3343 = getelementptr inbounds [13 x [13 x double]]* %3342, i32 0, i64 %3338
  %3344 = getelementptr inbounds [13 x double]* %3343, i32 0, i64 %3336
  %3345 = load double* %3344, align 8
  %3346 = load i32* %i, align 4
  %3347 = sext i32 %3346 to i64
  %3348 = load i32* %j, align 4
  %3349 = sext i32 %3348 to i64
  %3350 = load i32* %k, align 4
  %3351 = sext i32 %3350 to i64
  %3352 = getelementptr inbounds [12 x [13 x [13 x double]]]* @vs, i32 0, i64 %3351
  %3353 = getelementptr inbounds [13 x [13 x double]]* %3352, i32 0, i64 %3349
  %3354 = getelementptr inbounds [13 x double]* %3353, i32 0, i64 %3347
  %3355 = load double* %3354, align 8
  %3356 = fmul double 2.000000e+00, %3355
  %3357 = fsub double %3345, %3356
  %3358 = load i32* %i, align 4
  %3359 = sext i32 %3358 to i64
  %3360 = load i32* %j, align 4
  %3361 = sext i32 %3360 to i64
  %3362 = load i32* %k, align 4
  %3363 = sub nsw i32 %3362, 1
  %3364 = sext i32 %3363 to i64
  %3365 = getelementptr inbounds [12 x [13 x [13 x double]]]* @vs, i32 0, i64 %3364
  %3366 = getelementptr inbounds [13 x [13 x double]]* %3365, i32 0, i64 %3361
  %3367 = getelementptr inbounds [13 x double]* %3366, i32 0, i64 %3359
  %3368 = load double* %3367, align 8
  %3369 = fadd double %3357, %3368
  %3370 = fmul double %3334, %3369
  %3371 = fadd double %3333, %3370
  %3372 = load double* @tz2, align 8
  %3373 = load i32* %i, align 4
  %3374 = sext i32 %3373 to i64
  %3375 = load i32* %j, align 4
  %3376 = sext i32 %3375 to i64
  %3377 = load i32* %k, align 4
  %3378 = add nsw i32 %3377, 1
  %3379 = sext i32 %3378 to i64
  %3380 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3379
  %3381 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3380, i32 0, i64 %3376
  %3382 = getelementptr inbounds [13 x [5 x double]]* %3381, i32 0, i64 %3374
  %3383 = getelementptr inbounds [5 x double]* %3382, i32 0, i64 2
  %3384 = load double* %3383, align 8
  %3385 = load double* %wp1, align 8
  %3386 = fmul double %3384, %3385
  %3387 = load i32* %i, align 4
  %3388 = sext i32 %3387 to i64
  %3389 = load i32* %j, align 4
  %3390 = sext i32 %3389 to i64
  %3391 = load i32* %k, align 4
  %3392 = sub nsw i32 %3391, 1
  %3393 = sext i32 %3392 to i64
  %3394 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3393
  %3395 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3394, i32 0, i64 %3390
  %3396 = getelementptr inbounds [13 x [5 x double]]* %3395, i32 0, i64 %3388
  %3397 = getelementptr inbounds [5 x double]* %3396, i32 0, i64 2
  %3398 = load double* %3397, align 8
  %3399 = load double* %wm1, align 8
  %3400 = fmul double %3398, %3399
  %3401 = fsub double %3386, %3400
  %3402 = fmul double %3372, %3401
  %3403 = fsub double %3371, %3402
  %3404 = load i32* %i, align 4
  %3405 = sext i32 %3404 to i64
  %3406 = load i32* %j, align 4
  %3407 = sext i32 %3406 to i64
  %3408 = load i32* %k, align 4
  %3409 = sext i32 %3408 to i64
  %3410 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %3409
  %3411 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3410, i32 0, i64 %3407
  %3412 = getelementptr inbounds [13 x [5 x double]]* %3411, i32 0, i64 %3405
  %3413 = getelementptr inbounds [5 x double]* %3412, i32 0, i64 2
  store double %3403, double* %3413, align 8
  %3414 = load i32* %i, align 4
  %3415 = sext i32 %3414 to i64
  %3416 = load i32* %j, align 4
  %3417 = sext i32 %3416 to i64
  %3418 = load i32* %k, align 4
  %3419 = sext i32 %3418 to i64
  %3420 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %3419
  %3421 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3420, i32 0, i64 %3417
  %3422 = getelementptr inbounds [13 x [5 x double]]* %3421, i32 0, i64 %3415
  %3423 = getelementptr inbounds [5 x double]* %3422, i32 0, i64 3
  %3424 = load double* %3423, align 8
  %3425 = load double* @dz4tz1, align 8
  %3426 = load i32* %i, align 4
  %3427 = sext i32 %3426 to i64
  %3428 = load i32* %j, align 4
  %3429 = sext i32 %3428 to i64
  %3430 = load i32* %k, align 4
  %3431 = add nsw i32 %3430, 1
  %3432 = sext i32 %3431 to i64
  %3433 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3432
  %3434 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3433, i32 0, i64 %3429
  %3435 = getelementptr inbounds [13 x [5 x double]]* %3434, i32 0, i64 %3427
  %3436 = getelementptr inbounds [5 x double]* %3435, i32 0, i64 3
  %3437 = load double* %3436, align 8
  %3438 = load i32* %i, align 4
  %3439 = sext i32 %3438 to i64
  %3440 = load i32* %j, align 4
  %3441 = sext i32 %3440 to i64
  %3442 = load i32* %k, align 4
  %3443 = sext i32 %3442 to i64
  %3444 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3443
  %3445 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3444, i32 0, i64 %3441
  %3446 = getelementptr inbounds [13 x [5 x double]]* %3445, i32 0, i64 %3439
  %3447 = getelementptr inbounds [5 x double]* %3446, i32 0, i64 3
  %3448 = load double* %3447, align 8
  %3449 = fmul double 2.000000e+00, %3448
  %3450 = fsub double %3437, %3449
  %3451 = load i32* %i, align 4
  %3452 = sext i32 %3451 to i64
  %3453 = load i32* %j, align 4
  %3454 = sext i32 %3453 to i64
  %3455 = load i32* %k, align 4
  %3456 = sub nsw i32 %3455, 1
  %3457 = sext i32 %3456 to i64
  %3458 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3457
  %3459 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3458, i32 0, i64 %3454
  %3460 = getelementptr inbounds [13 x [5 x double]]* %3459, i32 0, i64 %3452
  %3461 = getelementptr inbounds [5 x double]* %3460, i32 0, i64 3
  %3462 = load double* %3461, align 8
  %3463 = fadd double %3450, %3462
  %3464 = fmul double %3425, %3463
  %3465 = fadd double %3424, %3464
  %3466 = load double* @zzcon2, align 8
  %3467 = load double* @con43, align 8
  %3468 = fmul double %3466, %3467
  %3469 = load double* %wp1, align 8
  %3470 = load double* %wijk, align 8
  %3471 = fmul double 2.000000e+00, %3470
  %3472 = fsub double %3469, %3471
  %3473 = load double* %wm1, align 8
  %3474 = fadd double %3472, %3473
  %3475 = fmul double %3468, %3474
  %3476 = fadd double %3465, %3475
  %3477 = load double* @tz2, align 8
  %3478 = load i32* %i, align 4
  %3479 = sext i32 %3478 to i64
  %3480 = load i32* %j, align 4
  %3481 = sext i32 %3480 to i64
  %3482 = load i32* %k, align 4
  %3483 = add nsw i32 %3482, 1
  %3484 = sext i32 %3483 to i64
  %3485 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3484
  %3486 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3485, i32 0, i64 %3481
  %3487 = getelementptr inbounds [13 x [5 x double]]* %3486, i32 0, i64 %3479
  %3488 = getelementptr inbounds [5 x double]* %3487, i32 0, i64 3
  %3489 = load double* %3488, align 8
  %3490 = load double* %wp1, align 8
  %3491 = fmul double %3489, %3490
  %3492 = load i32* %i, align 4
  %3493 = sext i32 %3492 to i64
  %3494 = load i32* %j, align 4
  %3495 = sext i32 %3494 to i64
  %3496 = load i32* %k, align 4
  %3497 = sub nsw i32 %3496, 1
  %3498 = sext i32 %3497 to i64
  %3499 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3498
  %3500 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3499, i32 0, i64 %3495
  %3501 = getelementptr inbounds [13 x [5 x double]]* %3500, i32 0, i64 %3493
  %3502 = getelementptr inbounds [5 x double]* %3501, i32 0, i64 3
  %3503 = load double* %3502, align 8
  %3504 = load double* %wm1, align 8
  %3505 = fmul double %3503, %3504
  %3506 = fsub double %3491, %3505
  %3507 = load i32* %i, align 4
  %3508 = sext i32 %3507 to i64
  %3509 = load i32* %j, align 4
  %3510 = sext i32 %3509 to i64
  %3511 = load i32* %k, align 4
  %3512 = add nsw i32 %3511, 1
  %3513 = sext i32 %3512 to i64
  %3514 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3513
  %3515 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3514, i32 0, i64 %3510
  %3516 = getelementptr inbounds [13 x [5 x double]]* %3515, i32 0, i64 %3508
  %3517 = getelementptr inbounds [5 x double]* %3516, i32 0, i64 4
  %3518 = load double* %3517, align 8
  %3519 = load i32* %i, align 4
  %3520 = sext i32 %3519 to i64
  %3521 = load i32* %j, align 4
  %3522 = sext i32 %3521 to i64
  %3523 = load i32* %k, align 4
  %3524 = add nsw i32 %3523, 1
  %3525 = sext i32 %3524 to i64
  %3526 = getelementptr inbounds [12 x [13 x [13 x double]]]* @square, i32 0, i64 %3525
  %3527 = getelementptr inbounds [13 x [13 x double]]* %3526, i32 0, i64 %3522
  %3528 = getelementptr inbounds [13 x double]* %3527, i32 0, i64 %3520
  %3529 = load double* %3528, align 8
  %3530 = fsub double %3518, %3529
  %3531 = load i32* %i, align 4
  %3532 = sext i32 %3531 to i64
  %3533 = load i32* %j, align 4
  %3534 = sext i32 %3533 to i64
  %3535 = load i32* %k, align 4
  %3536 = sub nsw i32 %3535, 1
  %3537 = sext i32 %3536 to i64
  %3538 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3537
  %3539 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3538, i32 0, i64 %3534
  %3540 = getelementptr inbounds [13 x [5 x double]]* %3539, i32 0, i64 %3532
  %3541 = getelementptr inbounds [5 x double]* %3540, i32 0, i64 4
  %3542 = load double* %3541, align 8
  %3543 = fsub double %3530, %3542
  %3544 = load i32* %i, align 4
  %3545 = sext i32 %3544 to i64
  %3546 = load i32* %j, align 4
  %3547 = sext i32 %3546 to i64
  %3548 = load i32* %k, align 4
  %3549 = sub nsw i32 %3548, 1
  %3550 = sext i32 %3549 to i64
  %3551 = getelementptr inbounds [12 x [13 x [13 x double]]]* @square, i32 0, i64 %3550
  %3552 = getelementptr inbounds [13 x [13 x double]]* %3551, i32 0, i64 %3547
  %3553 = getelementptr inbounds [13 x double]* %3552, i32 0, i64 %3545
  %3554 = load double* %3553, align 8
  %3555 = fadd double %3543, %3554
  %3556 = load double* @c2, align 8
  %3557 = fmul double %3555, %3556
  %3558 = fadd double %3506, %3557
  %3559 = fmul double %3477, %3558
  %3560 = fsub double %3476, %3559
  %3561 = load i32* %i, align 4
  %3562 = sext i32 %3561 to i64
  %3563 = load i32* %j, align 4
  %3564 = sext i32 %3563 to i64
  %3565 = load i32* %k, align 4
  %3566 = sext i32 %3565 to i64
  %3567 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %3566
  %3568 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3567, i32 0, i64 %3564
  %3569 = getelementptr inbounds [13 x [5 x double]]* %3568, i32 0, i64 %3562
  %3570 = getelementptr inbounds [5 x double]* %3569, i32 0, i64 3
  store double %3560, double* %3570, align 8
  %3571 = load i32* %i, align 4
  %3572 = sext i32 %3571 to i64
  %3573 = load i32* %j, align 4
  %3574 = sext i32 %3573 to i64
  %3575 = load i32* %k, align 4
  %3576 = sext i32 %3575 to i64
  %3577 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %3576
  %3578 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3577, i32 0, i64 %3574
  %3579 = getelementptr inbounds [13 x [5 x double]]* %3578, i32 0, i64 %3572
  %3580 = getelementptr inbounds [5 x double]* %3579, i32 0, i64 4
  %3581 = load double* %3580, align 8
  %3582 = load double* @dz5tz1, align 8
  %3583 = load i32* %i, align 4
  %3584 = sext i32 %3583 to i64
  %3585 = load i32* %j, align 4
  %3586 = sext i32 %3585 to i64
  %3587 = load i32* %k, align 4
  %3588 = add nsw i32 %3587, 1
  %3589 = sext i32 %3588 to i64
  %3590 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3589
  %3591 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3590, i32 0, i64 %3586
  %3592 = getelementptr inbounds [13 x [5 x double]]* %3591, i32 0, i64 %3584
  %3593 = getelementptr inbounds [5 x double]* %3592, i32 0, i64 4
  %3594 = load double* %3593, align 8
  %3595 = load i32* %i, align 4
  %3596 = sext i32 %3595 to i64
  %3597 = load i32* %j, align 4
  %3598 = sext i32 %3597 to i64
  %3599 = load i32* %k, align 4
  %3600 = sext i32 %3599 to i64
  %3601 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3600
  %3602 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3601, i32 0, i64 %3598
  %3603 = getelementptr inbounds [13 x [5 x double]]* %3602, i32 0, i64 %3596
  %3604 = getelementptr inbounds [5 x double]* %3603, i32 0, i64 4
  %3605 = load double* %3604, align 8
  %3606 = fmul double 2.000000e+00, %3605
  %3607 = fsub double %3594, %3606
  %3608 = load i32* %i, align 4
  %3609 = sext i32 %3608 to i64
  %3610 = load i32* %j, align 4
  %3611 = sext i32 %3610 to i64
  %3612 = load i32* %k, align 4
  %3613 = sub nsw i32 %3612, 1
  %3614 = sext i32 %3613 to i64
  %3615 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3614
  %3616 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3615, i32 0, i64 %3611
  %3617 = getelementptr inbounds [13 x [5 x double]]* %3616, i32 0, i64 %3609
  %3618 = getelementptr inbounds [5 x double]* %3617, i32 0, i64 4
  %3619 = load double* %3618, align 8
  %3620 = fadd double %3607, %3619
  %3621 = fmul double %3582, %3620
  %3622 = fadd double %3581, %3621
  %3623 = load double* @zzcon3, align 8
  %3624 = load i32* %i, align 4
  %3625 = sext i32 %3624 to i64
  %3626 = load i32* %j, align 4
  %3627 = sext i32 %3626 to i64
  %3628 = load i32* %k, align 4
  %3629 = add nsw i32 %3628, 1
  %3630 = sext i32 %3629 to i64
  %3631 = getelementptr inbounds [12 x [13 x [13 x double]]]* @qs, i32 0, i64 %3630
  %3632 = getelementptr inbounds [13 x [13 x double]]* %3631, i32 0, i64 %3627
  %3633 = getelementptr inbounds [13 x double]* %3632, i32 0, i64 %3625
  %3634 = load double* %3633, align 8
  %3635 = load i32* %i, align 4
  %3636 = sext i32 %3635 to i64
  %3637 = load i32* %j, align 4
  %3638 = sext i32 %3637 to i64
  %3639 = load i32* %k, align 4
  %3640 = sext i32 %3639 to i64
  %3641 = getelementptr inbounds [12 x [13 x [13 x double]]]* @qs, i32 0, i64 %3640
  %3642 = getelementptr inbounds [13 x [13 x double]]* %3641, i32 0, i64 %3638
  %3643 = getelementptr inbounds [13 x double]* %3642, i32 0, i64 %3636
  %3644 = load double* %3643, align 8
  %3645 = fmul double 2.000000e+00, %3644
  %3646 = fsub double %3634, %3645
  %3647 = load i32* %i, align 4
  %3648 = sext i32 %3647 to i64
  %3649 = load i32* %j, align 4
  %3650 = sext i32 %3649 to i64
  %3651 = load i32* %k, align 4
  %3652 = sub nsw i32 %3651, 1
  %3653 = sext i32 %3652 to i64
  %3654 = getelementptr inbounds [12 x [13 x [13 x double]]]* @qs, i32 0, i64 %3653
  %3655 = getelementptr inbounds [13 x [13 x double]]* %3654, i32 0, i64 %3650
  %3656 = getelementptr inbounds [13 x double]* %3655, i32 0, i64 %3648
  %3657 = load double* %3656, align 8
  %3658 = fadd double %3646, %3657
  %3659 = fmul double %3623, %3658
  %3660 = fadd double %3622, %3659
  %3661 = load double* @zzcon4, align 8
  %3662 = load double* %wp1, align 8
  %3663 = load double* %wp1, align 8
  %3664 = fmul double %3662, %3663
  %3665 = load double* %wijk, align 8
  %3666 = fmul double 2.000000e+00, %3665
  %3667 = load double* %wijk, align 8
  %3668 = fmul double %3666, %3667
  %3669 = fsub double %3664, %3668
  %3670 = load double* %wm1, align 8
  %3671 = load double* %wm1, align 8
  %3672 = fmul double %3670, %3671
  %3673 = fadd double %3669, %3672
  %3674 = fmul double %3661, %3673
  %3675 = fadd double %3660, %3674
  %3676 = load double* @zzcon5, align 8
  %3677 = load i32* %i, align 4
  %3678 = sext i32 %3677 to i64
  %3679 = load i32* %j, align 4
  %3680 = sext i32 %3679 to i64
  %3681 = load i32* %k, align 4
  %3682 = add nsw i32 %3681, 1
  %3683 = sext i32 %3682 to i64
  %3684 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3683
  %3685 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3684, i32 0, i64 %3680
  %3686 = getelementptr inbounds [13 x [5 x double]]* %3685, i32 0, i64 %3678
  %3687 = getelementptr inbounds [5 x double]* %3686, i32 0, i64 4
  %3688 = load double* %3687, align 8
  %3689 = load i32* %i, align 4
  %3690 = sext i32 %3689 to i64
  %3691 = load i32* %j, align 4
  %3692 = sext i32 %3691 to i64
  %3693 = load i32* %k, align 4
  %3694 = add nsw i32 %3693, 1
  %3695 = sext i32 %3694 to i64
  %3696 = getelementptr inbounds [12 x [13 x [13 x double]]]* @rho_i, i32 0, i64 %3695
  %3697 = getelementptr inbounds [13 x [13 x double]]* %3696, i32 0, i64 %3692
  %3698 = getelementptr inbounds [13 x double]* %3697, i32 0, i64 %3690
  %3699 = load double* %3698, align 8
  %3700 = fmul double %3688, %3699
  %3701 = load i32* %i, align 4
  %3702 = sext i32 %3701 to i64
  %3703 = load i32* %j, align 4
  %3704 = sext i32 %3703 to i64
  %3705 = load i32* %k, align 4
  %3706 = sext i32 %3705 to i64
  %3707 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3706
  %3708 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3707, i32 0, i64 %3704
  %3709 = getelementptr inbounds [13 x [5 x double]]* %3708, i32 0, i64 %3702
  %3710 = getelementptr inbounds [5 x double]* %3709, i32 0, i64 4
  %3711 = load double* %3710, align 8
  %3712 = fmul double 2.000000e+00, %3711
  %3713 = load i32* %i, align 4
  %3714 = sext i32 %3713 to i64
  %3715 = load i32* %j, align 4
  %3716 = sext i32 %3715 to i64
  %3717 = load i32* %k, align 4
  %3718 = sext i32 %3717 to i64
  %3719 = getelementptr inbounds [12 x [13 x [13 x double]]]* @rho_i, i32 0, i64 %3718
  %3720 = getelementptr inbounds [13 x [13 x double]]* %3719, i32 0, i64 %3716
  %3721 = getelementptr inbounds [13 x double]* %3720, i32 0, i64 %3714
  %3722 = load double* %3721, align 8
  %3723 = fmul double %3712, %3722
  %3724 = fsub double %3700, %3723
  %3725 = load i32* %i, align 4
  %3726 = sext i32 %3725 to i64
  %3727 = load i32* %j, align 4
  %3728 = sext i32 %3727 to i64
  %3729 = load i32* %k, align 4
  %3730 = sub nsw i32 %3729, 1
  %3731 = sext i32 %3730 to i64
  %3732 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3731
  %3733 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3732, i32 0, i64 %3728
  %3734 = getelementptr inbounds [13 x [5 x double]]* %3733, i32 0, i64 %3726
  %3735 = getelementptr inbounds [5 x double]* %3734, i32 0, i64 4
  %3736 = load double* %3735, align 8
  %3737 = load i32* %i, align 4
  %3738 = sext i32 %3737 to i64
  %3739 = load i32* %j, align 4
  %3740 = sext i32 %3739 to i64
  %3741 = load i32* %k, align 4
  %3742 = sub nsw i32 %3741, 1
  %3743 = sext i32 %3742 to i64
  %3744 = getelementptr inbounds [12 x [13 x [13 x double]]]* @rho_i, i32 0, i64 %3743
  %3745 = getelementptr inbounds [13 x [13 x double]]* %3744, i32 0, i64 %3740
  %3746 = getelementptr inbounds [13 x double]* %3745, i32 0, i64 %3738
  %3747 = load double* %3746, align 8
  %3748 = fmul double %3736, %3747
  %3749 = fadd double %3724, %3748
  %3750 = fmul double %3676, %3749
  %3751 = fadd double %3675, %3750
  %3752 = load double* @tz2, align 8
  %3753 = load double* @c1, align 8
  %3754 = load i32* %i, align 4
  %3755 = sext i32 %3754 to i64
  %3756 = load i32* %j, align 4
  %3757 = sext i32 %3756 to i64
  %3758 = load i32* %k, align 4
  %3759 = add nsw i32 %3758, 1
  %3760 = sext i32 %3759 to i64
  %3761 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3760
  %3762 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3761, i32 0, i64 %3757
  %3763 = getelementptr inbounds [13 x [5 x double]]* %3762, i32 0, i64 %3755
  %3764 = getelementptr inbounds [5 x double]* %3763, i32 0, i64 4
  %3765 = load double* %3764, align 8
  %3766 = fmul double %3753, %3765
  %3767 = load double* @c2, align 8
  %3768 = load i32* %i, align 4
  %3769 = sext i32 %3768 to i64
  %3770 = load i32* %j, align 4
  %3771 = sext i32 %3770 to i64
  %3772 = load i32* %k, align 4
  %3773 = add nsw i32 %3772, 1
  %3774 = sext i32 %3773 to i64
  %3775 = getelementptr inbounds [12 x [13 x [13 x double]]]* @square, i32 0, i64 %3774
  %3776 = getelementptr inbounds [13 x [13 x double]]* %3775, i32 0, i64 %3771
  %3777 = getelementptr inbounds [13 x double]* %3776, i32 0, i64 %3769
  %3778 = load double* %3777, align 8
  %3779 = fmul double %3767, %3778
  %3780 = fsub double %3766, %3779
  %3781 = load double* %wp1, align 8
  %3782 = fmul double %3780, %3781
  %3783 = load double* @c1, align 8
  %3784 = load i32* %i, align 4
  %3785 = sext i32 %3784 to i64
  %3786 = load i32* %j, align 4
  %3787 = sext i32 %3786 to i64
  %3788 = load i32* %k, align 4
  %3789 = sub nsw i32 %3788, 1
  %3790 = sext i32 %3789 to i64
  %3791 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3790
  %3792 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3791, i32 0, i64 %3787
  %3793 = getelementptr inbounds [13 x [5 x double]]* %3792, i32 0, i64 %3785
  %3794 = getelementptr inbounds [5 x double]* %3793, i32 0, i64 4
  %3795 = load double* %3794, align 8
  %3796 = fmul double %3783, %3795
  %3797 = load double* @c2, align 8
  %3798 = load i32* %i, align 4
  %3799 = sext i32 %3798 to i64
  %3800 = load i32* %j, align 4
  %3801 = sext i32 %3800 to i64
  %3802 = load i32* %k, align 4
  %3803 = sub nsw i32 %3802, 1
  %3804 = sext i32 %3803 to i64
  %3805 = getelementptr inbounds [12 x [13 x [13 x double]]]* @square, i32 0, i64 %3804
  %3806 = getelementptr inbounds [13 x [13 x double]]* %3805, i32 0, i64 %3801
  %3807 = getelementptr inbounds [13 x double]* %3806, i32 0, i64 %3799
  %3808 = load double* %3807, align 8
  %3809 = fmul double %3797, %3808
  %3810 = fsub double %3796, %3809
  %3811 = load double* %wm1, align 8
  %3812 = fmul double %3810, %3811
  %3813 = fsub double %3782, %3812
  %3814 = fmul double %3752, %3813
  %3815 = fsub double %3751, %3814
  %3816 = load i32* %i, align 4
  %3817 = sext i32 %3816 to i64
  %3818 = load i32* %j, align 4
  %3819 = sext i32 %3818 to i64
  %3820 = load i32* %k, align 4
  %3821 = sext i32 %3820 to i64
  %3822 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %3821
  %3823 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3822, i32 0, i64 %3819
  %3824 = getelementptr inbounds [13 x [5 x double]]* %3823, i32 0, i64 %3817
  %3825 = getelementptr inbounds [5 x double]* %3824, i32 0, i64 4
  store double %3815, double* %3825, align 8
  br label %3826

; <label>:3826                                    ; preds = %3027
  %3827 = load i32* %i, align 4
  %3828 = add nsw i32 %3827, 1
  store i32 %3828, i32* %i, align 4
  br label %3022

; <label>:3829                                    ; preds = %3022
  br label %3830

; <label>:3830                                    ; preds = %3829
  %3831 = load i32* %j, align 4
  %3832 = add nsw i32 %3831, 1
  store i32 %3832, i32* %j, align 4
  br label %3016

; <label>:3833                                    ; preds = %3016
  br label %3834

; <label>:3834                                    ; preds = %3833
  %3835 = load i32* %k, align 4
  %3836 = add nsw i32 %3835, 1
  store i32 %3836, i32* %k, align 4
  br label %3010

; <label>:3837                                    ; preds = %3010
  store i32 1, i32* %k, align 4
  store i32 1, i32* %j, align 4
  br label %3838

; <label>:3838                                    ; preds = %3935, %3837
  %3839 = load i32* %j, align 4
  %3840 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %3841 = sub nsw i32 %3840, 2
  %3842 = icmp sle i32 %3839, %3841
  br i1 %3842, label %3843, label %3938

; <label>:3843                                    ; preds = %3838
  store i32 1, i32* %i, align 4
  br label %3844

; <label>:3844                                    ; preds = %3931, %3843
  %3845 = load i32* %i, align 4
  %3846 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %3847 = sub nsw i32 %3846, 2
  %3848 = icmp sle i32 %3845, %3847
  br i1 %3848, label %3849, label %3934

; <label>:3849                                    ; preds = %3844
  store i32 0, i32* %m, align 4
  br label %3850

; <label>:3850                                    ; preds = %3927, %3849
  %3851 = load i32* %m, align 4
  %3852 = icmp slt i32 %3851, 5
  br i1 %3852, label %3853, label %3930

; <label>:3853                                    ; preds = %3850
  %3854 = load i32* %m, align 4
  %3855 = sext i32 %3854 to i64
  %3856 = load i32* %i, align 4
  %3857 = sext i32 %3856 to i64
  %3858 = load i32* %j, align 4
  %3859 = sext i32 %3858 to i64
  %3860 = load i32* %k, align 4
  %3861 = sext i32 %3860 to i64
  %3862 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %3861
  %3863 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3862, i32 0, i64 %3859
  %3864 = getelementptr inbounds [13 x [5 x double]]* %3863, i32 0, i64 %3857
  %3865 = getelementptr inbounds [5 x double]* %3864, i32 0, i64 %3855
  %3866 = load double* %3865, align 8
  %3867 = load double* @dssp, align 8
  %3868 = load i32* %m, align 4
  %3869 = sext i32 %3868 to i64
  %3870 = load i32* %i, align 4
  %3871 = sext i32 %3870 to i64
  %3872 = load i32* %j, align 4
  %3873 = sext i32 %3872 to i64
  %3874 = load i32* %k, align 4
  %3875 = sext i32 %3874 to i64
  %3876 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3875
  %3877 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3876, i32 0, i64 %3873
  %3878 = getelementptr inbounds [13 x [5 x double]]* %3877, i32 0, i64 %3871
  %3879 = getelementptr inbounds [5 x double]* %3878, i32 0, i64 %3869
  %3880 = load double* %3879, align 8
  %3881 = fmul double 5.000000e+00, %3880
  %3882 = load i32* %m, align 4
  %3883 = sext i32 %3882 to i64
  %3884 = load i32* %i, align 4
  %3885 = sext i32 %3884 to i64
  %3886 = load i32* %j, align 4
  %3887 = sext i32 %3886 to i64
  %3888 = load i32* %k, align 4
  %3889 = add nsw i32 %3888, 1
  %3890 = sext i32 %3889 to i64
  %3891 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3890
  %3892 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3891, i32 0, i64 %3887
  %3893 = getelementptr inbounds [13 x [5 x double]]* %3892, i32 0, i64 %3885
  %3894 = getelementptr inbounds [5 x double]* %3893, i32 0, i64 %3883
  %3895 = load double* %3894, align 8
  %3896 = fmul double 4.000000e+00, %3895
  %3897 = fsub double %3881, %3896
  %3898 = load i32* %m, align 4
  %3899 = sext i32 %3898 to i64
  %3900 = load i32* %i, align 4
  %3901 = sext i32 %3900 to i64
  %3902 = load i32* %j, align 4
  %3903 = sext i32 %3902 to i64
  %3904 = load i32* %k, align 4
  %3905 = add nsw i32 %3904, 2
  %3906 = sext i32 %3905 to i64
  %3907 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3906
  %3908 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3907, i32 0, i64 %3903
  %3909 = getelementptr inbounds [13 x [5 x double]]* %3908, i32 0, i64 %3901
  %3910 = getelementptr inbounds [5 x double]* %3909, i32 0, i64 %3899
  %3911 = load double* %3910, align 8
  %3912 = fadd double %3897, %3911
  %3913 = fmul double %3867, %3912
  %3914 = fsub double %3866, %3913
  %3915 = load i32* %m, align 4
  %3916 = sext i32 %3915 to i64
  %3917 = load i32* %i, align 4
  %3918 = sext i32 %3917 to i64
  %3919 = load i32* %j, align 4
  %3920 = sext i32 %3919 to i64
  %3921 = load i32* %k, align 4
  %3922 = sext i32 %3921 to i64
  %3923 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %3922
  %3924 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3923, i32 0, i64 %3920
  %3925 = getelementptr inbounds [13 x [5 x double]]* %3924, i32 0, i64 %3918
  %3926 = getelementptr inbounds [5 x double]* %3925, i32 0, i64 %3916
  store double %3914, double* %3926, align 8
  br label %3927

; <label>:3927                                    ; preds = %3853
  %3928 = load i32* %m, align 4
  %3929 = add nsw i32 %3928, 1
  store i32 %3929, i32* %m, align 4
  br label %3850

; <label>:3930                                    ; preds = %3850
  br label %3931

; <label>:3931                                    ; preds = %3930
  %3932 = load i32* %i, align 4
  %3933 = add nsw i32 %3932, 1
  store i32 %3933, i32* %i, align 4
  br label %3844

; <label>:3934                                    ; preds = %3844
  br label %3935

; <label>:3935                                    ; preds = %3934
  %3936 = load i32* %j, align 4
  %3937 = add nsw i32 %3936, 1
  store i32 %3937, i32* %j, align 4
  br label %3838

; <label>:3938                                    ; preds = %3838
  store i32 2, i32* %k, align 4
  store i32 1, i32* %j, align 4
  br label %3939

; <label>:3939                                    ; preds = %4052, %3938
  %3940 = load i32* %j, align 4
  %3941 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %3942 = sub nsw i32 %3941, 2
  %3943 = icmp sle i32 %3940, %3942
  br i1 %3943, label %3944, label %4055

; <label>:3944                                    ; preds = %3939
  store i32 1, i32* %i, align 4
  br label %3945

; <label>:3945                                    ; preds = %4048, %3944
  %3946 = load i32* %i, align 4
  %3947 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %3948 = sub nsw i32 %3947, 2
  %3949 = icmp sle i32 %3946, %3948
  br i1 %3949, label %3950, label %4051

; <label>:3950                                    ; preds = %3945
  store i32 0, i32* %m, align 4
  br label %3951

; <label>:3951                                    ; preds = %4044, %3950
  %3952 = load i32* %m, align 4
  %3953 = icmp slt i32 %3952, 5
  br i1 %3953, label %3954, label %4047

; <label>:3954                                    ; preds = %3951
  %3955 = load i32* %m, align 4
  %3956 = sext i32 %3955 to i64
  %3957 = load i32* %i, align 4
  %3958 = sext i32 %3957 to i64
  %3959 = load i32* %j, align 4
  %3960 = sext i32 %3959 to i64
  %3961 = load i32* %k, align 4
  %3962 = sext i32 %3961 to i64
  %3963 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %3962
  %3964 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3963, i32 0, i64 %3960
  %3965 = getelementptr inbounds [13 x [5 x double]]* %3964, i32 0, i64 %3958
  %3966 = getelementptr inbounds [5 x double]* %3965, i32 0, i64 %3956
  %3967 = load double* %3966, align 8
  %3968 = load double* @dssp, align 8
  %3969 = load i32* %m, align 4
  %3970 = sext i32 %3969 to i64
  %3971 = load i32* %i, align 4
  %3972 = sext i32 %3971 to i64
  %3973 = load i32* %j, align 4
  %3974 = sext i32 %3973 to i64
  %3975 = load i32* %k, align 4
  %3976 = sub nsw i32 %3975, 1
  %3977 = sext i32 %3976 to i64
  %3978 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3977
  %3979 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3978, i32 0, i64 %3974
  %3980 = getelementptr inbounds [13 x [5 x double]]* %3979, i32 0, i64 %3972
  %3981 = getelementptr inbounds [5 x double]* %3980, i32 0, i64 %3970
  %3982 = load double* %3981, align 8
  %3983 = fmul double -4.000000e+00, %3982
  %3984 = load i32* %m, align 4
  %3985 = sext i32 %3984 to i64
  %3986 = load i32* %i, align 4
  %3987 = sext i32 %3986 to i64
  %3988 = load i32* %j, align 4
  %3989 = sext i32 %3988 to i64
  %3990 = load i32* %k, align 4
  %3991 = sext i32 %3990 to i64
  %3992 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %3991
  %3993 = getelementptr inbounds [13 x [13 x [5 x double]]]* %3992, i32 0, i64 %3989
  %3994 = getelementptr inbounds [13 x [5 x double]]* %3993, i32 0, i64 %3987
  %3995 = getelementptr inbounds [5 x double]* %3994, i32 0, i64 %3985
  %3996 = load double* %3995, align 8
  %3997 = fmul double 6.000000e+00, %3996
  %3998 = fadd double %3983, %3997
  %3999 = load i32* %m, align 4
  %4000 = sext i32 %3999 to i64
  %4001 = load i32* %i, align 4
  %4002 = sext i32 %4001 to i64
  %4003 = load i32* %j, align 4
  %4004 = sext i32 %4003 to i64
  %4005 = load i32* %k, align 4
  %4006 = add nsw i32 %4005, 1
  %4007 = sext i32 %4006 to i64
  %4008 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %4007
  %4009 = getelementptr inbounds [13 x [13 x [5 x double]]]* %4008, i32 0, i64 %4004
  %4010 = getelementptr inbounds [13 x [5 x double]]* %4009, i32 0, i64 %4002
  %4011 = getelementptr inbounds [5 x double]* %4010, i32 0, i64 %4000
  %4012 = load double* %4011, align 8
  %4013 = fmul double 4.000000e+00, %4012
  %4014 = fsub double %3998, %4013
  %4015 = load i32* %m, align 4
  %4016 = sext i32 %4015 to i64
  %4017 = load i32* %i, align 4
  %4018 = sext i32 %4017 to i64
  %4019 = load i32* %j, align 4
  %4020 = sext i32 %4019 to i64
  %4021 = load i32* %k, align 4
  %4022 = add nsw i32 %4021, 2
  %4023 = sext i32 %4022 to i64
  %4024 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %4023
  %4025 = getelementptr inbounds [13 x [13 x [5 x double]]]* %4024, i32 0, i64 %4020
  %4026 = getelementptr inbounds [13 x [5 x double]]* %4025, i32 0, i64 %4018
  %4027 = getelementptr inbounds [5 x double]* %4026, i32 0, i64 %4016
  %4028 = load double* %4027, align 8
  %4029 = fadd double %4014, %4028
  %4030 = fmul double %3968, %4029
  %4031 = fsub double %3967, %4030
  %4032 = load i32* %m, align 4
  %4033 = sext i32 %4032 to i64
  %4034 = load i32* %i, align 4
  %4035 = sext i32 %4034 to i64
  %4036 = load i32* %j, align 4
  %4037 = sext i32 %4036 to i64
  %4038 = load i32* %k, align 4
  %4039 = sext i32 %4038 to i64
  %4040 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %4039
  %4041 = getelementptr inbounds [13 x [13 x [5 x double]]]* %4040, i32 0, i64 %4037
  %4042 = getelementptr inbounds [13 x [5 x double]]* %4041, i32 0, i64 %4035
  %4043 = getelementptr inbounds [5 x double]* %4042, i32 0, i64 %4033
  store double %4031, double* %4043, align 8
  br label %4044

; <label>:4044                                    ; preds = %3954
  %4045 = load i32* %m, align 4
  %4046 = add nsw i32 %4045, 1
  store i32 %4046, i32* %m, align 4
  br label %3951

; <label>:4047                                    ; preds = %3951
  br label %4048

; <label>:4048                                    ; preds = %4047
  %4049 = load i32* %i, align 4
  %4050 = add nsw i32 %4049, 1
  store i32 %4050, i32* %i, align 4
  br label %3945

; <label>:4051                                    ; preds = %3945
  br label %4052

; <label>:4052                                    ; preds = %4051
  %4053 = load i32* %j, align 4
  %4054 = add nsw i32 %4053, 1
  store i32 %4054, i32* %j, align 4
  br label %3939

; <label>:4055                                    ; preds = %3939
  store i32 3, i32* %k, align 4
  br label %4056

; <label>:4056                                    ; preds = %4194, %4055
  %4057 = load i32* %k, align 4
  %4058 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %4059 = sub nsw i32 %4058, 4
  %4060 = icmp sle i32 %4057, %4059
  br i1 %4060, label %4061, label %4197

; <label>:4061                                    ; preds = %4056
  store i32 1, i32* %j, align 4
  br label %4062

; <label>:4062                                    ; preds = %4190, %4061
  %4063 = load i32* %j, align 4
  %4064 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %4065 = sub nsw i32 %4064, 2
  %4066 = icmp sle i32 %4063, %4065
  br i1 %4066, label %4067, label %4193

; <label>:4067                                    ; preds = %4062
  store i32 1, i32* %i, align 4
  br label %4068

; <label>:4068                                    ; preds = %4186, %4067
  %4069 = load i32* %i, align 4
  %4070 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %4071 = sub nsw i32 %4070, 2
  %4072 = icmp sle i32 %4069, %4071
  br i1 %4072, label %4073, label %4189

; <label>:4073                                    ; preds = %4068
  store i32 0, i32* %m, align 4
  br label %4074

; <label>:4074                                    ; preds = %4182, %4073
  %4075 = load i32* %m, align 4
  %4076 = icmp slt i32 %4075, 5
  br i1 %4076, label %4077, label %4185

; <label>:4077                                    ; preds = %4074
  %4078 = load i32* %m, align 4
  %4079 = sext i32 %4078 to i64
  %4080 = load i32* %i, align 4
  %4081 = sext i32 %4080 to i64
  %4082 = load i32* %j, align 4
  %4083 = sext i32 %4082 to i64
  %4084 = load i32* %k, align 4
  %4085 = sext i32 %4084 to i64
  %4086 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %4085
  %4087 = getelementptr inbounds [13 x [13 x [5 x double]]]* %4086, i32 0, i64 %4083
  %4088 = getelementptr inbounds [13 x [5 x double]]* %4087, i32 0, i64 %4081
  %4089 = getelementptr inbounds [5 x double]* %4088, i32 0, i64 %4079
  %4090 = load double* %4089, align 8
  %4091 = load double* @dssp, align 8
  %4092 = load i32* %m, align 4
  %4093 = sext i32 %4092 to i64
  %4094 = load i32* %i, align 4
  %4095 = sext i32 %4094 to i64
  %4096 = load i32* %j, align 4
  %4097 = sext i32 %4096 to i64
  %4098 = load i32* %k, align 4
  %4099 = sub nsw i32 %4098, 2
  %4100 = sext i32 %4099 to i64
  %4101 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %4100
  %4102 = getelementptr inbounds [13 x [13 x [5 x double]]]* %4101, i32 0, i64 %4097
  %4103 = getelementptr inbounds [13 x [5 x double]]* %4102, i32 0, i64 %4095
  %4104 = getelementptr inbounds [5 x double]* %4103, i32 0, i64 %4093
  %4105 = load double* %4104, align 8
  %4106 = load i32* %m, align 4
  %4107 = sext i32 %4106 to i64
  %4108 = load i32* %i, align 4
  %4109 = sext i32 %4108 to i64
  %4110 = load i32* %j, align 4
  %4111 = sext i32 %4110 to i64
  %4112 = load i32* %k, align 4
  %4113 = sub nsw i32 %4112, 1
  %4114 = sext i32 %4113 to i64
  %4115 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %4114
  %4116 = getelementptr inbounds [13 x [13 x [5 x double]]]* %4115, i32 0, i64 %4111
  %4117 = getelementptr inbounds [13 x [5 x double]]* %4116, i32 0, i64 %4109
  %4118 = getelementptr inbounds [5 x double]* %4117, i32 0, i64 %4107
  %4119 = load double* %4118, align 8
  %4120 = fmul double 4.000000e+00, %4119
  %4121 = fsub double %4105, %4120
  %4122 = load i32* %m, align 4
  %4123 = sext i32 %4122 to i64
  %4124 = load i32* %i, align 4
  %4125 = sext i32 %4124 to i64
  %4126 = load i32* %j, align 4
  %4127 = sext i32 %4126 to i64
  %4128 = load i32* %k, align 4
  %4129 = sext i32 %4128 to i64
  %4130 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %4129
  %4131 = getelementptr inbounds [13 x [13 x [5 x double]]]* %4130, i32 0, i64 %4127
  %4132 = getelementptr inbounds [13 x [5 x double]]* %4131, i32 0, i64 %4125
  %4133 = getelementptr inbounds [5 x double]* %4132, i32 0, i64 %4123
  %4134 = load double* %4133, align 8
  %4135 = fmul double 6.000000e+00, %4134
  %4136 = fadd double %4121, %4135
  %4137 = load i32* %m, align 4
  %4138 = sext i32 %4137 to i64
  %4139 = load i32* %i, align 4
  %4140 = sext i32 %4139 to i64
  %4141 = load i32* %j, align 4
  %4142 = sext i32 %4141 to i64
  %4143 = load i32* %k, align 4
  %4144 = add nsw i32 %4143, 1
  %4145 = sext i32 %4144 to i64
  %4146 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %4145
  %4147 = getelementptr inbounds [13 x [13 x [5 x double]]]* %4146, i32 0, i64 %4142
  %4148 = getelementptr inbounds [13 x [5 x double]]* %4147, i32 0, i64 %4140
  %4149 = getelementptr inbounds [5 x double]* %4148, i32 0, i64 %4138
  %4150 = load double* %4149, align 8
  %4151 = fmul double 4.000000e+00, %4150
  %4152 = fsub double %4136, %4151
  %4153 = load i32* %m, align 4
  %4154 = sext i32 %4153 to i64
  %4155 = load i32* %i, align 4
  %4156 = sext i32 %4155 to i64
  %4157 = load i32* %j, align 4
  %4158 = sext i32 %4157 to i64
  %4159 = load i32* %k, align 4
  %4160 = add nsw i32 %4159, 2
  %4161 = sext i32 %4160 to i64
  %4162 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %4161
  %4163 = getelementptr inbounds [13 x [13 x [5 x double]]]* %4162, i32 0, i64 %4158
  %4164 = getelementptr inbounds [13 x [5 x double]]* %4163, i32 0, i64 %4156
  %4165 = getelementptr inbounds [5 x double]* %4164, i32 0, i64 %4154
  %4166 = load double* %4165, align 8
  %4167 = fadd double %4152, %4166
  %4168 = fmul double %4091, %4167
  %4169 = fsub double %4090, %4168
  %4170 = load i32* %m, align 4
  %4171 = sext i32 %4170 to i64
  %4172 = load i32* %i, align 4
  %4173 = sext i32 %4172 to i64
  %4174 = load i32* %j, align 4
  %4175 = sext i32 %4174 to i64
  %4176 = load i32* %k, align 4
  %4177 = sext i32 %4176 to i64
  %4178 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %4177
  %4179 = getelementptr inbounds [13 x [13 x [5 x double]]]* %4178, i32 0, i64 %4175
  %4180 = getelementptr inbounds [13 x [5 x double]]* %4179, i32 0, i64 %4173
  %4181 = getelementptr inbounds [5 x double]* %4180, i32 0, i64 %4171
  store double %4169, double* %4181, align 8
  br label %4182

; <label>:4182                                    ; preds = %4077
  %4183 = load i32* %m, align 4
  %4184 = add nsw i32 %4183, 1
  store i32 %4184, i32* %m, align 4
  br label %4074

; <label>:4185                                    ; preds = %4074
  br label %4186

; <label>:4186                                    ; preds = %4185
  %4187 = load i32* %i, align 4
  %4188 = add nsw i32 %4187, 1
  store i32 %4188, i32* %i, align 4
  br label %4068

; <label>:4189                                    ; preds = %4068
  br label %4190

; <label>:4190                                    ; preds = %4189
  %4191 = load i32* %j, align 4
  %4192 = add nsw i32 %4191, 1
  store i32 %4192, i32* %j, align 4
  br label %4062

; <label>:4193                                    ; preds = %4062
  br label %4194

; <label>:4194                                    ; preds = %4193
  %4195 = load i32* %k, align 4
  %4196 = add nsw i32 %4195, 1
  store i32 %4196, i32* %k, align 4
  br label %4056

; <label>:4197                                    ; preds = %4056
  %4198 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %4199 = sub nsw i32 %4198, 3
  store i32 %4199, i32* %k, align 4
  store i32 1, i32* %j, align 4
  br label %4200

; <label>:4200                                    ; preds = %4313, %4197
  %4201 = load i32* %j, align 4
  %4202 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %4203 = sub nsw i32 %4202, 2
  %4204 = icmp sle i32 %4201, %4203
  br i1 %4204, label %4205, label %4316

; <label>:4205                                    ; preds = %4200
  store i32 1, i32* %i, align 4
  br label %4206

; <label>:4206                                    ; preds = %4309, %4205
  %4207 = load i32* %i, align 4
  %4208 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %4209 = sub nsw i32 %4208, 2
  %4210 = icmp sle i32 %4207, %4209
  br i1 %4210, label %4211, label %4312

; <label>:4211                                    ; preds = %4206
  store i32 0, i32* %m, align 4
  br label %4212

; <label>:4212                                    ; preds = %4305, %4211
  %4213 = load i32* %m, align 4
  %4214 = icmp slt i32 %4213, 5
  br i1 %4214, label %4215, label %4308

; <label>:4215                                    ; preds = %4212
  %4216 = load i32* %m, align 4
  %4217 = sext i32 %4216 to i64
  %4218 = load i32* %i, align 4
  %4219 = sext i32 %4218 to i64
  %4220 = load i32* %j, align 4
  %4221 = sext i32 %4220 to i64
  %4222 = load i32* %k, align 4
  %4223 = sext i32 %4222 to i64
  %4224 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %4223
  %4225 = getelementptr inbounds [13 x [13 x [5 x double]]]* %4224, i32 0, i64 %4221
  %4226 = getelementptr inbounds [13 x [5 x double]]* %4225, i32 0, i64 %4219
  %4227 = getelementptr inbounds [5 x double]* %4226, i32 0, i64 %4217
  %4228 = load double* %4227, align 8
  %4229 = load double* @dssp, align 8
  %4230 = load i32* %m, align 4
  %4231 = sext i32 %4230 to i64
  %4232 = load i32* %i, align 4
  %4233 = sext i32 %4232 to i64
  %4234 = load i32* %j, align 4
  %4235 = sext i32 %4234 to i64
  %4236 = load i32* %k, align 4
  %4237 = sub nsw i32 %4236, 2
  %4238 = sext i32 %4237 to i64
  %4239 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %4238
  %4240 = getelementptr inbounds [13 x [13 x [5 x double]]]* %4239, i32 0, i64 %4235
  %4241 = getelementptr inbounds [13 x [5 x double]]* %4240, i32 0, i64 %4233
  %4242 = getelementptr inbounds [5 x double]* %4241, i32 0, i64 %4231
  %4243 = load double* %4242, align 8
  %4244 = load i32* %m, align 4
  %4245 = sext i32 %4244 to i64
  %4246 = load i32* %i, align 4
  %4247 = sext i32 %4246 to i64
  %4248 = load i32* %j, align 4
  %4249 = sext i32 %4248 to i64
  %4250 = load i32* %k, align 4
  %4251 = sub nsw i32 %4250, 1
  %4252 = sext i32 %4251 to i64
  %4253 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %4252
  %4254 = getelementptr inbounds [13 x [13 x [5 x double]]]* %4253, i32 0, i64 %4249
  %4255 = getelementptr inbounds [13 x [5 x double]]* %4254, i32 0, i64 %4247
  %4256 = getelementptr inbounds [5 x double]* %4255, i32 0, i64 %4245
  %4257 = load double* %4256, align 8
  %4258 = fmul double 4.000000e+00, %4257
  %4259 = fsub double %4243, %4258
  %4260 = load i32* %m, align 4
  %4261 = sext i32 %4260 to i64
  %4262 = load i32* %i, align 4
  %4263 = sext i32 %4262 to i64
  %4264 = load i32* %j, align 4
  %4265 = sext i32 %4264 to i64
  %4266 = load i32* %k, align 4
  %4267 = sext i32 %4266 to i64
  %4268 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %4267
  %4269 = getelementptr inbounds [13 x [13 x [5 x double]]]* %4268, i32 0, i64 %4265
  %4270 = getelementptr inbounds [13 x [5 x double]]* %4269, i32 0, i64 %4263
  %4271 = getelementptr inbounds [5 x double]* %4270, i32 0, i64 %4261
  %4272 = load double* %4271, align 8
  %4273 = fmul double 6.000000e+00, %4272
  %4274 = fadd double %4259, %4273
  %4275 = load i32* %m, align 4
  %4276 = sext i32 %4275 to i64
  %4277 = load i32* %i, align 4
  %4278 = sext i32 %4277 to i64
  %4279 = load i32* %j, align 4
  %4280 = sext i32 %4279 to i64
  %4281 = load i32* %k, align 4
  %4282 = add nsw i32 %4281, 1
  %4283 = sext i32 %4282 to i64
  %4284 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %4283
  %4285 = getelementptr inbounds [13 x [13 x [5 x double]]]* %4284, i32 0, i64 %4280
  %4286 = getelementptr inbounds [13 x [5 x double]]* %4285, i32 0, i64 %4278
  %4287 = getelementptr inbounds [5 x double]* %4286, i32 0, i64 %4276
  %4288 = load double* %4287, align 8
  %4289 = fmul double 4.000000e+00, %4288
  %4290 = fsub double %4274, %4289
  %4291 = fmul double %4229, %4290
  %4292 = fsub double %4228, %4291
  %4293 = load i32* %m, align 4
  %4294 = sext i32 %4293 to i64
  %4295 = load i32* %i, align 4
  %4296 = sext i32 %4295 to i64
  %4297 = load i32* %j, align 4
  %4298 = sext i32 %4297 to i64
  %4299 = load i32* %k, align 4
  %4300 = sext i32 %4299 to i64
  %4301 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %4300
  %4302 = getelementptr inbounds [13 x [13 x [5 x double]]]* %4301, i32 0, i64 %4298
  %4303 = getelementptr inbounds [13 x [5 x double]]* %4302, i32 0, i64 %4296
  %4304 = getelementptr inbounds [5 x double]* %4303, i32 0, i64 %4294
  store double %4292, double* %4304, align 8
  br label %4305

; <label>:4305                                    ; preds = %4215
  %4306 = load i32* %m, align 4
  %4307 = add nsw i32 %4306, 1
  store i32 %4307, i32* %m, align 4
  br label %4212

; <label>:4308                                    ; preds = %4212
  br label %4309

; <label>:4309                                    ; preds = %4308
  %4310 = load i32* %i, align 4
  %4311 = add nsw i32 %4310, 1
  store i32 %4311, i32* %i, align 4
  br label %4206

; <label>:4312                                    ; preds = %4206
  br label %4313

; <label>:4313                                    ; preds = %4312
  %4314 = load i32* %j, align 4
  %4315 = add nsw i32 %4314, 1
  store i32 %4315, i32* %j, align 4
  br label %4200

; <label>:4316                                    ; preds = %4200
  %4317 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %4318 = sub nsw i32 %4317, 2
  store i32 %4318, i32* %k, align 4
  store i32 1, i32* %j, align 4
  br label %4319

; <label>:4319                                    ; preds = %4416, %4316
  %4320 = load i32* %j, align 4
  %4321 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %4322 = sub nsw i32 %4321, 2
  %4323 = icmp sle i32 %4320, %4322
  br i1 %4323, label %4324, label %4419

; <label>:4324                                    ; preds = %4319
  store i32 1, i32* %i, align 4
  br label %4325

; <label>:4325                                    ; preds = %4412, %4324
  %4326 = load i32* %i, align 4
  %4327 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %4328 = sub nsw i32 %4327, 2
  %4329 = icmp sle i32 %4326, %4328
  br i1 %4329, label %4330, label %4415

; <label>:4330                                    ; preds = %4325
  store i32 0, i32* %m, align 4
  br label %4331

; <label>:4331                                    ; preds = %4408, %4330
  %4332 = load i32* %m, align 4
  %4333 = icmp slt i32 %4332, 5
  br i1 %4333, label %4334, label %4411

; <label>:4334                                    ; preds = %4331
  %4335 = load i32* %m, align 4
  %4336 = sext i32 %4335 to i64
  %4337 = load i32* %i, align 4
  %4338 = sext i32 %4337 to i64
  %4339 = load i32* %j, align 4
  %4340 = sext i32 %4339 to i64
  %4341 = load i32* %k, align 4
  %4342 = sext i32 %4341 to i64
  %4343 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %4342
  %4344 = getelementptr inbounds [13 x [13 x [5 x double]]]* %4343, i32 0, i64 %4340
  %4345 = getelementptr inbounds [13 x [5 x double]]* %4344, i32 0, i64 %4338
  %4346 = getelementptr inbounds [5 x double]* %4345, i32 0, i64 %4336
  %4347 = load double* %4346, align 8
  %4348 = load double* @dssp, align 8
  %4349 = load i32* %m, align 4
  %4350 = sext i32 %4349 to i64
  %4351 = load i32* %i, align 4
  %4352 = sext i32 %4351 to i64
  %4353 = load i32* %j, align 4
  %4354 = sext i32 %4353 to i64
  %4355 = load i32* %k, align 4
  %4356 = sub nsw i32 %4355, 2
  %4357 = sext i32 %4356 to i64
  %4358 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %4357
  %4359 = getelementptr inbounds [13 x [13 x [5 x double]]]* %4358, i32 0, i64 %4354
  %4360 = getelementptr inbounds [13 x [5 x double]]* %4359, i32 0, i64 %4352
  %4361 = getelementptr inbounds [5 x double]* %4360, i32 0, i64 %4350
  %4362 = load double* %4361, align 8
  %4363 = load i32* %m, align 4
  %4364 = sext i32 %4363 to i64
  %4365 = load i32* %i, align 4
  %4366 = sext i32 %4365 to i64
  %4367 = load i32* %j, align 4
  %4368 = sext i32 %4367 to i64
  %4369 = load i32* %k, align 4
  %4370 = sub nsw i32 %4369, 1
  %4371 = sext i32 %4370 to i64
  %4372 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %4371
  %4373 = getelementptr inbounds [13 x [13 x [5 x double]]]* %4372, i32 0, i64 %4368
  %4374 = getelementptr inbounds [13 x [5 x double]]* %4373, i32 0, i64 %4366
  %4375 = getelementptr inbounds [5 x double]* %4374, i32 0, i64 %4364
  %4376 = load double* %4375, align 8
  %4377 = fmul double 4.000000e+00, %4376
  %4378 = fsub double %4362, %4377
  %4379 = load i32* %m, align 4
  %4380 = sext i32 %4379 to i64
  %4381 = load i32* %i, align 4
  %4382 = sext i32 %4381 to i64
  %4383 = load i32* %j, align 4
  %4384 = sext i32 %4383 to i64
  %4385 = load i32* %k, align 4
  %4386 = sext i32 %4385 to i64
  %4387 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %4386
  %4388 = getelementptr inbounds [13 x [13 x [5 x double]]]* %4387, i32 0, i64 %4384
  %4389 = getelementptr inbounds [13 x [5 x double]]* %4388, i32 0, i64 %4382
  %4390 = getelementptr inbounds [5 x double]* %4389, i32 0, i64 %4380
  %4391 = load double* %4390, align 8
  %4392 = fmul double 5.000000e+00, %4391
  %4393 = fadd double %4378, %4392
  %4394 = fmul double %4348, %4393
  %4395 = fsub double %4347, %4394
  %4396 = load i32* %m, align 4
  %4397 = sext i32 %4396 to i64
  %4398 = load i32* %i, align 4
  %4399 = sext i32 %4398 to i64
  %4400 = load i32* %j, align 4
  %4401 = sext i32 %4400 to i64
  %4402 = load i32* %k, align 4
  %4403 = sext i32 %4402 to i64
  %4404 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %4403
  %4405 = getelementptr inbounds [13 x [13 x [5 x double]]]* %4404, i32 0, i64 %4401
  %4406 = getelementptr inbounds [13 x [5 x double]]* %4405, i32 0, i64 %4399
  %4407 = getelementptr inbounds [5 x double]* %4406, i32 0, i64 %4397
  store double %4395, double* %4407, align 8
  br label %4408

; <label>:4408                                    ; preds = %4334
  %4409 = load i32* %m, align 4
  %4410 = add nsw i32 %4409, 1
  store i32 %4410, i32* %m, align 4
  br label %4331

; <label>:4411                                    ; preds = %4331
  br label %4412

; <label>:4412                                    ; preds = %4411
  %4413 = load i32* %i, align 4
  %4414 = add nsw i32 %4413, 1
  store i32 %4414, i32* %i, align 4
  br label %4325

; <label>:4415                                    ; preds = %4325
  br label %4416

; <label>:4416                                    ; preds = %4415
  %4417 = load i32* %j, align 4
  %4418 = add nsw i32 %4417, 1
  store i32 %4418, i32* %j, align 4
  br label %4319

; <label>:4419                                    ; preds = %4319
  %4420 = load i32* @timeron, align 4
  %4421 = icmp ne i32 %4420, 0
  br i1 %4421, label %4422, label %4423

; <label>:4422                                    ; preds = %4419
  call void @timer_stop(i32 4)
  br label %4423

; <label>:4423                                    ; preds = %4422, %4419
  store i32 1, i32* %k, align 4
  br label %4424

; <label>:4424                                    ; preds = %4485, %4423
  %4425 = load i32* %k, align 4
  %4426 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %4427 = sub nsw i32 %4426, 2
  %4428 = icmp sle i32 %4425, %4427
  br i1 %4428, label %4429, label %4488

; <label>:4429                                    ; preds = %4424
  store i32 1, i32* %j, align 4
  br label %4430

; <label>:4430                                    ; preds = %4481, %4429
  %4431 = load i32* %j, align 4
  %4432 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %4433 = sub nsw i32 %4432, 2
  %4434 = icmp sle i32 %4431, %4433
  br i1 %4434, label %4435, label %4484

; <label>:4435                                    ; preds = %4430
  store i32 1, i32* %i, align 4
  br label %4436

; <label>:4436                                    ; preds = %4477, %4435
  %4437 = load i32* %i, align 4
  %4438 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %4439 = sub nsw i32 %4438, 2
  %4440 = icmp sle i32 %4437, %4439
  br i1 %4440, label %4441, label %4480

; <label>:4441                                    ; preds = %4436
  store i32 0, i32* %m, align 4
  br label %4442

; <label>:4442                                    ; preds = %4473, %4441
  %4443 = load i32* %m, align 4
  %4444 = icmp slt i32 %4443, 5
  br i1 %4444, label %4445, label %4476

; <label>:4445                                    ; preds = %4442
  %4446 = load i32* %m, align 4
  %4447 = sext i32 %4446 to i64
  %4448 = load i32* %i, align 4
  %4449 = sext i32 %4448 to i64
  %4450 = load i32* %j, align 4
  %4451 = sext i32 %4450 to i64
  %4452 = load i32* %k, align 4
  %4453 = sext i32 %4452 to i64
  %4454 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %4453
  %4455 = getelementptr inbounds [13 x [13 x [5 x double]]]* %4454, i32 0, i64 %4451
  %4456 = getelementptr inbounds [13 x [5 x double]]* %4455, i32 0, i64 %4449
  %4457 = getelementptr inbounds [5 x double]* %4456, i32 0, i64 %4447
  %4458 = load double* %4457, align 8
  %4459 = load double* @dt, align 8
  %4460 = fmul double %4458, %4459
  %4461 = load i32* %m, align 4
  %4462 = sext i32 %4461 to i64
  %4463 = load i32* %i, align 4
  %4464 = sext i32 %4463 to i64
  %4465 = load i32* %j, align 4
  %4466 = sext i32 %4465 to i64
  %4467 = load i32* %k, align 4
  %4468 = sext i32 %4467 to i64
  %4469 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %4468
  %4470 = getelementptr inbounds [13 x [13 x [5 x double]]]* %4469, i32 0, i64 %4466
  %4471 = getelementptr inbounds [13 x [5 x double]]* %4470, i32 0, i64 %4464
  %4472 = getelementptr inbounds [5 x double]* %4471, i32 0, i64 %4462
  store double %4460, double* %4472, align 8
  br label %4473

; <label>:4473                                    ; preds = %4445
  %4474 = load i32* %m, align 4
  %4475 = add nsw i32 %4474, 1
  store i32 %4475, i32* %m, align 4
  br label %4442

; <label>:4476                                    ; preds = %4442
  br label %4477

; <label>:4477                                    ; preds = %4476
  %4478 = load i32* %i, align 4
  %4479 = add nsw i32 %4478, 1
  store i32 %4479, i32* %i, align 4
  br label %4436

; <label>:4480                                    ; preds = %4436
  br label %4481

; <label>:4481                                    ; preds = %4480
  %4482 = load i32* %j, align 4
  %4483 = add nsw i32 %4482, 1
  store i32 %4483, i32* %j, align 4
  br label %4430

; <label>:4484                                    ; preds = %4430
  br label %4485

; <label>:4485                                    ; preds = %4484
  %4486 = load i32* %k, align 4
  %4487 = add nsw i32 %4486, 1
  store i32 %4487, i32* %k, align 4
  br label %4424

; <label>:4488                                    ; preds = %4424
  %4489 = load i32* @timeron, align 4
  %4490 = icmp ne i32 %4489, 0
  br i1 %4490, label %4491, label %4492

; <label>:4491                                    ; preds = %4488
  call void @timer_stop(i32 5)
  br label %4492

; <label>:4492                                    ; preds = %4491, %4488
  ret void
}

; Function Attrs: nounwind uwtable
define void @set_constants() #0 {
  store double 2.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 0, i64 0), align 8
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 0, i64 1), align 8
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 0, i64 2), align 8
  store double 4.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 0, i64 3), align 8
  store double 5.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 0, i64 4), align 8
  store double 3.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 0, i64 5), align 8
  store double 5.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 0, i64 6), align 8
  store double 2.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 0, i64 7), align 8
  store double 1.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 0, i64 8), align 8
  store double 3.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 0, i64 9), align 8
  store double 5.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 0, i64 10), align 8
  store double 4.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 0, i64 11), align 8
  store double 3.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 0, i64 12), align 8
  store double 1.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 1, i64 0), align 8
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 1, i64 1), align 8
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 1, i64 2), align 8
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 1, i64 3), align 8
  store double 1.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 1, i64 4), align 8
  store double 2.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 1, i64 5), align 8
  store double 3.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 1, i64 6), align 8
  store double 1.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 1, i64 7), align 8
  store double 3.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 1, i64 8), align 8
  store double 2.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 1, i64 9), align 8
  store double 4.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 1, i64 10), align 8
  store double 3.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 1, i64 11), align 8
  store double 5.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 1, i64 12), align 8
  store double 2.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 2, i64 0), align 8
  store double 2.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 2, i64 1), align 8
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 2, i64 2), align 8
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 2, i64 3), align 8
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 2, i64 4), align 8
  store double 2.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 2, i64 5), align 8
  store double 3.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 2, i64 6), align 8
  store double 4.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 2, i64 7), align 8
  store double 3.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 2, i64 8), align 8
  store double 5.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 2, i64 9), align 8
  store double 3.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 2, i64 10), align 8
  store double 5.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 2, i64 11), align 8
  store double 4.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 2, i64 12), align 8
  store double 2.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 3, i64 0), align 8
  store double 2.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 3, i64 1), align 8
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 3, i64 2), align 8
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 3, i64 3), align 8
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 3, i64 4), align 8
  store double 2.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 3, i64 5), align 8
  store double 3.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 3, i64 6), align 8
  store double 3.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 3, i64 7), align 8
  store double 5.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 3, i64 8), align 8
  store double 4.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 3, i64 9), align 8
  store double 2.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 3, i64 10), align 8
  store double 1.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 3, i64 11), align 8
  store double 3.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 3, i64 12), align 8
  store double 5.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 4, i64 0), align 8
  store double 4.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 4, i64 1), align 8
  store double 3.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 4, i64 2), align 8
  store double 2.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 4, i64 3), align 8
  store double 1.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 4, i64 4), align 8
  store double 4.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 4, i64 5), align 8
  store double 3.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 4, i64 6), align 8
  store double 5.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 4, i64 7), align 8
  store double 4.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 4, i64 8), align 8
  store double 3.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 4, i64 9), align 8
  store double 1.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 4, i64 10), align 8
  store double 3.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 4, i64 11), align 8
  store double 2.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 4, i64 12), align 8
  store double 1.400000e+00, double* @c1, align 8
  store double 4.000000e-01, double* @c2, align 8
  store double 1.000000e-01, double* @c3, align 8
  store double 1.000000e+00, double* @c4, align 8
  store double 1.400000e+00, double* @c5, align 8
  %1 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %2 = sub nsw i32 %1, 1
  %3 = sitofp i32 %2 to double
  %4 = fdiv double 1.000000e+00, %3
  store double %4, double* @dnxm1, align 8
  %5 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %6 = sub nsw i32 %5, 1
  %7 = sitofp i32 %6 to double
  %8 = fdiv double 1.000000e+00, %7
  store double %8, double* @dnym1, align 8
  %9 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %10 = sub nsw i32 %9, 1
  %11 = sitofp i32 %10 to double
  %12 = fdiv double 1.000000e+00, %11
  store double %12, double* @dnzm1, align 8
  %13 = load double* @c1, align 8
  %14 = load double* @c2, align 8
  %15 = fmul double %13, %14
  store double %15, double* @c1c2, align 8
  %16 = load double* @c1, align 8
  %17 = load double* @c5, align 8
  %18 = fmul double %16, %17
  store double %18, double* @c1c5, align 8
  %19 = load double* @c3, align 8
  %20 = load double* @c4, align 8
  %21 = fmul double %19, %20
  store double %21, double* @c3c4, align 8
  %22 = load double* @c1c5, align 8
  %23 = load double* @c3c4, align 8
  %24 = fmul double %22, %23
  store double %24, double* @c1345, align 8
  %25 = load double* @c1c5, align 8
  %26 = fsub double 1.000000e+00, %25
  store double %26, double* @conz1, align 8
  %27 = load double* @dnxm1, align 8
  %28 = load double* @dnxm1, align 8
  %29 = fmul double %27, %28
  %30 = fdiv double 1.000000e+00, %29
  store double %30, double* @tx1, align 8
  %31 = load double* @dnxm1, align 8
  %32 = fmul double 2.000000e+00, %31
  %33 = fdiv double 1.000000e+00, %32
  store double %33, double* @tx2, align 8
  %34 = load double* @dnxm1, align 8
  %35 = fdiv double 1.000000e+00, %34
  store double %35, double* @tx3, align 8
  %36 = load double* @dnym1, align 8
  %37 = load double* @dnym1, align 8
  %38 = fmul double %36, %37
  %39 = fdiv double 1.000000e+00, %38
  store double %39, double* @ty1, align 8
  %40 = load double* @dnym1, align 8
  %41 = fmul double 2.000000e+00, %40
  %42 = fdiv double 1.000000e+00, %41
  store double %42, double* @ty2, align 8
  %43 = load double* @dnym1, align 8
  %44 = fdiv double 1.000000e+00, %43
  store double %44, double* @ty3, align 8
  %45 = load double* @dnzm1, align 8
  %46 = load double* @dnzm1, align 8
  %47 = fmul double %45, %46
  %48 = fdiv double 1.000000e+00, %47
  store double %48, double* @tz1, align 8
  %49 = load double* @dnzm1, align 8
  %50 = fmul double 2.000000e+00, %49
  %51 = fdiv double 1.000000e+00, %50
  store double %51, double* @tz2, align 8
  %52 = load double* @dnzm1, align 8
  %53 = fdiv double 1.000000e+00, %52
  store double %53, double* @tz3, align 8
  store double 7.500000e-01, double* @dx1, align 8
  store double 7.500000e-01, double* @dx2, align 8
  store double 7.500000e-01, double* @dx3, align 8
  store double 7.500000e-01, double* @dx4, align 8
  store double 7.500000e-01, double* @dx5, align 8
  store double 7.500000e-01, double* @dy1, align 8
  store double 7.500000e-01, double* @dy2, align 8
  store double 7.500000e-01, double* @dy3, align 8
  store double 7.500000e-01, double* @dy4, align 8
  store double 7.500000e-01, double* @dy5, align 8
  store double 1.000000e+00, double* @dz1, align 8
  store double 1.000000e+00, double* @dz2, align 8
  store double 1.000000e+00, double* @dz3, align 8
  store double 1.000000e+00, double* @dz4, align 8
  store double 1.000000e+00, double* @dz5, align 8
  %54 = load double* @dx3, align 8
  %55 = load double* @dx4, align 8
  %56 = fcmp ogt double %54, %55
  br i1 %56, label %57, label %59

; <label>:57                                      ; preds = %0
  %58 = load double* @dx3, align 8
  br label %61

; <label>:59                                      ; preds = %0
  %60 = load double* @dx4, align 8
  br label %61

; <label>:61                                      ; preds = %59, %57
  %62 = phi double [ %58, %57 ], [ %60, %59 ]
  store double %62, double* @dxmax, align 8
  %63 = load double* @dy2, align 8
  %64 = load double* @dy4, align 8
  %65 = fcmp ogt double %63, %64
  br i1 %65, label %66, label %68

; <label>:66                                      ; preds = %61
  %67 = load double* @dy2, align 8
  br label %70

; <label>:68                                      ; preds = %61
  %69 = load double* @dy4, align 8
  br label %70

; <label>:70                                      ; preds = %68, %66
  %71 = phi double [ %67, %66 ], [ %69, %68 ]
  store double %71, double* @dymax, align 8
  %72 = load double* @dz2, align 8
  %73 = load double* @dz3, align 8
  %74 = fcmp ogt double %72, %73
  br i1 %74, label %75, label %77

; <label>:75                                      ; preds = %70
  %76 = load double* @dz2, align 8
  br label %79

; <label>:77                                      ; preds = %70
  %78 = load double* @dz3, align 8
  br label %79

; <label>:79                                      ; preds = %77, %75
  %80 = phi double [ %76, %75 ], [ %78, %77 ]
  store double %80, double* @dzmax, align 8
  %81 = load double* @dx1, align 8
  %82 = load double* @dy1, align 8
  %83 = load double* @dz1, align 8
  %84 = fcmp ogt double %82, %83
  br i1 %84, label %85, label %87

; <label>:85                                      ; preds = %79
  %86 = load double* @dy1, align 8
  br label %89

; <label>:87                                      ; preds = %79
  %88 = load double* @dz1, align 8
  br label %89

; <label>:89                                      ; preds = %87, %85
  %90 = phi double [ %86, %85 ], [ %88, %87 ]
  %91 = fcmp ogt double %81, %90
  br i1 %91, label %92, label %94

; <label>:92                                      ; preds = %89
  %93 = load double* @dx1, align 8
  br label %104

; <label>:94                                      ; preds = %89
  %95 = load double* @dy1, align 8
  %96 = load double* @dz1, align 8
  %97 = fcmp ogt double %95, %96
  br i1 %97, label %98, label %100

; <label>:98                                      ; preds = %94
  %99 = load double* @dy1, align 8
  br label %102

; <label>:100                                     ; preds = %94
  %101 = load double* @dz1, align 8
  br label %102

; <label>:102                                     ; preds = %100, %98
  %103 = phi double [ %99, %98 ], [ %101, %100 ]
  br label %104

; <label>:104                                     ; preds = %102, %92
  %105 = phi double [ %93, %92 ], [ %103, %102 ]
  %106 = fmul double 2.500000e-01, %105
  store double %106, double* @dssp, align 8
  %107 = load double* @dssp, align 8
  %108 = fmul double 4.000000e+00, %107
  store double %108, double* @c4dssp, align 8
  %109 = load double* @dssp, align 8
  %110 = fmul double 5.000000e+00, %109
  store double %110, double* @c5dssp, align 8
  %111 = load double* @dt, align 8
  %112 = load double* @tx1, align 8
  %113 = fmul double %111, %112
  store double %113, double* @dttx1, align 8
  %114 = load double* @dt, align 8
  %115 = load double* @tx2, align 8
  %116 = fmul double %114, %115
  store double %116, double* @dttx2, align 8
  %117 = load double* @dt, align 8
  %118 = load double* @ty1, align 8
  %119 = fmul double %117, %118
  store double %119, double* @dtty1, align 8
  %120 = load double* @dt, align 8
  %121 = load double* @ty2, align 8
  %122 = fmul double %120, %121
  store double %122, double* @dtty2, align 8
  %123 = load double* @dt, align 8
  %124 = load double* @tz1, align 8
  %125 = fmul double %123, %124
  store double %125, double* @dttz1, align 8
  %126 = load double* @dt, align 8
  %127 = load double* @tz2, align 8
  %128 = fmul double %126, %127
  store double %128, double* @dttz2, align 8
  %129 = load double* @dttx1, align 8
  %130 = fmul double 2.000000e+00, %129
  store double %130, double* @c2dttx1, align 8
  %131 = load double* @dtty1, align 8
  %132 = fmul double 2.000000e+00, %131
  store double %132, double* @c2dtty1, align 8
  %133 = load double* @dttz1, align 8
  %134 = fmul double 2.000000e+00, %133
  store double %134, double* @c2dttz1, align 8
  %135 = load double* @dt, align 8
  %136 = load double* @dssp, align 8
  %137 = fmul double %135, %136
  store double %137, double* @dtdssp, align 8
  %138 = load double* @dtdssp, align 8
  store double %138, double* @comz1, align 8
  %139 = load double* @dtdssp, align 8
  %140 = fmul double 4.000000e+00, %139
  store double %140, double* @comz4, align 8
  %141 = load double* @dtdssp, align 8
  %142 = fmul double 5.000000e+00, %141
  store double %142, double* @comz5, align 8
  %143 = load double* @dtdssp, align 8
  %144 = fmul double 6.000000e+00, %143
  store double %144, double* @comz6, align 8
  %145 = load double* @c3c4, align 8
  %146 = load double* @tx3, align 8
  %147 = fmul double %145, %146
  store double %147, double* @c3c4tx3, align 8
  %148 = load double* @c3c4, align 8
  %149 = load double* @ty3, align 8
  %150 = fmul double %148, %149
  store double %150, double* @c3c4ty3, align 8
  %151 = load double* @c3c4, align 8
  %152 = load double* @tz3, align 8
  %153 = fmul double %151, %152
  store double %153, double* @c3c4tz3, align 8
  %154 = load double* @dx1, align 8
  %155 = load double* @tx1, align 8
  %156 = fmul double %154, %155
  store double %156, double* @dx1tx1, align 8
  %157 = load double* @dx2, align 8
  %158 = load double* @tx1, align 8
  %159 = fmul double %157, %158
  store double %159, double* @dx2tx1, align 8
  %160 = load double* @dx3, align 8
  %161 = load double* @tx1, align 8
  %162 = fmul double %160, %161
  store double %162, double* @dx3tx1, align 8
  %163 = load double* @dx4, align 8
  %164 = load double* @tx1, align 8
  %165 = fmul double %163, %164
  store double %165, double* @dx4tx1, align 8
  %166 = load double* @dx5, align 8
  %167 = load double* @tx1, align 8
  %168 = fmul double %166, %167
  store double %168, double* @dx5tx1, align 8
  %169 = load double* @dy1, align 8
  %170 = load double* @ty1, align 8
  %171 = fmul double %169, %170
  store double %171, double* @dy1ty1, align 8
  %172 = load double* @dy2, align 8
  %173 = load double* @ty1, align 8
  %174 = fmul double %172, %173
  store double %174, double* @dy2ty1, align 8
  %175 = load double* @dy3, align 8
  %176 = load double* @ty1, align 8
  %177 = fmul double %175, %176
  store double %177, double* @dy3ty1, align 8
  %178 = load double* @dy4, align 8
  %179 = load double* @ty1, align 8
  %180 = fmul double %178, %179
  store double %180, double* @dy4ty1, align 8
  %181 = load double* @dy5, align 8
  %182 = load double* @ty1, align 8
  %183 = fmul double %181, %182
  store double %183, double* @dy5ty1, align 8
  %184 = load double* @dz1, align 8
  %185 = load double* @tz1, align 8
  %186 = fmul double %184, %185
  store double %186, double* @dz1tz1, align 8
  %187 = load double* @dz2, align 8
  %188 = load double* @tz1, align 8
  %189 = fmul double %187, %188
  store double %189, double* @dz2tz1, align 8
  %190 = load double* @dz3, align 8
  %191 = load double* @tz1, align 8
  %192 = fmul double %190, %191
  store double %192, double* @dz3tz1, align 8
  %193 = load double* @dz4, align 8
  %194 = load double* @tz1, align 8
  %195 = fmul double %193, %194
  store double %195, double* @dz4tz1, align 8
  %196 = load double* @dz5, align 8
  %197 = load double* @tz1, align 8
  %198 = fmul double %196, %197
  store double %198, double* @dz5tz1, align 8
  store double 2.500000e+00, double* @c2iv, align 8
  store double 0x3FF5555555555555, double* @con43, align 8
  store double 0x3FC5555555555555, double* @con16, align 8
  %199 = load double* @c3c4tx3, align 8
  %200 = load double* @con43, align 8
  %201 = fmul double %199, %200
  %202 = load double* @tx3, align 8
  %203 = fmul double %201, %202
  store double %203, double* @xxcon1, align 8
  %204 = load double* @c3c4tx3, align 8
  %205 = load double* @tx3, align 8
  %206 = fmul double %204, %205
  store double %206, double* @xxcon2, align 8
  %207 = load double* @c3c4tx3, align 8
  %208 = load double* @conz1, align 8
  %209 = fmul double %207, %208
  %210 = load double* @tx3, align 8
  %211 = fmul double %209, %210
  store double %211, double* @xxcon3, align 8
  %212 = load double* @c3c4tx3, align 8
  %213 = load double* @con16, align 8
  %214 = fmul double %212, %213
  %215 = load double* @tx3, align 8
  %216 = fmul double %214, %215
  store double %216, double* @xxcon4, align 8
  %217 = load double* @c3c4tx3, align 8
  %218 = load double* @c1c5, align 8
  %219 = fmul double %217, %218
  %220 = load double* @tx3, align 8
  %221 = fmul double %219, %220
  store double %221, double* @xxcon5, align 8
  %222 = load double* @c3c4ty3, align 8
  %223 = load double* @con43, align 8
  %224 = fmul double %222, %223
  %225 = load double* @ty3, align 8
  %226 = fmul double %224, %225
  store double %226, double* @yycon1, align 8
  %227 = load double* @c3c4ty3, align 8
  %228 = load double* @ty3, align 8
  %229 = fmul double %227, %228
  store double %229, double* @yycon2, align 8
  %230 = load double* @c3c4ty3, align 8
  %231 = load double* @conz1, align 8
  %232 = fmul double %230, %231
  %233 = load double* @ty3, align 8
  %234 = fmul double %232, %233
  store double %234, double* @yycon3, align 8
  %235 = load double* @c3c4ty3, align 8
  %236 = load double* @con16, align 8
  %237 = fmul double %235, %236
  %238 = load double* @ty3, align 8
  %239 = fmul double %237, %238
  store double %239, double* @yycon4, align 8
  %240 = load double* @c3c4ty3, align 8
  %241 = load double* @c1c5, align 8
  %242 = fmul double %240, %241
  %243 = load double* @ty3, align 8
  %244 = fmul double %242, %243
  store double %244, double* @yycon5, align 8
  %245 = load double* @c3c4tz3, align 8
  %246 = load double* @con43, align 8
  %247 = fmul double %245, %246
  %248 = load double* @tz3, align 8
  %249 = fmul double %247, %248
  store double %249, double* @zzcon1, align 8
  %250 = load double* @c3c4tz3, align 8
  %251 = load double* @tz3, align 8
  %252 = fmul double %250, %251
  store double %252, double* @zzcon2, align 8
  %253 = load double* @c3c4tz3, align 8
  %254 = load double* @conz1, align 8
  %255 = fmul double %253, %254
  %256 = load double* @tz3, align 8
  %257 = fmul double %255, %256
  store double %257, double* @zzcon3, align 8
  %258 = load double* @c3c4tz3, align 8
  %259 = load double* @con16, align 8
  %260 = fmul double %258, %259
  %261 = load double* @tz3, align 8
  %262 = fmul double %260, %261
  store double %262, double* @zzcon4, align 8
  %263 = load double* @c3c4tz3, align 8
  %264 = load double* @c1c5, align 8
  %265 = fmul double %263, %264
  %266 = load double* @tz3, align 8
  %267 = fmul double %265, %266
  store double %267, double* @zzcon5, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @matvec_sub([5 x double]* %ablock, double* %avec, double* %bvec) #0 {
  %1 = alloca [5 x double]*, align 8
  %2 = alloca double*, align 8
  %3 = alloca double*, align 8
  store [5 x double]* %ablock, [5 x double]** %1, align 8
  store double* %avec, double** %2, align 8
  store double* %bvec, double** %3, align 8
  %4 = load double** %3, align 8
  %5 = getelementptr inbounds double* %4, i64 0
  %6 = load double* %5, align 8
  %7 = load [5 x double]** %1, align 8
  %8 = getelementptr inbounds [5 x double]* %7, i64 0
  %9 = getelementptr inbounds [5 x double]* %8, i32 0, i64 0
  %10 = load double* %9, align 8
  %11 = load double** %2, align 8
  %12 = getelementptr inbounds double* %11, i64 0
  %13 = load double* %12, align 8
  %14 = fmul double %10, %13
  %15 = fsub double %6, %14
  %16 = load [5 x double]** %1, align 8
  %17 = getelementptr inbounds [5 x double]* %16, i64 1
  %18 = getelementptr inbounds [5 x double]* %17, i32 0, i64 0
  %19 = load double* %18, align 8
  %20 = load double** %2, align 8
  %21 = getelementptr inbounds double* %20, i64 1
  %22 = load double* %21, align 8
  %23 = fmul double %19, %22
  %24 = fsub double %15, %23
  %25 = load [5 x double]** %1, align 8
  %26 = getelementptr inbounds [5 x double]* %25, i64 2
  %27 = getelementptr inbounds [5 x double]* %26, i32 0, i64 0
  %28 = load double* %27, align 8
  %29 = load double** %2, align 8
  %30 = getelementptr inbounds double* %29, i64 2
  %31 = load double* %30, align 8
  %32 = fmul double %28, %31
  %33 = fsub double %24, %32
  %34 = load [5 x double]** %1, align 8
  %35 = getelementptr inbounds [5 x double]* %34, i64 3
  %36 = getelementptr inbounds [5 x double]* %35, i32 0, i64 0
  %37 = load double* %36, align 8
  %38 = load double** %2, align 8
  %39 = getelementptr inbounds double* %38, i64 3
  %40 = load double* %39, align 8
  %41 = fmul double %37, %40
  %42 = fsub double %33, %41
  %43 = load [5 x double]** %1, align 8
  %44 = getelementptr inbounds [5 x double]* %43, i64 4
  %45 = getelementptr inbounds [5 x double]* %44, i32 0, i64 0
  %46 = load double* %45, align 8
  %47 = load double** %2, align 8
  %48 = getelementptr inbounds double* %47, i64 4
  %49 = load double* %48, align 8
  %50 = fmul double %46, %49
  %51 = fsub double %42, %50
  %52 = load double** %3, align 8
  %53 = getelementptr inbounds double* %52, i64 0
  store double %51, double* %53, align 8
  %54 = load double** %3, align 8
  %55 = getelementptr inbounds double* %54, i64 1
  %56 = load double* %55, align 8
  %57 = load [5 x double]** %1, align 8
  %58 = getelementptr inbounds [5 x double]* %57, i64 0
  %59 = getelementptr inbounds [5 x double]* %58, i32 0, i64 1
  %60 = load double* %59, align 8
  %61 = load double** %2, align 8
  %62 = getelementptr inbounds double* %61, i64 0
  %63 = load double* %62, align 8
  %64 = fmul double %60, %63
  %65 = fsub double %56, %64
  %66 = load [5 x double]** %1, align 8
  %67 = getelementptr inbounds [5 x double]* %66, i64 1
  %68 = getelementptr inbounds [5 x double]* %67, i32 0, i64 1
  %69 = load double* %68, align 8
  %70 = load double** %2, align 8
  %71 = getelementptr inbounds double* %70, i64 1
  %72 = load double* %71, align 8
  %73 = fmul double %69, %72
  %74 = fsub double %65, %73
  %75 = load [5 x double]** %1, align 8
  %76 = getelementptr inbounds [5 x double]* %75, i64 2
  %77 = getelementptr inbounds [5 x double]* %76, i32 0, i64 1
  %78 = load double* %77, align 8
  %79 = load double** %2, align 8
  %80 = getelementptr inbounds double* %79, i64 2
  %81 = load double* %80, align 8
  %82 = fmul double %78, %81
  %83 = fsub double %74, %82
  %84 = load [5 x double]** %1, align 8
  %85 = getelementptr inbounds [5 x double]* %84, i64 3
  %86 = getelementptr inbounds [5 x double]* %85, i32 0, i64 1
  %87 = load double* %86, align 8
  %88 = load double** %2, align 8
  %89 = getelementptr inbounds double* %88, i64 3
  %90 = load double* %89, align 8
  %91 = fmul double %87, %90
  %92 = fsub double %83, %91
  %93 = load [5 x double]** %1, align 8
  %94 = getelementptr inbounds [5 x double]* %93, i64 4
  %95 = getelementptr inbounds [5 x double]* %94, i32 0, i64 1
  %96 = load double* %95, align 8
  %97 = load double** %2, align 8
  %98 = getelementptr inbounds double* %97, i64 4
  %99 = load double* %98, align 8
  %100 = fmul double %96, %99
  %101 = fsub double %92, %100
  %102 = load double** %3, align 8
  %103 = getelementptr inbounds double* %102, i64 1
  store double %101, double* %103, align 8
  %104 = load double** %3, align 8
  %105 = getelementptr inbounds double* %104, i64 2
  %106 = load double* %105, align 8
  %107 = load [5 x double]** %1, align 8
  %108 = getelementptr inbounds [5 x double]* %107, i64 0
  %109 = getelementptr inbounds [5 x double]* %108, i32 0, i64 2
  %110 = load double* %109, align 8
  %111 = load double** %2, align 8
  %112 = getelementptr inbounds double* %111, i64 0
  %113 = load double* %112, align 8
  %114 = fmul double %110, %113
  %115 = fsub double %106, %114
  %116 = load [5 x double]** %1, align 8
  %117 = getelementptr inbounds [5 x double]* %116, i64 1
  %118 = getelementptr inbounds [5 x double]* %117, i32 0, i64 2
  %119 = load double* %118, align 8
  %120 = load double** %2, align 8
  %121 = getelementptr inbounds double* %120, i64 1
  %122 = load double* %121, align 8
  %123 = fmul double %119, %122
  %124 = fsub double %115, %123
  %125 = load [5 x double]** %1, align 8
  %126 = getelementptr inbounds [5 x double]* %125, i64 2
  %127 = getelementptr inbounds [5 x double]* %126, i32 0, i64 2
  %128 = load double* %127, align 8
  %129 = load double** %2, align 8
  %130 = getelementptr inbounds double* %129, i64 2
  %131 = load double* %130, align 8
  %132 = fmul double %128, %131
  %133 = fsub double %124, %132
  %134 = load [5 x double]** %1, align 8
  %135 = getelementptr inbounds [5 x double]* %134, i64 3
  %136 = getelementptr inbounds [5 x double]* %135, i32 0, i64 2
  %137 = load double* %136, align 8
  %138 = load double** %2, align 8
  %139 = getelementptr inbounds double* %138, i64 3
  %140 = load double* %139, align 8
  %141 = fmul double %137, %140
  %142 = fsub double %133, %141
  %143 = load [5 x double]** %1, align 8
  %144 = getelementptr inbounds [5 x double]* %143, i64 4
  %145 = getelementptr inbounds [5 x double]* %144, i32 0, i64 2
  %146 = load double* %145, align 8
  %147 = load double** %2, align 8
  %148 = getelementptr inbounds double* %147, i64 4
  %149 = load double* %148, align 8
  %150 = fmul double %146, %149
  %151 = fsub double %142, %150
  %152 = load double** %3, align 8
  %153 = getelementptr inbounds double* %152, i64 2
  store double %151, double* %153, align 8
  %154 = load double** %3, align 8
  %155 = getelementptr inbounds double* %154, i64 3
  %156 = load double* %155, align 8
  %157 = load [5 x double]** %1, align 8
  %158 = getelementptr inbounds [5 x double]* %157, i64 0
  %159 = getelementptr inbounds [5 x double]* %158, i32 0, i64 3
  %160 = load double* %159, align 8
  %161 = load double** %2, align 8
  %162 = getelementptr inbounds double* %161, i64 0
  %163 = load double* %162, align 8
  %164 = fmul double %160, %163
  %165 = fsub double %156, %164
  %166 = load [5 x double]** %1, align 8
  %167 = getelementptr inbounds [5 x double]* %166, i64 1
  %168 = getelementptr inbounds [5 x double]* %167, i32 0, i64 3
  %169 = load double* %168, align 8
  %170 = load double** %2, align 8
  %171 = getelementptr inbounds double* %170, i64 1
  %172 = load double* %171, align 8
  %173 = fmul double %169, %172
  %174 = fsub double %165, %173
  %175 = load [5 x double]** %1, align 8
  %176 = getelementptr inbounds [5 x double]* %175, i64 2
  %177 = getelementptr inbounds [5 x double]* %176, i32 0, i64 3
  %178 = load double* %177, align 8
  %179 = load double** %2, align 8
  %180 = getelementptr inbounds double* %179, i64 2
  %181 = load double* %180, align 8
  %182 = fmul double %178, %181
  %183 = fsub double %174, %182
  %184 = load [5 x double]** %1, align 8
  %185 = getelementptr inbounds [5 x double]* %184, i64 3
  %186 = getelementptr inbounds [5 x double]* %185, i32 0, i64 3
  %187 = load double* %186, align 8
  %188 = load double** %2, align 8
  %189 = getelementptr inbounds double* %188, i64 3
  %190 = load double* %189, align 8
  %191 = fmul double %187, %190
  %192 = fsub double %183, %191
  %193 = load [5 x double]** %1, align 8
  %194 = getelementptr inbounds [5 x double]* %193, i64 4
  %195 = getelementptr inbounds [5 x double]* %194, i32 0, i64 3
  %196 = load double* %195, align 8
  %197 = load double** %2, align 8
  %198 = getelementptr inbounds double* %197, i64 4
  %199 = load double* %198, align 8
  %200 = fmul double %196, %199
  %201 = fsub double %192, %200
  %202 = load double** %3, align 8
  %203 = getelementptr inbounds double* %202, i64 3
  store double %201, double* %203, align 8
  %204 = load double** %3, align 8
  %205 = getelementptr inbounds double* %204, i64 4
  %206 = load double* %205, align 8
  %207 = load [5 x double]** %1, align 8
  %208 = getelementptr inbounds [5 x double]* %207, i64 0
  %209 = getelementptr inbounds [5 x double]* %208, i32 0, i64 4
  %210 = load double* %209, align 8
  %211 = load double** %2, align 8
  %212 = getelementptr inbounds double* %211, i64 0
  %213 = load double* %212, align 8
  %214 = fmul double %210, %213
  %215 = fsub double %206, %214
  %216 = load [5 x double]** %1, align 8
  %217 = getelementptr inbounds [5 x double]* %216, i64 1
  %218 = getelementptr inbounds [5 x double]* %217, i32 0, i64 4
  %219 = load double* %218, align 8
  %220 = load double** %2, align 8
  %221 = getelementptr inbounds double* %220, i64 1
  %222 = load double* %221, align 8
  %223 = fmul double %219, %222
  %224 = fsub double %215, %223
  %225 = load [5 x double]** %1, align 8
  %226 = getelementptr inbounds [5 x double]* %225, i64 2
  %227 = getelementptr inbounds [5 x double]* %226, i32 0, i64 4
  %228 = load double* %227, align 8
  %229 = load double** %2, align 8
  %230 = getelementptr inbounds double* %229, i64 2
  %231 = load double* %230, align 8
  %232 = fmul double %228, %231
  %233 = fsub double %224, %232
  %234 = load [5 x double]** %1, align 8
  %235 = getelementptr inbounds [5 x double]* %234, i64 3
  %236 = getelementptr inbounds [5 x double]* %235, i32 0, i64 4
  %237 = load double* %236, align 8
  %238 = load double** %2, align 8
  %239 = getelementptr inbounds double* %238, i64 3
  %240 = load double* %239, align 8
  %241 = fmul double %237, %240
  %242 = fsub double %233, %241
  %243 = load [5 x double]** %1, align 8
  %244 = getelementptr inbounds [5 x double]* %243, i64 4
  %245 = getelementptr inbounds [5 x double]* %244, i32 0, i64 4
  %246 = load double* %245, align 8
  %247 = load double** %2, align 8
  %248 = getelementptr inbounds double* %247, i64 4
  %249 = load double* %248, align 8
  %250 = fmul double %246, %249
  %251 = fsub double %242, %250
  %252 = load double** %3, align 8
  %253 = getelementptr inbounds double* %252, i64 4
  store double %251, double* %253, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @matmul_sub([5 x double]* %ablock, [5 x double]* %bblock, [5 x double]* %cblock) #0 {
  %1 = alloca [5 x double]*, align 8
  %2 = alloca [5 x double]*, align 8
  %3 = alloca [5 x double]*, align 8
  store [5 x double]* %ablock, [5 x double]** %1, align 8
  store [5 x double]* %bblock, [5 x double]** %2, align 8
  store [5 x double]* %cblock, [5 x double]** %3, align 8
  %4 = load [5 x double]** %3, align 8
  %5 = getelementptr inbounds [5 x double]* %4, i64 0
  %6 = getelementptr inbounds [5 x double]* %5, i32 0, i64 0
  %7 = load double* %6, align 8
  %8 = load [5 x double]** %1, align 8
  %9 = getelementptr inbounds [5 x double]* %8, i64 0
  %10 = getelementptr inbounds [5 x double]* %9, i32 0, i64 0
  %11 = load double* %10, align 8
  %12 = load [5 x double]** %2, align 8
  %13 = getelementptr inbounds [5 x double]* %12, i64 0
  %14 = getelementptr inbounds [5 x double]* %13, i32 0, i64 0
  %15 = load double* %14, align 8
  %16 = fmul double %11, %15
  %17 = fsub double %7, %16
  %18 = load [5 x double]** %1, align 8
  %19 = getelementptr inbounds [5 x double]* %18, i64 1
  %20 = getelementptr inbounds [5 x double]* %19, i32 0, i64 0
  %21 = load double* %20, align 8
  %22 = load [5 x double]** %2, align 8
  %23 = getelementptr inbounds [5 x double]* %22, i64 0
  %24 = getelementptr inbounds [5 x double]* %23, i32 0, i64 1
  %25 = load double* %24, align 8
  %26 = fmul double %21, %25
  %27 = fsub double %17, %26
  %28 = load [5 x double]** %1, align 8
  %29 = getelementptr inbounds [5 x double]* %28, i64 2
  %30 = getelementptr inbounds [5 x double]* %29, i32 0, i64 0
  %31 = load double* %30, align 8
  %32 = load [5 x double]** %2, align 8
  %33 = getelementptr inbounds [5 x double]* %32, i64 0
  %34 = getelementptr inbounds [5 x double]* %33, i32 0, i64 2
  %35 = load double* %34, align 8
  %36 = fmul double %31, %35
  %37 = fsub double %27, %36
  %38 = load [5 x double]** %1, align 8
  %39 = getelementptr inbounds [5 x double]* %38, i64 3
  %40 = getelementptr inbounds [5 x double]* %39, i32 0, i64 0
  %41 = load double* %40, align 8
  %42 = load [5 x double]** %2, align 8
  %43 = getelementptr inbounds [5 x double]* %42, i64 0
  %44 = getelementptr inbounds [5 x double]* %43, i32 0, i64 3
  %45 = load double* %44, align 8
  %46 = fmul double %41, %45
  %47 = fsub double %37, %46
  %48 = load [5 x double]** %1, align 8
  %49 = getelementptr inbounds [5 x double]* %48, i64 4
  %50 = getelementptr inbounds [5 x double]* %49, i32 0, i64 0
  %51 = load double* %50, align 8
  %52 = load [5 x double]** %2, align 8
  %53 = getelementptr inbounds [5 x double]* %52, i64 0
  %54 = getelementptr inbounds [5 x double]* %53, i32 0, i64 4
  %55 = load double* %54, align 8
  %56 = fmul double %51, %55
  %57 = fsub double %47, %56
  %58 = load [5 x double]** %3, align 8
  %59 = getelementptr inbounds [5 x double]* %58, i64 0
  %60 = getelementptr inbounds [5 x double]* %59, i32 0, i64 0
  store double %57, double* %60, align 8
  %61 = load [5 x double]** %3, align 8
  %62 = getelementptr inbounds [5 x double]* %61, i64 0
  %63 = getelementptr inbounds [5 x double]* %62, i32 0, i64 1
  %64 = load double* %63, align 8
  %65 = load [5 x double]** %1, align 8
  %66 = getelementptr inbounds [5 x double]* %65, i64 0
  %67 = getelementptr inbounds [5 x double]* %66, i32 0, i64 1
  %68 = load double* %67, align 8
  %69 = load [5 x double]** %2, align 8
  %70 = getelementptr inbounds [5 x double]* %69, i64 0
  %71 = getelementptr inbounds [5 x double]* %70, i32 0, i64 0
  %72 = load double* %71, align 8
  %73 = fmul double %68, %72
  %74 = fsub double %64, %73
  %75 = load [5 x double]** %1, align 8
  %76 = getelementptr inbounds [5 x double]* %75, i64 1
  %77 = getelementptr inbounds [5 x double]* %76, i32 0, i64 1
  %78 = load double* %77, align 8
  %79 = load [5 x double]** %2, align 8
  %80 = getelementptr inbounds [5 x double]* %79, i64 0
  %81 = getelementptr inbounds [5 x double]* %80, i32 0, i64 1
  %82 = load double* %81, align 8
  %83 = fmul double %78, %82
  %84 = fsub double %74, %83
  %85 = load [5 x double]** %1, align 8
  %86 = getelementptr inbounds [5 x double]* %85, i64 2
  %87 = getelementptr inbounds [5 x double]* %86, i32 0, i64 1
  %88 = load double* %87, align 8
  %89 = load [5 x double]** %2, align 8
  %90 = getelementptr inbounds [5 x double]* %89, i64 0
  %91 = getelementptr inbounds [5 x double]* %90, i32 0, i64 2
  %92 = load double* %91, align 8
  %93 = fmul double %88, %92
  %94 = fsub double %84, %93
  %95 = load [5 x double]** %1, align 8
  %96 = getelementptr inbounds [5 x double]* %95, i64 3
  %97 = getelementptr inbounds [5 x double]* %96, i32 0, i64 1
  %98 = load double* %97, align 8
  %99 = load [5 x double]** %2, align 8
  %100 = getelementptr inbounds [5 x double]* %99, i64 0
  %101 = getelementptr inbounds [5 x double]* %100, i32 0, i64 3
  %102 = load double* %101, align 8
  %103 = fmul double %98, %102
  %104 = fsub double %94, %103
  %105 = load [5 x double]** %1, align 8
  %106 = getelementptr inbounds [5 x double]* %105, i64 4
  %107 = getelementptr inbounds [5 x double]* %106, i32 0, i64 1
  %108 = load double* %107, align 8
  %109 = load [5 x double]** %2, align 8
  %110 = getelementptr inbounds [5 x double]* %109, i64 0
  %111 = getelementptr inbounds [5 x double]* %110, i32 0, i64 4
  %112 = load double* %111, align 8
  %113 = fmul double %108, %112
  %114 = fsub double %104, %113
  %115 = load [5 x double]** %3, align 8
  %116 = getelementptr inbounds [5 x double]* %115, i64 0
  %117 = getelementptr inbounds [5 x double]* %116, i32 0, i64 1
  store double %114, double* %117, align 8
  %118 = load [5 x double]** %3, align 8
  %119 = getelementptr inbounds [5 x double]* %118, i64 0
  %120 = getelementptr inbounds [5 x double]* %119, i32 0, i64 2
  %121 = load double* %120, align 8
  %122 = load [5 x double]** %1, align 8
  %123 = getelementptr inbounds [5 x double]* %122, i64 0
  %124 = getelementptr inbounds [5 x double]* %123, i32 0, i64 2
  %125 = load double* %124, align 8
  %126 = load [5 x double]** %2, align 8
  %127 = getelementptr inbounds [5 x double]* %126, i64 0
  %128 = getelementptr inbounds [5 x double]* %127, i32 0, i64 0
  %129 = load double* %128, align 8
  %130 = fmul double %125, %129
  %131 = fsub double %121, %130
  %132 = load [5 x double]** %1, align 8
  %133 = getelementptr inbounds [5 x double]* %132, i64 1
  %134 = getelementptr inbounds [5 x double]* %133, i32 0, i64 2
  %135 = load double* %134, align 8
  %136 = load [5 x double]** %2, align 8
  %137 = getelementptr inbounds [5 x double]* %136, i64 0
  %138 = getelementptr inbounds [5 x double]* %137, i32 0, i64 1
  %139 = load double* %138, align 8
  %140 = fmul double %135, %139
  %141 = fsub double %131, %140
  %142 = load [5 x double]** %1, align 8
  %143 = getelementptr inbounds [5 x double]* %142, i64 2
  %144 = getelementptr inbounds [5 x double]* %143, i32 0, i64 2
  %145 = load double* %144, align 8
  %146 = load [5 x double]** %2, align 8
  %147 = getelementptr inbounds [5 x double]* %146, i64 0
  %148 = getelementptr inbounds [5 x double]* %147, i32 0, i64 2
  %149 = load double* %148, align 8
  %150 = fmul double %145, %149
  %151 = fsub double %141, %150
  %152 = load [5 x double]** %1, align 8
  %153 = getelementptr inbounds [5 x double]* %152, i64 3
  %154 = getelementptr inbounds [5 x double]* %153, i32 0, i64 2
  %155 = load double* %154, align 8
  %156 = load [5 x double]** %2, align 8
  %157 = getelementptr inbounds [5 x double]* %156, i64 0
  %158 = getelementptr inbounds [5 x double]* %157, i32 0, i64 3
  %159 = load double* %158, align 8
  %160 = fmul double %155, %159
  %161 = fsub double %151, %160
  %162 = load [5 x double]** %1, align 8
  %163 = getelementptr inbounds [5 x double]* %162, i64 4
  %164 = getelementptr inbounds [5 x double]* %163, i32 0, i64 2
  %165 = load double* %164, align 8
  %166 = load [5 x double]** %2, align 8
  %167 = getelementptr inbounds [5 x double]* %166, i64 0
  %168 = getelementptr inbounds [5 x double]* %167, i32 0, i64 4
  %169 = load double* %168, align 8
  %170 = fmul double %165, %169
  %171 = fsub double %161, %170
  %172 = load [5 x double]** %3, align 8
  %173 = getelementptr inbounds [5 x double]* %172, i64 0
  %174 = getelementptr inbounds [5 x double]* %173, i32 0, i64 2
  store double %171, double* %174, align 8
  %175 = load [5 x double]** %3, align 8
  %176 = getelementptr inbounds [5 x double]* %175, i64 0
  %177 = getelementptr inbounds [5 x double]* %176, i32 0, i64 3
  %178 = load double* %177, align 8
  %179 = load [5 x double]** %1, align 8
  %180 = getelementptr inbounds [5 x double]* %179, i64 0
  %181 = getelementptr inbounds [5 x double]* %180, i32 0, i64 3
  %182 = load double* %181, align 8
  %183 = load [5 x double]** %2, align 8
  %184 = getelementptr inbounds [5 x double]* %183, i64 0
  %185 = getelementptr inbounds [5 x double]* %184, i32 0, i64 0
  %186 = load double* %185, align 8
  %187 = fmul double %182, %186
  %188 = fsub double %178, %187
  %189 = load [5 x double]** %1, align 8
  %190 = getelementptr inbounds [5 x double]* %189, i64 1
  %191 = getelementptr inbounds [5 x double]* %190, i32 0, i64 3
  %192 = load double* %191, align 8
  %193 = load [5 x double]** %2, align 8
  %194 = getelementptr inbounds [5 x double]* %193, i64 0
  %195 = getelementptr inbounds [5 x double]* %194, i32 0, i64 1
  %196 = load double* %195, align 8
  %197 = fmul double %192, %196
  %198 = fsub double %188, %197
  %199 = load [5 x double]** %1, align 8
  %200 = getelementptr inbounds [5 x double]* %199, i64 2
  %201 = getelementptr inbounds [5 x double]* %200, i32 0, i64 3
  %202 = load double* %201, align 8
  %203 = load [5 x double]** %2, align 8
  %204 = getelementptr inbounds [5 x double]* %203, i64 0
  %205 = getelementptr inbounds [5 x double]* %204, i32 0, i64 2
  %206 = load double* %205, align 8
  %207 = fmul double %202, %206
  %208 = fsub double %198, %207
  %209 = load [5 x double]** %1, align 8
  %210 = getelementptr inbounds [5 x double]* %209, i64 3
  %211 = getelementptr inbounds [5 x double]* %210, i32 0, i64 3
  %212 = load double* %211, align 8
  %213 = load [5 x double]** %2, align 8
  %214 = getelementptr inbounds [5 x double]* %213, i64 0
  %215 = getelementptr inbounds [5 x double]* %214, i32 0, i64 3
  %216 = load double* %215, align 8
  %217 = fmul double %212, %216
  %218 = fsub double %208, %217
  %219 = load [5 x double]** %1, align 8
  %220 = getelementptr inbounds [5 x double]* %219, i64 4
  %221 = getelementptr inbounds [5 x double]* %220, i32 0, i64 3
  %222 = load double* %221, align 8
  %223 = load [5 x double]** %2, align 8
  %224 = getelementptr inbounds [5 x double]* %223, i64 0
  %225 = getelementptr inbounds [5 x double]* %224, i32 0, i64 4
  %226 = load double* %225, align 8
  %227 = fmul double %222, %226
  %228 = fsub double %218, %227
  %229 = load [5 x double]** %3, align 8
  %230 = getelementptr inbounds [5 x double]* %229, i64 0
  %231 = getelementptr inbounds [5 x double]* %230, i32 0, i64 3
  store double %228, double* %231, align 8
  %232 = load [5 x double]** %3, align 8
  %233 = getelementptr inbounds [5 x double]* %232, i64 0
  %234 = getelementptr inbounds [5 x double]* %233, i32 0, i64 4
  %235 = load double* %234, align 8
  %236 = load [5 x double]** %1, align 8
  %237 = getelementptr inbounds [5 x double]* %236, i64 0
  %238 = getelementptr inbounds [5 x double]* %237, i32 0, i64 4
  %239 = load double* %238, align 8
  %240 = load [5 x double]** %2, align 8
  %241 = getelementptr inbounds [5 x double]* %240, i64 0
  %242 = getelementptr inbounds [5 x double]* %241, i32 0, i64 0
  %243 = load double* %242, align 8
  %244 = fmul double %239, %243
  %245 = fsub double %235, %244
  %246 = load [5 x double]** %1, align 8
  %247 = getelementptr inbounds [5 x double]* %246, i64 1
  %248 = getelementptr inbounds [5 x double]* %247, i32 0, i64 4
  %249 = load double* %248, align 8
  %250 = load [5 x double]** %2, align 8
  %251 = getelementptr inbounds [5 x double]* %250, i64 0
  %252 = getelementptr inbounds [5 x double]* %251, i32 0, i64 1
  %253 = load double* %252, align 8
  %254 = fmul double %249, %253
  %255 = fsub double %245, %254
  %256 = load [5 x double]** %1, align 8
  %257 = getelementptr inbounds [5 x double]* %256, i64 2
  %258 = getelementptr inbounds [5 x double]* %257, i32 0, i64 4
  %259 = load double* %258, align 8
  %260 = load [5 x double]** %2, align 8
  %261 = getelementptr inbounds [5 x double]* %260, i64 0
  %262 = getelementptr inbounds [5 x double]* %261, i32 0, i64 2
  %263 = load double* %262, align 8
  %264 = fmul double %259, %263
  %265 = fsub double %255, %264
  %266 = load [5 x double]** %1, align 8
  %267 = getelementptr inbounds [5 x double]* %266, i64 3
  %268 = getelementptr inbounds [5 x double]* %267, i32 0, i64 4
  %269 = load double* %268, align 8
  %270 = load [5 x double]** %2, align 8
  %271 = getelementptr inbounds [5 x double]* %270, i64 0
  %272 = getelementptr inbounds [5 x double]* %271, i32 0, i64 3
  %273 = load double* %272, align 8
  %274 = fmul double %269, %273
  %275 = fsub double %265, %274
  %276 = load [5 x double]** %1, align 8
  %277 = getelementptr inbounds [5 x double]* %276, i64 4
  %278 = getelementptr inbounds [5 x double]* %277, i32 0, i64 4
  %279 = load double* %278, align 8
  %280 = load [5 x double]** %2, align 8
  %281 = getelementptr inbounds [5 x double]* %280, i64 0
  %282 = getelementptr inbounds [5 x double]* %281, i32 0, i64 4
  %283 = load double* %282, align 8
  %284 = fmul double %279, %283
  %285 = fsub double %275, %284
  %286 = load [5 x double]** %3, align 8
  %287 = getelementptr inbounds [5 x double]* %286, i64 0
  %288 = getelementptr inbounds [5 x double]* %287, i32 0, i64 4
  store double %285, double* %288, align 8
  %289 = load [5 x double]** %3, align 8
  %290 = getelementptr inbounds [5 x double]* %289, i64 1
  %291 = getelementptr inbounds [5 x double]* %290, i32 0, i64 0
  %292 = load double* %291, align 8
  %293 = load [5 x double]** %1, align 8
  %294 = getelementptr inbounds [5 x double]* %293, i64 0
  %295 = getelementptr inbounds [5 x double]* %294, i32 0, i64 0
  %296 = load double* %295, align 8
  %297 = load [5 x double]** %2, align 8
  %298 = getelementptr inbounds [5 x double]* %297, i64 1
  %299 = getelementptr inbounds [5 x double]* %298, i32 0, i64 0
  %300 = load double* %299, align 8
  %301 = fmul double %296, %300
  %302 = fsub double %292, %301
  %303 = load [5 x double]** %1, align 8
  %304 = getelementptr inbounds [5 x double]* %303, i64 1
  %305 = getelementptr inbounds [5 x double]* %304, i32 0, i64 0
  %306 = load double* %305, align 8
  %307 = load [5 x double]** %2, align 8
  %308 = getelementptr inbounds [5 x double]* %307, i64 1
  %309 = getelementptr inbounds [5 x double]* %308, i32 0, i64 1
  %310 = load double* %309, align 8
  %311 = fmul double %306, %310
  %312 = fsub double %302, %311
  %313 = load [5 x double]** %1, align 8
  %314 = getelementptr inbounds [5 x double]* %313, i64 2
  %315 = getelementptr inbounds [5 x double]* %314, i32 0, i64 0
  %316 = load double* %315, align 8
  %317 = load [5 x double]** %2, align 8
  %318 = getelementptr inbounds [5 x double]* %317, i64 1
  %319 = getelementptr inbounds [5 x double]* %318, i32 0, i64 2
  %320 = load double* %319, align 8
  %321 = fmul double %316, %320
  %322 = fsub double %312, %321
  %323 = load [5 x double]** %1, align 8
  %324 = getelementptr inbounds [5 x double]* %323, i64 3
  %325 = getelementptr inbounds [5 x double]* %324, i32 0, i64 0
  %326 = load double* %325, align 8
  %327 = load [5 x double]** %2, align 8
  %328 = getelementptr inbounds [5 x double]* %327, i64 1
  %329 = getelementptr inbounds [5 x double]* %328, i32 0, i64 3
  %330 = load double* %329, align 8
  %331 = fmul double %326, %330
  %332 = fsub double %322, %331
  %333 = load [5 x double]** %1, align 8
  %334 = getelementptr inbounds [5 x double]* %333, i64 4
  %335 = getelementptr inbounds [5 x double]* %334, i32 0, i64 0
  %336 = load double* %335, align 8
  %337 = load [5 x double]** %2, align 8
  %338 = getelementptr inbounds [5 x double]* %337, i64 1
  %339 = getelementptr inbounds [5 x double]* %338, i32 0, i64 4
  %340 = load double* %339, align 8
  %341 = fmul double %336, %340
  %342 = fsub double %332, %341
  %343 = load [5 x double]** %3, align 8
  %344 = getelementptr inbounds [5 x double]* %343, i64 1
  %345 = getelementptr inbounds [5 x double]* %344, i32 0, i64 0
  store double %342, double* %345, align 8
  %346 = load [5 x double]** %3, align 8
  %347 = getelementptr inbounds [5 x double]* %346, i64 1
  %348 = getelementptr inbounds [5 x double]* %347, i32 0, i64 1
  %349 = load double* %348, align 8
  %350 = load [5 x double]** %1, align 8
  %351 = getelementptr inbounds [5 x double]* %350, i64 0
  %352 = getelementptr inbounds [5 x double]* %351, i32 0, i64 1
  %353 = load double* %352, align 8
  %354 = load [5 x double]** %2, align 8
  %355 = getelementptr inbounds [5 x double]* %354, i64 1
  %356 = getelementptr inbounds [5 x double]* %355, i32 0, i64 0
  %357 = load double* %356, align 8
  %358 = fmul double %353, %357
  %359 = fsub double %349, %358
  %360 = load [5 x double]** %1, align 8
  %361 = getelementptr inbounds [5 x double]* %360, i64 1
  %362 = getelementptr inbounds [5 x double]* %361, i32 0, i64 1
  %363 = load double* %362, align 8
  %364 = load [5 x double]** %2, align 8
  %365 = getelementptr inbounds [5 x double]* %364, i64 1
  %366 = getelementptr inbounds [5 x double]* %365, i32 0, i64 1
  %367 = load double* %366, align 8
  %368 = fmul double %363, %367
  %369 = fsub double %359, %368
  %370 = load [5 x double]** %1, align 8
  %371 = getelementptr inbounds [5 x double]* %370, i64 2
  %372 = getelementptr inbounds [5 x double]* %371, i32 0, i64 1
  %373 = load double* %372, align 8
  %374 = load [5 x double]** %2, align 8
  %375 = getelementptr inbounds [5 x double]* %374, i64 1
  %376 = getelementptr inbounds [5 x double]* %375, i32 0, i64 2
  %377 = load double* %376, align 8
  %378 = fmul double %373, %377
  %379 = fsub double %369, %378
  %380 = load [5 x double]** %1, align 8
  %381 = getelementptr inbounds [5 x double]* %380, i64 3
  %382 = getelementptr inbounds [5 x double]* %381, i32 0, i64 1
  %383 = load double* %382, align 8
  %384 = load [5 x double]** %2, align 8
  %385 = getelementptr inbounds [5 x double]* %384, i64 1
  %386 = getelementptr inbounds [5 x double]* %385, i32 0, i64 3
  %387 = load double* %386, align 8
  %388 = fmul double %383, %387
  %389 = fsub double %379, %388
  %390 = load [5 x double]** %1, align 8
  %391 = getelementptr inbounds [5 x double]* %390, i64 4
  %392 = getelementptr inbounds [5 x double]* %391, i32 0, i64 1
  %393 = load double* %392, align 8
  %394 = load [5 x double]** %2, align 8
  %395 = getelementptr inbounds [5 x double]* %394, i64 1
  %396 = getelementptr inbounds [5 x double]* %395, i32 0, i64 4
  %397 = load double* %396, align 8
  %398 = fmul double %393, %397
  %399 = fsub double %389, %398
  %400 = load [5 x double]** %3, align 8
  %401 = getelementptr inbounds [5 x double]* %400, i64 1
  %402 = getelementptr inbounds [5 x double]* %401, i32 0, i64 1
  store double %399, double* %402, align 8
  %403 = load [5 x double]** %3, align 8
  %404 = getelementptr inbounds [5 x double]* %403, i64 1
  %405 = getelementptr inbounds [5 x double]* %404, i32 0, i64 2
  %406 = load double* %405, align 8
  %407 = load [5 x double]** %1, align 8
  %408 = getelementptr inbounds [5 x double]* %407, i64 0
  %409 = getelementptr inbounds [5 x double]* %408, i32 0, i64 2
  %410 = load double* %409, align 8
  %411 = load [5 x double]** %2, align 8
  %412 = getelementptr inbounds [5 x double]* %411, i64 1
  %413 = getelementptr inbounds [5 x double]* %412, i32 0, i64 0
  %414 = load double* %413, align 8
  %415 = fmul double %410, %414
  %416 = fsub double %406, %415
  %417 = load [5 x double]** %1, align 8
  %418 = getelementptr inbounds [5 x double]* %417, i64 1
  %419 = getelementptr inbounds [5 x double]* %418, i32 0, i64 2
  %420 = load double* %419, align 8
  %421 = load [5 x double]** %2, align 8
  %422 = getelementptr inbounds [5 x double]* %421, i64 1
  %423 = getelementptr inbounds [5 x double]* %422, i32 0, i64 1
  %424 = load double* %423, align 8
  %425 = fmul double %420, %424
  %426 = fsub double %416, %425
  %427 = load [5 x double]** %1, align 8
  %428 = getelementptr inbounds [5 x double]* %427, i64 2
  %429 = getelementptr inbounds [5 x double]* %428, i32 0, i64 2
  %430 = load double* %429, align 8
  %431 = load [5 x double]** %2, align 8
  %432 = getelementptr inbounds [5 x double]* %431, i64 1
  %433 = getelementptr inbounds [5 x double]* %432, i32 0, i64 2
  %434 = load double* %433, align 8
  %435 = fmul double %430, %434
  %436 = fsub double %426, %435
  %437 = load [5 x double]** %1, align 8
  %438 = getelementptr inbounds [5 x double]* %437, i64 3
  %439 = getelementptr inbounds [5 x double]* %438, i32 0, i64 2
  %440 = load double* %439, align 8
  %441 = load [5 x double]** %2, align 8
  %442 = getelementptr inbounds [5 x double]* %441, i64 1
  %443 = getelementptr inbounds [5 x double]* %442, i32 0, i64 3
  %444 = load double* %443, align 8
  %445 = fmul double %440, %444
  %446 = fsub double %436, %445
  %447 = load [5 x double]** %1, align 8
  %448 = getelementptr inbounds [5 x double]* %447, i64 4
  %449 = getelementptr inbounds [5 x double]* %448, i32 0, i64 2
  %450 = load double* %449, align 8
  %451 = load [5 x double]** %2, align 8
  %452 = getelementptr inbounds [5 x double]* %451, i64 1
  %453 = getelementptr inbounds [5 x double]* %452, i32 0, i64 4
  %454 = load double* %453, align 8
  %455 = fmul double %450, %454
  %456 = fsub double %446, %455
  %457 = load [5 x double]** %3, align 8
  %458 = getelementptr inbounds [5 x double]* %457, i64 1
  %459 = getelementptr inbounds [5 x double]* %458, i32 0, i64 2
  store double %456, double* %459, align 8
  %460 = load [5 x double]** %3, align 8
  %461 = getelementptr inbounds [5 x double]* %460, i64 1
  %462 = getelementptr inbounds [5 x double]* %461, i32 0, i64 3
  %463 = load double* %462, align 8
  %464 = load [5 x double]** %1, align 8
  %465 = getelementptr inbounds [5 x double]* %464, i64 0
  %466 = getelementptr inbounds [5 x double]* %465, i32 0, i64 3
  %467 = load double* %466, align 8
  %468 = load [5 x double]** %2, align 8
  %469 = getelementptr inbounds [5 x double]* %468, i64 1
  %470 = getelementptr inbounds [5 x double]* %469, i32 0, i64 0
  %471 = load double* %470, align 8
  %472 = fmul double %467, %471
  %473 = fsub double %463, %472
  %474 = load [5 x double]** %1, align 8
  %475 = getelementptr inbounds [5 x double]* %474, i64 1
  %476 = getelementptr inbounds [5 x double]* %475, i32 0, i64 3
  %477 = load double* %476, align 8
  %478 = load [5 x double]** %2, align 8
  %479 = getelementptr inbounds [5 x double]* %478, i64 1
  %480 = getelementptr inbounds [5 x double]* %479, i32 0, i64 1
  %481 = load double* %480, align 8
  %482 = fmul double %477, %481
  %483 = fsub double %473, %482
  %484 = load [5 x double]** %1, align 8
  %485 = getelementptr inbounds [5 x double]* %484, i64 2
  %486 = getelementptr inbounds [5 x double]* %485, i32 0, i64 3
  %487 = load double* %486, align 8
  %488 = load [5 x double]** %2, align 8
  %489 = getelementptr inbounds [5 x double]* %488, i64 1
  %490 = getelementptr inbounds [5 x double]* %489, i32 0, i64 2
  %491 = load double* %490, align 8
  %492 = fmul double %487, %491
  %493 = fsub double %483, %492
  %494 = load [5 x double]** %1, align 8
  %495 = getelementptr inbounds [5 x double]* %494, i64 3
  %496 = getelementptr inbounds [5 x double]* %495, i32 0, i64 3
  %497 = load double* %496, align 8
  %498 = load [5 x double]** %2, align 8
  %499 = getelementptr inbounds [5 x double]* %498, i64 1
  %500 = getelementptr inbounds [5 x double]* %499, i32 0, i64 3
  %501 = load double* %500, align 8
  %502 = fmul double %497, %501
  %503 = fsub double %493, %502
  %504 = load [5 x double]** %1, align 8
  %505 = getelementptr inbounds [5 x double]* %504, i64 4
  %506 = getelementptr inbounds [5 x double]* %505, i32 0, i64 3
  %507 = load double* %506, align 8
  %508 = load [5 x double]** %2, align 8
  %509 = getelementptr inbounds [5 x double]* %508, i64 1
  %510 = getelementptr inbounds [5 x double]* %509, i32 0, i64 4
  %511 = load double* %510, align 8
  %512 = fmul double %507, %511
  %513 = fsub double %503, %512
  %514 = load [5 x double]** %3, align 8
  %515 = getelementptr inbounds [5 x double]* %514, i64 1
  %516 = getelementptr inbounds [5 x double]* %515, i32 0, i64 3
  store double %513, double* %516, align 8
  %517 = load [5 x double]** %3, align 8
  %518 = getelementptr inbounds [5 x double]* %517, i64 1
  %519 = getelementptr inbounds [5 x double]* %518, i32 0, i64 4
  %520 = load double* %519, align 8
  %521 = load [5 x double]** %1, align 8
  %522 = getelementptr inbounds [5 x double]* %521, i64 0
  %523 = getelementptr inbounds [5 x double]* %522, i32 0, i64 4
  %524 = load double* %523, align 8
  %525 = load [5 x double]** %2, align 8
  %526 = getelementptr inbounds [5 x double]* %525, i64 1
  %527 = getelementptr inbounds [5 x double]* %526, i32 0, i64 0
  %528 = load double* %527, align 8
  %529 = fmul double %524, %528
  %530 = fsub double %520, %529
  %531 = load [5 x double]** %1, align 8
  %532 = getelementptr inbounds [5 x double]* %531, i64 1
  %533 = getelementptr inbounds [5 x double]* %532, i32 0, i64 4
  %534 = load double* %533, align 8
  %535 = load [5 x double]** %2, align 8
  %536 = getelementptr inbounds [5 x double]* %535, i64 1
  %537 = getelementptr inbounds [5 x double]* %536, i32 0, i64 1
  %538 = load double* %537, align 8
  %539 = fmul double %534, %538
  %540 = fsub double %530, %539
  %541 = load [5 x double]** %1, align 8
  %542 = getelementptr inbounds [5 x double]* %541, i64 2
  %543 = getelementptr inbounds [5 x double]* %542, i32 0, i64 4
  %544 = load double* %543, align 8
  %545 = load [5 x double]** %2, align 8
  %546 = getelementptr inbounds [5 x double]* %545, i64 1
  %547 = getelementptr inbounds [5 x double]* %546, i32 0, i64 2
  %548 = load double* %547, align 8
  %549 = fmul double %544, %548
  %550 = fsub double %540, %549
  %551 = load [5 x double]** %1, align 8
  %552 = getelementptr inbounds [5 x double]* %551, i64 3
  %553 = getelementptr inbounds [5 x double]* %552, i32 0, i64 4
  %554 = load double* %553, align 8
  %555 = load [5 x double]** %2, align 8
  %556 = getelementptr inbounds [5 x double]* %555, i64 1
  %557 = getelementptr inbounds [5 x double]* %556, i32 0, i64 3
  %558 = load double* %557, align 8
  %559 = fmul double %554, %558
  %560 = fsub double %550, %559
  %561 = load [5 x double]** %1, align 8
  %562 = getelementptr inbounds [5 x double]* %561, i64 4
  %563 = getelementptr inbounds [5 x double]* %562, i32 0, i64 4
  %564 = load double* %563, align 8
  %565 = load [5 x double]** %2, align 8
  %566 = getelementptr inbounds [5 x double]* %565, i64 1
  %567 = getelementptr inbounds [5 x double]* %566, i32 0, i64 4
  %568 = load double* %567, align 8
  %569 = fmul double %564, %568
  %570 = fsub double %560, %569
  %571 = load [5 x double]** %3, align 8
  %572 = getelementptr inbounds [5 x double]* %571, i64 1
  %573 = getelementptr inbounds [5 x double]* %572, i32 0, i64 4
  store double %570, double* %573, align 8
  %574 = load [5 x double]** %3, align 8
  %575 = getelementptr inbounds [5 x double]* %574, i64 2
  %576 = getelementptr inbounds [5 x double]* %575, i32 0, i64 0
  %577 = load double* %576, align 8
  %578 = load [5 x double]** %1, align 8
  %579 = getelementptr inbounds [5 x double]* %578, i64 0
  %580 = getelementptr inbounds [5 x double]* %579, i32 0, i64 0
  %581 = load double* %580, align 8
  %582 = load [5 x double]** %2, align 8
  %583 = getelementptr inbounds [5 x double]* %582, i64 2
  %584 = getelementptr inbounds [5 x double]* %583, i32 0, i64 0
  %585 = load double* %584, align 8
  %586 = fmul double %581, %585
  %587 = fsub double %577, %586
  %588 = load [5 x double]** %1, align 8
  %589 = getelementptr inbounds [5 x double]* %588, i64 1
  %590 = getelementptr inbounds [5 x double]* %589, i32 0, i64 0
  %591 = load double* %590, align 8
  %592 = load [5 x double]** %2, align 8
  %593 = getelementptr inbounds [5 x double]* %592, i64 2
  %594 = getelementptr inbounds [5 x double]* %593, i32 0, i64 1
  %595 = load double* %594, align 8
  %596 = fmul double %591, %595
  %597 = fsub double %587, %596
  %598 = load [5 x double]** %1, align 8
  %599 = getelementptr inbounds [5 x double]* %598, i64 2
  %600 = getelementptr inbounds [5 x double]* %599, i32 0, i64 0
  %601 = load double* %600, align 8
  %602 = load [5 x double]** %2, align 8
  %603 = getelementptr inbounds [5 x double]* %602, i64 2
  %604 = getelementptr inbounds [5 x double]* %603, i32 0, i64 2
  %605 = load double* %604, align 8
  %606 = fmul double %601, %605
  %607 = fsub double %597, %606
  %608 = load [5 x double]** %1, align 8
  %609 = getelementptr inbounds [5 x double]* %608, i64 3
  %610 = getelementptr inbounds [5 x double]* %609, i32 0, i64 0
  %611 = load double* %610, align 8
  %612 = load [5 x double]** %2, align 8
  %613 = getelementptr inbounds [5 x double]* %612, i64 2
  %614 = getelementptr inbounds [5 x double]* %613, i32 0, i64 3
  %615 = load double* %614, align 8
  %616 = fmul double %611, %615
  %617 = fsub double %607, %616
  %618 = load [5 x double]** %1, align 8
  %619 = getelementptr inbounds [5 x double]* %618, i64 4
  %620 = getelementptr inbounds [5 x double]* %619, i32 0, i64 0
  %621 = load double* %620, align 8
  %622 = load [5 x double]** %2, align 8
  %623 = getelementptr inbounds [5 x double]* %622, i64 2
  %624 = getelementptr inbounds [5 x double]* %623, i32 0, i64 4
  %625 = load double* %624, align 8
  %626 = fmul double %621, %625
  %627 = fsub double %617, %626
  %628 = load [5 x double]** %3, align 8
  %629 = getelementptr inbounds [5 x double]* %628, i64 2
  %630 = getelementptr inbounds [5 x double]* %629, i32 0, i64 0
  store double %627, double* %630, align 8
  %631 = load [5 x double]** %3, align 8
  %632 = getelementptr inbounds [5 x double]* %631, i64 2
  %633 = getelementptr inbounds [5 x double]* %632, i32 0, i64 1
  %634 = load double* %633, align 8
  %635 = load [5 x double]** %1, align 8
  %636 = getelementptr inbounds [5 x double]* %635, i64 0
  %637 = getelementptr inbounds [5 x double]* %636, i32 0, i64 1
  %638 = load double* %637, align 8
  %639 = load [5 x double]** %2, align 8
  %640 = getelementptr inbounds [5 x double]* %639, i64 2
  %641 = getelementptr inbounds [5 x double]* %640, i32 0, i64 0
  %642 = load double* %641, align 8
  %643 = fmul double %638, %642
  %644 = fsub double %634, %643
  %645 = load [5 x double]** %1, align 8
  %646 = getelementptr inbounds [5 x double]* %645, i64 1
  %647 = getelementptr inbounds [5 x double]* %646, i32 0, i64 1
  %648 = load double* %647, align 8
  %649 = load [5 x double]** %2, align 8
  %650 = getelementptr inbounds [5 x double]* %649, i64 2
  %651 = getelementptr inbounds [5 x double]* %650, i32 0, i64 1
  %652 = load double* %651, align 8
  %653 = fmul double %648, %652
  %654 = fsub double %644, %653
  %655 = load [5 x double]** %1, align 8
  %656 = getelementptr inbounds [5 x double]* %655, i64 2
  %657 = getelementptr inbounds [5 x double]* %656, i32 0, i64 1
  %658 = load double* %657, align 8
  %659 = load [5 x double]** %2, align 8
  %660 = getelementptr inbounds [5 x double]* %659, i64 2
  %661 = getelementptr inbounds [5 x double]* %660, i32 0, i64 2
  %662 = load double* %661, align 8
  %663 = fmul double %658, %662
  %664 = fsub double %654, %663
  %665 = load [5 x double]** %1, align 8
  %666 = getelementptr inbounds [5 x double]* %665, i64 3
  %667 = getelementptr inbounds [5 x double]* %666, i32 0, i64 1
  %668 = load double* %667, align 8
  %669 = load [5 x double]** %2, align 8
  %670 = getelementptr inbounds [5 x double]* %669, i64 2
  %671 = getelementptr inbounds [5 x double]* %670, i32 0, i64 3
  %672 = load double* %671, align 8
  %673 = fmul double %668, %672
  %674 = fsub double %664, %673
  %675 = load [5 x double]** %1, align 8
  %676 = getelementptr inbounds [5 x double]* %675, i64 4
  %677 = getelementptr inbounds [5 x double]* %676, i32 0, i64 1
  %678 = load double* %677, align 8
  %679 = load [5 x double]** %2, align 8
  %680 = getelementptr inbounds [5 x double]* %679, i64 2
  %681 = getelementptr inbounds [5 x double]* %680, i32 0, i64 4
  %682 = load double* %681, align 8
  %683 = fmul double %678, %682
  %684 = fsub double %674, %683
  %685 = load [5 x double]** %3, align 8
  %686 = getelementptr inbounds [5 x double]* %685, i64 2
  %687 = getelementptr inbounds [5 x double]* %686, i32 0, i64 1
  store double %684, double* %687, align 8
  %688 = load [5 x double]** %3, align 8
  %689 = getelementptr inbounds [5 x double]* %688, i64 2
  %690 = getelementptr inbounds [5 x double]* %689, i32 0, i64 2
  %691 = load double* %690, align 8
  %692 = load [5 x double]** %1, align 8
  %693 = getelementptr inbounds [5 x double]* %692, i64 0
  %694 = getelementptr inbounds [5 x double]* %693, i32 0, i64 2
  %695 = load double* %694, align 8
  %696 = load [5 x double]** %2, align 8
  %697 = getelementptr inbounds [5 x double]* %696, i64 2
  %698 = getelementptr inbounds [5 x double]* %697, i32 0, i64 0
  %699 = load double* %698, align 8
  %700 = fmul double %695, %699
  %701 = fsub double %691, %700
  %702 = load [5 x double]** %1, align 8
  %703 = getelementptr inbounds [5 x double]* %702, i64 1
  %704 = getelementptr inbounds [5 x double]* %703, i32 0, i64 2
  %705 = load double* %704, align 8
  %706 = load [5 x double]** %2, align 8
  %707 = getelementptr inbounds [5 x double]* %706, i64 2
  %708 = getelementptr inbounds [5 x double]* %707, i32 0, i64 1
  %709 = load double* %708, align 8
  %710 = fmul double %705, %709
  %711 = fsub double %701, %710
  %712 = load [5 x double]** %1, align 8
  %713 = getelementptr inbounds [5 x double]* %712, i64 2
  %714 = getelementptr inbounds [5 x double]* %713, i32 0, i64 2
  %715 = load double* %714, align 8
  %716 = load [5 x double]** %2, align 8
  %717 = getelementptr inbounds [5 x double]* %716, i64 2
  %718 = getelementptr inbounds [5 x double]* %717, i32 0, i64 2
  %719 = load double* %718, align 8
  %720 = fmul double %715, %719
  %721 = fsub double %711, %720
  %722 = load [5 x double]** %1, align 8
  %723 = getelementptr inbounds [5 x double]* %722, i64 3
  %724 = getelementptr inbounds [5 x double]* %723, i32 0, i64 2
  %725 = load double* %724, align 8
  %726 = load [5 x double]** %2, align 8
  %727 = getelementptr inbounds [5 x double]* %726, i64 2
  %728 = getelementptr inbounds [5 x double]* %727, i32 0, i64 3
  %729 = load double* %728, align 8
  %730 = fmul double %725, %729
  %731 = fsub double %721, %730
  %732 = load [5 x double]** %1, align 8
  %733 = getelementptr inbounds [5 x double]* %732, i64 4
  %734 = getelementptr inbounds [5 x double]* %733, i32 0, i64 2
  %735 = load double* %734, align 8
  %736 = load [5 x double]** %2, align 8
  %737 = getelementptr inbounds [5 x double]* %736, i64 2
  %738 = getelementptr inbounds [5 x double]* %737, i32 0, i64 4
  %739 = load double* %738, align 8
  %740 = fmul double %735, %739
  %741 = fsub double %731, %740
  %742 = load [5 x double]** %3, align 8
  %743 = getelementptr inbounds [5 x double]* %742, i64 2
  %744 = getelementptr inbounds [5 x double]* %743, i32 0, i64 2
  store double %741, double* %744, align 8
  %745 = load [5 x double]** %3, align 8
  %746 = getelementptr inbounds [5 x double]* %745, i64 2
  %747 = getelementptr inbounds [5 x double]* %746, i32 0, i64 3
  %748 = load double* %747, align 8
  %749 = load [5 x double]** %1, align 8
  %750 = getelementptr inbounds [5 x double]* %749, i64 0
  %751 = getelementptr inbounds [5 x double]* %750, i32 0, i64 3
  %752 = load double* %751, align 8
  %753 = load [5 x double]** %2, align 8
  %754 = getelementptr inbounds [5 x double]* %753, i64 2
  %755 = getelementptr inbounds [5 x double]* %754, i32 0, i64 0
  %756 = load double* %755, align 8
  %757 = fmul double %752, %756
  %758 = fsub double %748, %757
  %759 = load [5 x double]** %1, align 8
  %760 = getelementptr inbounds [5 x double]* %759, i64 1
  %761 = getelementptr inbounds [5 x double]* %760, i32 0, i64 3
  %762 = load double* %761, align 8
  %763 = load [5 x double]** %2, align 8
  %764 = getelementptr inbounds [5 x double]* %763, i64 2
  %765 = getelementptr inbounds [5 x double]* %764, i32 0, i64 1
  %766 = load double* %765, align 8
  %767 = fmul double %762, %766
  %768 = fsub double %758, %767
  %769 = load [5 x double]** %1, align 8
  %770 = getelementptr inbounds [5 x double]* %769, i64 2
  %771 = getelementptr inbounds [5 x double]* %770, i32 0, i64 3
  %772 = load double* %771, align 8
  %773 = load [5 x double]** %2, align 8
  %774 = getelementptr inbounds [5 x double]* %773, i64 2
  %775 = getelementptr inbounds [5 x double]* %774, i32 0, i64 2
  %776 = load double* %775, align 8
  %777 = fmul double %772, %776
  %778 = fsub double %768, %777
  %779 = load [5 x double]** %1, align 8
  %780 = getelementptr inbounds [5 x double]* %779, i64 3
  %781 = getelementptr inbounds [5 x double]* %780, i32 0, i64 3
  %782 = load double* %781, align 8
  %783 = load [5 x double]** %2, align 8
  %784 = getelementptr inbounds [5 x double]* %783, i64 2
  %785 = getelementptr inbounds [5 x double]* %784, i32 0, i64 3
  %786 = load double* %785, align 8
  %787 = fmul double %782, %786
  %788 = fsub double %778, %787
  %789 = load [5 x double]** %1, align 8
  %790 = getelementptr inbounds [5 x double]* %789, i64 4
  %791 = getelementptr inbounds [5 x double]* %790, i32 0, i64 3
  %792 = load double* %791, align 8
  %793 = load [5 x double]** %2, align 8
  %794 = getelementptr inbounds [5 x double]* %793, i64 2
  %795 = getelementptr inbounds [5 x double]* %794, i32 0, i64 4
  %796 = load double* %795, align 8
  %797 = fmul double %792, %796
  %798 = fsub double %788, %797
  %799 = load [5 x double]** %3, align 8
  %800 = getelementptr inbounds [5 x double]* %799, i64 2
  %801 = getelementptr inbounds [5 x double]* %800, i32 0, i64 3
  store double %798, double* %801, align 8
  %802 = load [5 x double]** %3, align 8
  %803 = getelementptr inbounds [5 x double]* %802, i64 2
  %804 = getelementptr inbounds [5 x double]* %803, i32 0, i64 4
  %805 = load double* %804, align 8
  %806 = load [5 x double]** %1, align 8
  %807 = getelementptr inbounds [5 x double]* %806, i64 0
  %808 = getelementptr inbounds [5 x double]* %807, i32 0, i64 4
  %809 = load double* %808, align 8
  %810 = load [5 x double]** %2, align 8
  %811 = getelementptr inbounds [5 x double]* %810, i64 2
  %812 = getelementptr inbounds [5 x double]* %811, i32 0, i64 0
  %813 = load double* %812, align 8
  %814 = fmul double %809, %813
  %815 = fsub double %805, %814
  %816 = load [5 x double]** %1, align 8
  %817 = getelementptr inbounds [5 x double]* %816, i64 1
  %818 = getelementptr inbounds [5 x double]* %817, i32 0, i64 4
  %819 = load double* %818, align 8
  %820 = load [5 x double]** %2, align 8
  %821 = getelementptr inbounds [5 x double]* %820, i64 2
  %822 = getelementptr inbounds [5 x double]* %821, i32 0, i64 1
  %823 = load double* %822, align 8
  %824 = fmul double %819, %823
  %825 = fsub double %815, %824
  %826 = load [5 x double]** %1, align 8
  %827 = getelementptr inbounds [5 x double]* %826, i64 2
  %828 = getelementptr inbounds [5 x double]* %827, i32 0, i64 4
  %829 = load double* %828, align 8
  %830 = load [5 x double]** %2, align 8
  %831 = getelementptr inbounds [5 x double]* %830, i64 2
  %832 = getelementptr inbounds [5 x double]* %831, i32 0, i64 2
  %833 = load double* %832, align 8
  %834 = fmul double %829, %833
  %835 = fsub double %825, %834
  %836 = load [5 x double]** %1, align 8
  %837 = getelementptr inbounds [5 x double]* %836, i64 3
  %838 = getelementptr inbounds [5 x double]* %837, i32 0, i64 4
  %839 = load double* %838, align 8
  %840 = load [5 x double]** %2, align 8
  %841 = getelementptr inbounds [5 x double]* %840, i64 2
  %842 = getelementptr inbounds [5 x double]* %841, i32 0, i64 3
  %843 = load double* %842, align 8
  %844 = fmul double %839, %843
  %845 = fsub double %835, %844
  %846 = load [5 x double]** %1, align 8
  %847 = getelementptr inbounds [5 x double]* %846, i64 4
  %848 = getelementptr inbounds [5 x double]* %847, i32 0, i64 4
  %849 = load double* %848, align 8
  %850 = load [5 x double]** %2, align 8
  %851 = getelementptr inbounds [5 x double]* %850, i64 2
  %852 = getelementptr inbounds [5 x double]* %851, i32 0, i64 4
  %853 = load double* %852, align 8
  %854 = fmul double %849, %853
  %855 = fsub double %845, %854
  %856 = load [5 x double]** %3, align 8
  %857 = getelementptr inbounds [5 x double]* %856, i64 2
  %858 = getelementptr inbounds [5 x double]* %857, i32 0, i64 4
  store double %855, double* %858, align 8
  %859 = load [5 x double]** %3, align 8
  %860 = getelementptr inbounds [5 x double]* %859, i64 3
  %861 = getelementptr inbounds [5 x double]* %860, i32 0, i64 0
  %862 = load double* %861, align 8
  %863 = load [5 x double]** %1, align 8
  %864 = getelementptr inbounds [5 x double]* %863, i64 0
  %865 = getelementptr inbounds [5 x double]* %864, i32 0, i64 0
  %866 = load double* %865, align 8
  %867 = load [5 x double]** %2, align 8
  %868 = getelementptr inbounds [5 x double]* %867, i64 3
  %869 = getelementptr inbounds [5 x double]* %868, i32 0, i64 0
  %870 = load double* %869, align 8
  %871 = fmul double %866, %870
  %872 = fsub double %862, %871
  %873 = load [5 x double]** %1, align 8
  %874 = getelementptr inbounds [5 x double]* %873, i64 1
  %875 = getelementptr inbounds [5 x double]* %874, i32 0, i64 0
  %876 = load double* %875, align 8
  %877 = load [5 x double]** %2, align 8
  %878 = getelementptr inbounds [5 x double]* %877, i64 3
  %879 = getelementptr inbounds [5 x double]* %878, i32 0, i64 1
  %880 = load double* %879, align 8
  %881 = fmul double %876, %880
  %882 = fsub double %872, %881
  %883 = load [5 x double]** %1, align 8
  %884 = getelementptr inbounds [5 x double]* %883, i64 2
  %885 = getelementptr inbounds [5 x double]* %884, i32 0, i64 0
  %886 = load double* %885, align 8
  %887 = load [5 x double]** %2, align 8
  %888 = getelementptr inbounds [5 x double]* %887, i64 3
  %889 = getelementptr inbounds [5 x double]* %888, i32 0, i64 2
  %890 = load double* %889, align 8
  %891 = fmul double %886, %890
  %892 = fsub double %882, %891
  %893 = load [5 x double]** %1, align 8
  %894 = getelementptr inbounds [5 x double]* %893, i64 3
  %895 = getelementptr inbounds [5 x double]* %894, i32 0, i64 0
  %896 = load double* %895, align 8
  %897 = load [5 x double]** %2, align 8
  %898 = getelementptr inbounds [5 x double]* %897, i64 3
  %899 = getelementptr inbounds [5 x double]* %898, i32 0, i64 3
  %900 = load double* %899, align 8
  %901 = fmul double %896, %900
  %902 = fsub double %892, %901
  %903 = load [5 x double]** %1, align 8
  %904 = getelementptr inbounds [5 x double]* %903, i64 4
  %905 = getelementptr inbounds [5 x double]* %904, i32 0, i64 0
  %906 = load double* %905, align 8
  %907 = load [5 x double]** %2, align 8
  %908 = getelementptr inbounds [5 x double]* %907, i64 3
  %909 = getelementptr inbounds [5 x double]* %908, i32 0, i64 4
  %910 = load double* %909, align 8
  %911 = fmul double %906, %910
  %912 = fsub double %902, %911
  %913 = load [5 x double]** %3, align 8
  %914 = getelementptr inbounds [5 x double]* %913, i64 3
  %915 = getelementptr inbounds [5 x double]* %914, i32 0, i64 0
  store double %912, double* %915, align 8
  %916 = load [5 x double]** %3, align 8
  %917 = getelementptr inbounds [5 x double]* %916, i64 3
  %918 = getelementptr inbounds [5 x double]* %917, i32 0, i64 1
  %919 = load double* %918, align 8
  %920 = load [5 x double]** %1, align 8
  %921 = getelementptr inbounds [5 x double]* %920, i64 0
  %922 = getelementptr inbounds [5 x double]* %921, i32 0, i64 1
  %923 = load double* %922, align 8
  %924 = load [5 x double]** %2, align 8
  %925 = getelementptr inbounds [5 x double]* %924, i64 3
  %926 = getelementptr inbounds [5 x double]* %925, i32 0, i64 0
  %927 = load double* %926, align 8
  %928 = fmul double %923, %927
  %929 = fsub double %919, %928
  %930 = load [5 x double]** %1, align 8
  %931 = getelementptr inbounds [5 x double]* %930, i64 1
  %932 = getelementptr inbounds [5 x double]* %931, i32 0, i64 1
  %933 = load double* %932, align 8
  %934 = load [5 x double]** %2, align 8
  %935 = getelementptr inbounds [5 x double]* %934, i64 3
  %936 = getelementptr inbounds [5 x double]* %935, i32 0, i64 1
  %937 = load double* %936, align 8
  %938 = fmul double %933, %937
  %939 = fsub double %929, %938
  %940 = load [5 x double]** %1, align 8
  %941 = getelementptr inbounds [5 x double]* %940, i64 2
  %942 = getelementptr inbounds [5 x double]* %941, i32 0, i64 1
  %943 = load double* %942, align 8
  %944 = load [5 x double]** %2, align 8
  %945 = getelementptr inbounds [5 x double]* %944, i64 3
  %946 = getelementptr inbounds [5 x double]* %945, i32 0, i64 2
  %947 = load double* %946, align 8
  %948 = fmul double %943, %947
  %949 = fsub double %939, %948
  %950 = load [5 x double]** %1, align 8
  %951 = getelementptr inbounds [5 x double]* %950, i64 3
  %952 = getelementptr inbounds [5 x double]* %951, i32 0, i64 1
  %953 = load double* %952, align 8
  %954 = load [5 x double]** %2, align 8
  %955 = getelementptr inbounds [5 x double]* %954, i64 3
  %956 = getelementptr inbounds [5 x double]* %955, i32 0, i64 3
  %957 = load double* %956, align 8
  %958 = fmul double %953, %957
  %959 = fsub double %949, %958
  %960 = load [5 x double]** %1, align 8
  %961 = getelementptr inbounds [5 x double]* %960, i64 4
  %962 = getelementptr inbounds [5 x double]* %961, i32 0, i64 1
  %963 = load double* %962, align 8
  %964 = load [5 x double]** %2, align 8
  %965 = getelementptr inbounds [5 x double]* %964, i64 3
  %966 = getelementptr inbounds [5 x double]* %965, i32 0, i64 4
  %967 = load double* %966, align 8
  %968 = fmul double %963, %967
  %969 = fsub double %959, %968
  %970 = load [5 x double]** %3, align 8
  %971 = getelementptr inbounds [5 x double]* %970, i64 3
  %972 = getelementptr inbounds [5 x double]* %971, i32 0, i64 1
  store double %969, double* %972, align 8
  %973 = load [5 x double]** %3, align 8
  %974 = getelementptr inbounds [5 x double]* %973, i64 3
  %975 = getelementptr inbounds [5 x double]* %974, i32 0, i64 2
  %976 = load double* %975, align 8
  %977 = load [5 x double]** %1, align 8
  %978 = getelementptr inbounds [5 x double]* %977, i64 0
  %979 = getelementptr inbounds [5 x double]* %978, i32 0, i64 2
  %980 = load double* %979, align 8
  %981 = load [5 x double]** %2, align 8
  %982 = getelementptr inbounds [5 x double]* %981, i64 3
  %983 = getelementptr inbounds [5 x double]* %982, i32 0, i64 0
  %984 = load double* %983, align 8
  %985 = fmul double %980, %984
  %986 = fsub double %976, %985
  %987 = load [5 x double]** %1, align 8
  %988 = getelementptr inbounds [5 x double]* %987, i64 1
  %989 = getelementptr inbounds [5 x double]* %988, i32 0, i64 2
  %990 = load double* %989, align 8
  %991 = load [5 x double]** %2, align 8
  %992 = getelementptr inbounds [5 x double]* %991, i64 3
  %993 = getelementptr inbounds [5 x double]* %992, i32 0, i64 1
  %994 = load double* %993, align 8
  %995 = fmul double %990, %994
  %996 = fsub double %986, %995
  %997 = load [5 x double]** %1, align 8
  %998 = getelementptr inbounds [5 x double]* %997, i64 2
  %999 = getelementptr inbounds [5 x double]* %998, i32 0, i64 2
  %1000 = load double* %999, align 8
  %1001 = load [5 x double]** %2, align 8
  %1002 = getelementptr inbounds [5 x double]* %1001, i64 3
  %1003 = getelementptr inbounds [5 x double]* %1002, i32 0, i64 2
  %1004 = load double* %1003, align 8
  %1005 = fmul double %1000, %1004
  %1006 = fsub double %996, %1005
  %1007 = load [5 x double]** %1, align 8
  %1008 = getelementptr inbounds [5 x double]* %1007, i64 3
  %1009 = getelementptr inbounds [5 x double]* %1008, i32 0, i64 2
  %1010 = load double* %1009, align 8
  %1011 = load [5 x double]** %2, align 8
  %1012 = getelementptr inbounds [5 x double]* %1011, i64 3
  %1013 = getelementptr inbounds [5 x double]* %1012, i32 0, i64 3
  %1014 = load double* %1013, align 8
  %1015 = fmul double %1010, %1014
  %1016 = fsub double %1006, %1015
  %1017 = load [5 x double]** %1, align 8
  %1018 = getelementptr inbounds [5 x double]* %1017, i64 4
  %1019 = getelementptr inbounds [5 x double]* %1018, i32 0, i64 2
  %1020 = load double* %1019, align 8
  %1021 = load [5 x double]** %2, align 8
  %1022 = getelementptr inbounds [5 x double]* %1021, i64 3
  %1023 = getelementptr inbounds [5 x double]* %1022, i32 0, i64 4
  %1024 = load double* %1023, align 8
  %1025 = fmul double %1020, %1024
  %1026 = fsub double %1016, %1025
  %1027 = load [5 x double]** %3, align 8
  %1028 = getelementptr inbounds [5 x double]* %1027, i64 3
  %1029 = getelementptr inbounds [5 x double]* %1028, i32 0, i64 2
  store double %1026, double* %1029, align 8
  %1030 = load [5 x double]** %3, align 8
  %1031 = getelementptr inbounds [5 x double]* %1030, i64 3
  %1032 = getelementptr inbounds [5 x double]* %1031, i32 0, i64 3
  %1033 = load double* %1032, align 8
  %1034 = load [5 x double]** %1, align 8
  %1035 = getelementptr inbounds [5 x double]* %1034, i64 0
  %1036 = getelementptr inbounds [5 x double]* %1035, i32 0, i64 3
  %1037 = load double* %1036, align 8
  %1038 = load [5 x double]** %2, align 8
  %1039 = getelementptr inbounds [5 x double]* %1038, i64 3
  %1040 = getelementptr inbounds [5 x double]* %1039, i32 0, i64 0
  %1041 = load double* %1040, align 8
  %1042 = fmul double %1037, %1041
  %1043 = fsub double %1033, %1042
  %1044 = load [5 x double]** %1, align 8
  %1045 = getelementptr inbounds [5 x double]* %1044, i64 1
  %1046 = getelementptr inbounds [5 x double]* %1045, i32 0, i64 3
  %1047 = load double* %1046, align 8
  %1048 = load [5 x double]** %2, align 8
  %1049 = getelementptr inbounds [5 x double]* %1048, i64 3
  %1050 = getelementptr inbounds [5 x double]* %1049, i32 0, i64 1
  %1051 = load double* %1050, align 8
  %1052 = fmul double %1047, %1051
  %1053 = fsub double %1043, %1052
  %1054 = load [5 x double]** %1, align 8
  %1055 = getelementptr inbounds [5 x double]* %1054, i64 2
  %1056 = getelementptr inbounds [5 x double]* %1055, i32 0, i64 3
  %1057 = load double* %1056, align 8
  %1058 = load [5 x double]** %2, align 8
  %1059 = getelementptr inbounds [5 x double]* %1058, i64 3
  %1060 = getelementptr inbounds [5 x double]* %1059, i32 0, i64 2
  %1061 = load double* %1060, align 8
  %1062 = fmul double %1057, %1061
  %1063 = fsub double %1053, %1062
  %1064 = load [5 x double]** %1, align 8
  %1065 = getelementptr inbounds [5 x double]* %1064, i64 3
  %1066 = getelementptr inbounds [5 x double]* %1065, i32 0, i64 3
  %1067 = load double* %1066, align 8
  %1068 = load [5 x double]** %2, align 8
  %1069 = getelementptr inbounds [5 x double]* %1068, i64 3
  %1070 = getelementptr inbounds [5 x double]* %1069, i32 0, i64 3
  %1071 = load double* %1070, align 8
  %1072 = fmul double %1067, %1071
  %1073 = fsub double %1063, %1072
  %1074 = load [5 x double]** %1, align 8
  %1075 = getelementptr inbounds [5 x double]* %1074, i64 4
  %1076 = getelementptr inbounds [5 x double]* %1075, i32 0, i64 3
  %1077 = load double* %1076, align 8
  %1078 = load [5 x double]** %2, align 8
  %1079 = getelementptr inbounds [5 x double]* %1078, i64 3
  %1080 = getelementptr inbounds [5 x double]* %1079, i32 0, i64 4
  %1081 = load double* %1080, align 8
  %1082 = fmul double %1077, %1081
  %1083 = fsub double %1073, %1082
  %1084 = load [5 x double]** %3, align 8
  %1085 = getelementptr inbounds [5 x double]* %1084, i64 3
  %1086 = getelementptr inbounds [5 x double]* %1085, i32 0, i64 3
  store double %1083, double* %1086, align 8
  %1087 = load [5 x double]** %3, align 8
  %1088 = getelementptr inbounds [5 x double]* %1087, i64 3
  %1089 = getelementptr inbounds [5 x double]* %1088, i32 0, i64 4
  %1090 = load double* %1089, align 8
  %1091 = load [5 x double]** %1, align 8
  %1092 = getelementptr inbounds [5 x double]* %1091, i64 0
  %1093 = getelementptr inbounds [5 x double]* %1092, i32 0, i64 4
  %1094 = load double* %1093, align 8
  %1095 = load [5 x double]** %2, align 8
  %1096 = getelementptr inbounds [5 x double]* %1095, i64 3
  %1097 = getelementptr inbounds [5 x double]* %1096, i32 0, i64 0
  %1098 = load double* %1097, align 8
  %1099 = fmul double %1094, %1098
  %1100 = fsub double %1090, %1099
  %1101 = load [5 x double]** %1, align 8
  %1102 = getelementptr inbounds [5 x double]* %1101, i64 1
  %1103 = getelementptr inbounds [5 x double]* %1102, i32 0, i64 4
  %1104 = load double* %1103, align 8
  %1105 = load [5 x double]** %2, align 8
  %1106 = getelementptr inbounds [5 x double]* %1105, i64 3
  %1107 = getelementptr inbounds [5 x double]* %1106, i32 0, i64 1
  %1108 = load double* %1107, align 8
  %1109 = fmul double %1104, %1108
  %1110 = fsub double %1100, %1109
  %1111 = load [5 x double]** %1, align 8
  %1112 = getelementptr inbounds [5 x double]* %1111, i64 2
  %1113 = getelementptr inbounds [5 x double]* %1112, i32 0, i64 4
  %1114 = load double* %1113, align 8
  %1115 = load [5 x double]** %2, align 8
  %1116 = getelementptr inbounds [5 x double]* %1115, i64 3
  %1117 = getelementptr inbounds [5 x double]* %1116, i32 0, i64 2
  %1118 = load double* %1117, align 8
  %1119 = fmul double %1114, %1118
  %1120 = fsub double %1110, %1119
  %1121 = load [5 x double]** %1, align 8
  %1122 = getelementptr inbounds [5 x double]* %1121, i64 3
  %1123 = getelementptr inbounds [5 x double]* %1122, i32 0, i64 4
  %1124 = load double* %1123, align 8
  %1125 = load [5 x double]** %2, align 8
  %1126 = getelementptr inbounds [5 x double]* %1125, i64 3
  %1127 = getelementptr inbounds [5 x double]* %1126, i32 0, i64 3
  %1128 = load double* %1127, align 8
  %1129 = fmul double %1124, %1128
  %1130 = fsub double %1120, %1129
  %1131 = load [5 x double]** %1, align 8
  %1132 = getelementptr inbounds [5 x double]* %1131, i64 4
  %1133 = getelementptr inbounds [5 x double]* %1132, i32 0, i64 4
  %1134 = load double* %1133, align 8
  %1135 = load [5 x double]** %2, align 8
  %1136 = getelementptr inbounds [5 x double]* %1135, i64 3
  %1137 = getelementptr inbounds [5 x double]* %1136, i32 0, i64 4
  %1138 = load double* %1137, align 8
  %1139 = fmul double %1134, %1138
  %1140 = fsub double %1130, %1139
  %1141 = load [5 x double]** %3, align 8
  %1142 = getelementptr inbounds [5 x double]* %1141, i64 3
  %1143 = getelementptr inbounds [5 x double]* %1142, i32 0, i64 4
  store double %1140, double* %1143, align 8
  %1144 = load [5 x double]** %3, align 8
  %1145 = getelementptr inbounds [5 x double]* %1144, i64 4
  %1146 = getelementptr inbounds [5 x double]* %1145, i32 0, i64 0
  %1147 = load double* %1146, align 8
  %1148 = load [5 x double]** %1, align 8
  %1149 = getelementptr inbounds [5 x double]* %1148, i64 0
  %1150 = getelementptr inbounds [5 x double]* %1149, i32 0, i64 0
  %1151 = load double* %1150, align 8
  %1152 = load [5 x double]** %2, align 8
  %1153 = getelementptr inbounds [5 x double]* %1152, i64 4
  %1154 = getelementptr inbounds [5 x double]* %1153, i32 0, i64 0
  %1155 = load double* %1154, align 8
  %1156 = fmul double %1151, %1155
  %1157 = fsub double %1147, %1156
  %1158 = load [5 x double]** %1, align 8
  %1159 = getelementptr inbounds [5 x double]* %1158, i64 1
  %1160 = getelementptr inbounds [5 x double]* %1159, i32 0, i64 0
  %1161 = load double* %1160, align 8
  %1162 = load [5 x double]** %2, align 8
  %1163 = getelementptr inbounds [5 x double]* %1162, i64 4
  %1164 = getelementptr inbounds [5 x double]* %1163, i32 0, i64 1
  %1165 = load double* %1164, align 8
  %1166 = fmul double %1161, %1165
  %1167 = fsub double %1157, %1166
  %1168 = load [5 x double]** %1, align 8
  %1169 = getelementptr inbounds [5 x double]* %1168, i64 2
  %1170 = getelementptr inbounds [5 x double]* %1169, i32 0, i64 0
  %1171 = load double* %1170, align 8
  %1172 = load [5 x double]** %2, align 8
  %1173 = getelementptr inbounds [5 x double]* %1172, i64 4
  %1174 = getelementptr inbounds [5 x double]* %1173, i32 0, i64 2
  %1175 = load double* %1174, align 8
  %1176 = fmul double %1171, %1175
  %1177 = fsub double %1167, %1176
  %1178 = load [5 x double]** %1, align 8
  %1179 = getelementptr inbounds [5 x double]* %1178, i64 3
  %1180 = getelementptr inbounds [5 x double]* %1179, i32 0, i64 0
  %1181 = load double* %1180, align 8
  %1182 = load [5 x double]** %2, align 8
  %1183 = getelementptr inbounds [5 x double]* %1182, i64 4
  %1184 = getelementptr inbounds [5 x double]* %1183, i32 0, i64 3
  %1185 = load double* %1184, align 8
  %1186 = fmul double %1181, %1185
  %1187 = fsub double %1177, %1186
  %1188 = load [5 x double]** %1, align 8
  %1189 = getelementptr inbounds [5 x double]* %1188, i64 4
  %1190 = getelementptr inbounds [5 x double]* %1189, i32 0, i64 0
  %1191 = load double* %1190, align 8
  %1192 = load [5 x double]** %2, align 8
  %1193 = getelementptr inbounds [5 x double]* %1192, i64 4
  %1194 = getelementptr inbounds [5 x double]* %1193, i32 0, i64 4
  %1195 = load double* %1194, align 8
  %1196 = fmul double %1191, %1195
  %1197 = fsub double %1187, %1196
  %1198 = load [5 x double]** %3, align 8
  %1199 = getelementptr inbounds [5 x double]* %1198, i64 4
  %1200 = getelementptr inbounds [5 x double]* %1199, i32 0, i64 0
  store double %1197, double* %1200, align 8
  %1201 = load [5 x double]** %3, align 8
  %1202 = getelementptr inbounds [5 x double]* %1201, i64 4
  %1203 = getelementptr inbounds [5 x double]* %1202, i32 0, i64 1
  %1204 = load double* %1203, align 8
  %1205 = load [5 x double]** %1, align 8
  %1206 = getelementptr inbounds [5 x double]* %1205, i64 0
  %1207 = getelementptr inbounds [5 x double]* %1206, i32 0, i64 1
  %1208 = load double* %1207, align 8
  %1209 = load [5 x double]** %2, align 8
  %1210 = getelementptr inbounds [5 x double]* %1209, i64 4
  %1211 = getelementptr inbounds [5 x double]* %1210, i32 0, i64 0
  %1212 = load double* %1211, align 8
  %1213 = fmul double %1208, %1212
  %1214 = fsub double %1204, %1213
  %1215 = load [5 x double]** %1, align 8
  %1216 = getelementptr inbounds [5 x double]* %1215, i64 1
  %1217 = getelementptr inbounds [5 x double]* %1216, i32 0, i64 1
  %1218 = load double* %1217, align 8
  %1219 = load [5 x double]** %2, align 8
  %1220 = getelementptr inbounds [5 x double]* %1219, i64 4
  %1221 = getelementptr inbounds [5 x double]* %1220, i32 0, i64 1
  %1222 = load double* %1221, align 8
  %1223 = fmul double %1218, %1222
  %1224 = fsub double %1214, %1223
  %1225 = load [5 x double]** %1, align 8
  %1226 = getelementptr inbounds [5 x double]* %1225, i64 2
  %1227 = getelementptr inbounds [5 x double]* %1226, i32 0, i64 1
  %1228 = load double* %1227, align 8
  %1229 = load [5 x double]** %2, align 8
  %1230 = getelementptr inbounds [5 x double]* %1229, i64 4
  %1231 = getelementptr inbounds [5 x double]* %1230, i32 0, i64 2
  %1232 = load double* %1231, align 8
  %1233 = fmul double %1228, %1232
  %1234 = fsub double %1224, %1233
  %1235 = load [5 x double]** %1, align 8
  %1236 = getelementptr inbounds [5 x double]* %1235, i64 3
  %1237 = getelementptr inbounds [5 x double]* %1236, i32 0, i64 1
  %1238 = load double* %1237, align 8
  %1239 = load [5 x double]** %2, align 8
  %1240 = getelementptr inbounds [5 x double]* %1239, i64 4
  %1241 = getelementptr inbounds [5 x double]* %1240, i32 0, i64 3
  %1242 = load double* %1241, align 8
  %1243 = fmul double %1238, %1242
  %1244 = fsub double %1234, %1243
  %1245 = load [5 x double]** %1, align 8
  %1246 = getelementptr inbounds [5 x double]* %1245, i64 4
  %1247 = getelementptr inbounds [5 x double]* %1246, i32 0, i64 1
  %1248 = load double* %1247, align 8
  %1249 = load [5 x double]** %2, align 8
  %1250 = getelementptr inbounds [5 x double]* %1249, i64 4
  %1251 = getelementptr inbounds [5 x double]* %1250, i32 0, i64 4
  %1252 = load double* %1251, align 8
  %1253 = fmul double %1248, %1252
  %1254 = fsub double %1244, %1253
  %1255 = load [5 x double]** %3, align 8
  %1256 = getelementptr inbounds [5 x double]* %1255, i64 4
  %1257 = getelementptr inbounds [5 x double]* %1256, i32 0, i64 1
  store double %1254, double* %1257, align 8
  %1258 = load [5 x double]** %3, align 8
  %1259 = getelementptr inbounds [5 x double]* %1258, i64 4
  %1260 = getelementptr inbounds [5 x double]* %1259, i32 0, i64 2
  %1261 = load double* %1260, align 8
  %1262 = load [5 x double]** %1, align 8
  %1263 = getelementptr inbounds [5 x double]* %1262, i64 0
  %1264 = getelementptr inbounds [5 x double]* %1263, i32 0, i64 2
  %1265 = load double* %1264, align 8
  %1266 = load [5 x double]** %2, align 8
  %1267 = getelementptr inbounds [5 x double]* %1266, i64 4
  %1268 = getelementptr inbounds [5 x double]* %1267, i32 0, i64 0
  %1269 = load double* %1268, align 8
  %1270 = fmul double %1265, %1269
  %1271 = fsub double %1261, %1270
  %1272 = load [5 x double]** %1, align 8
  %1273 = getelementptr inbounds [5 x double]* %1272, i64 1
  %1274 = getelementptr inbounds [5 x double]* %1273, i32 0, i64 2
  %1275 = load double* %1274, align 8
  %1276 = load [5 x double]** %2, align 8
  %1277 = getelementptr inbounds [5 x double]* %1276, i64 4
  %1278 = getelementptr inbounds [5 x double]* %1277, i32 0, i64 1
  %1279 = load double* %1278, align 8
  %1280 = fmul double %1275, %1279
  %1281 = fsub double %1271, %1280
  %1282 = load [5 x double]** %1, align 8
  %1283 = getelementptr inbounds [5 x double]* %1282, i64 2
  %1284 = getelementptr inbounds [5 x double]* %1283, i32 0, i64 2
  %1285 = load double* %1284, align 8
  %1286 = load [5 x double]** %2, align 8
  %1287 = getelementptr inbounds [5 x double]* %1286, i64 4
  %1288 = getelementptr inbounds [5 x double]* %1287, i32 0, i64 2
  %1289 = load double* %1288, align 8
  %1290 = fmul double %1285, %1289
  %1291 = fsub double %1281, %1290
  %1292 = load [5 x double]** %1, align 8
  %1293 = getelementptr inbounds [5 x double]* %1292, i64 3
  %1294 = getelementptr inbounds [5 x double]* %1293, i32 0, i64 2
  %1295 = load double* %1294, align 8
  %1296 = load [5 x double]** %2, align 8
  %1297 = getelementptr inbounds [5 x double]* %1296, i64 4
  %1298 = getelementptr inbounds [5 x double]* %1297, i32 0, i64 3
  %1299 = load double* %1298, align 8
  %1300 = fmul double %1295, %1299
  %1301 = fsub double %1291, %1300
  %1302 = load [5 x double]** %1, align 8
  %1303 = getelementptr inbounds [5 x double]* %1302, i64 4
  %1304 = getelementptr inbounds [5 x double]* %1303, i32 0, i64 2
  %1305 = load double* %1304, align 8
  %1306 = load [5 x double]** %2, align 8
  %1307 = getelementptr inbounds [5 x double]* %1306, i64 4
  %1308 = getelementptr inbounds [5 x double]* %1307, i32 0, i64 4
  %1309 = load double* %1308, align 8
  %1310 = fmul double %1305, %1309
  %1311 = fsub double %1301, %1310
  %1312 = load [5 x double]** %3, align 8
  %1313 = getelementptr inbounds [5 x double]* %1312, i64 4
  %1314 = getelementptr inbounds [5 x double]* %1313, i32 0, i64 2
  store double %1311, double* %1314, align 8
  %1315 = load [5 x double]** %3, align 8
  %1316 = getelementptr inbounds [5 x double]* %1315, i64 4
  %1317 = getelementptr inbounds [5 x double]* %1316, i32 0, i64 3
  %1318 = load double* %1317, align 8
  %1319 = load [5 x double]** %1, align 8
  %1320 = getelementptr inbounds [5 x double]* %1319, i64 0
  %1321 = getelementptr inbounds [5 x double]* %1320, i32 0, i64 3
  %1322 = load double* %1321, align 8
  %1323 = load [5 x double]** %2, align 8
  %1324 = getelementptr inbounds [5 x double]* %1323, i64 4
  %1325 = getelementptr inbounds [5 x double]* %1324, i32 0, i64 0
  %1326 = load double* %1325, align 8
  %1327 = fmul double %1322, %1326
  %1328 = fsub double %1318, %1327
  %1329 = load [5 x double]** %1, align 8
  %1330 = getelementptr inbounds [5 x double]* %1329, i64 1
  %1331 = getelementptr inbounds [5 x double]* %1330, i32 0, i64 3
  %1332 = load double* %1331, align 8
  %1333 = load [5 x double]** %2, align 8
  %1334 = getelementptr inbounds [5 x double]* %1333, i64 4
  %1335 = getelementptr inbounds [5 x double]* %1334, i32 0, i64 1
  %1336 = load double* %1335, align 8
  %1337 = fmul double %1332, %1336
  %1338 = fsub double %1328, %1337
  %1339 = load [5 x double]** %1, align 8
  %1340 = getelementptr inbounds [5 x double]* %1339, i64 2
  %1341 = getelementptr inbounds [5 x double]* %1340, i32 0, i64 3
  %1342 = load double* %1341, align 8
  %1343 = load [5 x double]** %2, align 8
  %1344 = getelementptr inbounds [5 x double]* %1343, i64 4
  %1345 = getelementptr inbounds [5 x double]* %1344, i32 0, i64 2
  %1346 = load double* %1345, align 8
  %1347 = fmul double %1342, %1346
  %1348 = fsub double %1338, %1347
  %1349 = load [5 x double]** %1, align 8
  %1350 = getelementptr inbounds [5 x double]* %1349, i64 3
  %1351 = getelementptr inbounds [5 x double]* %1350, i32 0, i64 3
  %1352 = load double* %1351, align 8
  %1353 = load [5 x double]** %2, align 8
  %1354 = getelementptr inbounds [5 x double]* %1353, i64 4
  %1355 = getelementptr inbounds [5 x double]* %1354, i32 0, i64 3
  %1356 = load double* %1355, align 8
  %1357 = fmul double %1352, %1356
  %1358 = fsub double %1348, %1357
  %1359 = load [5 x double]** %1, align 8
  %1360 = getelementptr inbounds [5 x double]* %1359, i64 4
  %1361 = getelementptr inbounds [5 x double]* %1360, i32 0, i64 3
  %1362 = load double* %1361, align 8
  %1363 = load [5 x double]** %2, align 8
  %1364 = getelementptr inbounds [5 x double]* %1363, i64 4
  %1365 = getelementptr inbounds [5 x double]* %1364, i32 0, i64 4
  %1366 = load double* %1365, align 8
  %1367 = fmul double %1362, %1366
  %1368 = fsub double %1358, %1367
  %1369 = load [5 x double]** %3, align 8
  %1370 = getelementptr inbounds [5 x double]* %1369, i64 4
  %1371 = getelementptr inbounds [5 x double]* %1370, i32 0, i64 3
  store double %1368, double* %1371, align 8
  %1372 = load [5 x double]** %3, align 8
  %1373 = getelementptr inbounds [5 x double]* %1372, i64 4
  %1374 = getelementptr inbounds [5 x double]* %1373, i32 0, i64 4
  %1375 = load double* %1374, align 8
  %1376 = load [5 x double]** %1, align 8
  %1377 = getelementptr inbounds [5 x double]* %1376, i64 0
  %1378 = getelementptr inbounds [5 x double]* %1377, i32 0, i64 4
  %1379 = load double* %1378, align 8
  %1380 = load [5 x double]** %2, align 8
  %1381 = getelementptr inbounds [5 x double]* %1380, i64 4
  %1382 = getelementptr inbounds [5 x double]* %1381, i32 0, i64 0
  %1383 = load double* %1382, align 8
  %1384 = fmul double %1379, %1383
  %1385 = fsub double %1375, %1384
  %1386 = load [5 x double]** %1, align 8
  %1387 = getelementptr inbounds [5 x double]* %1386, i64 1
  %1388 = getelementptr inbounds [5 x double]* %1387, i32 0, i64 4
  %1389 = load double* %1388, align 8
  %1390 = load [5 x double]** %2, align 8
  %1391 = getelementptr inbounds [5 x double]* %1390, i64 4
  %1392 = getelementptr inbounds [5 x double]* %1391, i32 0, i64 1
  %1393 = load double* %1392, align 8
  %1394 = fmul double %1389, %1393
  %1395 = fsub double %1385, %1394
  %1396 = load [5 x double]** %1, align 8
  %1397 = getelementptr inbounds [5 x double]* %1396, i64 2
  %1398 = getelementptr inbounds [5 x double]* %1397, i32 0, i64 4
  %1399 = load double* %1398, align 8
  %1400 = load [5 x double]** %2, align 8
  %1401 = getelementptr inbounds [5 x double]* %1400, i64 4
  %1402 = getelementptr inbounds [5 x double]* %1401, i32 0, i64 2
  %1403 = load double* %1402, align 8
  %1404 = fmul double %1399, %1403
  %1405 = fsub double %1395, %1404
  %1406 = load [5 x double]** %1, align 8
  %1407 = getelementptr inbounds [5 x double]* %1406, i64 3
  %1408 = getelementptr inbounds [5 x double]* %1407, i32 0, i64 4
  %1409 = load double* %1408, align 8
  %1410 = load [5 x double]** %2, align 8
  %1411 = getelementptr inbounds [5 x double]* %1410, i64 4
  %1412 = getelementptr inbounds [5 x double]* %1411, i32 0, i64 3
  %1413 = load double* %1412, align 8
  %1414 = fmul double %1409, %1413
  %1415 = fsub double %1405, %1414
  %1416 = load [5 x double]** %1, align 8
  %1417 = getelementptr inbounds [5 x double]* %1416, i64 4
  %1418 = getelementptr inbounds [5 x double]* %1417, i32 0, i64 4
  %1419 = load double* %1418, align 8
  %1420 = load [5 x double]** %2, align 8
  %1421 = getelementptr inbounds [5 x double]* %1420, i64 4
  %1422 = getelementptr inbounds [5 x double]* %1421, i32 0, i64 4
  %1423 = load double* %1422, align 8
  %1424 = fmul double %1419, %1423
  %1425 = fsub double %1415, %1424
  %1426 = load [5 x double]** %3, align 8
  %1427 = getelementptr inbounds [5 x double]* %1426, i64 4
  %1428 = getelementptr inbounds [5 x double]* %1427, i32 0, i64 4
  store double %1425, double* %1428, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @binvcrhs([5 x double]* %lhs, [5 x double]* %c, double* %r) #0 {
  %1 = alloca [5 x double]*, align 8
  %2 = alloca [5 x double]*, align 8
  %3 = alloca double*, align 8
  %pivot = alloca double, align 8
  %coeff = alloca double, align 8
  store [5 x double]* %lhs, [5 x double]** %1, align 8
  store [5 x double]* %c, [5 x double]** %2, align 8
  store double* %r, double** %3, align 8
  %4 = load [5 x double]** %1, align 8
  %5 = getelementptr inbounds [5 x double]* %4, i64 0
  %6 = getelementptr inbounds [5 x double]* %5, i32 0, i64 0
  %7 = load double* %6, align 8
  %8 = fdiv double 1.000000e+00, %7
  store double %8, double* %pivot, align 8
  %9 = load [5 x double]** %1, align 8
  %10 = getelementptr inbounds [5 x double]* %9, i64 1
  %11 = getelementptr inbounds [5 x double]* %10, i32 0, i64 0
  %12 = load double* %11, align 8
  %13 = load double* %pivot, align 8
  %14 = fmul double %12, %13
  %15 = load [5 x double]** %1, align 8
  %16 = getelementptr inbounds [5 x double]* %15, i64 1
  %17 = getelementptr inbounds [5 x double]* %16, i32 0, i64 0
  store double %14, double* %17, align 8
  %18 = load [5 x double]** %1, align 8
  %19 = getelementptr inbounds [5 x double]* %18, i64 2
  %20 = getelementptr inbounds [5 x double]* %19, i32 0, i64 0
  %21 = load double* %20, align 8
  %22 = load double* %pivot, align 8
  %23 = fmul double %21, %22
  %24 = load [5 x double]** %1, align 8
  %25 = getelementptr inbounds [5 x double]* %24, i64 2
  %26 = getelementptr inbounds [5 x double]* %25, i32 0, i64 0
  store double %23, double* %26, align 8
  %27 = load [5 x double]** %1, align 8
  %28 = getelementptr inbounds [5 x double]* %27, i64 3
  %29 = getelementptr inbounds [5 x double]* %28, i32 0, i64 0
  %30 = load double* %29, align 8
  %31 = load double* %pivot, align 8
  %32 = fmul double %30, %31
  %33 = load [5 x double]** %1, align 8
  %34 = getelementptr inbounds [5 x double]* %33, i64 3
  %35 = getelementptr inbounds [5 x double]* %34, i32 0, i64 0
  store double %32, double* %35, align 8
  %36 = load [5 x double]** %1, align 8
  %37 = getelementptr inbounds [5 x double]* %36, i64 4
  %38 = getelementptr inbounds [5 x double]* %37, i32 0, i64 0
  %39 = load double* %38, align 8
  %40 = load double* %pivot, align 8
  %41 = fmul double %39, %40
  %42 = load [5 x double]** %1, align 8
  %43 = getelementptr inbounds [5 x double]* %42, i64 4
  %44 = getelementptr inbounds [5 x double]* %43, i32 0, i64 0
  store double %41, double* %44, align 8
  %45 = load [5 x double]** %2, align 8
  %46 = getelementptr inbounds [5 x double]* %45, i64 0
  %47 = getelementptr inbounds [5 x double]* %46, i32 0, i64 0
  %48 = load double* %47, align 8
  %49 = load double* %pivot, align 8
  %50 = fmul double %48, %49
  %51 = load [5 x double]** %2, align 8
  %52 = getelementptr inbounds [5 x double]* %51, i64 0
  %53 = getelementptr inbounds [5 x double]* %52, i32 0, i64 0
  store double %50, double* %53, align 8
  %54 = load [5 x double]** %2, align 8
  %55 = getelementptr inbounds [5 x double]* %54, i64 1
  %56 = getelementptr inbounds [5 x double]* %55, i32 0, i64 0
  %57 = load double* %56, align 8
  %58 = load double* %pivot, align 8
  %59 = fmul double %57, %58
  %60 = load [5 x double]** %2, align 8
  %61 = getelementptr inbounds [5 x double]* %60, i64 1
  %62 = getelementptr inbounds [5 x double]* %61, i32 0, i64 0
  store double %59, double* %62, align 8
  %63 = load [5 x double]** %2, align 8
  %64 = getelementptr inbounds [5 x double]* %63, i64 2
  %65 = getelementptr inbounds [5 x double]* %64, i32 0, i64 0
  %66 = load double* %65, align 8
  %67 = load double* %pivot, align 8
  %68 = fmul double %66, %67
  %69 = load [5 x double]** %2, align 8
  %70 = getelementptr inbounds [5 x double]* %69, i64 2
  %71 = getelementptr inbounds [5 x double]* %70, i32 0, i64 0
  store double %68, double* %71, align 8
  %72 = load [5 x double]** %2, align 8
  %73 = getelementptr inbounds [5 x double]* %72, i64 3
  %74 = getelementptr inbounds [5 x double]* %73, i32 0, i64 0
  %75 = load double* %74, align 8
  %76 = load double* %pivot, align 8
  %77 = fmul double %75, %76
  %78 = load [5 x double]** %2, align 8
  %79 = getelementptr inbounds [5 x double]* %78, i64 3
  %80 = getelementptr inbounds [5 x double]* %79, i32 0, i64 0
  store double %77, double* %80, align 8
  %81 = load [5 x double]** %2, align 8
  %82 = getelementptr inbounds [5 x double]* %81, i64 4
  %83 = getelementptr inbounds [5 x double]* %82, i32 0, i64 0
  %84 = load double* %83, align 8
  %85 = load double* %pivot, align 8
  %86 = fmul double %84, %85
  %87 = load [5 x double]** %2, align 8
  %88 = getelementptr inbounds [5 x double]* %87, i64 4
  %89 = getelementptr inbounds [5 x double]* %88, i32 0, i64 0
  store double %86, double* %89, align 8
  %90 = load double** %3, align 8
  %91 = getelementptr inbounds double* %90, i64 0
  %92 = load double* %91, align 8
  %93 = load double* %pivot, align 8
  %94 = fmul double %92, %93
  %95 = load double** %3, align 8
  %96 = getelementptr inbounds double* %95, i64 0
  store double %94, double* %96, align 8
  %97 = load [5 x double]** %1, align 8
  %98 = getelementptr inbounds [5 x double]* %97, i64 0
  %99 = getelementptr inbounds [5 x double]* %98, i32 0, i64 1
  %100 = load double* %99, align 8
  store double %100, double* %coeff, align 8
  %101 = load [5 x double]** %1, align 8
  %102 = getelementptr inbounds [5 x double]* %101, i64 1
  %103 = getelementptr inbounds [5 x double]* %102, i32 0, i64 1
  %104 = load double* %103, align 8
  %105 = load double* %coeff, align 8
  %106 = load [5 x double]** %1, align 8
  %107 = getelementptr inbounds [5 x double]* %106, i64 1
  %108 = getelementptr inbounds [5 x double]* %107, i32 0, i64 0
  %109 = load double* %108, align 8
  %110 = fmul double %105, %109
  %111 = fsub double %104, %110
  %112 = load [5 x double]** %1, align 8
  %113 = getelementptr inbounds [5 x double]* %112, i64 1
  %114 = getelementptr inbounds [5 x double]* %113, i32 0, i64 1
  store double %111, double* %114, align 8
  %115 = load [5 x double]** %1, align 8
  %116 = getelementptr inbounds [5 x double]* %115, i64 2
  %117 = getelementptr inbounds [5 x double]* %116, i32 0, i64 1
  %118 = load double* %117, align 8
  %119 = load double* %coeff, align 8
  %120 = load [5 x double]** %1, align 8
  %121 = getelementptr inbounds [5 x double]* %120, i64 2
  %122 = getelementptr inbounds [5 x double]* %121, i32 0, i64 0
  %123 = load double* %122, align 8
  %124 = fmul double %119, %123
  %125 = fsub double %118, %124
  %126 = load [5 x double]** %1, align 8
  %127 = getelementptr inbounds [5 x double]* %126, i64 2
  %128 = getelementptr inbounds [5 x double]* %127, i32 0, i64 1
  store double %125, double* %128, align 8
  %129 = load [5 x double]** %1, align 8
  %130 = getelementptr inbounds [5 x double]* %129, i64 3
  %131 = getelementptr inbounds [5 x double]* %130, i32 0, i64 1
  %132 = load double* %131, align 8
  %133 = load double* %coeff, align 8
  %134 = load [5 x double]** %1, align 8
  %135 = getelementptr inbounds [5 x double]* %134, i64 3
  %136 = getelementptr inbounds [5 x double]* %135, i32 0, i64 0
  %137 = load double* %136, align 8
  %138 = fmul double %133, %137
  %139 = fsub double %132, %138
  %140 = load [5 x double]** %1, align 8
  %141 = getelementptr inbounds [5 x double]* %140, i64 3
  %142 = getelementptr inbounds [5 x double]* %141, i32 0, i64 1
  store double %139, double* %142, align 8
  %143 = load [5 x double]** %1, align 8
  %144 = getelementptr inbounds [5 x double]* %143, i64 4
  %145 = getelementptr inbounds [5 x double]* %144, i32 0, i64 1
  %146 = load double* %145, align 8
  %147 = load double* %coeff, align 8
  %148 = load [5 x double]** %1, align 8
  %149 = getelementptr inbounds [5 x double]* %148, i64 4
  %150 = getelementptr inbounds [5 x double]* %149, i32 0, i64 0
  %151 = load double* %150, align 8
  %152 = fmul double %147, %151
  %153 = fsub double %146, %152
  %154 = load [5 x double]** %1, align 8
  %155 = getelementptr inbounds [5 x double]* %154, i64 4
  %156 = getelementptr inbounds [5 x double]* %155, i32 0, i64 1
  store double %153, double* %156, align 8
  %157 = load [5 x double]** %2, align 8
  %158 = getelementptr inbounds [5 x double]* %157, i64 0
  %159 = getelementptr inbounds [5 x double]* %158, i32 0, i64 1
  %160 = load double* %159, align 8
  %161 = load double* %coeff, align 8
  %162 = load [5 x double]** %2, align 8
  %163 = getelementptr inbounds [5 x double]* %162, i64 0
  %164 = getelementptr inbounds [5 x double]* %163, i32 0, i64 0
  %165 = load double* %164, align 8
  %166 = fmul double %161, %165
  %167 = fsub double %160, %166
  %168 = load [5 x double]** %2, align 8
  %169 = getelementptr inbounds [5 x double]* %168, i64 0
  %170 = getelementptr inbounds [5 x double]* %169, i32 0, i64 1
  store double %167, double* %170, align 8
  %171 = load [5 x double]** %2, align 8
  %172 = getelementptr inbounds [5 x double]* %171, i64 1
  %173 = getelementptr inbounds [5 x double]* %172, i32 0, i64 1
  %174 = load double* %173, align 8
  %175 = load double* %coeff, align 8
  %176 = load [5 x double]** %2, align 8
  %177 = getelementptr inbounds [5 x double]* %176, i64 1
  %178 = getelementptr inbounds [5 x double]* %177, i32 0, i64 0
  %179 = load double* %178, align 8
  %180 = fmul double %175, %179
  %181 = fsub double %174, %180
  %182 = load [5 x double]** %2, align 8
  %183 = getelementptr inbounds [5 x double]* %182, i64 1
  %184 = getelementptr inbounds [5 x double]* %183, i32 0, i64 1
  store double %181, double* %184, align 8
  %185 = load [5 x double]** %2, align 8
  %186 = getelementptr inbounds [5 x double]* %185, i64 2
  %187 = getelementptr inbounds [5 x double]* %186, i32 0, i64 1
  %188 = load double* %187, align 8
  %189 = load double* %coeff, align 8
  %190 = load [5 x double]** %2, align 8
  %191 = getelementptr inbounds [5 x double]* %190, i64 2
  %192 = getelementptr inbounds [5 x double]* %191, i32 0, i64 0
  %193 = load double* %192, align 8
  %194 = fmul double %189, %193
  %195 = fsub double %188, %194
  %196 = load [5 x double]** %2, align 8
  %197 = getelementptr inbounds [5 x double]* %196, i64 2
  %198 = getelementptr inbounds [5 x double]* %197, i32 0, i64 1
  store double %195, double* %198, align 8
  %199 = load [5 x double]** %2, align 8
  %200 = getelementptr inbounds [5 x double]* %199, i64 3
  %201 = getelementptr inbounds [5 x double]* %200, i32 0, i64 1
  %202 = load double* %201, align 8
  %203 = load double* %coeff, align 8
  %204 = load [5 x double]** %2, align 8
  %205 = getelementptr inbounds [5 x double]* %204, i64 3
  %206 = getelementptr inbounds [5 x double]* %205, i32 0, i64 0
  %207 = load double* %206, align 8
  %208 = fmul double %203, %207
  %209 = fsub double %202, %208
  %210 = load [5 x double]** %2, align 8
  %211 = getelementptr inbounds [5 x double]* %210, i64 3
  %212 = getelementptr inbounds [5 x double]* %211, i32 0, i64 1
  store double %209, double* %212, align 8
  %213 = load [5 x double]** %2, align 8
  %214 = getelementptr inbounds [5 x double]* %213, i64 4
  %215 = getelementptr inbounds [5 x double]* %214, i32 0, i64 1
  %216 = load double* %215, align 8
  %217 = load double* %coeff, align 8
  %218 = load [5 x double]** %2, align 8
  %219 = getelementptr inbounds [5 x double]* %218, i64 4
  %220 = getelementptr inbounds [5 x double]* %219, i32 0, i64 0
  %221 = load double* %220, align 8
  %222 = fmul double %217, %221
  %223 = fsub double %216, %222
  %224 = load [5 x double]** %2, align 8
  %225 = getelementptr inbounds [5 x double]* %224, i64 4
  %226 = getelementptr inbounds [5 x double]* %225, i32 0, i64 1
  store double %223, double* %226, align 8
  %227 = load double** %3, align 8
  %228 = getelementptr inbounds double* %227, i64 1
  %229 = load double* %228, align 8
  %230 = load double* %coeff, align 8
  %231 = load double** %3, align 8
  %232 = getelementptr inbounds double* %231, i64 0
  %233 = load double* %232, align 8
  %234 = fmul double %230, %233
  %235 = fsub double %229, %234
  %236 = load double** %3, align 8
  %237 = getelementptr inbounds double* %236, i64 1
  store double %235, double* %237, align 8
  %238 = load [5 x double]** %1, align 8
  %239 = getelementptr inbounds [5 x double]* %238, i64 0
  %240 = getelementptr inbounds [5 x double]* %239, i32 0, i64 2
  %241 = load double* %240, align 8
  store double %241, double* %coeff, align 8
  %242 = load [5 x double]** %1, align 8
  %243 = getelementptr inbounds [5 x double]* %242, i64 1
  %244 = getelementptr inbounds [5 x double]* %243, i32 0, i64 2
  %245 = load double* %244, align 8
  %246 = load double* %coeff, align 8
  %247 = load [5 x double]** %1, align 8
  %248 = getelementptr inbounds [5 x double]* %247, i64 1
  %249 = getelementptr inbounds [5 x double]* %248, i32 0, i64 0
  %250 = load double* %249, align 8
  %251 = fmul double %246, %250
  %252 = fsub double %245, %251
  %253 = load [5 x double]** %1, align 8
  %254 = getelementptr inbounds [5 x double]* %253, i64 1
  %255 = getelementptr inbounds [5 x double]* %254, i32 0, i64 2
  store double %252, double* %255, align 8
  %256 = load [5 x double]** %1, align 8
  %257 = getelementptr inbounds [5 x double]* %256, i64 2
  %258 = getelementptr inbounds [5 x double]* %257, i32 0, i64 2
  %259 = load double* %258, align 8
  %260 = load double* %coeff, align 8
  %261 = load [5 x double]** %1, align 8
  %262 = getelementptr inbounds [5 x double]* %261, i64 2
  %263 = getelementptr inbounds [5 x double]* %262, i32 0, i64 0
  %264 = load double* %263, align 8
  %265 = fmul double %260, %264
  %266 = fsub double %259, %265
  %267 = load [5 x double]** %1, align 8
  %268 = getelementptr inbounds [5 x double]* %267, i64 2
  %269 = getelementptr inbounds [5 x double]* %268, i32 0, i64 2
  store double %266, double* %269, align 8
  %270 = load [5 x double]** %1, align 8
  %271 = getelementptr inbounds [5 x double]* %270, i64 3
  %272 = getelementptr inbounds [5 x double]* %271, i32 0, i64 2
  %273 = load double* %272, align 8
  %274 = load double* %coeff, align 8
  %275 = load [5 x double]** %1, align 8
  %276 = getelementptr inbounds [5 x double]* %275, i64 3
  %277 = getelementptr inbounds [5 x double]* %276, i32 0, i64 0
  %278 = load double* %277, align 8
  %279 = fmul double %274, %278
  %280 = fsub double %273, %279
  %281 = load [5 x double]** %1, align 8
  %282 = getelementptr inbounds [5 x double]* %281, i64 3
  %283 = getelementptr inbounds [5 x double]* %282, i32 0, i64 2
  store double %280, double* %283, align 8
  %284 = load [5 x double]** %1, align 8
  %285 = getelementptr inbounds [5 x double]* %284, i64 4
  %286 = getelementptr inbounds [5 x double]* %285, i32 0, i64 2
  %287 = load double* %286, align 8
  %288 = load double* %coeff, align 8
  %289 = load [5 x double]** %1, align 8
  %290 = getelementptr inbounds [5 x double]* %289, i64 4
  %291 = getelementptr inbounds [5 x double]* %290, i32 0, i64 0
  %292 = load double* %291, align 8
  %293 = fmul double %288, %292
  %294 = fsub double %287, %293
  %295 = load [5 x double]** %1, align 8
  %296 = getelementptr inbounds [5 x double]* %295, i64 4
  %297 = getelementptr inbounds [5 x double]* %296, i32 0, i64 2
  store double %294, double* %297, align 8
  %298 = load [5 x double]** %2, align 8
  %299 = getelementptr inbounds [5 x double]* %298, i64 0
  %300 = getelementptr inbounds [5 x double]* %299, i32 0, i64 2
  %301 = load double* %300, align 8
  %302 = load double* %coeff, align 8
  %303 = load [5 x double]** %2, align 8
  %304 = getelementptr inbounds [5 x double]* %303, i64 0
  %305 = getelementptr inbounds [5 x double]* %304, i32 0, i64 0
  %306 = load double* %305, align 8
  %307 = fmul double %302, %306
  %308 = fsub double %301, %307
  %309 = load [5 x double]** %2, align 8
  %310 = getelementptr inbounds [5 x double]* %309, i64 0
  %311 = getelementptr inbounds [5 x double]* %310, i32 0, i64 2
  store double %308, double* %311, align 8
  %312 = load [5 x double]** %2, align 8
  %313 = getelementptr inbounds [5 x double]* %312, i64 1
  %314 = getelementptr inbounds [5 x double]* %313, i32 0, i64 2
  %315 = load double* %314, align 8
  %316 = load double* %coeff, align 8
  %317 = load [5 x double]** %2, align 8
  %318 = getelementptr inbounds [5 x double]* %317, i64 1
  %319 = getelementptr inbounds [5 x double]* %318, i32 0, i64 0
  %320 = load double* %319, align 8
  %321 = fmul double %316, %320
  %322 = fsub double %315, %321
  %323 = load [5 x double]** %2, align 8
  %324 = getelementptr inbounds [5 x double]* %323, i64 1
  %325 = getelementptr inbounds [5 x double]* %324, i32 0, i64 2
  store double %322, double* %325, align 8
  %326 = load [5 x double]** %2, align 8
  %327 = getelementptr inbounds [5 x double]* %326, i64 2
  %328 = getelementptr inbounds [5 x double]* %327, i32 0, i64 2
  %329 = load double* %328, align 8
  %330 = load double* %coeff, align 8
  %331 = load [5 x double]** %2, align 8
  %332 = getelementptr inbounds [5 x double]* %331, i64 2
  %333 = getelementptr inbounds [5 x double]* %332, i32 0, i64 0
  %334 = load double* %333, align 8
  %335 = fmul double %330, %334
  %336 = fsub double %329, %335
  %337 = load [5 x double]** %2, align 8
  %338 = getelementptr inbounds [5 x double]* %337, i64 2
  %339 = getelementptr inbounds [5 x double]* %338, i32 0, i64 2
  store double %336, double* %339, align 8
  %340 = load [5 x double]** %2, align 8
  %341 = getelementptr inbounds [5 x double]* %340, i64 3
  %342 = getelementptr inbounds [5 x double]* %341, i32 0, i64 2
  %343 = load double* %342, align 8
  %344 = load double* %coeff, align 8
  %345 = load [5 x double]** %2, align 8
  %346 = getelementptr inbounds [5 x double]* %345, i64 3
  %347 = getelementptr inbounds [5 x double]* %346, i32 0, i64 0
  %348 = load double* %347, align 8
  %349 = fmul double %344, %348
  %350 = fsub double %343, %349
  %351 = load [5 x double]** %2, align 8
  %352 = getelementptr inbounds [5 x double]* %351, i64 3
  %353 = getelementptr inbounds [5 x double]* %352, i32 0, i64 2
  store double %350, double* %353, align 8
  %354 = load [5 x double]** %2, align 8
  %355 = getelementptr inbounds [5 x double]* %354, i64 4
  %356 = getelementptr inbounds [5 x double]* %355, i32 0, i64 2
  %357 = load double* %356, align 8
  %358 = load double* %coeff, align 8
  %359 = load [5 x double]** %2, align 8
  %360 = getelementptr inbounds [5 x double]* %359, i64 4
  %361 = getelementptr inbounds [5 x double]* %360, i32 0, i64 0
  %362 = load double* %361, align 8
  %363 = fmul double %358, %362
  %364 = fsub double %357, %363
  %365 = load [5 x double]** %2, align 8
  %366 = getelementptr inbounds [5 x double]* %365, i64 4
  %367 = getelementptr inbounds [5 x double]* %366, i32 0, i64 2
  store double %364, double* %367, align 8
  %368 = load double** %3, align 8
  %369 = getelementptr inbounds double* %368, i64 2
  %370 = load double* %369, align 8
  %371 = load double* %coeff, align 8
  %372 = load double** %3, align 8
  %373 = getelementptr inbounds double* %372, i64 0
  %374 = load double* %373, align 8
  %375 = fmul double %371, %374
  %376 = fsub double %370, %375
  %377 = load double** %3, align 8
  %378 = getelementptr inbounds double* %377, i64 2
  store double %376, double* %378, align 8
  %379 = load [5 x double]** %1, align 8
  %380 = getelementptr inbounds [5 x double]* %379, i64 0
  %381 = getelementptr inbounds [5 x double]* %380, i32 0, i64 3
  %382 = load double* %381, align 8
  store double %382, double* %coeff, align 8
  %383 = load [5 x double]** %1, align 8
  %384 = getelementptr inbounds [5 x double]* %383, i64 1
  %385 = getelementptr inbounds [5 x double]* %384, i32 0, i64 3
  %386 = load double* %385, align 8
  %387 = load double* %coeff, align 8
  %388 = load [5 x double]** %1, align 8
  %389 = getelementptr inbounds [5 x double]* %388, i64 1
  %390 = getelementptr inbounds [5 x double]* %389, i32 0, i64 0
  %391 = load double* %390, align 8
  %392 = fmul double %387, %391
  %393 = fsub double %386, %392
  %394 = load [5 x double]** %1, align 8
  %395 = getelementptr inbounds [5 x double]* %394, i64 1
  %396 = getelementptr inbounds [5 x double]* %395, i32 0, i64 3
  store double %393, double* %396, align 8
  %397 = load [5 x double]** %1, align 8
  %398 = getelementptr inbounds [5 x double]* %397, i64 2
  %399 = getelementptr inbounds [5 x double]* %398, i32 0, i64 3
  %400 = load double* %399, align 8
  %401 = load double* %coeff, align 8
  %402 = load [5 x double]** %1, align 8
  %403 = getelementptr inbounds [5 x double]* %402, i64 2
  %404 = getelementptr inbounds [5 x double]* %403, i32 0, i64 0
  %405 = load double* %404, align 8
  %406 = fmul double %401, %405
  %407 = fsub double %400, %406
  %408 = load [5 x double]** %1, align 8
  %409 = getelementptr inbounds [5 x double]* %408, i64 2
  %410 = getelementptr inbounds [5 x double]* %409, i32 0, i64 3
  store double %407, double* %410, align 8
  %411 = load [5 x double]** %1, align 8
  %412 = getelementptr inbounds [5 x double]* %411, i64 3
  %413 = getelementptr inbounds [5 x double]* %412, i32 0, i64 3
  %414 = load double* %413, align 8
  %415 = load double* %coeff, align 8
  %416 = load [5 x double]** %1, align 8
  %417 = getelementptr inbounds [5 x double]* %416, i64 3
  %418 = getelementptr inbounds [5 x double]* %417, i32 0, i64 0
  %419 = load double* %418, align 8
  %420 = fmul double %415, %419
  %421 = fsub double %414, %420
  %422 = load [5 x double]** %1, align 8
  %423 = getelementptr inbounds [5 x double]* %422, i64 3
  %424 = getelementptr inbounds [5 x double]* %423, i32 0, i64 3
  store double %421, double* %424, align 8
  %425 = load [5 x double]** %1, align 8
  %426 = getelementptr inbounds [5 x double]* %425, i64 4
  %427 = getelementptr inbounds [5 x double]* %426, i32 0, i64 3
  %428 = load double* %427, align 8
  %429 = load double* %coeff, align 8
  %430 = load [5 x double]** %1, align 8
  %431 = getelementptr inbounds [5 x double]* %430, i64 4
  %432 = getelementptr inbounds [5 x double]* %431, i32 0, i64 0
  %433 = load double* %432, align 8
  %434 = fmul double %429, %433
  %435 = fsub double %428, %434
  %436 = load [5 x double]** %1, align 8
  %437 = getelementptr inbounds [5 x double]* %436, i64 4
  %438 = getelementptr inbounds [5 x double]* %437, i32 0, i64 3
  store double %435, double* %438, align 8
  %439 = load [5 x double]** %2, align 8
  %440 = getelementptr inbounds [5 x double]* %439, i64 0
  %441 = getelementptr inbounds [5 x double]* %440, i32 0, i64 3
  %442 = load double* %441, align 8
  %443 = load double* %coeff, align 8
  %444 = load [5 x double]** %2, align 8
  %445 = getelementptr inbounds [5 x double]* %444, i64 0
  %446 = getelementptr inbounds [5 x double]* %445, i32 0, i64 0
  %447 = load double* %446, align 8
  %448 = fmul double %443, %447
  %449 = fsub double %442, %448
  %450 = load [5 x double]** %2, align 8
  %451 = getelementptr inbounds [5 x double]* %450, i64 0
  %452 = getelementptr inbounds [5 x double]* %451, i32 0, i64 3
  store double %449, double* %452, align 8
  %453 = load [5 x double]** %2, align 8
  %454 = getelementptr inbounds [5 x double]* %453, i64 1
  %455 = getelementptr inbounds [5 x double]* %454, i32 0, i64 3
  %456 = load double* %455, align 8
  %457 = load double* %coeff, align 8
  %458 = load [5 x double]** %2, align 8
  %459 = getelementptr inbounds [5 x double]* %458, i64 1
  %460 = getelementptr inbounds [5 x double]* %459, i32 0, i64 0
  %461 = load double* %460, align 8
  %462 = fmul double %457, %461
  %463 = fsub double %456, %462
  %464 = load [5 x double]** %2, align 8
  %465 = getelementptr inbounds [5 x double]* %464, i64 1
  %466 = getelementptr inbounds [5 x double]* %465, i32 0, i64 3
  store double %463, double* %466, align 8
  %467 = load [5 x double]** %2, align 8
  %468 = getelementptr inbounds [5 x double]* %467, i64 2
  %469 = getelementptr inbounds [5 x double]* %468, i32 0, i64 3
  %470 = load double* %469, align 8
  %471 = load double* %coeff, align 8
  %472 = load [5 x double]** %2, align 8
  %473 = getelementptr inbounds [5 x double]* %472, i64 2
  %474 = getelementptr inbounds [5 x double]* %473, i32 0, i64 0
  %475 = load double* %474, align 8
  %476 = fmul double %471, %475
  %477 = fsub double %470, %476
  %478 = load [5 x double]** %2, align 8
  %479 = getelementptr inbounds [5 x double]* %478, i64 2
  %480 = getelementptr inbounds [5 x double]* %479, i32 0, i64 3
  store double %477, double* %480, align 8
  %481 = load [5 x double]** %2, align 8
  %482 = getelementptr inbounds [5 x double]* %481, i64 3
  %483 = getelementptr inbounds [5 x double]* %482, i32 0, i64 3
  %484 = load double* %483, align 8
  %485 = load double* %coeff, align 8
  %486 = load [5 x double]** %2, align 8
  %487 = getelementptr inbounds [5 x double]* %486, i64 3
  %488 = getelementptr inbounds [5 x double]* %487, i32 0, i64 0
  %489 = load double* %488, align 8
  %490 = fmul double %485, %489
  %491 = fsub double %484, %490
  %492 = load [5 x double]** %2, align 8
  %493 = getelementptr inbounds [5 x double]* %492, i64 3
  %494 = getelementptr inbounds [5 x double]* %493, i32 0, i64 3
  store double %491, double* %494, align 8
  %495 = load [5 x double]** %2, align 8
  %496 = getelementptr inbounds [5 x double]* %495, i64 4
  %497 = getelementptr inbounds [5 x double]* %496, i32 0, i64 3
  %498 = load double* %497, align 8
  %499 = load double* %coeff, align 8
  %500 = load [5 x double]** %2, align 8
  %501 = getelementptr inbounds [5 x double]* %500, i64 4
  %502 = getelementptr inbounds [5 x double]* %501, i32 0, i64 0
  %503 = load double* %502, align 8
  %504 = fmul double %499, %503
  %505 = fsub double %498, %504
  %506 = load [5 x double]** %2, align 8
  %507 = getelementptr inbounds [5 x double]* %506, i64 4
  %508 = getelementptr inbounds [5 x double]* %507, i32 0, i64 3
  store double %505, double* %508, align 8
  %509 = load double** %3, align 8
  %510 = getelementptr inbounds double* %509, i64 3
  %511 = load double* %510, align 8
  %512 = load double* %coeff, align 8
  %513 = load double** %3, align 8
  %514 = getelementptr inbounds double* %513, i64 0
  %515 = load double* %514, align 8
  %516 = fmul double %512, %515
  %517 = fsub double %511, %516
  %518 = load double** %3, align 8
  %519 = getelementptr inbounds double* %518, i64 3
  store double %517, double* %519, align 8
  %520 = load [5 x double]** %1, align 8
  %521 = getelementptr inbounds [5 x double]* %520, i64 0
  %522 = getelementptr inbounds [5 x double]* %521, i32 0, i64 4
  %523 = load double* %522, align 8
  store double %523, double* %coeff, align 8
  %524 = load [5 x double]** %1, align 8
  %525 = getelementptr inbounds [5 x double]* %524, i64 1
  %526 = getelementptr inbounds [5 x double]* %525, i32 0, i64 4
  %527 = load double* %526, align 8
  %528 = load double* %coeff, align 8
  %529 = load [5 x double]** %1, align 8
  %530 = getelementptr inbounds [5 x double]* %529, i64 1
  %531 = getelementptr inbounds [5 x double]* %530, i32 0, i64 0
  %532 = load double* %531, align 8
  %533 = fmul double %528, %532
  %534 = fsub double %527, %533
  %535 = load [5 x double]** %1, align 8
  %536 = getelementptr inbounds [5 x double]* %535, i64 1
  %537 = getelementptr inbounds [5 x double]* %536, i32 0, i64 4
  store double %534, double* %537, align 8
  %538 = load [5 x double]** %1, align 8
  %539 = getelementptr inbounds [5 x double]* %538, i64 2
  %540 = getelementptr inbounds [5 x double]* %539, i32 0, i64 4
  %541 = load double* %540, align 8
  %542 = load double* %coeff, align 8
  %543 = load [5 x double]** %1, align 8
  %544 = getelementptr inbounds [5 x double]* %543, i64 2
  %545 = getelementptr inbounds [5 x double]* %544, i32 0, i64 0
  %546 = load double* %545, align 8
  %547 = fmul double %542, %546
  %548 = fsub double %541, %547
  %549 = load [5 x double]** %1, align 8
  %550 = getelementptr inbounds [5 x double]* %549, i64 2
  %551 = getelementptr inbounds [5 x double]* %550, i32 0, i64 4
  store double %548, double* %551, align 8
  %552 = load [5 x double]** %1, align 8
  %553 = getelementptr inbounds [5 x double]* %552, i64 3
  %554 = getelementptr inbounds [5 x double]* %553, i32 0, i64 4
  %555 = load double* %554, align 8
  %556 = load double* %coeff, align 8
  %557 = load [5 x double]** %1, align 8
  %558 = getelementptr inbounds [5 x double]* %557, i64 3
  %559 = getelementptr inbounds [5 x double]* %558, i32 0, i64 0
  %560 = load double* %559, align 8
  %561 = fmul double %556, %560
  %562 = fsub double %555, %561
  %563 = load [5 x double]** %1, align 8
  %564 = getelementptr inbounds [5 x double]* %563, i64 3
  %565 = getelementptr inbounds [5 x double]* %564, i32 0, i64 4
  store double %562, double* %565, align 8
  %566 = load [5 x double]** %1, align 8
  %567 = getelementptr inbounds [5 x double]* %566, i64 4
  %568 = getelementptr inbounds [5 x double]* %567, i32 0, i64 4
  %569 = load double* %568, align 8
  %570 = load double* %coeff, align 8
  %571 = load [5 x double]** %1, align 8
  %572 = getelementptr inbounds [5 x double]* %571, i64 4
  %573 = getelementptr inbounds [5 x double]* %572, i32 0, i64 0
  %574 = load double* %573, align 8
  %575 = fmul double %570, %574
  %576 = fsub double %569, %575
  %577 = load [5 x double]** %1, align 8
  %578 = getelementptr inbounds [5 x double]* %577, i64 4
  %579 = getelementptr inbounds [5 x double]* %578, i32 0, i64 4
  store double %576, double* %579, align 8
  %580 = load [5 x double]** %2, align 8
  %581 = getelementptr inbounds [5 x double]* %580, i64 0
  %582 = getelementptr inbounds [5 x double]* %581, i32 0, i64 4
  %583 = load double* %582, align 8
  %584 = load double* %coeff, align 8
  %585 = load [5 x double]** %2, align 8
  %586 = getelementptr inbounds [5 x double]* %585, i64 0
  %587 = getelementptr inbounds [5 x double]* %586, i32 0, i64 0
  %588 = load double* %587, align 8
  %589 = fmul double %584, %588
  %590 = fsub double %583, %589
  %591 = load [5 x double]** %2, align 8
  %592 = getelementptr inbounds [5 x double]* %591, i64 0
  %593 = getelementptr inbounds [5 x double]* %592, i32 0, i64 4
  store double %590, double* %593, align 8
  %594 = load [5 x double]** %2, align 8
  %595 = getelementptr inbounds [5 x double]* %594, i64 1
  %596 = getelementptr inbounds [5 x double]* %595, i32 0, i64 4
  %597 = load double* %596, align 8
  %598 = load double* %coeff, align 8
  %599 = load [5 x double]** %2, align 8
  %600 = getelementptr inbounds [5 x double]* %599, i64 1
  %601 = getelementptr inbounds [5 x double]* %600, i32 0, i64 0
  %602 = load double* %601, align 8
  %603 = fmul double %598, %602
  %604 = fsub double %597, %603
  %605 = load [5 x double]** %2, align 8
  %606 = getelementptr inbounds [5 x double]* %605, i64 1
  %607 = getelementptr inbounds [5 x double]* %606, i32 0, i64 4
  store double %604, double* %607, align 8
  %608 = load [5 x double]** %2, align 8
  %609 = getelementptr inbounds [5 x double]* %608, i64 2
  %610 = getelementptr inbounds [5 x double]* %609, i32 0, i64 4
  %611 = load double* %610, align 8
  %612 = load double* %coeff, align 8
  %613 = load [5 x double]** %2, align 8
  %614 = getelementptr inbounds [5 x double]* %613, i64 2
  %615 = getelementptr inbounds [5 x double]* %614, i32 0, i64 0
  %616 = load double* %615, align 8
  %617 = fmul double %612, %616
  %618 = fsub double %611, %617
  %619 = load [5 x double]** %2, align 8
  %620 = getelementptr inbounds [5 x double]* %619, i64 2
  %621 = getelementptr inbounds [5 x double]* %620, i32 0, i64 4
  store double %618, double* %621, align 8
  %622 = load [5 x double]** %2, align 8
  %623 = getelementptr inbounds [5 x double]* %622, i64 3
  %624 = getelementptr inbounds [5 x double]* %623, i32 0, i64 4
  %625 = load double* %624, align 8
  %626 = load double* %coeff, align 8
  %627 = load [5 x double]** %2, align 8
  %628 = getelementptr inbounds [5 x double]* %627, i64 3
  %629 = getelementptr inbounds [5 x double]* %628, i32 0, i64 0
  %630 = load double* %629, align 8
  %631 = fmul double %626, %630
  %632 = fsub double %625, %631
  %633 = load [5 x double]** %2, align 8
  %634 = getelementptr inbounds [5 x double]* %633, i64 3
  %635 = getelementptr inbounds [5 x double]* %634, i32 0, i64 4
  store double %632, double* %635, align 8
  %636 = load [5 x double]** %2, align 8
  %637 = getelementptr inbounds [5 x double]* %636, i64 4
  %638 = getelementptr inbounds [5 x double]* %637, i32 0, i64 4
  %639 = load double* %638, align 8
  %640 = load double* %coeff, align 8
  %641 = load [5 x double]** %2, align 8
  %642 = getelementptr inbounds [5 x double]* %641, i64 4
  %643 = getelementptr inbounds [5 x double]* %642, i32 0, i64 0
  %644 = load double* %643, align 8
  %645 = fmul double %640, %644
  %646 = fsub double %639, %645
  %647 = load [5 x double]** %2, align 8
  %648 = getelementptr inbounds [5 x double]* %647, i64 4
  %649 = getelementptr inbounds [5 x double]* %648, i32 0, i64 4
  store double %646, double* %649, align 8
  %650 = load double** %3, align 8
  %651 = getelementptr inbounds double* %650, i64 4
  %652 = load double* %651, align 8
  %653 = load double* %coeff, align 8
  %654 = load double** %3, align 8
  %655 = getelementptr inbounds double* %654, i64 0
  %656 = load double* %655, align 8
  %657 = fmul double %653, %656
  %658 = fsub double %652, %657
  %659 = load double** %3, align 8
  %660 = getelementptr inbounds double* %659, i64 4
  store double %658, double* %660, align 8
  %661 = load [5 x double]** %1, align 8
  %662 = getelementptr inbounds [5 x double]* %661, i64 1
  %663 = getelementptr inbounds [5 x double]* %662, i32 0, i64 1
  %664 = load double* %663, align 8
  %665 = fdiv double 1.000000e+00, %664
  store double %665, double* %pivot, align 8
  %666 = load [5 x double]** %1, align 8
  %667 = getelementptr inbounds [5 x double]* %666, i64 2
  %668 = getelementptr inbounds [5 x double]* %667, i32 0, i64 1
  %669 = load double* %668, align 8
  %670 = load double* %pivot, align 8
  %671 = fmul double %669, %670
  %672 = load [5 x double]** %1, align 8
  %673 = getelementptr inbounds [5 x double]* %672, i64 2
  %674 = getelementptr inbounds [5 x double]* %673, i32 0, i64 1
  store double %671, double* %674, align 8
  %675 = load [5 x double]** %1, align 8
  %676 = getelementptr inbounds [5 x double]* %675, i64 3
  %677 = getelementptr inbounds [5 x double]* %676, i32 0, i64 1
  %678 = load double* %677, align 8
  %679 = load double* %pivot, align 8
  %680 = fmul double %678, %679
  %681 = load [5 x double]** %1, align 8
  %682 = getelementptr inbounds [5 x double]* %681, i64 3
  %683 = getelementptr inbounds [5 x double]* %682, i32 0, i64 1
  store double %680, double* %683, align 8
  %684 = load [5 x double]** %1, align 8
  %685 = getelementptr inbounds [5 x double]* %684, i64 4
  %686 = getelementptr inbounds [5 x double]* %685, i32 0, i64 1
  %687 = load double* %686, align 8
  %688 = load double* %pivot, align 8
  %689 = fmul double %687, %688
  %690 = load [5 x double]** %1, align 8
  %691 = getelementptr inbounds [5 x double]* %690, i64 4
  %692 = getelementptr inbounds [5 x double]* %691, i32 0, i64 1
  store double %689, double* %692, align 8
  %693 = load [5 x double]** %2, align 8
  %694 = getelementptr inbounds [5 x double]* %693, i64 0
  %695 = getelementptr inbounds [5 x double]* %694, i32 0, i64 1
  %696 = load double* %695, align 8
  %697 = load double* %pivot, align 8
  %698 = fmul double %696, %697
  %699 = load [5 x double]** %2, align 8
  %700 = getelementptr inbounds [5 x double]* %699, i64 0
  %701 = getelementptr inbounds [5 x double]* %700, i32 0, i64 1
  store double %698, double* %701, align 8
  %702 = load [5 x double]** %2, align 8
  %703 = getelementptr inbounds [5 x double]* %702, i64 1
  %704 = getelementptr inbounds [5 x double]* %703, i32 0, i64 1
  %705 = load double* %704, align 8
  %706 = load double* %pivot, align 8
  %707 = fmul double %705, %706
  %708 = load [5 x double]** %2, align 8
  %709 = getelementptr inbounds [5 x double]* %708, i64 1
  %710 = getelementptr inbounds [5 x double]* %709, i32 0, i64 1
  store double %707, double* %710, align 8
  %711 = load [5 x double]** %2, align 8
  %712 = getelementptr inbounds [5 x double]* %711, i64 2
  %713 = getelementptr inbounds [5 x double]* %712, i32 0, i64 1
  %714 = load double* %713, align 8
  %715 = load double* %pivot, align 8
  %716 = fmul double %714, %715
  %717 = load [5 x double]** %2, align 8
  %718 = getelementptr inbounds [5 x double]* %717, i64 2
  %719 = getelementptr inbounds [5 x double]* %718, i32 0, i64 1
  store double %716, double* %719, align 8
  %720 = load [5 x double]** %2, align 8
  %721 = getelementptr inbounds [5 x double]* %720, i64 3
  %722 = getelementptr inbounds [5 x double]* %721, i32 0, i64 1
  %723 = load double* %722, align 8
  %724 = load double* %pivot, align 8
  %725 = fmul double %723, %724
  %726 = load [5 x double]** %2, align 8
  %727 = getelementptr inbounds [5 x double]* %726, i64 3
  %728 = getelementptr inbounds [5 x double]* %727, i32 0, i64 1
  store double %725, double* %728, align 8
  %729 = load [5 x double]** %2, align 8
  %730 = getelementptr inbounds [5 x double]* %729, i64 4
  %731 = getelementptr inbounds [5 x double]* %730, i32 0, i64 1
  %732 = load double* %731, align 8
  %733 = load double* %pivot, align 8
  %734 = fmul double %732, %733
  %735 = load [5 x double]** %2, align 8
  %736 = getelementptr inbounds [5 x double]* %735, i64 4
  %737 = getelementptr inbounds [5 x double]* %736, i32 0, i64 1
  store double %734, double* %737, align 8
  %738 = load double** %3, align 8
  %739 = getelementptr inbounds double* %738, i64 1
  %740 = load double* %739, align 8
  %741 = load double* %pivot, align 8
  %742 = fmul double %740, %741
  %743 = load double** %3, align 8
  %744 = getelementptr inbounds double* %743, i64 1
  store double %742, double* %744, align 8
  %745 = load [5 x double]** %1, align 8
  %746 = getelementptr inbounds [5 x double]* %745, i64 1
  %747 = getelementptr inbounds [5 x double]* %746, i32 0, i64 0
  %748 = load double* %747, align 8
  store double %748, double* %coeff, align 8
  %749 = load [5 x double]** %1, align 8
  %750 = getelementptr inbounds [5 x double]* %749, i64 2
  %751 = getelementptr inbounds [5 x double]* %750, i32 0, i64 0
  %752 = load double* %751, align 8
  %753 = load double* %coeff, align 8
  %754 = load [5 x double]** %1, align 8
  %755 = getelementptr inbounds [5 x double]* %754, i64 2
  %756 = getelementptr inbounds [5 x double]* %755, i32 0, i64 1
  %757 = load double* %756, align 8
  %758 = fmul double %753, %757
  %759 = fsub double %752, %758
  %760 = load [5 x double]** %1, align 8
  %761 = getelementptr inbounds [5 x double]* %760, i64 2
  %762 = getelementptr inbounds [5 x double]* %761, i32 0, i64 0
  store double %759, double* %762, align 8
  %763 = load [5 x double]** %1, align 8
  %764 = getelementptr inbounds [5 x double]* %763, i64 3
  %765 = getelementptr inbounds [5 x double]* %764, i32 0, i64 0
  %766 = load double* %765, align 8
  %767 = load double* %coeff, align 8
  %768 = load [5 x double]** %1, align 8
  %769 = getelementptr inbounds [5 x double]* %768, i64 3
  %770 = getelementptr inbounds [5 x double]* %769, i32 0, i64 1
  %771 = load double* %770, align 8
  %772 = fmul double %767, %771
  %773 = fsub double %766, %772
  %774 = load [5 x double]** %1, align 8
  %775 = getelementptr inbounds [5 x double]* %774, i64 3
  %776 = getelementptr inbounds [5 x double]* %775, i32 0, i64 0
  store double %773, double* %776, align 8
  %777 = load [5 x double]** %1, align 8
  %778 = getelementptr inbounds [5 x double]* %777, i64 4
  %779 = getelementptr inbounds [5 x double]* %778, i32 0, i64 0
  %780 = load double* %779, align 8
  %781 = load double* %coeff, align 8
  %782 = load [5 x double]** %1, align 8
  %783 = getelementptr inbounds [5 x double]* %782, i64 4
  %784 = getelementptr inbounds [5 x double]* %783, i32 0, i64 1
  %785 = load double* %784, align 8
  %786 = fmul double %781, %785
  %787 = fsub double %780, %786
  %788 = load [5 x double]** %1, align 8
  %789 = getelementptr inbounds [5 x double]* %788, i64 4
  %790 = getelementptr inbounds [5 x double]* %789, i32 0, i64 0
  store double %787, double* %790, align 8
  %791 = load [5 x double]** %2, align 8
  %792 = getelementptr inbounds [5 x double]* %791, i64 0
  %793 = getelementptr inbounds [5 x double]* %792, i32 0, i64 0
  %794 = load double* %793, align 8
  %795 = load double* %coeff, align 8
  %796 = load [5 x double]** %2, align 8
  %797 = getelementptr inbounds [5 x double]* %796, i64 0
  %798 = getelementptr inbounds [5 x double]* %797, i32 0, i64 1
  %799 = load double* %798, align 8
  %800 = fmul double %795, %799
  %801 = fsub double %794, %800
  %802 = load [5 x double]** %2, align 8
  %803 = getelementptr inbounds [5 x double]* %802, i64 0
  %804 = getelementptr inbounds [5 x double]* %803, i32 0, i64 0
  store double %801, double* %804, align 8
  %805 = load [5 x double]** %2, align 8
  %806 = getelementptr inbounds [5 x double]* %805, i64 1
  %807 = getelementptr inbounds [5 x double]* %806, i32 0, i64 0
  %808 = load double* %807, align 8
  %809 = load double* %coeff, align 8
  %810 = load [5 x double]** %2, align 8
  %811 = getelementptr inbounds [5 x double]* %810, i64 1
  %812 = getelementptr inbounds [5 x double]* %811, i32 0, i64 1
  %813 = load double* %812, align 8
  %814 = fmul double %809, %813
  %815 = fsub double %808, %814
  %816 = load [5 x double]** %2, align 8
  %817 = getelementptr inbounds [5 x double]* %816, i64 1
  %818 = getelementptr inbounds [5 x double]* %817, i32 0, i64 0
  store double %815, double* %818, align 8
  %819 = load [5 x double]** %2, align 8
  %820 = getelementptr inbounds [5 x double]* %819, i64 2
  %821 = getelementptr inbounds [5 x double]* %820, i32 0, i64 0
  %822 = load double* %821, align 8
  %823 = load double* %coeff, align 8
  %824 = load [5 x double]** %2, align 8
  %825 = getelementptr inbounds [5 x double]* %824, i64 2
  %826 = getelementptr inbounds [5 x double]* %825, i32 0, i64 1
  %827 = load double* %826, align 8
  %828 = fmul double %823, %827
  %829 = fsub double %822, %828
  %830 = load [5 x double]** %2, align 8
  %831 = getelementptr inbounds [5 x double]* %830, i64 2
  %832 = getelementptr inbounds [5 x double]* %831, i32 0, i64 0
  store double %829, double* %832, align 8
  %833 = load [5 x double]** %2, align 8
  %834 = getelementptr inbounds [5 x double]* %833, i64 3
  %835 = getelementptr inbounds [5 x double]* %834, i32 0, i64 0
  %836 = load double* %835, align 8
  %837 = load double* %coeff, align 8
  %838 = load [5 x double]** %2, align 8
  %839 = getelementptr inbounds [5 x double]* %838, i64 3
  %840 = getelementptr inbounds [5 x double]* %839, i32 0, i64 1
  %841 = load double* %840, align 8
  %842 = fmul double %837, %841
  %843 = fsub double %836, %842
  %844 = load [5 x double]** %2, align 8
  %845 = getelementptr inbounds [5 x double]* %844, i64 3
  %846 = getelementptr inbounds [5 x double]* %845, i32 0, i64 0
  store double %843, double* %846, align 8
  %847 = load [5 x double]** %2, align 8
  %848 = getelementptr inbounds [5 x double]* %847, i64 4
  %849 = getelementptr inbounds [5 x double]* %848, i32 0, i64 0
  %850 = load double* %849, align 8
  %851 = load double* %coeff, align 8
  %852 = load [5 x double]** %2, align 8
  %853 = getelementptr inbounds [5 x double]* %852, i64 4
  %854 = getelementptr inbounds [5 x double]* %853, i32 0, i64 1
  %855 = load double* %854, align 8
  %856 = fmul double %851, %855
  %857 = fsub double %850, %856
  %858 = load [5 x double]** %2, align 8
  %859 = getelementptr inbounds [5 x double]* %858, i64 4
  %860 = getelementptr inbounds [5 x double]* %859, i32 0, i64 0
  store double %857, double* %860, align 8
  %861 = load double** %3, align 8
  %862 = getelementptr inbounds double* %861, i64 0
  %863 = load double* %862, align 8
  %864 = load double* %coeff, align 8
  %865 = load double** %3, align 8
  %866 = getelementptr inbounds double* %865, i64 1
  %867 = load double* %866, align 8
  %868 = fmul double %864, %867
  %869 = fsub double %863, %868
  %870 = load double** %3, align 8
  %871 = getelementptr inbounds double* %870, i64 0
  store double %869, double* %871, align 8
  %872 = load [5 x double]** %1, align 8
  %873 = getelementptr inbounds [5 x double]* %872, i64 1
  %874 = getelementptr inbounds [5 x double]* %873, i32 0, i64 2
  %875 = load double* %874, align 8
  store double %875, double* %coeff, align 8
  %876 = load [5 x double]** %1, align 8
  %877 = getelementptr inbounds [5 x double]* %876, i64 2
  %878 = getelementptr inbounds [5 x double]* %877, i32 0, i64 2
  %879 = load double* %878, align 8
  %880 = load double* %coeff, align 8
  %881 = load [5 x double]** %1, align 8
  %882 = getelementptr inbounds [5 x double]* %881, i64 2
  %883 = getelementptr inbounds [5 x double]* %882, i32 0, i64 1
  %884 = load double* %883, align 8
  %885 = fmul double %880, %884
  %886 = fsub double %879, %885
  %887 = load [5 x double]** %1, align 8
  %888 = getelementptr inbounds [5 x double]* %887, i64 2
  %889 = getelementptr inbounds [5 x double]* %888, i32 0, i64 2
  store double %886, double* %889, align 8
  %890 = load [5 x double]** %1, align 8
  %891 = getelementptr inbounds [5 x double]* %890, i64 3
  %892 = getelementptr inbounds [5 x double]* %891, i32 0, i64 2
  %893 = load double* %892, align 8
  %894 = load double* %coeff, align 8
  %895 = load [5 x double]** %1, align 8
  %896 = getelementptr inbounds [5 x double]* %895, i64 3
  %897 = getelementptr inbounds [5 x double]* %896, i32 0, i64 1
  %898 = load double* %897, align 8
  %899 = fmul double %894, %898
  %900 = fsub double %893, %899
  %901 = load [5 x double]** %1, align 8
  %902 = getelementptr inbounds [5 x double]* %901, i64 3
  %903 = getelementptr inbounds [5 x double]* %902, i32 0, i64 2
  store double %900, double* %903, align 8
  %904 = load [5 x double]** %1, align 8
  %905 = getelementptr inbounds [5 x double]* %904, i64 4
  %906 = getelementptr inbounds [5 x double]* %905, i32 0, i64 2
  %907 = load double* %906, align 8
  %908 = load double* %coeff, align 8
  %909 = load [5 x double]** %1, align 8
  %910 = getelementptr inbounds [5 x double]* %909, i64 4
  %911 = getelementptr inbounds [5 x double]* %910, i32 0, i64 1
  %912 = load double* %911, align 8
  %913 = fmul double %908, %912
  %914 = fsub double %907, %913
  %915 = load [5 x double]** %1, align 8
  %916 = getelementptr inbounds [5 x double]* %915, i64 4
  %917 = getelementptr inbounds [5 x double]* %916, i32 0, i64 2
  store double %914, double* %917, align 8
  %918 = load [5 x double]** %2, align 8
  %919 = getelementptr inbounds [5 x double]* %918, i64 0
  %920 = getelementptr inbounds [5 x double]* %919, i32 0, i64 2
  %921 = load double* %920, align 8
  %922 = load double* %coeff, align 8
  %923 = load [5 x double]** %2, align 8
  %924 = getelementptr inbounds [5 x double]* %923, i64 0
  %925 = getelementptr inbounds [5 x double]* %924, i32 0, i64 1
  %926 = load double* %925, align 8
  %927 = fmul double %922, %926
  %928 = fsub double %921, %927
  %929 = load [5 x double]** %2, align 8
  %930 = getelementptr inbounds [5 x double]* %929, i64 0
  %931 = getelementptr inbounds [5 x double]* %930, i32 0, i64 2
  store double %928, double* %931, align 8
  %932 = load [5 x double]** %2, align 8
  %933 = getelementptr inbounds [5 x double]* %932, i64 1
  %934 = getelementptr inbounds [5 x double]* %933, i32 0, i64 2
  %935 = load double* %934, align 8
  %936 = load double* %coeff, align 8
  %937 = load [5 x double]** %2, align 8
  %938 = getelementptr inbounds [5 x double]* %937, i64 1
  %939 = getelementptr inbounds [5 x double]* %938, i32 0, i64 1
  %940 = load double* %939, align 8
  %941 = fmul double %936, %940
  %942 = fsub double %935, %941
  %943 = load [5 x double]** %2, align 8
  %944 = getelementptr inbounds [5 x double]* %943, i64 1
  %945 = getelementptr inbounds [5 x double]* %944, i32 0, i64 2
  store double %942, double* %945, align 8
  %946 = load [5 x double]** %2, align 8
  %947 = getelementptr inbounds [5 x double]* %946, i64 2
  %948 = getelementptr inbounds [5 x double]* %947, i32 0, i64 2
  %949 = load double* %948, align 8
  %950 = load double* %coeff, align 8
  %951 = load [5 x double]** %2, align 8
  %952 = getelementptr inbounds [5 x double]* %951, i64 2
  %953 = getelementptr inbounds [5 x double]* %952, i32 0, i64 1
  %954 = load double* %953, align 8
  %955 = fmul double %950, %954
  %956 = fsub double %949, %955
  %957 = load [5 x double]** %2, align 8
  %958 = getelementptr inbounds [5 x double]* %957, i64 2
  %959 = getelementptr inbounds [5 x double]* %958, i32 0, i64 2
  store double %956, double* %959, align 8
  %960 = load [5 x double]** %2, align 8
  %961 = getelementptr inbounds [5 x double]* %960, i64 3
  %962 = getelementptr inbounds [5 x double]* %961, i32 0, i64 2
  %963 = load double* %962, align 8
  %964 = load double* %coeff, align 8
  %965 = load [5 x double]** %2, align 8
  %966 = getelementptr inbounds [5 x double]* %965, i64 3
  %967 = getelementptr inbounds [5 x double]* %966, i32 0, i64 1
  %968 = load double* %967, align 8
  %969 = fmul double %964, %968
  %970 = fsub double %963, %969
  %971 = load [5 x double]** %2, align 8
  %972 = getelementptr inbounds [5 x double]* %971, i64 3
  %973 = getelementptr inbounds [5 x double]* %972, i32 0, i64 2
  store double %970, double* %973, align 8
  %974 = load [5 x double]** %2, align 8
  %975 = getelementptr inbounds [5 x double]* %974, i64 4
  %976 = getelementptr inbounds [5 x double]* %975, i32 0, i64 2
  %977 = load double* %976, align 8
  %978 = load double* %coeff, align 8
  %979 = load [5 x double]** %2, align 8
  %980 = getelementptr inbounds [5 x double]* %979, i64 4
  %981 = getelementptr inbounds [5 x double]* %980, i32 0, i64 1
  %982 = load double* %981, align 8
  %983 = fmul double %978, %982
  %984 = fsub double %977, %983
  %985 = load [5 x double]** %2, align 8
  %986 = getelementptr inbounds [5 x double]* %985, i64 4
  %987 = getelementptr inbounds [5 x double]* %986, i32 0, i64 2
  store double %984, double* %987, align 8
  %988 = load double** %3, align 8
  %989 = getelementptr inbounds double* %988, i64 2
  %990 = load double* %989, align 8
  %991 = load double* %coeff, align 8
  %992 = load double** %3, align 8
  %993 = getelementptr inbounds double* %992, i64 1
  %994 = load double* %993, align 8
  %995 = fmul double %991, %994
  %996 = fsub double %990, %995
  %997 = load double** %3, align 8
  %998 = getelementptr inbounds double* %997, i64 2
  store double %996, double* %998, align 8
  %999 = load [5 x double]** %1, align 8
  %1000 = getelementptr inbounds [5 x double]* %999, i64 1
  %1001 = getelementptr inbounds [5 x double]* %1000, i32 0, i64 3
  %1002 = load double* %1001, align 8
  store double %1002, double* %coeff, align 8
  %1003 = load [5 x double]** %1, align 8
  %1004 = getelementptr inbounds [5 x double]* %1003, i64 2
  %1005 = getelementptr inbounds [5 x double]* %1004, i32 0, i64 3
  %1006 = load double* %1005, align 8
  %1007 = load double* %coeff, align 8
  %1008 = load [5 x double]** %1, align 8
  %1009 = getelementptr inbounds [5 x double]* %1008, i64 2
  %1010 = getelementptr inbounds [5 x double]* %1009, i32 0, i64 1
  %1011 = load double* %1010, align 8
  %1012 = fmul double %1007, %1011
  %1013 = fsub double %1006, %1012
  %1014 = load [5 x double]** %1, align 8
  %1015 = getelementptr inbounds [5 x double]* %1014, i64 2
  %1016 = getelementptr inbounds [5 x double]* %1015, i32 0, i64 3
  store double %1013, double* %1016, align 8
  %1017 = load [5 x double]** %1, align 8
  %1018 = getelementptr inbounds [5 x double]* %1017, i64 3
  %1019 = getelementptr inbounds [5 x double]* %1018, i32 0, i64 3
  %1020 = load double* %1019, align 8
  %1021 = load double* %coeff, align 8
  %1022 = load [5 x double]** %1, align 8
  %1023 = getelementptr inbounds [5 x double]* %1022, i64 3
  %1024 = getelementptr inbounds [5 x double]* %1023, i32 0, i64 1
  %1025 = load double* %1024, align 8
  %1026 = fmul double %1021, %1025
  %1027 = fsub double %1020, %1026
  %1028 = load [5 x double]** %1, align 8
  %1029 = getelementptr inbounds [5 x double]* %1028, i64 3
  %1030 = getelementptr inbounds [5 x double]* %1029, i32 0, i64 3
  store double %1027, double* %1030, align 8
  %1031 = load [5 x double]** %1, align 8
  %1032 = getelementptr inbounds [5 x double]* %1031, i64 4
  %1033 = getelementptr inbounds [5 x double]* %1032, i32 0, i64 3
  %1034 = load double* %1033, align 8
  %1035 = load double* %coeff, align 8
  %1036 = load [5 x double]** %1, align 8
  %1037 = getelementptr inbounds [5 x double]* %1036, i64 4
  %1038 = getelementptr inbounds [5 x double]* %1037, i32 0, i64 1
  %1039 = load double* %1038, align 8
  %1040 = fmul double %1035, %1039
  %1041 = fsub double %1034, %1040
  %1042 = load [5 x double]** %1, align 8
  %1043 = getelementptr inbounds [5 x double]* %1042, i64 4
  %1044 = getelementptr inbounds [5 x double]* %1043, i32 0, i64 3
  store double %1041, double* %1044, align 8
  %1045 = load [5 x double]** %2, align 8
  %1046 = getelementptr inbounds [5 x double]* %1045, i64 0
  %1047 = getelementptr inbounds [5 x double]* %1046, i32 0, i64 3
  %1048 = load double* %1047, align 8
  %1049 = load double* %coeff, align 8
  %1050 = load [5 x double]** %2, align 8
  %1051 = getelementptr inbounds [5 x double]* %1050, i64 0
  %1052 = getelementptr inbounds [5 x double]* %1051, i32 0, i64 1
  %1053 = load double* %1052, align 8
  %1054 = fmul double %1049, %1053
  %1055 = fsub double %1048, %1054
  %1056 = load [5 x double]** %2, align 8
  %1057 = getelementptr inbounds [5 x double]* %1056, i64 0
  %1058 = getelementptr inbounds [5 x double]* %1057, i32 0, i64 3
  store double %1055, double* %1058, align 8
  %1059 = load [5 x double]** %2, align 8
  %1060 = getelementptr inbounds [5 x double]* %1059, i64 1
  %1061 = getelementptr inbounds [5 x double]* %1060, i32 0, i64 3
  %1062 = load double* %1061, align 8
  %1063 = load double* %coeff, align 8
  %1064 = load [5 x double]** %2, align 8
  %1065 = getelementptr inbounds [5 x double]* %1064, i64 1
  %1066 = getelementptr inbounds [5 x double]* %1065, i32 0, i64 1
  %1067 = load double* %1066, align 8
  %1068 = fmul double %1063, %1067
  %1069 = fsub double %1062, %1068
  %1070 = load [5 x double]** %2, align 8
  %1071 = getelementptr inbounds [5 x double]* %1070, i64 1
  %1072 = getelementptr inbounds [5 x double]* %1071, i32 0, i64 3
  store double %1069, double* %1072, align 8
  %1073 = load [5 x double]** %2, align 8
  %1074 = getelementptr inbounds [5 x double]* %1073, i64 2
  %1075 = getelementptr inbounds [5 x double]* %1074, i32 0, i64 3
  %1076 = load double* %1075, align 8
  %1077 = load double* %coeff, align 8
  %1078 = load [5 x double]** %2, align 8
  %1079 = getelementptr inbounds [5 x double]* %1078, i64 2
  %1080 = getelementptr inbounds [5 x double]* %1079, i32 0, i64 1
  %1081 = load double* %1080, align 8
  %1082 = fmul double %1077, %1081
  %1083 = fsub double %1076, %1082
  %1084 = load [5 x double]** %2, align 8
  %1085 = getelementptr inbounds [5 x double]* %1084, i64 2
  %1086 = getelementptr inbounds [5 x double]* %1085, i32 0, i64 3
  store double %1083, double* %1086, align 8
  %1087 = load [5 x double]** %2, align 8
  %1088 = getelementptr inbounds [5 x double]* %1087, i64 3
  %1089 = getelementptr inbounds [5 x double]* %1088, i32 0, i64 3
  %1090 = load double* %1089, align 8
  %1091 = load double* %coeff, align 8
  %1092 = load [5 x double]** %2, align 8
  %1093 = getelementptr inbounds [5 x double]* %1092, i64 3
  %1094 = getelementptr inbounds [5 x double]* %1093, i32 0, i64 1
  %1095 = load double* %1094, align 8
  %1096 = fmul double %1091, %1095
  %1097 = fsub double %1090, %1096
  %1098 = load [5 x double]** %2, align 8
  %1099 = getelementptr inbounds [5 x double]* %1098, i64 3
  %1100 = getelementptr inbounds [5 x double]* %1099, i32 0, i64 3
  store double %1097, double* %1100, align 8
  %1101 = load [5 x double]** %2, align 8
  %1102 = getelementptr inbounds [5 x double]* %1101, i64 4
  %1103 = getelementptr inbounds [5 x double]* %1102, i32 0, i64 3
  %1104 = load double* %1103, align 8
  %1105 = load double* %coeff, align 8
  %1106 = load [5 x double]** %2, align 8
  %1107 = getelementptr inbounds [5 x double]* %1106, i64 4
  %1108 = getelementptr inbounds [5 x double]* %1107, i32 0, i64 1
  %1109 = load double* %1108, align 8
  %1110 = fmul double %1105, %1109
  %1111 = fsub double %1104, %1110
  %1112 = load [5 x double]** %2, align 8
  %1113 = getelementptr inbounds [5 x double]* %1112, i64 4
  %1114 = getelementptr inbounds [5 x double]* %1113, i32 0, i64 3
  store double %1111, double* %1114, align 8
  %1115 = load double** %3, align 8
  %1116 = getelementptr inbounds double* %1115, i64 3
  %1117 = load double* %1116, align 8
  %1118 = load double* %coeff, align 8
  %1119 = load double** %3, align 8
  %1120 = getelementptr inbounds double* %1119, i64 1
  %1121 = load double* %1120, align 8
  %1122 = fmul double %1118, %1121
  %1123 = fsub double %1117, %1122
  %1124 = load double** %3, align 8
  %1125 = getelementptr inbounds double* %1124, i64 3
  store double %1123, double* %1125, align 8
  %1126 = load [5 x double]** %1, align 8
  %1127 = getelementptr inbounds [5 x double]* %1126, i64 1
  %1128 = getelementptr inbounds [5 x double]* %1127, i32 0, i64 4
  %1129 = load double* %1128, align 8
  store double %1129, double* %coeff, align 8
  %1130 = load [5 x double]** %1, align 8
  %1131 = getelementptr inbounds [5 x double]* %1130, i64 2
  %1132 = getelementptr inbounds [5 x double]* %1131, i32 0, i64 4
  %1133 = load double* %1132, align 8
  %1134 = load double* %coeff, align 8
  %1135 = load [5 x double]** %1, align 8
  %1136 = getelementptr inbounds [5 x double]* %1135, i64 2
  %1137 = getelementptr inbounds [5 x double]* %1136, i32 0, i64 1
  %1138 = load double* %1137, align 8
  %1139 = fmul double %1134, %1138
  %1140 = fsub double %1133, %1139
  %1141 = load [5 x double]** %1, align 8
  %1142 = getelementptr inbounds [5 x double]* %1141, i64 2
  %1143 = getelementptr inbounds [5 x double]* %1142, i32 0, i64 4
  store double %1140, double* %1143, align 8
  %1144 = load [5 x double]** %1, align 8
  %1145 = getelementptr inbounds [5 x double]* %1144, i64 3
  %1146 = getelementptr inbounds [5 x double]* %1145, i32 0, i64 4
  %1147 = load double* %1146, align 8
  %1148 = load double* %coeff, align 8
  %1149 = load [5 x double]** %1, align 8
  %1150 = getelementptr inbounds [5 x double]* %1149, i64 3
  %1151 = getelementptr inbounds [5 x double]* %1150, i32 0, i64 1
  %1152 = load double* %1151, align 8
  %1153 = fmul double %1148, %1152
  %1154 = fsub double %1147, %1153
  %1155 = load [5 x double]** %1, align 8
  %1156 = getelementptr inbounds [5 x double]* %1155, i64 3
  %1157 = getelementptr inbounds [5 x double]* %1156, i32 0, i64 4
  store double %1154, double* %1157, align 8
  %1158 = load [5 x double]** %1, align 8
  %1159 = getelementptr inbounds [5 x double]* %1158, i64 4
  %1160 = getelementptr inbounds [5 x double]* %1159, i32 0, i64 4
  %1161 = load double* %1160, align 8
  %1162 = load double* %coeff, align 8
  %1163 = load [5 x double]** %1, align 8
  %1164 = getelementptr inbounds [5 x double]* %1163, i64 4
  %1165 = getelementptr inbounds [5 x double]* %1164, i32 0, i64 1
  %1166 = load double* %1165, align 8
  %1167 = fmul double %1162, %1166
  %1168 = fsub double %1161, %1167
  %1169 = load [5 x double]** %1, align 8
  %1170 = getelementptr inbounds [5 x double]* %1169, i64 4
  %1171 = getelementptr inbounds [5 x double]* %1170, i32 0, i64 4
  store double %1168, double* %1171, align 8
  %1172 = load [5 x double]** %2, align 8
  %1173 = getelementptr inbounds [5 x double]* %1172, i64 0
  %1174 = getelementptr inbounds [5 x double]* %1173, i32 0, i64 4
  %1175 = load double* %1174, align 8
  %1176 = load double* %coeff, align 8
  %1177 = load [5 x double]** %2, align 8
  %1178 = getelementptr inbounds [5 x double]* %1177, i64 0
  %1179 = getelementptr inbounds [5 x double]* %1178, i32 0, i64 1
  %1180 = load double* %1179, align 8
  %1181 = fmul double %1176, %1180
  %1182 = fsub double %1175, %1181
  %1183 = load [5 x double]** %2, align 8
  %1184 = getelementptr inbounds [5 x double]* %1183, i64 0
  %1185 = getelementptr inbounds [5 x double]* %1184, i32 0, i64 4
  store double %1182, double* %1185, align 8
  %1186 = load [5 x double]** %2, align 8
  %1187 = getelementptr inbounds [5 x double]* %1186, i64 1
  %1188 = getelementptr inbounds [5 x double]* %1187, i32 0, i64 4
  %1189 = load double* %1188, align 8
  %1190 = load double* %coeff, align 8
  %1191 = load [5 x double]** %2, align 8
  %1192 = getelementptr inbounds [5 x double]* %1191, i64 1
  %1193 = getelementptr inbounds [5 x double]* %1192, i32 0, i64 1
  %1194 = load double* %1193, align 8
  %1195 = fmul double %1190, %1194
  %1196 = fsub double %1189, %1195
  %1197 = load [5 x double]** %2, align 8
  %1198 = getelementptr inbounds [5 x double]* %1197, i64 1
  %1199 = getelementptr inbounds [5 x double]* %1198, i32 0, i64 4
  store double %1196, double* %1199, align 8
  %1200 = load [5 x double]** %2, align 8
  %1201 = getelementptr inbounds [5 x double]* %1200, i64 2
  %1202 = getelementptr inbounds [5 x double]* %1201, i32 0, i64 4
  %1203 = load double* %1202, align 8
  %1204 = load double* %coeff, align 8
  %1205 = load [5 x double]** %2, align 8
  %1206 = getelementptr inbounds [5 x double]* %1205, i64 2
  %1207 = getelementptr inbounds [5 x double]* %1206, i32 0, i64 1
  %1208 = load double* %1207, align 8
  %1209 = fmul double %1204, %1208
  %1210 = fsub double %1203, %1209
  %1211 = load [5 x double]** %2, align 8
  %1212 = getelementptr inbounds [5 x double]* %1211, i64 2
  %1213 = getelementptr inbounds [5 x double]* %1212, i32 0, i64 4
  store double %1210, double* %1213, align 8
  %1214 = load [5 x double]** %2, align 8
  %1215 = getelementptr inbounds [5 x double]* %1214, i64 3
  %1216 = getelementptr inbounds [5 x double]* %1215, i32 0, i64 4
  %1217 = load double* %1216, align 8
  %1218 = load double* %coeff, align 8
  %1219 = load [5 x double]** %2, align 8
  %1220 = getelementptr inbounds [5 x double]* %1219, i64 3
  %1221 = getelementptr inbounds [5 x double]* %1220, i32 0, i64 1
  %1222 = load double* %1221, align 8
  %1223 = fmul double %1218, %1222
  %1224 = fsub double %1217, %1223
  %1225 = load [5 x double]** %2, align 8
  %1226 = getelementptr inbounds [5 x double]* %1225, i64 3
  %1227 = getelementptr inbounds [5 x double]* %1226, i32 0, i64 4
  store double %1224, double* %1227, align 8
  %1228 = load [5 x double]** %2, align 8
  %1229 = getelementptr inbounds [5 x double]* %1228, i64 4
  %1230 = getelementptr inbounds [5 x double]* %1229, i32 0, i64 4
  %1231 = load double* %1230, align 8
  %1232 = load double* %coeff, align 8
  %1233 = load [5 x double]** %2, align 8
  %1234 = getelementptr inbounds [5 x double]* %1233, i64 4
  %1235 = getelementptr inbounds [5 x double]* %1234, i32 0, i64 1
  %1236 = load double* %1235, align 8
  %1237 = fmul double %1232, %1236
  %1238 = fsub double %1231, %1237
  %1239 = load [5 x double]** %2, align 8
  %1240 = getelementptr inbounds [5 x double]* %1239, i64 4
  %1241 = getelementptr inbounds [5 x double]* %1240, i32 0, i64 4
  store double %1238, double* %1241, align 8
  %1242 = load double** %3, align 8
  %1243 = getelementptr inbounds double* %1242, i64 4
  %1244 = load double* %1243, align 8
  %1245 = load double* %coeff, align 8
  %1246 = load double** %3, align 8
  %1247 = getelementptr inbounds double* %1246, i64 1
  %1248 = load double* %1247, align 8
  %1249 = fmul double %1245, %1248
  %1250 = fsub double %1244, %1249
  %1251 = load double** %3, align 8
  %1252 = getelementptr inbounds double* %1251, i64 4
  store double %1250, double* %1252, align 8
  %1253 = load [5 x double]** %1, align 8
  %1254 = getelementptr inbounds [5 x double]* %1253, i64 2
  %1255 = getelementptr inbounds [5 x double]* %1254, i32 0, i64 2
  %1256 = load double* %1255, align 8
  %1257 = fdiv double 1.000000e+00, %1256
  store double %1257, double* %pivot, align 8
  %1258 = load [5 x double]** %1, align 8
  %1259 = getelementptr inbounds [5 x double]* %1258, i64 3
  %1260 = getelementptr inbounds [5 x double]* %1259, i32 0, i64 2
  %1261 = load double* %1260, align 8
  %1262 = load double* %pivot, align 8
  %1263 = fmul double %1261, %1262
  %1264 = load [5 x double]** %1, align 8
  %1265 = getelementptr inbounds [5 x double]* %1264, i64 3
  %1266 = getelementptr inbounds [5 x double]* %1265, i32 0, i64 2
  store double %1263, double* %1266, align 8
  %1267 = load [5 x double]** %1, align 8
  %1268 = getelementptr inbounds [5 x double]* %1267, i64 4
  %1269 = getelementptr inbounds [5 x double]* %1268, i32 0, i64 2
  %1270 = load double* %1269, align 8
  %1271 = load double* %pivot, align 8
  %1272 = fmul double %1270, %1271
  %1273 = load [5 x double]** %1, align 8
  %1274 = getelementptr inbounds [5 x double]* %1273, i64 4
  %1275 = getelementptr inbounds [5 x double]* %1274, i32 0, i64 2
  store double %1272, double* %1275, align 8
  %1276 = load [5 x double]** %2, align 8
  %1277 = getelementptr inbounds [5 x double]* %1276, i64 0
  %1278 = getelementptr inbounds [5 x double]* %1277, i32 0, i64 2
  %1279 = load double* %1278, align 8
  %1280 = load double* %pivot, align 8
  %1281 = fmul double %1279, %1280
  %1282 = load [5 x double]** %2, align 8
  %1283 = getelementptr inbounds [5 x double]* %1282, i64 0
  %1284 = getelementptr inbounds [5 x double]* %1283, i32 0, i64 2
  store double %1281, double* %1284, align 8
  %1285 = load [5 x double]** %2, align 8
  %1286 = getelementptr inbounds [5 x double]* %1285, i64 1
  %1287 = getelementptr inbounds [5 x double]* %1286, i32 0, i64 2
  %1288 = load double* %1287, align 8
  %1289 = load double* %pivot, align 8
  %1290 = fmul double %1288, %1289
  %1291 = load [5 x double]** %2, align 8
  %1292 = getelementptr inbounds [5 x double]* %1291, i64 1
  %1293 = getelementptr inbounds [5 x double]* %1292, i32 0, i64 2
  store double %1290, double* %1293, align 8
  %1294 = load [5 x double]** %2, align 8
  %1295 = getelementptr inbounds [5 x double]* %1294, i64 2
  %1296 = getelementptr inbounds [5 x double]* %1295, i32 0, i64 2
  %1297 = load double* %1296, align 8
  %1298 = load double* %pivot, align 8
  %1299 = fmul double %1297, %1298
  %1300 = load [5 x double]** %2, align 8
  %1301 = getelementptr inbounds [5 x double]* %1300, i64 2
  %1302 = getelementptr inbounds [5 x double]* %1301, i32 0, i64 2
  store double %1299, double* %1302, align 8
  %1303 = load [5 x double]** %2, align 8
  %1304 = getelementptr inbounds [5 x double]* %1303, i64 3
  %1305 = getelementptr inbounds [5 x double]* %1304, i32 0, i64 2
  %1306 = load double* %1305, align 8
  %1307 = load double* %pivot, align 8
  %1308 = fmul double %1306, %1307
  %1309 = load [5 x double]** %2, align 8
  %1310 = getelementptr inbounds [5 x double]* %1309, i64 3
  %1311 = getelementptr inbounds [5 x double]* %1310, i32 0, i64 2
  store double %1308, double* %1311, align 8
  %1312 = load [5 x double]** %2, align 8
  %1313 = getelementptr inbounds [5 x double]* %1312, i64 4
  %1314 = getelementptr inbounds [5 x double]* %1313, i32 0, i64 2
  %1315 = load double* %1314, align 8
  %1316 = load double* %pivot, align 8
  %1317 = fmul double %1315, %1316
  %1318 = load [5 x double]** %2, align 8
  %1319 = getelementptr inbounds [5 x double]* %1318, i64 4
  %1320 = getelementptr inbounds [5 x double]* %1319, i32 0, i64 2
  store double %1317, double* %1320, align 8
  %1321 = load double** %3, align 8
  %1322 = getelementptr inbounds double* %1321, i64 2
  %1323 = load double* %1322, align 8
  %1324 = load double* %pivot, align 8
  %1325 = fmul double %1323, %1324
  %1326 = load double** %3, align 8
  %1327 = getelementptr inbounds double* %1326, i64 2
  store double %1325, double* %1327, align 8
  %1328 = load [5 x double]** %1, align 8
  %1329 = getelementptr inbounds [5 x double]* %1328, i64 2
  %1330 = getelementptr inbounds [5 x double]* %1329, i32 0, i64 0
  %1331 = load double* %1330, align 8
  store double %1331, double* %coeff, align 8
  %1332 = load [5 x double]** %1, align 8
  %1333 = getelementptr inbounds [5 x double]* %1332, i64 3
  %1334 = getelementptr inbounds [5 x double]* %1333, i32 0, i64 0
  %1335 = load double* %1334, align 8
  %1336 = load double* %coeff, align 8
  %1337 = load [5 x double]** %1, align 8
  %1338 = getelementptr inbounds [5 x double]* %1337, i64 3
  %1339 = getelementptr inbounds [5 x double]* %1338, i32 0, i64 2
  %1340 = load double* %1339, align 8
  %1341 = fmul double %1336, %1340
  %1342 = fsub double %1335, %1341
  %1343 = load [5 x double]** %1, align 8
  %1344 = getelementptr inbounds [5 x double]* %1343, i64 3
  %1345 = getelementptr inbounds [5 x double]* %1344, i32 0, i64 0
  store double %1342, double* %1345, align 8
  %1346 = load [5 x double]** %1, align 8
  %1347 = getelementptr inbounds [5 x double]* %1346, i64 4
  %1348 = getelementptr inbounds [5 x double]* %1347, i32 0, i64 0
  %1349 = load double* %1348, align 8
  %1350 = load double* %coeff, align 8
  %1351 = load [5 x double]** %1, align 8
  %1352 = getelementptr inbounds [5 x double]* %1351, i64 4
  %1353 = getelementptr inbounds [5 x double]* %1352, i32 0, i64 2
  %1354 = load double* %1353, align 8
  %1355 = fmul double %1350, %1354
  %1356 = fsub double %1349, %1355
  %1357 = load [5 x double]** %1, align 8
  %1358 = getelementptr inbounds [5 x double]* %1357, i64 4
  %1359 = getelementptr inbounds [5 x double]* %1358, i32 0, i64 0
  store double %1356, double* %1359, align 8
  %1360 = load [5 x double]** %2, align 8
  %1361 = getelementptr inbounds [5 x double]* %1360, i64 0
  %1362 = getelementptr inbounds [5 x double]* %1361, i32 0, i64 0
  %1363 = load double* %1362, align 8
  %1364 = load double* %coeff, align 8
  %1365 = load [5 x double]** %2, align 8
  %1366 = getelementptr inbounds [5 x double]* %1365, i64 0
  %1367 = getelementptr inbounds [5 x double]* %1366, i32 0, i64 2
  %1368 = load double* %1367, align 8
  %1369 = fmul double %1364, %1368
  %1370 = fsub double %1363, %1369
  %1371 = load [5 x double]** %2, align 8
  %1372 = getelementptr inbounds [5 x double]* %1371, i64 0
  %1373 = getelementptr inbounds [5 x double]* %1372, i32 0, i64 0
  store double %1370, double* %1373, align 8
  %1374 = load [5 x double]** %2, align 8
  %1375 = getelementptr inbounds [5 x double]* %1374, i64 1
  %1376 = getelementptr inbounds [5 x double]* %1375, i32 0, i64 0
  %1377 = load double* %1376, align 8
  %1378 = load double* %coeff, align 8
  %1379 = load [5 x double]** %2, align 8
  %1380 = getelementptr inbounds [5 x double]* %1379, i64 1
  %1381 = getelementptr inbounds [5 x double]* %1380, i32 0, i64 2
  %1382 = load double* %1381, align 8
  %1383 = fmul double %1378, %1382
  %1384 = fsub double %1377, %1383
  %1385 = load [5 x double]** %2, align 8
  %1386 = getelementptr inbounds [5 x double]* %1385, i64 1
  %1387 = getelementptr inbounds [5 x double]* %1386, i32 0, i64 0
  store double %1384, double* %1387, align 8
  %1388 = load [5 x double]** %2, align 8
  %1389 = getelementptr inbounds [5 x double]* %1388, i64 2
  %1390 = getelementptr inbounds [5 x double]* %1389, i32 0, i64 0
  %1391 = load double* %1390, align 8
  %1392 = load double* %coeff, align 8
  %1393 = load [5 x double]** %2, align 8
  %1394 = getelementptr inbounds [5 x double]* %1393, i64 2
  %1395 = getelementptr inbounds [5 x double]* %1394, i32 0, i64 2
  %1396 = load double* %1395, align 8
  %1397 = fmul double %1392, %1396
  %1398 = fsub double %1391, %1397
  %1399 = load [5 x double]** %2, align 8
  %1400 = getelementptr inbounds [5 x double]* %1399, i64 2
  %1401 = getelementptr inbounds [5 x double]* %1400, i32 0, i64 0
  store double %1398, double* %1401, align 8
  %1402 = load [5 x double]** %2, align 8
  %1403 = getelementptr inbounds [5 x double]* %1402, i64 3
  %1404 = getelementptr inbounds [5 x double]* %1403, i32 0, i64 0
  %1405 = load double* %1404, align 8
  %1406 = load double* %coeff, align 8
  %1407 = load [5 x double]** %2, align 8
  %1408 = getelementptr inbounds [5 x double]* %1407, i64 3
  %1409 = getelementptr inbounds [5 x double]* %1408, i32 0, i64 2
  %1410 = load double* %1409, align 8
  %1411 = fmul double %1406, %1410
  %1412 = fsub double %1405, %1411
  %1413 = load [5 x double]** %2, align 8
  %1414 = getelementptr inbounds [5 x double]* %1413, i64 3
  %1415 = getelementptr inbounds [5 x double]* %1414, i32 0, i64 0
  store double %1412, double* %1415, align 8
  %1416 = load [5 x double]** %2, align 8
  %1417 = getelementptr inbounds [5 x double]* %1416, i64 4
  %1418 = getelementptr inbounds [5 x double]* %1417, i32 0, i64 0
  %1419 = load double* %1418, align 8
  %1420 = load double* %coeff, align 8
  %1421 = load [5 x double]** %2, align 8
  %1422 = getelementptr inbounds [5 x double]* %1421, i64 4
  %1423 = getelementptr inbounds [5 x double]* %1422, i32 0, i64 2
  %1424 = load double* %1423, align 8
  %1425 = fmul double %1420, %1424
  %1426 = fsub double %1419, %1425
  %1427 = load [5 x double]** %2, align 8
  %1428 = getelementptr inbounds [5 x double]* %1427, i64 4
  %1429 = getelementptr inbounds [5 x double]* %1428, i32 0, i64 0
  store double %1426, double* %1429, align 8
  %1430 = load double** %3, align 8
  %1431 = getelementptr inbounds double* %1430, i64 0
  %1432 = load double* %1431, align 8
  %1433 = load double* %coeff, align 8
  %1434 = load double** %3, align 8
  %1435 = getelementptr inbounds double* %1434, i64 2
  %1436 = load double* %1435, align 8
  %1437 = fmul double %1433, %1436
  %1438 = fsub double %1432, %1437
  %1439 = load double** %3, align 8
  %1440 = getelementptr inbounds double* %1439, i64 0
  store double %1438, double* %1440, align 8
  %1441 = load [5 x double]** %1, align 8
  %1442 = getelementptr inbounds [5 x double]* %1441, i64 2
  %1443 = getelementptr inbounds [5 x double]* %1442, i32 0, i64 1
  %1444 = load double* %1443, align 8
  store double %1444, double* %coeff, align 8
  %1445 = load [5 x double]** %1, align 8
  %1446 = getelementptr inbounds [5 x double]* %1445, i64 3
  %1447 = getelementptr inbounds [5 x double]* %1446, i32 0, i64 1
  %1448 = load double* %1447, align 8
  %1449 = load double* %coeff, align 8
  %1450 = load [5 x double]** %1, align 8
  %1451 = getelementptr inbounds [5 x double]* %1450, i64 3
  %1452 = getelementptr inbounds [5 x double]* %1451, i32 0, i64 2
  %1453 = load double* %1452, align 8
  %1454 = fmul double %1449, %1453
  %1455 = fsub double %1448, %1454
  %1456 = load [5 x double]** %1, align 8
  %1457 = getelementptr inbounds [5 x double]* %1456, i64 3
  %1458 = getelementptr inbounds [5 x double]* %1457, i32 0, i64 1
  store double %1455, double* %1458, align 8
  %1459 = load [5 x double]** %1, align 8
  %1460 = getelementptr inbounds [5 x double]* %1459, i64 4
  %1461 = getelementptr inbounds [5 x double]* %1460, i32 0, i64 1
  %1462 = load double* %1461, align 8
  %1463 = load double* %coeff, align 8
  %1464 = load [5 x double]** %1, align 8
  %1465 = getelementptr inbounds [5 x double]* %1464, i64 4
  %1466 = getelementptr inbounds [5 x double]* %1465, i32 0, i64 2
  %1467 = load double* %1466, align 8
  %1468 = fmul double %1463, %1467
  %1469 = fsub double %1462, %1468
  %1470 = load [5 x double]** %1, align 8
  %1471 = getelementptr inbounds [5 x double]* %1470, i64 4
  %1472 = getelementptr inbounds [5 x double]* %1471, i32 0, i64 1
  store double %1469, double* %1472, align 8
  %1473 = load [5 x double]** %2, align 8
  %1474 = getelementptr inbounds [5 x double]* %1473, i64 0
  %1475 = getelementptr inbounds [5 x double]* %1474, i32 0, i64 1
  %1476 = load double* %1475, align 8
  %1477 = load double* %coeff, align 8
  %1478 = load [5 x double]** %2, align 8
  %1479 = getelementptr inbounds [5 x double]* %1478, i64 0
  %1480 = getelementptr inbounds [5 x double]* %1479, i32 0, i64 2
  %1481 = load double* %1480, align 8
  %1482 = fmul double %1477, %1481
  %1483 = fsub double %1476, %1482
  %1484 = load [5 x double]** %2, align 8
  %1485 = getelementptr inbounds [5 x double]* %1484, i64 0
  %1486 = getelementptr inbounds [5 x double]* %1485, i32 0, i64 1
  store double %1483, double* %1486, align 8
  %1487 = load [5 x double]** %2, align 8
  %1488 = getelementptr inbounds [5 x double]* %1487, i64 1
  %1489 = getelementptr inbounds [5 x double]* %1488, i32 0, i64 1
  %1490 = load double* %1489, align 8
  %1491 = load double* %coeff, align 8
  %1492 = load [5 x double]** %2, align 8
  %1493 = getelementptr inbounds [5 x double]* %1492, i64 1
  %1494 = getelementptr inbounds [5 x double]* %1493, i32 0, i64 2
  %1495 = load double* %1494, align 8
  %1496 = fmul double %1491, %1495
  %1497 = fsub double %1490, %1496
  %1498 = load [5 x double]** %2, align 8
  %1499 = getelementptr inbounds [5 x double]* %1498, i64 1
  %1500 = getelementptr inbounds [5 x double]* %1499, i32 0, i64 1
  store double %1497, double* %1500, align 8
  %1501 = load [5 x double]** %2, align 8
  %1502 = getelementptr inbounds [5 x double]* %1501, i64 2
  %1503 = getelementptr inbounds [5 x double]* %1502, i32 0, i64 1
  %1504 = load double* %1503, align 8
  %1505 = load double* %coeff, align 8
  %1506 = load [5 x double]** %2, align 8
  %1507 = getelementptr inbounds [5 x double]* %1506, i64 2
  %1508 = getelementptr inbounds [5 x double]* %1507, i32 0, i64 2
  %1509 = load double* %1508, align 8
  %1510 = fmul double %1505, %1509
  %1511 = fsub double %1504, %1510
  %1512 = load [5 x double]** %2, align 8
  %1513 = getelementptr inbounds [5 x double]* %1512, i64 2
  %1514 = getelementptr inbounds [5 x double]* %1513, i32 0, i64 1
  store double %1511, double* %1514, align 8
  %1515 = load [5 x double]** %2, align 8
  %1516 = getelementptr inbounds [5 x double]* %1515, i64 3
  %1517 = getelementptr inbounds [5 x double]* %1516, i32 0, i64 1
  %1518 = load double* %1517, align 8
  %1519 = load double* %coeff, align 8
  %1520 = load [5 x double]** %2, align 8
  %1521 = getelementptr inbounds [5 x double]* %1520, i64 3
  %1522 = getelementptr inbounds [5 x double]* %1521, i32 0, i64 2
  %1523 = load double* %1522, align 8
  %1524 = fmul double %1519, %1523
  %1525 = fsub double %1518, %1524
  %1526 = load [5 x double]** %2, align 8
  %1527 = getelementptr inbounds [5 x double]* %1526, i64 3
  %1528 = getelementptr inbounds [5 x double]* %1527, i32 0, i64 1
  store double %1525, double* %1528, align 8
  %1529 = load [5 x double]** %2, align 8
  %1530 = getelementptr inbounds [5 x double]* %1529, i64 4
  %1531 = getelementptr inbounds [5 x double]* %1530, i32 0, i64 1
  %1532 = load double* %1531, align 8
  %1533 = load double* %coeff, align 8
  %1534 = load [5 x double]** %2, align 8
  %1535 = getelementptr inbounds [5 x double]* %1534, i64 4
  %1536 = getelementptr inbounds [5 x double]* %1535, i32 0, i64 2
  %1537 = load double* %1536, align 8
  %1538 = fmul double %1533, %1537
  %1539 = fsub double %1532, %1538
  %1540 = load [5 x double]** %2, align 8
  %1541 = getelementptr inbounds [5 x double]* %1540, i64 4
  %1542 = getelementptr inbounds [5 x double]* %1541, i32 0, i64 1
  store double %1539, double* %1542, align 8
  %1543 = load double** %3, align 8
  %1544 = getelementptr inbounds double* %1543, i64 1
  %1545 = load double* %1544, align 8
  %1546 = load double* %coeff, align 8
  %1547 = load double** %3, align 8
  %1548 = getelementptr inbounds double* %1547, i64 2
  %1549 = load double* %1548, align 8
  %1550 = fmul double %1546, %1549
  %1551 = fsub double %1545, %1550
  %1552 = load double** %3, align 8
  %1553 = getelementptr inbounds double* %1552, i64 1
  store double %1551, double* %1553, align 8
  %1554 = load [5 x double]** %1, align 8
  %1555 = getelementptr inbounds [5 x double]* %1554, i64 2
  %1556 = getelementptr inbounds [5 x double]* %1555, i32 0, i64 3
  %1557 = load double* %1556, align 8
  store double %1557, double* %coeff, align 8
  %1558 = load [5 x double]** %1, align 8
  %1559 = getelementptr inbounds [5 x double]* %1558, i64 3
  %1560 = getelementptr inbounds [5 x double]* %1559, i32 0, i64 3
  %1561 = load double* %1560, align 8
  %1562 = load double* %coeff, align 8
  %1563 = load [5 x double]** %1, align 8
  %1564 = getelementptr inbounds [5 x double]* %1563, i64 3
  %1565 = getelementptr inbounds [5 x double]* %1564, i32 0, i64 2
  %1566 = load double* %1565, align 8
  %1567 = fmul double %1562, %1566
  %1568 = fsub double %1561, %1567
  %1569 = load [5 x double]** %1, align 8
  %1570 = getelementptr inbounds [5 x double]* %1569, i64 3
  %1571 = getelementptr inbounds [5 x double]* %1570, i32 0, i64 3
  store double %1568, double* %1571, align 8
  %1572 = load [5 x double]** %1, align 8
  %1573 = getelementptr inbounds [5 x double]* %1572, i64 4
  %1574 = getelementptr inbounds [5 x double]* %1573, i32 0, i64 3
  %1575 = load double* %1574, align 8
  %1576 = load double* %coeff, align 8
  %1577 = load [5 x double]** %1, align 8
  %1578 = getelementptr inbounds [5 x double]* %1577, i64 4
  %1579 = getelementptr inbounds [5 x double]* %1578, i32 0, i64 2
  %1580 = load double* %1579, align 8
  %1581 = fmul double %1576, %1580
  %1582 = fsub double %1575, %1581
  %1583 = load [5 x double]** %1, align 8
  %1584 = getelementptr inbounds [5 x double]* %1583, i64 4
  %1585 = getelementptr inbounds [5 x double]* %1584, i32 0, i64 3
  store double %1582, double* %1585, align 8
  %1586 = load [5 x double]** %2, align 8
  %1587 = getelementptr inbounds [5 x double]* %1586, i64 0
  %1588 = getelementptr inbounds [5 x double]* %1587, i32 0, i64 3
  %1589 = load double* %1588, align 8
  %1590 = load double* %coeff, align 8
  %1591 = load [5 x double]** %2, align 8
  %1592 = getelementptr inbounds [5 x double]* %1591, i64 0
  %1593 = getelementptr inbounds [5 x double]* %1592, i32 0, i64 2
  %1594 = load double* %1593, align 8
  %1595 = fmul double %1590, %1594
  %1596 = fsub double %1589, %1595
  %1597 = load [5 x double]** %2, align 8
  %1598 = getelementptr inbounds [5 x double]* %1597, i64 0
  %1599 = getelementptr inbounds [5 x double]* %1598, i32 0, i64 3
  store double %1596, double* %1599, align 8
  %1600 = load [5 x double]** %2, align 8
  %1601 = getelementptr inbounds [5 x double]* %1600, i64 1
  %1602 = getelementptr inbounds [5 x double]* %1601, i32 0, i64 3
  %1603 = load double* %1602, align 8
  %1604 = load double* %coeff, align 8
  %1605 = load [5 x double]** %2, align 8
  %1606 = getelementptr inbounds [5 x double]* %1605, i64 1
  %1607 = getelementptr inbounds [5 x double]* %1606, i32 0, i64 2
  %1608 = load double* %1607, align 8
  %1609 = fmul double %1604, %1608
  %1610 = fsub double %1603, %1609
  %1611 = load [5 x double]** %2, align 8
  %1612 = getelementptr inbounds [5 x double]* %1611, i64 1
  %1613 = getelementptr inbounds [5 x double]* %1612, i32 0, i64 3
  store double %1610, double* %1613, align 8
  %1614 = load [5 x double]** %2, align 8
  %1615 = getelementptr inbounds [5 x double]* %1614, i64 2
  %1616 = getelementptr inbounds [5 x double]* %1615, i32 0, i64 3
  %1617 = load double* %1616, align 8
  %1618 = load double* %coeff, align 8
  %1619 = load [5 x double]** %2, align 8
  %1620 = getelementptr inbounds [5 x double]* %1619, i64 2
  %1621 = getelementptr inbounds [5 x double]* %1620, i32 0, i64 2
  %1622 = load double* %1621, align 8
  %1623 = fmul double %1618, %1622
  %1624 = fsub double %1617, %1623
  %1625 = load [5 x double]** %2, align 8
  %1626 = getelementptr inbounds [5 x double]* %1625, i64 2
  %1627 = getelementptr inbounds [5 x double]* %1626, i32 0, i64 3
  store double %1624, double* %1627, align 8
  %1628 = load [5 x double]** %2, align 8
  %1629 = getelementptr inbounds [5 x double]* %1628, i64 3
  %1630 = getelementptr inbounds [5 x double]* %1629, i32 0, i64 3
  %1631 = load double* %1630, align 8
  %1632 = load double* %coeff, align 8
  %1633 = load [5 x double]** %2, align 8
  %1634 = getelementptr inbounds [5 x double]* %1633, i64 3
  %1635 = getelementptr inbounds [5 x double]* %1634, i32 0, i64 2
  %1636 = load double* %1635, align 8
  %1637 = fmul double %1632, %1636
  %1638 = fsub double %1631, %1637
  %1639 = load [5 x double]** %2, align 8
  %1640 = getelementptr inbounds [5 x double]* %1639, i64 3
  %1641 = getelementptr inbounds [5 x double]* %1640, i32 0, i64 3
  store double %1638, double* %1641, align 8
  %1642 = load [5 x double]** %2, align 8
  %1643 = getelementptr inbounds [5 x double]* %1642, i64 4
  %1644 = getelementptr inbounds [5 x double]* %1643, i32 0, i64 3
  %1645 = load double* %1644, align 8
  %1646 = load double* %coeff, align 8
  %1647 = load [5 x double]** %2, align 8
  %1648 = getelementptr inbounds [5 x double]* %1647, i64 4
  %1649 = getelementptr inbounds [5 x double]* %1648, i32 0, i64 2
  %1650 = load double* %1649, align 8
  %1651 = fmul double %1646, %1650
  %1652 = fsub double %1645, %1651
  %1653 = load [5 x double]** %2, align 8
  %1654 = getelementptr inbounds [5 x double]* %1653, i64 4
  %1655 = getelementptr inbounds [5 x double]* %1654, i32 0, i64 3
  store double %1652, double* %1655, align 8
  %1656 = load double** %3, align 8
  %1657 = getelementptr inbounds double* %1656, i64 3
  %1658 = load double* %1657, align 8
  %1659 = load double* %coeff, align 8
  %1660 = load double** %3, align 8
  %1661 = getelementptr inbounds double* %1660, i64 2
  %1662 = load double* %1661, align 8
  %1663 = fmul double %1659, %1662
  %1664 = fsub double %1658, %1663
  %1665 = load double** %3, align 8
  %1666 = getelementptr inbounds double* %1665, i64 3
  store double %1664, double* %1666, align 8
  %1667 = load [5 x double]** %1, align 8
  %1668 = getelementptr inbounds [5 x double]* %1667, i64 2
  %1669 = getelementptr inbounds [5 x double]* %1668, i32 0, i64 4
  %1670 = load double* %1669, align 8
  store double %1670, double* %coeff, align 8
  %1671 = load [5 x double]** %1, align 8
  %1672 = getelementptr inbounds [5 x double]* %1671, i64 3
  %1673 = getelementptr inbounds [5 x double]* %1672, i32 0, i64 4
  %1674 = load double* %1673, align 8
  %1675 = load double* %coeff, align 8
  %1676 = load [5 x double]** %1, align 8
  %1677 = getelementptr inbounds [5 x double]* %1676, i64 3
  %1678 = getelementptr inbounds [5 x double]* %1677, i32 0, i64 2
  %1679 = load double* %1678, align 8
  %1680 = fmul double %1675, %1679
  %1681 = fsub double %1674, %1680
  %1682 = load [5 x double]** %1, align 8
  %1683 = getelementptr inbounds [5 x double]* %1682, i64 3
  %1684 = getelementptr inbounds [5 x double]* %1683, i32 0, i64 4
  store double %1681, double* %1684, align 8
  %1685 = load [5 x double]** %1, align 8
  %1686 = getelementptr inbounds [5 x double]* %1685, i64 4
  %1687 = getelementptr inbounds [5 x double]* %1686, i32 0, i64 4
  %1688 = load double* %1687, align 8
  %1689 = load double* %coeff, align 8
  %1690 = load [5 x double]** %1, align 8
  %1691 = getelementptr inbounds [5 x double]* %1690, i64 4
  %1692 = getelementptr inbounds [5 x double]* %1691, i32 0, i64 2
  %1693 = load double* %1692, align 8
  %1694 = fmul double %1689, %1693
  %1695 = fsub double %1688, %1694
  %1696 = load [5 x double]** %1, align 8
  %1697 = getelementptr inbounds [5 x double]* %1696, i64 4
  %1698 = getelementptr inbounds [5 x double]* %1697, i32 0, i64 4
  store double %1695, double* %1698, align 8
  %1699 = load [5 x double]** %2, align 8
  %1700 = getelementptr inbounds [5 x double]* %1699, i64 0
  %1701 = getelementptr inbounds [5 x double]* %1700, i32 0, i64 4
  %1702 = load double* %1701, align 8
  %1703 = load double* %coeff, align 8
  %1704 = load [5 x double]** %2, align 8
  %1705 = getelementptr inbounds [5 x double]* %1704, i64 0
  %1706 = getelementptr inbounds [5 x double]* %1705, i32 0, i64 2
  %1707 = load double* %1706, align 8
  %1708 = fmul double %1703, %1707
  %1709 = fsub double %1702, %1708
  %1710 = load [5 x double]** %2, align 8
  %1711 = getelementptr inbounds [5 x double]* %1710, i64 0
  %1712 = getelementptr inbounds [5 x double]* %1711, i32 0, i64 4
  store double %1709, double* %1712, align 8
  %1713 = load [5 x double]** %2, align 8
  %1714 = getelementptr inbounds [5 x double]* %1713, i64 1
  %1715 = getelementptr inbounds [5 x double]* %1714, i32 0, i64 4
  %1716 = load double* %1715, align 8
  %1717 = load double* %coeff, align 8
  %1718 = load [5 x double]** %2, align 8
  %1719 = getelementptr inbounds [5 x double]* %1718, i64 1
  %1720 = getelementptr inbounds [5 x double]* %1719, i32 0, i64 2
  %1721 = load double* %1720, align 8
  %1722 = fmul double %1717, %1721
  %1723 = fsub double %1716, %1722
  %1724 = load [5 x double]** %2, align 8
  %1725 = getelementptr inbounds [5 x double]* %1724, i64 1
  %1726 = getelementptr inbounds [5 x double]* %1725, i32 0, i64 4
  store double %1723, double* %1726, align 8
  %1727 = load [5 x double]** %2, align 8
  %1728 = getelementptr inbounds [5 x double]* %1727, i64 2
  %1729 = getelementptr inbounds [5 x double]* %1728, i32 0, i64 4
  %1730 = load double* %1729, align 8
  %1731 = load double* %coeff, align 8
  %1732 = load [5 x double]** %2, align 8
  %1733 = getelementptr inbounds [5 x double]* %1732, i64 2
  %1734 = getelementptr inbounds [5 x double]* %1733, i32 0, i64 2
  %1735 = load double* %1734, align 8
  %1736 = fmul double %1731, %1735
  %1737 = fsub double %1730, %1736
  %1738 = load [5 x double]** %2, align 8
  %1739 = getelementptr inbounds [5 x double]* %1738, i64 2
  %1740 = getelementptr inbounds [5 x double]* %1739, i32 0, i64 4
  store double %1737, double* %1740, align 8
  %1741 = load [5 x double]** %2, align 8
  %1742 = getelementptr inbounds [5 x double]* %1741, i64 3
  %1743 = getelementptr inbounds [5 x double]* %1742, i32 0, i64 4
  %1744 = load double* %1743, align 8
  %1745 = load double* %coeff, align 8
  %1746 = load [5 x double]** %2, align 8
  %1747 = getelementptr inbounds [5 x double]* %1746, i64 3
  %1748 = getelementptr inbounds [5 x double]* %1747, i32 0, i64 2
  %1749 = load double* %1748, align 8
  %1750 = fmul double %1745, %1749
  %1751 = fsub double %1744, %1750
  %1752 = load [5 x double]** %2, align 8
  %1753 = getelementptr inbounds [5 x double]* %1752, i64 3
  %1754 = getelementptr inbounds [5 x double]* %1753, i32 0, i64 4
  store double %1751, double* %1754, align 8
  %1755 = load [5 x double]** %2, align 8
  %1756 = getelementptr inbounds [5 x double]* %1755, i64 4
  %1757 = getelementptr inbounds [5 x double]* %1756, i32 0, i64 4
  %1758 = load double* %1757, align 8
  %1759 = load double* %coeff, align 8
  %1760 = load [5 x double]** %2, align 8
  %1761 = getelementptr inbounds [5 x double]* %1760, i64 4
  %1762 = getelementptr inbounds [5 x double]* %1761, i32 0, i64 2
  %1763 = load double* %1762, align 8
  %1764 = fmul double %1759, %1763
  %1765 = fsub double %1758, %1764
  %1766 = load [5 x double]** %2, align 8
  %1767 = getelementptr inbounds [5 x double]* %1766, i64 4
  %1768 = getelementptr inbounds [5 x double]* %1767, i32 0, i64 4
  store double %1765, double* %1768, align 8
  %1769 = load double** %3, align 8
  %1770 = getelementptr inbounds double* %1769, i64 4
  %1771 = load double* %1770, align 8
  %1772 = load double* %coeff, align 8
  %1773 = load double** %3, align 8
  %1774 = getelementptr inbounds double* %1773, i64 2
  %1775 = load double* %1774, align 8
  %1776 = fmul double %1772, %1775
  %1777 = fsub double %1771, %1776
  %1778 = load double** %3, align 8
  %1779 = getelementptr inbounds double* %1778, i64 4
  store double %1777, double* %1779, align 8
  %1780 = load [5 x double]** %1, align 8
  %1781 = getelementptr inbounds [5 x double]* %1780, i64 3
  %1782 = getelementptr inbounds [5 x double]* %1781, i32 0, i64 3
  %1783 = load double* %1782, align 8
  %1784 = fdiv double 1.000000e+00, %1783
  store double %1784, double* %pivot, align 8
  %1785 = load [5 x double]** %1, align 8
  %1786 = getelementptr inbounds [5 x double]* %1785, i64 4
  %1787 = getelementptr inbounds [5 x double]* %1786, i32 0, i64 3
  %1788 = load double* %1787, align 8
  %1789 = load double* %pivot, align 8
  %1790 = fmul double %1788, %1789
  %1791 = load [5 x double]** %1, align 8
  %1792 = getelementptr inbounds [5 x double]* %1791, i64 4
  %1793 = getelementptr inbounds [5 x double]* %1792, i32 0, i64 3
  store double %1790, double* %1793, align 8
  %1794 = load [5 x double]** %2, align 8
  %1795 = getelementptr inbounds [5 x double]* %1794, i64 0
  %1796 = getelementptr inbounds [5 x double]* %1795, i32 0, i64 3
  %1797 = load double* %1796, align 8
  %1798 = load double* %pivot, align 8
  %1799 = fmul double %1797, %1798
  %1800 = load [5 x double]** %2, align 8
  %1801 = getelementptr inbounds [5 x double]* %1800, i64 0
  %1802 = getelementptr inbounds [5 x double]* %1801, i32 0, i64 3
  store double %1799, double* %1802, align 8
  %1803 = load [5 x double]** %2, align 8
  %1804 = getelementptr inbounds [5 x double]* %1803, i64 1
  %1805 = getelementptr inbounds [5 x double]* %1804, i32 0, i64 3
  %1806 = load double* %1805, align 8
  %1807 = load double* %pivot, align 8
  %1808 = fmul double %1806, %1807
  %1809 = load [5 x double]** %2, align 8
  %1810 = getelementptr inbounds [5 x double]* %1809, i64 1
  %1811 = getelementptr inbounds [5 x double]* %1810, i32 0, i64 3
  store double %1808, double* %1811, align 8
  %1812 = load [5 x double]** %2, align 8
  %1813 = getelementptr inbounds [5 x double]* %1812, i64 2
  %1814 = getelementptr inbounds [5 x double]* %1813, i32 0, i64 3
  %1815 = load double* %1814, align 8
  %1816 = load double* %pivot, align 8
  %1817 = fmul double %1815, %1816
  %1818 = load [5 x double]** %2, align 8
  %1819 = getelementptr inbounds [5 x double]* %1818, i64 2
  %1820 = getelementptr inbounds [5 x double]* %1819, i32 0, i64 3
  store double %1817, double* %1820, align 8
  %1821 = load [5 x double]** %2, align 8
  %1822 = getelementptr inbounds [5 x double]* %1821, i64 3
  %1823 = getelementptr inbounds [5 x double]* %1822, i32 0, i64 3
  %1824 = load double* %1823, align 8
  %1825 = load double* %pivot, align 8
  %1826 = fmul double %1824, %1825
  %1827 = load [5 x double]** %2, align 8
  %1828 = getelementptr inbounds [5 x double]* %1827, i64 3
  %1829 = getelementptr inbounds [5 x double]* %1828, i32 0, i64 3
  store double %1826, double* %1829, align 8
  %1830 = load [5 x double]** %2, align 8
  %1831 = getelementptr inbounds [5 x double]* %1830, i64 4
  %1832 = getelementptr inbounds [5 x double]* %1831, i32 0, i64 3
  %1833 = load double* %1832, align 8
  %1834 = load double* %pivot, align 8
  %1835 = fmul double %1833, %1834
  %1836 = load [5 x double]** %2, align 8
  %1837 = getelementptr inbounds [5 x double]* %1836, i64 4
  %1838 = getelementptr inbounds [5 x double]* %1837, i32 0, i64 3
  store double %1835, double* %1838, align 8
  %1839 = load double** %3, align 8
  %1840 = getelementptr inbounds double* %1839, i64 3
  %1841 = load double* %1840, align 8
  %1842 = load double* %pivot, align 8
  %1843 = fmul double %1841, %1842
  %1844 = load double** %3, align 8
  %1845 = getelementptr inbounds double* %1844, i64 3
  store double %1843, double* %1845, align 8
  %1846 = load [5 x double]** %1, align 8
  %1847 = getelementptr inbounds [5 x double]* %1846, i64 3
  %1848 = getelementptr inbounds [5 x double]* %1847, i32 0, i64 0
  %1849 = load double* %1848, align 8
  store double %1849, double* %coeff, align 8
  %1850 = load [5 x double]** %1, align 8
  %1851 = getelementptr inbounds [5 x double]* %1850, i64 4
  %1852 = getelementptr inbounds [5 x double]* %1851, i32 0, i64 0
  %1853 = load double* %1852, align 8
  %1854 = load double* %coeff, align 8
  %1855 = load [5 x double]** %1, align 8
  %1856 = getelementptr inbounds [5 x double]* %1855, i64 4
  %1857 = getelementptr inbounds [5 x double]* %1856, i32 0, i64 3
  %1858 = load double* %1857, align 8
  %1859 = fmul double %1854, %1858
  %1860 = fsub double %1853, %1859
  %1861 = load [5 x double]** %1, align 8
  %1862 = getelementptr inbounds [5 x double]* %1861, i64 4
  %1863 = getelementptr inbounds [5 x double]* %1862, i32 0, i64 0
  store double %1860, double* %1863, align 8
  %1864 = load [5 x double]** %2, align 8
  %1865 = getelementptr inbounds [5 x double]* %1864, i64 0
  %1866 = getelementptr inbounds [5 x double]* %1865, i32 0, i64 0
  %1867 = load double* %1866, align 8
  %1868 = load double* %coeff, align 8
  %1869 = load [5 x double]** %2, align 8
  %1870 = getelementptr inbounds [5 x double]* %1869, i64 0
  %1871 = getelementptr inbounds [5 x double]* %1870, i32 0, i64 3
  %1872 = load double* %1871, align 8
  %1873 = fmul double %1868, %1872
  %1874 = fsub double %1867, %1873
  %1875 = load [5 x double]** %2, align 8
  %1876 = getelementptr inbounds [5 x double]* %1875, i64 0
  %1877 = getelementptr inbounds [5 x double]* %1876, i32 0, i64 0
  store double %1874, double* %1877, align 8
  %1878 = load [5 x double]** %2, align 8
  %1879 = getelementptr inbounds [5 x double]* %1878, i64 1
  %1880 = getelementptr inbounds [5 x double]* %1879, i32 0, i64 0
  %1881 = load double* %1880, align 8
  %1882 = load double* %coeff, align 8
  %1883 = load [5 x double]** %2, align 8
  %1884 = getelementptr inbounds [5 x double]* %1883, i64 1
  %1885 = getelementptr inbounds [5 x double]* %1884, i32 0, i64 3
  %1886 = load double* %1885, align 8
  %1887 = fmul double %1882, %1886
  %1888 = fsub double %1881, %1887
  %1889 = load [5 x double]** %2, align 8
  %1890 = getelementptr inbounds [5 x double]* %1889, i64 1
  %1891 = getelementptr inbounds [5 x double]* %1890, i32 0, i64 0
  store double %1888, double* %1891, align 8
  %1892 = load [5 x double]** %2, align 8
  %1893 = getelementptr inbounds [5 x double]* %1892, i64 2
  %1894 = getelementptr inbounds [5 x double]* %1893, i32 0, i64 0
  %1895 = load double* %1894, align 8
  %1896 = load double* %coeff, align 8
  %1897 = load [5 x double]** %2, align 8
  %1898 = getelementptr inbounds [5 x double]* %1897, i64 2
  %1899 = getelementptr inbounds [5 x double]* %1898, i32 0, i64 3
  %1900 = load double* %1899, align 8
  %1901 = fmul double %1896, %1900
  %1902 = fsub double %1895, %1901
  %1903 = load [5 x double]** %2, align 8
  %1904 = getelementptr inbounds [5 x double]* %1903, i64 2
  %1905 = getelementptr inbounds [5 x double]* %1904, i32 0, i64 0
  store double %1902, double* %1905, align 8
  %1906 = load [5 x double]** %2, align 8
  %1907 = getelementptr inbounds [5 x double]* %1906, i64 3
  %1908 = getelementptr inbounds [5 x double]* %1907, i32 0, i64 0
  %1909 = load double* %1908, align 8
  %1910 = load double* %coeff, align 8
  %1911 = load [5 x double]** %2, align 8
  %1912 = getelementptr inbounds [5 x double]* %1911, i64 3
  %1913 = getelementptr inbounds [5 x double]* %1912, i32 0, i64 3
  %1914 = load double* %1913, align 8
  %1915 = fmul double %1910, %1914
  %1916 = fsub double %1909, %1915
  %1917 = load [5 x double]** %2, align 8
  %1918 = getelementptr inbounds [5 x double]* %1917, i64 3
  %1919 = getelementptr inbounds [5 x double]* %1918, i32 0, i64 0
  store double %1916, double* %1919, align 8
  %1920 = load [5 x double]** %2, align 8
  %1921 = getelementptr inbounds [5 x double]* %1920, i64 4
  %1922 = getelementptr inbounds [5 x double]* %1921, i32 0, i64 0
  %1923 = load double* %1922, align 8
  %1924 = load double* %coeff, align 8
  %1925 = load [5 x double]** %2, align 8
  %1926 = getelementptr inbounds [5 x double]* %1925, i64 4
  %1927 = getelementptr inbounds [5 x double]* %1926, i32 0, i64 3
  %1928 = load double* %1927, align 8
  %1929 = fmul double %1924, %1928
  %1930 = fsub double %1923, %1929
  %1931 = load [5 x double]** %2, align 8
  %1932 = getelementptr inbounds [5 x double]* %1931, i64 4
  %1933 = getelementptr inbounds [5 x double]* %1932, i32 0, i64 0
  store double %1930, double* %1933, align 8
  %1934 = load double** %3, align 8
  %1935 = getelementptr inbounds double* %1934, i64 0
  %1936 = load double* %1935, align 8
  %1937 = load double* %coeff, align 8
  %1938 = load double** %3, align 8
  %1939 = getelementptr inbounds double* %1938, i64 3
  %1940 = load double* %1939, align 8
  %1941 = fmul double %1937, %1940
  %1942 = fsub double %1936, %1941
  %1943 = load double** %3, align 8
  %1944 = getelementptr inbounds double* %1943, i64 0
  store double %1942, double* %1944, align 8
  %1945 = load [5 x double]** %1, align 8
  %1946 = getelementptr inbounds [5 x double]* %1945, i64 3
  %1947 = getelementptr inbounds [5 x double]* %1946, i32 0, i64 1
  %1948 = load double* %1947, align 8
  store double %1948, double* %coeff, align 8
  %1949 = load [5 x double]** %1, align 8
  %1950 = getelementptr inbounds [5 x double]* %1949, i64 4
  %1951 = getelementptr inbounds [5 x double]* %1950, i32 0, i64 1
  %1952 = load double* %1951, align 8
  %1953 = load double* %coeff, align 8
  %1954 = load [5 x double]** %1, align 8
  %1955 = getelementptr inbounds [5 x double]* %1954, i64 4
  %1956 = getelementptr inbounds [5 x double]* %1955, i32 0, i64 3
  %1957 = load double* %1956, align 8
  %1958 = fmul double %1953, %1957
  %1959 = fsub double %1952, %1958
  %1960 = load [5 x double]** %1, align 8
  %1961 = getelementptr inbounds [5 x double]* %1960, i64 4
  %1962 = getelementptr inbounds [5 x double]* %1961, i32 0, i64 1
  store double %1959, double* %1962, align 8
  %1963 = load [5 x double]** %2, align 8
  %1964 = getelementptr inbounds [5 x double]* %1963, i64 0
  %1965 = getelementptr inbounds [5 x double]* %1964, i32 0, i64 1
  %1966 = load double* %1965, align 8
  %1967 = load double* %coeff, align 8
  %1968 = load [5 x double]** %2, align 8
  %1969 = getelementptr inbounds [5 x double]* %1968, i64 0
  %1970 = getelementptr inbounds [5 x double]* %1969, i32 0, i64 3
  %1971 = load double* %1970, align 8
  %1972 = fmul double %1967, %1971
  %1973 = fsub double %1966, %1972
  %1974 = load [5 x double]** %2, align 8
  %1975 = getelementptr inbounds [5 x double]* %1974, i64 0
  %1976 = getelementptr inbounds [5 x double]* %1975, i32 0, i64 1
  store double %1973, double* %1976, align 8
  %1977 = load [5 x double]** %2, align 8
  %1978 = getelementptr inbounds [5 x double]* %1977, i64 1
  %1979 = getelementptr inbounds [5 x double]* %1978, i32 0, i64 1
  %1980 = load double* %1979, align 8
  %1981 = load double* %coeff, align 8
  %1982 = load [5 x double]** %2, align 8
  %1983 = getelementptr inbounds [5 x double]* %1982, i64 1
  %1984 = getelementptr inbounds [5 x double]* %1983, i32 0, i64 3
  %1985 = load double* %1984, align 8
  %1986 = fmul double %1981, %1985
  %1987 = fsub double %1980, %1986
  %1988 = load [5 x double]** %2, align 8
  %1989 = getelementptr inbounds [5 x double]* %1988, i64 1
  %1990 = getelementptr inbounds [5 x double]* %1989, i32 0, i64 1
  store double %1987, double* %1990, align 8
  %1991 = load [5 x double]** %2, align 8
  %1992 = getelementptr inbounds [5 x double]* %1991, i64 2
  %1993 = getelementptr inbounds [5 x double]* %1992, i32 0, i64 1
  %1994 = load double* %1993, align 8
  %1995 = load double* %coeff, align 8
  %1996 = load [5 x double]** %2, align 8
  %1997 = getelementptr inbounds [5 x double]* %1996, i64 2
  %1998 = getelementptr inbounds [5 x double]* %1997, i32 0, i64 3
  %1999 = load double* %1998, align 8
  %2000 = fmul double %1995, %1999
  %2001 = fsub double %1994, %2000
  %2002 = load [5 x double]** %2, align 8
  %2003 = getelementptr inbounds [5 x double]* %2002, i64 2
  %2004 = getelementptr inbounds [5 x double]* %2003, i32 0, i64 1
  store double %2001, double* %2004, align 8
  %2005 = load [5 x double]** %2, align 8
  %2006 = getelementptr inbounds [5 x double]* %2005, i64 3
  %2007 = getelementptr inbounds [5 x double]* %2006, i32 0, i64 1
  %2008 = load double* %2007, align 8
  %2009 = load double* %coeff, align 8
  %2010 = load [5 x double]** %2, align 8
  %2011 = getelementptr inbounds [5 x double]* %2010, i64 3
  %2012 = getelementptr inbounds [5 x double]* %2011, i32 0, i64 3
  %2013 = load double* %2012, align 8
  %2014 = fmul double %2009, %2013
  %2015 = fsub double %2008, %2014
  %2016 = load [5 x double]** %2, align 8
  %2017 = getelementptr inbounds [5 x double]* %2016, i64 3
  %2018 = getelementptr inbounds [5 x double]* %2017, i32 0, i64 1
  store double %2015, double* %2018, align 8
  %2019 = load [5 x double]** %2, align 8
  %2020 = getelementptr inbounds [5 x double]* %2019, i64 4
  %2021 = getelementptr inbounds [5 x double]* %2020, i32 0, i64 1
  %2022 = load double* %2021, align 8
  %2023 = load double* %coeff, align 8
  %2024 = load [5 x double]** %2, align 8
  %2025 = getelementptr inbounds [5 x double]* %2024, i64 4
  %2026 = getelementptr inbounds [5 x double]* %2025, i32 0, i64 3
  %2027 = load double* %2026, align 8
  %2028 = fmul double %2023, %2027
  %2029 = fsub double %2022, %2028
  %2030 = load [5 x double]** %2, align 8
  %2031 = getelementptr inbounds [5 x double]* %2030, i64 4
  %2032 = getelementptr inbounds [5 x double]* %2031, i32 0, i64 1
  store double %2029, double* %2032, align 8
  %2033 = load double** %3, align 8
  %2034 = getelementptr inbounds double* %2033, i64 1
  %2035 = load double* %2034, align 8
  %2036 = load double* %coeff, align 8
  %2037 = load double** %3, align 8
  %2038 = getelementptr inbounds double* %2037, i64 3
  %2039 = load double* %2038, align 8
  %2040 = fmul double %2036, %2039
  %2041 = fsub double %2035, %2040
  %2042 = load double** %3, align 8
  %2043 = getelementptr inbounds double* %2042, i64 1
  store double %2041, double* %2043, align 8
  %2044 = load [5 x double]** %1, align 8
  %2045 = getelementptr inbounds [5 x double]* %2044, i64 3
  %2046 = getelementptr inbounds [5 x double]* %2045, i32 0, i64 2
  %2047 = load double* %2046, align 8
  store double %2047, double* %coeff, align 8
  %2048 = load [5 x double]** %1, align 8
  %2049 = getelementptr inbounds [5 x double]* %2048, i64 4
  %2050 = getelementptr inbounds [5 x double]* %2049, i32 0, i64 2
  %2051 = load double* %2050, align 8
  %2052 = load double* %coeff, align 8
  %2053 = load [5 x double]** %1, align 8
  %2054 = getelementptr inbounds [5 x double]* %2053, i64 4
  %2055 = getelementptr inbounds [5 x double]* %2054, i32 0, i64 3
  %2056 = load double* %2055, align 8
  %2057 = fmul double %2052, %2056
  %2058 = fsub double %2051, %2057
  %2059 = load [5 x double]** %1, align 8
  %2060 = getelementptr inbounds [5 x double]* %2059, i64 4
  %2061 = getelementptr inbounds [5 x double]* %2060, i32 0, i64 2
  store double %2058, double* %2061, align 8
  %2062 = load [5 x double]** %2, align 8
  %2063 = getelementptr inbounds [5 x double]* %2062, i64 0
  %2064 = getelementptr inbounds [5 x double]* %2063, i32 0, i64 2
  %2065 = load double* %2064, align 8
  %2066 = load double* %coeff, align 8
  %2067 = load [5 x double]** %2, align 8
  %2068 = getelementptr inbounds [5 x double]* %2067, i64 0
  %2069 = getelementptr inbounds [5 x double]* %2068, i32 0, i64 3
  %2070 = load double* %2069, align 8
  %2071 = fmul double %2066, %2070
  %2072 = fsub double %2065, %2071
  %2073 = load [5 x double]** %2, align 8
  %2074 = getelementptr inbounds [5 x double]* %2073, i64 0
  %2075 = getelementptr inbounds [5 x double]* %2074, i32 0, i64 2
  store double %2072, double* %2075, align 8
  %2076 = load [5 x double]** %2, align 8
  %2077 = getelementptr inbounds [5 x double]* %2076, i64 1
  %2078 = getelementptr inbounds [5 x double]* %2077, i32 0, i64 2
  %2079 = load double* %2078, align 8
  %2080 = load double* %coeff, align 8
  %2081 = load [5 x double]** %2, align 8
  %2082 = getelementptr inbounds [5 x double]* %2081, i64 1
  %2083 = getelementptr inbounds [5 x double]* %2082, i32 0, i64 3
  %2084 = load double* %2083, align 8
  %2085 = fmul double %2080, %2084
  %2086 = fsub double %2079, %2085
  %2087 = load [5 x double]** %2, align 8
  %2088 = getelementptr inbounds [5 x double]* %2087, i64 1
  %2089 = getelementptr inbounds [5 x double]* %2088, i32 0, i64 2
  store double %2086, double* %2089, align 8
  %2090 = load [5 x double]** %2, align 8
  %2091 = getelementptr inbounds [5 x double]* %2090, i64 2
  %2092 = getelementptr inbounds [5 x double]* %2091, i32 0, i64 2
  %2093 = load double* %2092, align 8
  %2094 = load double* %coeff, align 8
  %2095 = load [5 x double]** %2, align 8
  %2096 = getelementptr inbounds [5 x double]* %2095, i64 2
  %2097 = getelementptr inbounds [5 x double]* %2096, i32 0, i64 3
  %2098 = load double* %2097, align 8
  %2099 = fmul double %2094, %2098
  %2100 = fsub double %2093, %2099
  %2101 = load [5 x double]** %2, align 8
  %2102 = getelementptr inbounds [5 x double]* %2101, i64 2
  %2103 = getelementptr inbounds [5 x double]* %2102, i32 0, i64 2
  store double %2100, double* %2103, align 8
  %2104 = load [5 x double]** %2, align 8
  %2105 = getelementptr inbounds [5 x double]* %2104, i64 3
  %2106 = getelementptr inbounds [5 x double]* %2105, i32 0, i64 2
  %2107 = load double* %2106, align 8
  %2108 = load double* %coeff, align 8
  %2109 = load [5 x double]** %2, align 8
  %2110 = getelementptr inbounds [5 x double]* %2109, i64 3
  %2111 = getelementptr inbounds [5 x double]* %2110, i32 0, i64 3
  %2112 = load double* %2111, align 8
  %2113 = fmul double %2108, %2112
  %2114 = fsub double %2107, %2113
  %2115 = load [5 x double]** %2, align 8
  %2116 = getelementptr inbounds [5 x double]* %2115, i64 3
  %2117 = getelementptr inbounds [5 x double]* %2116, i32 0, i64 2
  store double %2114, double* %2117, align 8
  %2118 = load [5 x double]** %2, align 8
  %2119 = getelementptr inbounds [5 x double]* %2118, i64 4
  %2120 = getelementptr inbounds [5 x double]* %2119, i32 0, i64 2
  %2121 = load double* %2120, align 8
  %2122 = load double* %coeff, align 8
  %2123 = load [5 x double]** %2, align 8
  %2124 = getelementptr inbounds [5 x double]* %2123, i64 4
  %2125 = getelementptr inbounds [5 x double]* %2124, i32 0, i64 3
  %2126 = load double* %2125, align 8
  %2127 = fmul double %2122, %2126
  %2128 = fsub double %2121, %2127
  %2129 = load [5 x double]** %2, align 8
  %2130 = getelementptr inbounds [5 x double]* %2129, i64 4
  %2131 = getelementptr inbounds [5 x double]* %2130, i32 0, i64 2
  store double %2128, double* %2131, align 8
  %2132 = load double** %3, align 8
  %2133 = getelementptr inbounds double* %2132, i64 2
  %2134 = load double* %2133, align 8
  %2135 = load double* %coeff, align 8
  %2136 = load double** %3, align 8
  %2137 = getelementptr inbounds double* %2136, i64 3
  %2138 = load double* %2137, align 8
  %2139 = fmul double %2135, %2138
  %2140 = fsub double %2134, %2139
  %2141 = load double** %3, align 8
  %2142 = getelementptr inbounds double* %2141, i64 2
  store double %2140, double* %2142, align 8
  %2143 = load [5 x double]** %1, align 8
  %2144 = getelementptr inbounds [5 x double]* %2143, i64 3
  %2145 = getelementptr inbounds [5 x double]* %2144, i32 0, i64 4
  %2146 = load double* %2145, align 8
  store double %2146, double* %coeff, align 8
  %2147 = load [5 x double]** %1, align 8
  %2148 = getelementptr inbounds [5 x double]* %2147, i64 4
  %2149 = getelementptr inbounds [5 x double]* %2148, i32 0, i64 4
  %2150 = load double* %2149, align 8
  %2151 = load double* %coeff, align 8
  %2152 = load [5 x double]** %1, align 8
  %2153 = getelementptr inbounds [5 x double]* %2152, i64 4
  %2154 = getelementptr inbounds [5 x double]* %2153, i32 0, i64 3
  %2155 = load double* %2154, align 8
  %2156 = fmul double %2151, %2155
  %2157 = fsub double %2150, %2156
  %2158 = load [5 x double]** %1, align 8
  %2159 = getelementptr inbounds [5 x double]* %2158, i64 4
  %2160 = getelementptr inbounds [5 x double]* %2159, i32 0, i64 4
  store double %2157, double* %2160, align 8
  %2161 = load [5 x double]** %2, align 8
  %2162 = getelementptr inbounds [5 x double]* %2161, i64 0
  %2163 = getelementptr inbounds [5 x double]* %2162, i32 0, i64 4
  %2164 = load double* %2163, align 8
  %2165 = load double* %coeff, align 8
  %2166 = load [5 x double]** %2, align 8
  %2167 = getelementptr inbounds [5 x double]* %2166, i64 0
  %2168 = getelementptr inbounds [5 x double]* %2167, i32 0, i64 3
  %2169 = load double* %2168, align 8
  %2170 = fmul double %2165, %2169
  %2171 = fsub double %2164, %2170
  %2172 = load [5 x double]** %2, align 8
  %2173 = getelementptr inbounds [5 x double]* %2172, i64 0
  %2174 = getelementptr inbounds [5 x double]* %2173, i32 0, i64 4
  store double %2171, double* %2174, align 8
  %2175 = load [5 x double]** %2, align 8
  %2176 = getelementptr inbounds [5 x double]* %2175, i64 1
  %2177 = getelementptr inbounds [5 x double]* %2176, i32 0, i64 4
  %2178 = load double* %2177, align 8
  %2179 = load double* %coeff, align 8
  %2180 = load [5 x double]** %2, align 8
  %2181 = getelementptr inbounds [5 x double]* %2180, i64 1
  %2182 = getelementptr inbounds [5 x double]* %2181, i32 0, i64 3
  %2183 = load double* %2182, align 8
  %2184 = fmul double %2179, %2183
  %2185 = fsub double %2178, %2184
  %2186 = load [5 x double]** %2, align 8
  %2187 = getelementptr inbounds [5 x double]* %2186, i64 1
  %2188 = getelementptr inbounds [5 x double]* %2187, i32 0, i64 4
  store double %2185, double* %2188, align 8
  %2189 = load [5 x double]** %2, align 8
  %2190 = getelementptr inbounds [5 x double]* %2189, i64 2
  %2191 = getelementptr inbounds [5 x double]* %2190, i32 0, i64 4
  %2192 = load double* %2191, align 8
  %2193 = load double* %coeff, align 8
  %2194 = load [5 x double]** %2, align 8
  %2195 = getelementptr inbounds [5 x double]* %2194, i64 2
  %2196 = getelementptr inbounds [5 x double]* %2195, i32 0, i64 3
  %2197 = load double* %2196, align 8
  %2198 = fmul double %2193, %2197
  %2199 = fsub double %2192, %2198
  %2200 = load [5 x double]** %2, align 8
  %2201 = getelementptr inbounds [5 x double]* %2200, i64 2
  %2202 = getelementptr inbounds [5 x double]* %2201, i32 0, i64 4
  store double %2199, double* %2202, align 8
  %2203 = load [5 x double]** %2, align 8
  %2204 = getelementptr inbounds [5 x double]* %2203, i64 3
  %2205 = getelementptr inbounds [5 x double]* %2204, i32 0, i64 4
  %2206 = load double* %2205, align 8
  %2207 = load double* %coeff, align 8
  %2208 = load [5 x double]** %2, align 8
  %2209 = getelementptr inbounds [5 x double]* %2208, i64 3
  %2210 = getelementptr inbounds [5 x double]* %2209, i32 0, i64 3
  %2211 = load double* %2210, align 8
  %2212 = fmul double %2207, %2211
  %2213 = fsub double %2206, %2212
  %2214 = load [5 x double]** %2, align 8
  %2215 = getelementptr inbounds [5 x double]* %2214, i64 3
  %2216 = getelementptr inbounds [5 x double]* %2215, i32 0, i64 4
  store double %2213, double* %2216, align 8
  %2217 = load [5 x double]** %2, align 8
  %2218 = getelementptr inbounds [5 x double]* %2217, i64 4
  %2219 = getelementptr inbounds [5 x double]* %2218, i32 0, i64 4
  %2220 = load double* %2219, align 8
  %2221 = load double* %coeff, align 8
  %2222 = load [5 x double]** %2, align 8
  %2223 = getelementptr inbounds [5 x double]* %2222, i64 4
  %2224 = getelementptr inbounds [5 x double]* %2223, i32 0, i64 3
  %2225 = load double* %2224, align 8
  %2226 = fmul double %2221, %2225
  %2227 = fsub double %2220, %2226
  %2228 = load [5 x double]** %2, align 8
  %2229 = getelementptr inbounds [5 x double]* %2228, i64 4
  %2230 = getelementptr inbounds [5 x double]* %2229, i32 0, i64 4
  store double %2227, double* %2230, align 8
  %2231 = load double** %3, align 8
  %2232 = getelementptr inbounds double* %2231, i64 4
  %2233 = load double* %2232, align 8
  %2234 = load double* %coeff, align 8
  %2235 = load double** %3, align 8
  %2236 = getelementptr inbounds double* %2235, i64 3
  %2237 = load double* %2236, align 8
  %2238 = fmul double %2234, %2237
  %2239 = fsub double %2233, %2238
  %2240 = load double** %3, align 8
  %2241 = getelementptr inbounds double* %2240, i64 4
  store double %2239, double* %2241, align 8
  %2242 = load [5 x double]** %1, align 8
  %2243 = getelementptr inbounds [5 x double]* %2242, i64 4
  %2244 = getelementptr inbounds [5 x double]* %2243, i32 0, i64 4
  %2245 = load double* %2244, align 8
  %2246 = fdiv double 1.000000e+00, %2245
  store double %2246, double* %pivot, align 8
  %2247 = load [5 x double]** %2, align 8
  %2248 = getelementptr inbounds [5 x double]* %2247, i64 0
  %2249 = getelementptr inbounds [5 x double]* %2248, i32 0, i64 4
  %2250 = load double* %2249, align 8
  %2251 = load double* %pivot, align 8
  %2252 = fmul double %2250, %2251
  %2253 = load [5 x double]** %2, align 8
  %2254 = getelementptr inbounds [5 x double]* %2253, i64 0
  %2255 = getelementptr inbounds [5 x double]* %2254, i32 0, i64 4
  store double %2252, double* %2255, align 8
  %2256 = load [5 x double]** %2, align 8
  %2257 = getelementptr inbounds [5 x double]* %2256, i64 1
  %2258 = getelementptr inbounds [5 x double]* %2257, i32 0, i64 4
  %2259 = load double* %2258, align 8
  %2260 = load double* %pivot, align 8
  %2261 = fmul double %2259, %2260
  %2262 = load [5 x double]** %2, align 8
  %2263 = getelementptr inbounds [5 x double]* %2262, i64 1
  %2264 = getelementptr inbounds [5 x double]* %2263, i32 0, i64 4
  store double %2261, double* %2264, align 8
  %2265 = load [5 x double]** %2, align 8
  %2266 = getelementptr inbounds [5 x double]* %2265, i64 2
  %2267 = getelementptr inbounds [5 x double]* %2266, i32 0, i64 4
  %2268 = load double* %2267, align 8
  %2269 = load double* %pivot, align 8
  %2270 = fmul double %2268, %2269
  %2271 = load [5 x double]** %2, align 8
  %2272 = getelementptr inbounds [5 x double]* %2271, i64 2
  %2273 = getelementptr inbounds [5 x double]* %2272, i32 0, i64 4
  store double %2270, double* %2273, align 8
  %2274 = load [5 x double]** %2, align 8
  %2275 = getelementptr inbounds [5 x double]* %2274, i64 3
  %2276 = getelementptr inbounds [5 x double]* %2275, i32 0, i64 4
  %2277 = load double* %2276, align 8
  %2278 = load double* %pivot, align 8
  %2279 = fmul double %2277, %2278
  %2280 = load [5 x double]** %2, align 8
  %2281 = getelementptr inbounds [5 x double]* %2280, i64 3
  %2282 = getelementptr inbounds [5 x double]* %2281, i32 0, i64 4
  store double %2279, double* %2282, align 8
  %2283 = load [5 x double]** %2, align 8
  %2284 = getelementptr inbounds [5 x double]* %2283, i64 4
  %2285 = getelementptr inbounds [5 x double]* %2284, i32 0, i64 4
  %2286 = load double* %2285, align 8
  %2287 = load double* %pivot, align 8
  %2288 = fmul double %2286, %2287
  %2289 = load [5 x double]** %2, align 8
  %2290 = getelementptr inbounds [5 x double]* %2289, i64 4
  %2291 = getelementptr inbounds [5 x double]* %2290, i32 0, i64 4
  store double %2288, double* %2291, align 8
  %2292 = load double** %3, align 8
  %2293 = getelementptr inbounds double* %2292, i64 4
  %2294 = load double* %2293, align 8
  %2295 = load double* %pivot, align 8
  %2296 = fmul double %2294, %2295
  %2297 = load double** %3, align 8
  %2298 = getelementptr inbounds double* %2297, i64 4
  store double %2296, double* %2298, align 8
  %2299 = load [5 x double]** %1, align 8
  %2300 = getelementptr inbounds [5 x double]* %2299, i64 4
  %2301 = getelementptr inbounds [5 x double]* %2300, i32 0, i64 0
  %2302 = load double* %2301, align 8
  store double %2302, double* %coeff, align 8
  %2303 = load [5 x double]** %2, align 8
  %2304 = getelementptr inbounds [5 x double]* %2303, i64 0
  %2305 = getelementptr inbounds [5 x double]* %2304, i32 0, i64 0
  %2306 = load double* %2305, align 8
  %2307 = load double* %coeff, align 8
  %2308 = load [5 x double]** %2, align 8
  %2309 = getelementptr inbounds [5 x double]* %2308, i64 0
  %2310 = getelementptr inbounds [5 x double]* %2309, i32 0, i64 4
  %2311 = load double* %2310, align 8
  %2312 = fmul double %2307, %2311
  %2313 = fsub double %2306, %2312
  %2314 = load [5 x double]** %2, align 8
  %2315 = getelementptr inbounds [5 x double]* %2314, i64 0
  %2316 = getelementptr inbounds [5 x double]* %2315, i32 0, i64 0
  store double %2313, double* %2316, align 8
  %2317 = load [5 x double]** %2, align 8
  %2318 = getelementptr inbounds [5 x double]* %2317, i64 1
  %2319 = getelementptr inbounds [5 x double]* %2318, i32 0, i64 0
  %2320 = load double* %2319, align 8
  %2321 = load double* %coeff, align 8
  %2322 = load [5 x double]** %2, align 8
  %2323 = getelementptr inbounds [5 x double]* %2322, i64 1
  %2324 = getelementptr inbounds [5 x double]* %2323, i32 0, i64 4
  %2325 = load double* %2324, align 8
  %2326 = fmul double %2321, %2325
  %2327 = fsub double %2320, %2326
  %2328 = load [5 x double]** %2, align 8
  %2329 = getelementptr inbounds [5 x double]* %2328, i64 1
  %2330 = getelementptr inbounds [5 x double]* %2329, i32 0, i64 0
  store double %2327, double* %2330, align 8
  %2331 = load [5 x double]** %2, align 8
  %2332 = getelementptr inbounds [5 x double]* %2331, i64 2
  %2333 = getelementptr inbounds [5 x double]* %2332, i32 0, i64 0
  %2334 = load double* %2333, align 8
  %2335 = load double* %coeff, align 8
  %2336 = load [5 x double]** %2, align 8
  %2337 = getelementptr inbounds [5 x double]* %2336, i64 2
  %2338 = getelementptr inbounds [5 x double]* %2337, i32 0, i64 4
  %2339 = load double* %2338, align 8
  %2340 = fmul double %2335, %2339
  %2341 = fsub double %2334, %2340
  %2342 = load [5 x double]** %2, align 8
  %2343 = getelementptr inbounds [5 x double]* %2342, i64 2
  %2344 = getelementptr inbounds [5 x double]* %2343, i32 0, i64 0
  store double %2341, double* %2344, align 8
  %2345 = load [5 x double]** %2, align 8
  %2346 = getelementptr inbounds [5 x double]* %2345, i64 3
  %2347 = getelementptr inbounds [5 x double]* %2346, i32 0, i64 0
  %2348 = load double* %2347, align 8
  %2349 = load double* %coeff, align 8
  %2350 = load [5 x double]** %2, align 8
  %2351 = getelementptr inbounds [5 x double]* %2350, i64 3
  %2352 = getelementptr inbounds [5 x double]* %2351, i32 0, i64 4
  %2353 = load double* %2352, align 8
  %2354 = fmul double %2349, %2353
  %2355 = fsub double %2348, %2354
  %2356 = load [5 x double]** %2, align 8
  %2357 = getelementptr inbounds [5 x double]* %2356, i64 3
  %2358 = getelementptr inbounds [5 x double]* %2357, i32 0, i64 0
  store double %2355, double* %2358, align 8
  %2359 = load [5 x double]** %2, align 8
  %2360 = getelementptr inbounds [5 x double]* %2359, i64 4
  %2361 = getelementptr inbounds [5 x double]* %2360, i32 0, i64 0
  %2362 = load double* %2361, align 8
  %2363 = load double* %coeff, align 8
  %2364 = load [5 x double]** %2, align 8
  %2365 = getelementptr inbounds [5 x double]* %2364, i64 4
  %2366 = getelementptr inbounds [5 x double]* %2365, i32 0, i64 4
  %2367 = load double* %2366, align 8
  %2368 = fmul double %2363, %2367
  %2369 = fsub double %2362, %2368
  %2370 = load [5 x double]** %2, align 8
  %2371 = getelementptr inbounds [5 x double]* %2370, i64 4
  %2372 = getelementptr inbounds [5 x double]* %2371, i32 0, i64 0
  store double %2369, double* %2372, align 8
  %2373 = load double** %3, align 8
  %2374 = getelementptr inbounds double* %2373, i64 0
  %2375 = load double* %2374, align 8
  %2376 = load double* %coeff, align 8
  %2377 = load double** %3, align 8
  %2378 = getelementptr inbounds double* %2377, i64 4
  %2379 = load double* %2378, align 8
  %2380 = fmul double %2376, %2379
  %2381 = fsub double %2375, %2380
  %2382 = load double** %3, align 8
  %2383 = getelementptr inbounds double* %2382, i64 0
  store double %2381, double* %2383, align 8
  %2384 = load [5 x double]** %1, align 8
  %2385 = getelementptr inbounds [5 x double]* %2384, i64 4
  %2386 = getelementptr inbounds [5 x double]* %2385, i32 0, i64 1
  %2387 = load double* %2386, align 8
  store double %2387, double* %coeff, align 8
  %2388 = load [5 x double]** %2, align 8
  %2389 = getelementptr inbounds [5 x double]* %2388, i64 0
  %2390 = getelementptr inbounds [5 x double]* %2389, i32 0, i64 1
  %2391 = load double* %2390, align 8
  %2392 = load double* %coeff, align 8
  %2393 = load [5 x double]** %2, align 8
  %2394 = getelementptr inbounds [5 x double]* %2393, i64 0
  %2395 = getelementptr inbounds [5 x double]* %2394, i32 0, i64 4
  %2396 = load double* %2395, align 8
  %2397 = fmul double %2392, %2396
  %2398 = fsub double %2391, %2397
  %2399 = load [5 x double]** %2, align 8
  %2400 = getelementptr inbounds [5 x double]* %2399, i64 0
  %2401 = getelementptr inbounds [5 x double]* %2400, i32 0, i64 1
  store double %2398, double* %2401, align 8
  %2402 = load [5 x double]** %2, align 8
  %2403 = getelementptr inbounds [5 x double]* %2402, i64 1
  %2404 = getelementptr inbounds [5 x double]* %2403, i32 0, i64 1
  %2405 = load double* %2404, align 8
  %2406 = load double* %coeff, align 8
  %2407 = load [5 x double]** %2, align 8
  %2408 = getelementptr inbounds [5 x double]* %2407, i64 1
  %2409 = getelementptr inbounds [5 x double]* %2408, i32 0, i64 4
  %2410 = load double* %2409, align 8
  %2411 = fmul double %2406, %2410
  %2412 = fsub double %2405, %2411
  %2413 = load [5 x double]** %2, align 8
  %2414 = getelementptr inbounds [5 x double]* %2413, i64 1
  %2415 = getelementptr inbounds [5 x double]* %2414, i32 0, i64 1
  store double %2412, double* %2415, align 8
  %2416 = load [5 x double]** %2, align 8
  %2417 = getelementptr inbounds [5 x double]* %2416, i64 2
  %2418 = getelementptr inbounds [5 x double]* %2417, i32 0, i64 1
  %2419 = load double* %2418, align 8
  %2420 = load double* %coeff, align 8
  %2421 = load [5 x double]** %2, align 8
  %2422 = getelementptr inbounds [5 x double]* %2421, i64 2
  %2423 = getelementptr inbounds [5 x double]* %2422, i32 0, i64 4
  %2424 = load double* %2423, align 8
  %2425 = fmul double %2420, %2424
  %2426 = fsub double %2419, %2425
  %2427 = load [5 x double]** %2, align 8
  %2428 = getelementptr inbounds [5 x double]* %2427, i64 2
  %2429 = getelementptr inbounds [5 x double]* %2428, i32 0, i64 1
  store double %2426, double* %2429, align 8
  %2430 = load [5 x double]** %2, align 8
  %2431 = getelementptr inbounds [5 x double]* %2430, i64 3
  %2432 = getelementptr inbounds [5 x double]* %2431, i32 0, i64 1
  %2433 = load double* %2432, align 8
  %2434 = load double* %coeff, align 8
  %2435 = load [5 x double]** %2, align 8
  %2436 = getelementptr inbounds [5 x double]* %2435, i64 3
  %2437 = getelementptr inbounds [5 x double]* %2436, i32 0, i64 4
  %2438 = load double* %2437, align 8
  %2439 = fmul double %2434, %2438
  %2440 = fsub double %2433, %2439
  %2441 = load [5 x double]** %2, align 8
  %2442 = getelementptr inbounds [5 x double]* %2441, i64 3
  %2443 = getelementptr inbounds [5 x double]* %2442, i32 0, i64 1
  store double %2440, double* %2443, align 8
  %2444 = load [5 x double]** %2, align 8
  %2445 = getelementptr inbounds [5 x double]* %2444, i64 4
  %2446 = getelementptr inbounds [5 x double]* %2445, i32 0, i64 1
  %2447 = load double* %2446, align 8
  %2448 = load double* %coeff, align 8
  %2449 = load [5 x double]** %2, align 8
  %2450 = getelementptr inbounds [5 x double]* %2449, i64 4
  %2451 = getelementptr inbounds [5 x double]* %2450, i32 0, i64 4
  %2452 = load double* %2451, align 8
  %2453 = fmul double %2448, %2452
  %2454 = fsub double %2447, %2453
  %2455 = load [5 x double]** %2, align 8
  %2456 = getelementptr inbounds [5 x double]* %2455, i64 4
  %2457 = getelementptr inbounds [5 x double]* %2456, i32 0, i64 1
  store double %2454, double* %2457, align 8
  %2458 = load double** %3, align 8
  %2459 = getelementptr inbounds double* %2458, i64 1
  %2460 = load double* %2459, align 8
  %2461 = load double* %coeff, align 8
  %2462 = load double** %3, align 8
  %2463 = getelementptr inbounds double* %2462, i64 4
  %2464 = load double* %2463, align 8
  %2465 = fmul double %2461, %2464
  %2466 = fsub double %2460, %2465
  %2467 = load double** %3, align 8
  %2468 = getelementptr inbounds double* %2467, i64 1
  store double %2466, double* %2468, align 8
  %2469 = load [5 x double]** %1, align 8
  %2470 = getelementptr inbounds [5 x double]* %2469, i64 4
  %2471 = getelementptr inbounds [5 x double]* %2470, i32 0, i64 2
  %2472 = load double* %2471, align 8
  store double %2472, double* %coeff, align 8
  %2473 = load [5 x double]** %2, align 8
  %2474 = getelementptr inbounds [5 x double]* %2473, i64 0
  %2475 = getelementptr inbounds [5 x double]* %2474, i32 0, i64 2
  %2476 = load double* %2475, align 8
  %2477 = load double* %coeff, align 8
  %2478 = load [5 x double]** %2, align 8
  %2479 = getelementptr inbounds [5 x double]* %2478, i64 0
  %2480 = getelementptr inbounds [5 x double]* %2479, i32 0, i64 4
  %2481 = load double* %2480, align 8
  %2482 = fmul double %2477, %2481
  %2483 = fsub double %2476, %2482
  %2484 = load [5 x double]** %2, align 8
  %2485 = getelementptr inbounds [5 x double]* %2484, i64 0
  %2486 = getelementptr inbounds [5 x double]* %2485, i32 0, i64 2
  store double %2483, double* %2486, align 8
  %2487 = load [5 x double]** %2, align 8
  %2488 = getelementptr inbounds [5 x double]* %2487, i64 1
  %2489 = getelementptr inbounds [5 x double]* %2488, i32 0, i64 2
  %2490 = load double* %2489, align 8
  %2491 = load double* %coeff, align 8
  %2492 = load [5 x double]** %2, align 8
  %2493 = getelementptr inbounds [5 x double]* %2492, i64 1
  %2494 = getelementptr inbounds [5 x double]* %2493, i32 0, i64 4
  %2495 = load double* %2494, align 8
  %2496 = fmul double %2491, %2495
  %2497 = fsub double %2490, %2496
  %2498 = load [5 x double]** %2, align 8
  %2499 = getelementptr inbounds [5 x double]* %2498, i64 1
  %2500 = getelementptr inbounds [5 x double]* %2499, i32 0, i64 2
  store double %2497, double* %2500, align 8
  %2501 = load [5 x double]** %2, align 8
  %2502 = getelementptr inbounds [5 x double]* %2501, i64 2
  %2503 = getelementptr inbounds [5 x double]* %2502, i32 0, i64 2
  %2504 = load double* %2503, align 8
  %2505 = load double* %coeff, align 8
  %2506 = load [5 x double]** %2, align 8
  %2507 = getelementptr inbounds [5 x double]* %2506, i64 2
  %2508 = getelementptr inbounds [5 x double]* %2507, i32 0, i64 4
  %2509 = load double* %2508, align 8
  %2510 = fmul double %2505, %2509
  %2511 = fsub double %2504, %2510
  %2512 = load [5 x double]** %2, align 8
  %2513 = getelementptr inbounds [5 x double]* %2512, i64 2
  %2514 = getelementptr inbounds [5 x double]* %2513, i32 0, i64 2
  store double %2511, double* %2514, align 8
  %2515 = load [5 x double]** %2, align 8
  %2516 = getelementptr inbounds [5 x double]* %2515, i64 3
  %2517 = getelementptr inbounds [5 x double]* %2516, i32 0, i64 2
  %2518 = load double* %2517, align 8
  %2519 = load double* %coeff, align 8
  %2520 = load [5 x double]** %2, align 8
  %2521 = getelementptr inbounds [5 x double]* %2520, i64 3
  %2522 = getelementptr inbounds [5 x double]* %2521, i32 0, i64 4
  %2523 = load double* %2522, align 8
  %2524 = fmul double %2519, %2523
  %2525 = fsub double %2518, %2524
  %2526 = load [5 x double]** %2, align 8
  %2527 = getelementptr inbounds [5 x double]* %2526, i64 3
  %2528 = getelementptr inbounds [5 x double]* %2527, i32 0, i64 2
  store double %2525, double* %2528, align 8
  %2529 = load [5 x double]** %2, align 8
  %2530 = getelementptr inbounds [5 x double]* %2529, i64 4
  %2531 = getelementptr inbounds [5 x double]* %2530, i32 0, i64 2
  %2532 = load double* %2531, align 8
  %2533 = load double* %coeff, align 8
  %2534 = load [5 x double]** %2, align 8
  %2535 = getelementptr inbounds [5 x double]* %2534, i64 4
  %2536 = getelementptr inbounds [5 x double]* %2535, i32 0, i64 4
  %2537 = load double* %2536, align 8
  %2538 = fmul double %2533, %2537
  %2539 = fsub double %2532, %2538
  %2540 = load [5 x double]** %2, align 8
  %2541 = getelementptr inbounds [5 x double]* %2540, i64 4
  %2542 = getelementptr inbounds [5 x double]* %2541, i32 0, i64 2
  store double %2539, double* %2542, align 8
  %2543 = load double** %3, align 8
  %2544 = getelementptr inbounds double* %2543, i64 2
  %2545 = load double* %2544, align 8
  %2546 = load double* %coeff, align 8
  %2547 = load double** %3, align 8
  %2548 = getelementptr inbounds double* %2547, i64 4
  %2549 = load double* %2548, align 8
  %2550 = fmul double %2546, %2549
  %2551 = fsub double %2545, %2550
  %2552 = load double** %3, align 8
  %2553 = getelementptr inbounds double* %2552, i64 2
  store double %2551, double* %2553, align 8
  %2554 = load [5 x double]** %1, align 8
  %2555 = getelementptr inbounds [5 x double]* %2554, i64 4
  %2556 = getelementptr inbounds [5 x double]* %2555, i32 0, i64 3
  %2557 = load double* %2556, align 8
  store double %2557, double* %coeff, align 8
  %2558 = load [5 x double]** %2, align 8
  %2559 = getelementptr inbounds [5 x double]* %2558, i64 0
  %2560 = getelementptr inbounds [5 x double]* %2559, i32 0, i64 3
  %2561 = load double* %2560, align 8
  %2562 = load double* %coeff, align 8
  %2563 = load [5 x double]** %2, align 8
  %2564 = getelementptr inbounds [5 x double]* %2563, i64 0
  %2565 = getelementptr inbounds [5 x double]* %2564, i32 0, i64 4
  %2566 = load double* %2565, align 8
  %2567 = fmul double %2562, %2566
  %2568 = fsub double %2561, %2567
  %2569 = load [5 x double]** %2, align 8
  %2570 = getelementptr inbounds [5 x double]* %2569, i64 0
  %2571 = getelementptr inbounds [5 x double]* %2570, i32 0, i64 3
  store double %2568, double* %2571, align 8
  %2572 = load [5 x double]** %2, align 8
  %2573 = getelementptr inbounds [5 x double]* %2572, i64 1
  %2574 = getelementptr inbounds [5 x double]* %2573, i32 0, i64 3
  %2575 = load double* %2574, align 8
  %2576 = load double* %coeff, align 8
  %2577 = load [5 x double]** %2, align 8
  %2578 = getelementptr inbounds [5 x double]* %2577, i64 1
  %2579 = getelementptr inbounds [5 x double]* %2578, i32 0, i64 4
  %2580 = load double* %2579, align 8
  %2581 = fmul double %2576, %2580
  %2582 = fsub double %2575, %2581
  %2583 = load [5 x double]** %2, align 8
  %2584 = getelementptr inbounds [5 x double]* %2583, i64 1
  %2585 = getelementptr inbounds [5 x double]* %2584, i32 0, i64 3
  store double %2582, double* %2585, align 8
  %2586 = load [5 x double]** %2, align 8
  %2587 = getelementptr inbounds [5 x double]* %2586, i64 2
  %2588 = getelementptr inbounds [5 x double]* %2587, i32 0, i64 3
  %2589 = load double* %2588, align 8
  %2590 = load double* %coeff, align 8
  %2591 = load [5 x double]** %2, align 8
  %2592 = getelementptr inbounds [5 x double]* %2591, i64 2
  %2593 = getelementptr inbounds [5 x double]* %2592, i32 0, i64 4
  %2594 = load double* %2593, align 8
  %2595 = fmul double %2590, %2594
  %2596 = fsub double %2589, %2595
  %2597 = load [5 x double]** %2, align 8
  %2598 = getelementptr inbounds [5 x double]* %2597, i64 2
  %2599 = getelementptr inbounds [5 x double]* %2598, i32 0, i64 3
  store double %2596, double* %2599, align 8
  %2600 = load [5 x double]** %2, align 8
  %2601 = getelementptr inbounds [5 x double]* %2600, i64 3
  %2602 = getelementptr inbounds [5 x double]* %2601, i32 0, i64 3
  %2603 = load double* %2602, align 8
  %2604 = load double* %coeff, align 8
  %2605 = load [5 x double]** %2, align 8
  %2606 = getelementptr inbounds [5 x double]* %2605, i64 3
  %2607 = getelementptr inbounds [5 x double]* %2606, i32 0, i64 4
  %2608 = load double* %2607, align 8
  %2609 = fmul double %2604, %2608
  %2610 = fsub double %2603, %2609
  %2611 = load [5 x double]** %2, align 8
  %2612 = getelementptr inbounds [5 x double]* %2611, i64 3
  %2613 = getelementptr inbounds [5 x double]* %2612, i32 0, i64 3
  store double %2610, double* %2613, align 8
  %2614 = load [5 x double]** %2, align 8
  %2615 = getelementptr inbounds [5 x double]* %2614, i64 4
  %2616 = getelementptr inbounds [5 x double]* %2615, i32 0, i64 3
  %2617 = load double* %2616, align 8
  %2618 = load double* %coeff, align 8
  %2619 = load [5 x double]** %2, align 8
  %2620 = getelementptr inbounds [5 x double]* %2619, i64 4
  %2621 = getelementptr inbounds [5 x double]* %2620, i32 0, i64 4
  %2622 = load double* %2621, align 8
  %2623 = fmul double %2618, %2622
  %2624 = fsub double %2617, %2623
  %2625 = load [5 x double]** %2, align 8
  %2626 = getelementptr inbounds [5 x double]* %2625, i64 4
  %2627 = getelementptr inbounds [5 x double]* %2626, i32 0, i64 3
  store double %2624, double* %2627, align 8
  %2628 = load double** %3, align 8
  %2629 = getelementptr inbounds double* %2628, i64 3
  %2630 = load double* %2629, align 8
  %2631 = load double* %coeff, align 8
  %2632 = load double** %3, align 8
  %2633 = getelementptr inbounds double* %2632, i64 4
  %2634 = load double* %2633, align 8
  %2635 = fmul double %2631, %2634
  %2636 = fsub double %2630, %2635
  %2637 = load double** %3, align 8
  %2638 = getelementptr inbounds double* %2637, i64 3
  store double %2636, double* %2638, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @binvrhs([5 x double]* %lhs, double* %r) #0 {
  %1 = alloca [5 x double]*, align 8
  %2 = alloca double*, align 8
  %pivot = alloca double, align 8
  %coeff = alloca double, align 8
  store [5 x double]* %lhs, [5 x double]** %1, align 8
  store double* %r, double** %2, align 8
  %3 = load [5 x double]** %1, align 8
  %4 = getelementptr inbounds [5 x double]* %3, i64 0
  %5 = getelementptr inbounds [5 x double]* %4, i32 0, i64 0
  %6 = load double* %5, align 8
  %7 = fdiv double 1.000000e+00, %6
  store double %7, double* %pivot, align 8
  %8 = load [5 x double]** %1, align 8
  %9 = getelementptr inbounds [5 x double]* %8, i64 1
  %10 = getelementptr inbounds [5 x double]* %9, i32 0, i64 0
  %11 = load double* %10, align 8
  %12 = load double* %pivot, align 8
  %13 = fmul double %11, %12
  %14 = load [5 x double]** %1, align 8
  %15 = getelementptr inbounds [5 x double]* %14, i64 1
  %16 = getelementptr inbounds [5 x double]* %15, i32 0, i64 0
  store double %13, double* %16, align 8
  %17 = load [5 x double]** %1, align 8
  %18 = getelementptr inbounds [5 x double]* %17, i64 2
  %19 = getelementptr inbounds [5 x double]* %18, i32 0, i64 0
  %20 = load double* %19, align 8
  %21 = load double* %pivot, align 8
  %22 = fmul double %20, %21
  %23 = load [5 x double]** %1, align 8
  %24 = getelementptr inbounds [5 x double]* %23, i64 2
  %25 = getelementptr inbounds [5 x double]* %24, i32 0, i64 0
  store double %22, double* %25, align 8
  %26 = load [5 x double]** %1, align 8
  %27 = getelementptr inbounds [5 x double]* %26, i64 3
  %28 = getelementptr inbounds [5 x double]* %27, i32 0, i64 0
  %29 = load double* %28, align 8
  %30 = load double* %pivot, align 8
  %31 = fmul double %29, %30
  %32 = load [5 x double]** %1, align 8
  %33 = getelementptr inbounds [5 x double]* %32, i64 3
  %34 = getelementptr inbounds [5 x double]* %33, i32 0, i64 0
  store double %31, double* %34, align 8
  %35 = load [5 x double]** %1, align 8
  %36 = getelementptr inbounds [5 x double]* %35, i64 4
  %37 = getelementptr inbounds [5 x double]* %36, i32 0, i64 0
  %38 = load double* %37, align 8
  %39 = load double* %pivot, align 8
  %40 = fmul double %38, %39
  %41 = load [5 x double]** %1, align 8
  %42 = getelementptr inbounds [5 x double]* %41, i64 4
  %43 = getelementptr inbounds [5 x double]* %42, i32 0, i64 0
  store double %40, double* %43, align 8
  %44 = load double** %2, align 8
  %45 = getelementptr inbounds double* %44, i64 0
  %46 = load double* %45, align 8
  %47 = load double* %pivot, align 8
  %48 = fmul double %46, %47
  %49 = load double** %2, align 8
  %50 = getelementptr inbounds double* %49, i64 0
  store double %48, double* %50, align 8
  %51 = load [5 x double]** %1, align 8
  %52 = getelementptr inbounds [5 x double]* %51, i64 0
  %53 = getelementptr inbounds [5 x double]* %52, i32 0, i64 1
  %54 = load double* %53, align 8
  store double %54, double* %coeff, align 8
  %55 = load [5 x double]** %1, align 8
  %56 = getelementptr inbounds [5 x double]* %55, i64 1
  %57 = getelementptr inbounds [5 x double]* %56, i32 0, i64 1
  %58 = load double* %57, align 8
  %59 = load double* %coeff, align 8
  %60 = load [5 x double]** %1, align 8
  %61 = getelementptr inbounds [5 x double]* %60, i64 1
  %62 = getelementptr inbounds [5 x double]* %61, i32 0, i64 0
  %63 = load double* %62, align 8
  %64 = fmul double %59, %63
  %65 = fsub double %58, %64
  %66 = load [5 x double]** %1, align 8
  %67 = getelementptr inbounds [5 x double]* %66, i64 1
  %68 = getelementptr inbounds [5 x double]* %67, i32 0, i64 1
  store double %65, double* %68, align 8
  %69 = load [5 x double]** %1, align 8
  %70 = getelementptr inbounds [5 x double]* %69, i64 2
  %71 = getelementptr inbounds [5 x double]* %70, i32 0, i64 1
  %72 = load double* %71, align 8
  %73 = load double* %coeff, align 8
  %74 = load [5 x double]** %1, align 8
  %75 = getelementptr inbounds [5 x double]* %74, i64 2
  %76 = getelementptr inbounds [5 x double]* %75, i32 0, i64 0
  %77 = load double* %76, align 8
  %78 = fmul double %73, %77
  %79 = fsub double %72, %78
  %80 = load [5 x double]** %1, align 8
  %81 = getelementptr inbounds [5 x double]* %80, i64 2
  %82 = getelementptr inbounds [5 x double]* %81, i32 0, i64 1
  store double %79, double* %82, align 8
  %83 = load [5 x double]** %1, align 8
  %84 = getelementptr inbounds [5 x double]* %83, i64 3
  %85 = getelementptr inbounds [5 x double]* %84, i32 0, i64 1
  %86 = load double* %85, align 8
  %87 = load double* %coeff, align 8
  %88 = load [5 x double]** %1, align 8
  %89 = getelementptr inbounds [5 x double]* %88, i64 3
  %90 = getelementptr inbounds [5 x double]* %89, i32 0, i64 0
  %91 = load double* %90, align 8
  %92 = fmul double %87, %91
  %93 = fsub double %86, %92
  %94 = load [5 x double]** %1, align 8
  %95 = getelementptr inbounds [5 x double]* %94, i64 3
  %96 = getelementptr inbounds [5 x double]* %95, i32 0, i64 1
  store double %93, double* %96, align 8
  %97 = load [5 x double]** %1, align 8
  %98 = getelementptr inbounds [5 x double]* %97, i64 4
  %99 = getelementptr inbounds [5 x double]* %98, i32 0, i64 1
  %100 = load double* %99, align 8
  %101 = load double* %coeff, align 8
  %102 = load [5 x double]** %1, align 8
  %103 = getelementptr inbounds [5 x double]* %102, i64 4
  %104 = getelementptr inbounds [5 x double]* %103, i32 0, i64 0
  %105 = load double* %104, align 8
  %106 = fmul double %101, %105
  %107 = fsub double %100, %106
  %108 = load [5 x double]** %1, align 8
  %109 = getelementptr inbounds [5 x double]* %108, i64 4
  %110 = getelementptr inbounds [5 x double]* %109, i32 0, i64 1
  store double %107, double* %110, align 8
  %111 = load double** %2, align 8
  %112 = getelementptr inbounds double* %111, i64 1
  %113 = load double* %112, align 8
  %114 = load double* %coeff, align 8
  %115 = load double** %2, align 8
  %116 = getelementptr inbounds double* %115, i64 0
  %117 = load double* %116, align 8
  %118 = fmul double %114, %117
  %119 = fsub double %113, %118
  %120 = load double** %2, align 8
  %121 = getelementptr inbounds double* %120, i64 1
  store double %119, double* %121, align 8
  %122 = load [5 x double]** %1, align 8
  %123 = getelementptr inbounds [5 x double]* %122, i64 0
  %124 = getelementptr inbounds [5 x double]* %123, i32 0, i64 2
  %125 = load double* %124, align 8
  store double %125, double* %coeff, align 8
  %126 = load [5 x double]** %1, align 8
  %127 = getelementptr inbounds [5 x double]* %126, i64 1
  %128 = getelementptr inbounds [5 x double]* %127, i32 0, i64 2
  %129 = load double* %128, align 8
  %130 = load double* %coeff, align 8
  %131 = load [5 x double]** %1, align 8
  %132 = getelementptr inbounds [5 x double]* %131, i64 1
  %133 = getelementptr inbounds [5 x double]* %132, i32 0, i64 0
  %134 = load double* %133, align 8
  %135 = fmul double %130, %134
  %136 = fsub double %129, %135
  %137 = load [5 x double]** %1, align 8
  %138 = getelementptr inbounds [5 x double]* %137, i64 1
  %139 = getelementptr inbounds [5 x double]* %138, i32 0, i64 2
  store double %136, double* %139, align 8
  %140 = load [5 x double]** %1, align 8
  %141 = getelementptr inbounds [5 x double]* %140, i64 2
  %142 = getelementptr inbounds [5 x double]* %141, i32 0, i64 2
  %143 = load double* %142, align 8
  %144 = load double* %coeff, align 8
  %145 = load [5 x double]** %1, align 8
  %146 = getelementptr inbounds [5 x double]* %145, i64 2
  %147 = getelementptr inbounds [5 x double]* %146, i32 0, i64 0
  %148 = load double* %147, align 8
  %149 = fmul double %144, %148
  %150 = fsub double %143, %149
  %151 = load [5 x double]** %1, align 8
  %152 = getelementptr inbounds [5 x double]* %151, i64 2
  %153 = getelementptr inbounds [5 x double]* %152, i32 0, i64 2
  store double %150, double* %153, align 8
  %154 = load [5 x double]** %1, align 8
  %155 = getelementptr inbounds [5 x double]* %154, i64 3
  %156 = getelementptr inbounds [5 x double]* %155, i32 0, i64 2
  %157 = load double* %156, align 8
  %158 = load double* %coeff, align 8
  %159 = load [5 x double]** %1, align 8
  %160 = getelementptr inbounds [5 x double]* %159, i64 3
  %161 = getelementptr inbounds [5 x double]* %160, i32 0, i64 0
  %162 = load double* %161, align 8
  %163 = fmul double %158, %162
  %164 = fsub double %157, %163
  %165 = load [5 x double]** %1, align 8
  %166 = getelementptr inbounds [5 x double]* %165, i64 3
  %167 = getelementptr inbounds [5 x double]* %166, i32 0, i64 2
  store double %164, double* %167, align 8
  %168 = load [5 x double]** %1, align 8
  %169 = getelementptr inbounds [5 x double]* %168, i64 4
  %170 = getelementptr inbounds [5 x double]* %169, i32 0, i64 2
  %171 = load double* %170, align 8
  %172 = load double* %coeff, align 8
  %173 = load [5 x double]** %1, align 8
  %174 = getelementptr inbounds [5 x double]* %173, i64 4
  %175 = getelementptr inbounds [5 x double]* %174, i32 0, i64 0
  %176 = load double* %175, align 8
  %177 = fmul double %172, %176
  %178 = fsub double %171, %177
  %179 = load [5 x double]** %1, align 8
  %180 = getelementptr inbounds [5 x double]* %179, i64 4
  %181 = getelementptr inbounds [5 x double]* %180, i32 0, i64 2
  store double %178, double* %181, align 8
  %182 = load double** %2, align 8
  %183 = getelementptr inbounds double* %182, i64 2
  %184 = load double* %183, align 8
  %185 = load double* %coeff, align 8
  %186 = load double** %2, align 8
  %187 = getelementptr inbounds double* %186, i64 0
  %188 = load double* %187, align 8
  %189 = fmul double %185, %188
  %190 = fsub double %184, %189
  %191 = load double** %2, align 8
  %192 = getelementptr inbounds double* %191, i64 2
  store double %190, double* %192, align 8
  %193 = load [5 x double]** %1, align 8
  %194 = getelementptr inbounds [5 x double]* %193, i64 0
  %195 = getelementptr inbounds [5 x double]* %194, i32 0, i64 3
  %196 = load double* %195, align 8
  store double %196, double* %coeff, align 8
  %197 = load [5 x double]** %1, align 8
  %198 = getelementptr inbounds [5 x double]* %197, i64 1
  %199 = getelementptr inbounds [5 x double]* %198, i32 0, i64 3
  %200 = load double* %199, align 8
  %201 = load double* %coeff, align 8
  %202 = load [5 x double]** %1, align 8
  %203 = getelementptr inbounds [5 x double]* %202, i64 1
  %204 = getelementptr inbounds [5 x double]* %203, i32 0, i64 0
  %205 = load double* %204, align 8
  %206 = fmul double %201, %205
  %207 = fsub double %200, %206
  %208 = load [5 x double]** %1, align 8
  %209 = getelementptr inbounds [5 x double]* %208, i64 1
  %210 = getelementptr inbounds [5 x double]* %209, i32 0, i64 3
  store double %207, double* %210, align 8
  %211 = load [5 x double]** %1, align 8
  %212 = getelementptr inbounds [5 x double]* %211, i64 2
  %213 = getelementptr inbounds [5 x double]* %212, i32 0, i64 3
  %214 = load double* %213, align 8
  %215 = load double* %coeff, align 8
  %216 = load [5 x double]** %1, align 8
  %217 = getelementptr inbounds [5 x double]* %216, i64 2
  %218 = getelementptr inbounds [5 x double]* %217, i32 0, i64 0
  %219 = load double* %218, align 8
  %220 = fmul double %215, %219
  %221 = fsub double %214, %220
  %222 = load [5 x double]** %1, align 8
  %223 = getelementptr inbounds [5 x double]* %222, i64 2
  %224 = getelementptr inbounds [5 x double]* %223, i32 0, i64 3
  store double %221, double* %224, align 8
  %225 = load [5 x double]** %1, align 8
  %226 = getelementptr inbounds [5 x double]* %225, i64 3
  %227 = getelementptr inbounds [5 x double]* %226, i32 0, i64 3
  %228 = load double* %227, align 8
  %229 = load double* %coeff, align 8
  %230 = load [5 x double]** %1, align 8
  %231 = getelementptr inbounds [5 x double]* %230, i64 3
  %232 = getelementptr inbounds [5 x double]* %231, i32 0, i64 0
  %233 = load double* %232, align 8
  %234 = fmul double %229, %233
  %235 = fsub double %228, %234
  %236 = load [5 x double]** %1, align 8
  %237 = getelementptr inbounds [5 x double]* %236, i64 3
  %238 = getelementptr inbounds [5 x double]* %237, i32 0, i64 3
  store double %235, double* %238, align 8
  %239 = load [5 x double]** %1, align 8
  %240 = getelementptr inbounds [5 x double]* %239, i64 4
  %241 = getelementptr inbounds [5 x double]* %240, i32 0, i64 3
  %242 = load double* %241, align 8
  %243 = load double* %coeff, align 8
  %244 = load [5 x double]** %1, align 8
  %245 = getelementptr inbounds [5 x double]* %244, i64 4
  %246 = getelementptr inbounds [5 x double]* %245, i32 0, i64 0
  %247 = load double* %246, align 8
  %248 = fmul double %243, %247
  %249 = fsub double %242, %248
  %250 = load [5 x double]** %1, align 8
  %251 = getelementptr inbounds [5 x double]* %250, i64 4
  %252 = getelementptr inbounds [5 x double]* %251, i32 0, i64 3
  store double %249, double* %252, align 8
  %253 = load double** %2, align 8
  %254 = getelementptr inbounds double* %253, i64 3
  %255 = load double* %254, align 8
  %256 = load double* %coeff, align 8
  %257 = load double** %2, align 8
  %258 = getelementptr inbounds double* %257, i64 0
  %259 = load double* %258, align 8
  %260 = fmul double %256, %259
  %261 = fsub double %255, %260
  %262 = load double** %2, align 8
  %263 = getelementptr inbounds double* %262, i64 3
  store double %261, double* %263, align 8
  %264 = load [5 x double]** %1, align 8
  %265 = getelementptr inbounds [5 x double]* %264, i64 0
  %266 = getelementptr inbounds [5 x double]* %265, i32 0, i64 4
  %267 = load double* %266, align 8
  store double %267, double* %coeff, align 8
  %268 = load [5 x double]** %1, align 8
  %269 = getelementptr inbounds [5 x double]* %268, i64 1
  %270 = getelementptr inbounds [5 x double]* %269, i32 0, i64 4
  %271 = load double* %270, align 8
  %272 = load double* %coeff, align 8
  %273 = load [5 x double]** %1, align 8
  %274 = getelementptr inbounds [5 x double]* %273, i64 1
  %275 = getelementptr inbounds [5 x double]* %274, i32 0, i64 0
  %276 = load double* %275, align 8
  %277 = fmul double %272, %276
  %278 = fsub double %271, %277
  %279 = load [5 x double]** %1, align 8
  %280 = getelementptr inbounds [5 x double]* %279, i64 1
  %281 = getelementptr inbounds [5 x double]* %280, i32 0, i64 4
  store double %278, double* %281, align 8
  %282 = load [5 x double]** %1, align 8
  %283 = getelementptr inbounds [5 x double]* %282, i64 2
  %284 = getelementptr inbounds [5 x double]* %283, i32 0, i64 4
  %285 = load double* %284, align 8
  %286 = load double* %coeff, align 8
  %287 = load [5 x double]** %1, align 8
  %288 = getelementptr inbounds [5 x double]* %287, i64 2
  %289 = getelementptr inbounds [5 x double]* %288, i32 0, i64 0
  %290 = load double* %289, align 8
  %291 = fmul double %286, %290
  %292 = fsub double %285, %291
  %293 = load [5 x double]** %1, align 8
  %294 = getelementptr inbounds [5 x double]* %293, i64 2
  %295 = getelementptr inbounds [5 x double]* %294, i32 0, i64 4
  store double %292, double* %295, align 8
  %296 = load [5 x double]** %1, align 8
  %297 = getelementptr inbounds [5 x double]* %296, i64 3
  %298 = getelementptr inbounds [5 x double]* %297, i32 0, i64 4
  %299 = load double* %298, align 8
  %300 = load double* %coeff, align 8
  %301 = load [5 x double]** %1, align 8
  %302 = getelementptr inbounds [5 x double]* %301, i64 3
  %303 = getelementptr inbounds [5 x double]* %302, i32 0, i64 0
  %304 = load double* %303, align 8
  %305 = fmul double %300, %304
  %306 = fsub double %299, %305
  %307 = load [5 x double]** %1, align 8
  %308 = getelementptr inbounds [5 x double]* %307, i64 3
  %309 = getelementptr inbounds [5 x double]* %308, i32 0, i64 4
  store double %306, double* %309, align 8
  %310 = load [5 x double]** %1, align 8
  %311 = getelementptr inbounds [5 x double]* %310, i64 4
  %312 = getelementptr inbounds [5 x double]* %311, i32 0, i64 4
  %313 = load double* %312, align 8
  %314 = load double* %coeff, align 8
  %315 = load [5 x double]** %1, align 8
  %316 = getelementptr inbounds [5 x double]* %315, i64 4
  %317 = getelementptr inbounds [5 x double]* %316, i32 0, i64 0
  %318 = load double* %317, align 8
  %319 = fmul double %314, %318
  %320 = fsub double %313, %319
  %321 = load [5 x double]** %1, align 8
  %322 = getelementptr inbounds [5 x double]* %321, i64 4
  %323 = getelementptr inbounds [5 x double]* %322, i32 0, i64 4
  store double %320, double* %323, align 8
  %324 = load double** %2, align 8
  %325 = getelementptr inbounds double* %324, i64 4
  %326 = load double* %325, align 8
  %327 = load double* %coeff, align 8
  %328 = load double** %2, align 8
  %329 = getelementptr inbounds double* %328, i64 0
  %330 = load double* %329, align 8
  %331 = fmul double %327, %330
  %332 = fsub double %326, %331
  %333 = load double** %2, align 8
  %334 = getelementptr inbounds double* %333, i64 4
  store double %332, double* %334, align 8
  %335 = load [5 x double]** %1, align 8
  %336 = getelementptr inbounds [5 x double]* %335, i64 1
  %337 = getelementptr inbounds [5 x double]* %336, i32 0, i64 1
  %338 = load double* %337, align 8
  %339 = fdiv double 1.000000e+00, %338
  store double %339, double* %pivot, align 8
  %340 = load [5 x double]** %1, align 8
  %341 = getelementptr inbounds [5 x double]* %340, i64 2
  %342 = getelementptr inbounds [5 x double]* %341, i32 0, i64 1
  %343 = load double* %342, align 8
  %344 = load double* %pivot, align 8
  %345 = fmul double %343, %344
  %346 = load [5 x double]** %1, align 8
  %347 = getelementptr inbounds [5 x double]* %346, i64 2
  %348 = getelementptr inbounds [5 x double]* %347, i32 0, i64 1
  store double %345, double* %348, align 8
  %349 = load [5 x double]** %1, align 8
  %350 = getelementptr inbounds [5 x double]* %349, i64 3
  %351 = getelementptr inbounds [5 x double]* %350, i32 0, i64 1
  %352 = load double* %351, align 8
  %353 = load double* %pivot, align 8
  %354 = fmul double %352, %353
  %355 = load [5 x double]** %1, align 8
  %356 = getelementptr inbounds [5 x double]* %355, i64 3
  %357 = getelementptr inbounds [5 x double]* %356, i32 0, i64 1
  store double %354, double* %357, align 8
  %358 = load [5 x double]** %1, align 8
  %359 = getelementptr inbounds [5 x double]* %358, i64 4
  %360 = getelementptr inbounds [5 x double]* %359, i32 0, i64 1
  %361 = load double* %360, align 8
  %362 = load double* %pivot, align 8
  %363 = fmul double %361, %362
  %364 = load [5 x double]** %1, align 8
  %365 = getelementptr inbounds [5 x double]* %364, i64 4
  %366 = getelementptr inbounds [5 x double]* %365, i32 0, i64 1
  store double %363, double* %366, align 8
  %367 = load double** %2, align 8
  %368 = getelementptr inbounds double* %367, i64 1
  %369 = load double* %368, align 8
  %370 = load double* %pivot, align 8
  %371 = fmul double %369, %370
  %372 = load double** %2, align 8
  %373 = getelementptr inbounds double* %372, i64 1
  store double %371, double* %373, align 8
  %374 = load [5 x double]** %1, align 8
  %375 = getelementptr inbounds [5 x double]* %374, i64 1
  %376 = getelementptr inbounds [5 x double]* %375, i32 0, i64 0
  %377 = load double* %376, align 8
  store double %377, double* %coeff, align 8
  %378 = load [5 x double]** %1, align 8
  %379 = getelementptr inbounds [5 x double]* %378, i64 2
  %380 = getelementptr inbounds [5 x double]* %379, i32 0, i64 0
  %381 = load double* %380, align 8
  %382 = load double* %coeff, align 8
  %383 = load [5 x double]** %1, align 8
  %384 = getelementptr inbounds [5 x double]* %383, i64 2
  %385 = getelementptr inbounds [5 x double]* %384, i32 0, i64 1
  %386 = load double* %385, align 8
  %387 = fmul double %382, %386
  %388 = fsub double %381, %387
  %389 = load [5 x double]** %1, align 8
  %390 = getelementptr inbounds [5 x double]* %389, i64 2
  %391 = getelementptr inbounds [5 x double]* %390, i32 0, i64 0
  store double %388, double* %391, align 8
  %392 = load [5 x double]** %1, align 8
  %393 = getelementptr inbounds [5 x double]* %392, i64 3
  %394 = getelementptr inbounds [5 x double]* %393, i32 0, i64 0
  %395 = load double* %394, align 8
  %396 = load double* %coeff, align 8
  %397 = load [5 x double]** %1, align 8
  %398 = getelementptr inbounds [5 x double]* %397, i64 3
  %399 = getelementptr inbounds [5 x double]* %398, i32 0, i64 1
  %400 = load double* %399, align 8
  %401 = fmul double %396, %400
  %402 = fsub double %395, %401
  %403 = load [5 x double]** %1, align 8
  %404 = getelementptr inbounds [5 x double]* %403, i64 3
  %405 = getelementptr inbounds [5 x double]* %404, i32 0, i64 0
  store double %402, double* %405, align 8
  %406 = load [5 x double]** %1, align 8
  %407 = getelementptr inbounds [5 x double]* %406, i64 4
  %408 = getelementptr inbounds [5 x double]* %407, i32 0, i64 0
  %409 = load double* %408, align 8
  %410 = load double* %coeff, align 8
  %411 = load [5 x double]** %1, align 8
  %412 = getelementptr inbounds [5 x double]* %411, i64 4
  %413 = getelementptr inbounds [5 x double]* %412, i32 0, i64 1
  %414 = load double* %413, align 8
  %415 = fmul double %410, %414
  %416 = fsub double %409, %415
  %417 = load [5 x double]** %1, align 8
  %418 = getelementptr inbounds [5 x double]* %417, i64 4
  %419 = getelementptr inbounds [5 x double]* %418, i32 0, i64 0
  store double %416, double* %419, align 8
  %420 = load double** %2, align 8
  %421 = getelementptr inbounds double* %420, i64 0
  %422 = load double* %421, align 8
  %423 = load double* %coeff, align 8
  %424 = load double** %2, align 8
  %425 = getelementptr inbounds double* %424, i64 1
  %426 = load double* %425, align 8
  %427 = fmul double %423, %426
  %428 = fsub double %422, %427
  %429 = load double** %2, align 8
  %430 = getelementptr inbounds double* %429, i64 0
  store double %428, double* %430, align 8
  %431 = load [5 x double]** %1, align 8
  %432 = getelementptr inbounds [5 x double]* %431, i64 1
  %433 = getelementptr inbounds [5 x double]* %432, i32 0, i64 2
  %434 = load double* %433, align 8
  store double %434, double* %coeff, align 8
  %435 = load [5 x double]** %1, align 8
  %436 = getelementptr inbounds [5 x double]* %435, i64 2
  %437 = getelementptr inbounds [5 x double]* %436, i32 0, i64 2
  %438 = load double* %437, align 8
  %439 = load double* %coeff, align 8
  %440 = load [5 x double]** %1, align 8
  %441 = getelementptr inbounds [5 x double]* %440, i64 2
  %442 = getelementptr inbounds [5 x double]* %441, i32 0, i64 1
  %443 = load double* %442, align 8
  %444 = fmul double %439, %443
  %445 = fsub double %438, %444
  %446 = load [5 x double]** %1, align 8
  %447 = getelementptr inbounds [5 x double]* %446, i64 2
  %448 = getelementptr inbounds [5 x double]* %447, i32 0, i64 2
  store double %445, double* %448, align 8
  %449 = load [5 x double]** %1, align 8
  %450 = getelementptr inbounds [5 x double]* %449, i64 3
  %451 = getelementptr inbounds [5 x double]* %450, i32 0, i64 2
  %452 = load double* %451, align 8
  %453 = load double* %coeff, align 8
  %454 = load [5 x double]** %1, align 8
  %455 = getelementptr inbounds [5 x double]* %454, i64 3
  %456 = getelementptr inbounds [5 x double]* %455, i32 0, i64 1
  %457 = load double* %456, align 8
  %458 = fmul double %453, %457
  %459 = fsub double %452, %458
  %460 = load [5 x double]** %1, align 8
  %461 = getelementptr inbounds [5 x double]* %460, i64 3
  %462 = getelementptr inbounds [5 x double]* %461, i32 0, i64 2
  store double %459, double* %462, align 8
  %463 = load [5 x double]** %1, align 8
  %464 = getelementptr inbounds [5 x double]* %463, i64 4
  %465 = getelementptr inbounds [5 x double]* %464, i32 0, i64 2
  %466 = load double* %465, align 8
  %467 = load double* %coeff, align 8
  %468 = load [5 x double]** %1, align 8
  %469 = getelementptr inbounds [5 x double]* %468, i64 4
  %470 = getelementptr inbounds [5 x double]* %469, i32 0, i64 1
  %471 = load double* %470, align 8
  %472 = fmul double %467, %471
  %473 = fsub double %466, %472
  %474 = load [5 x double]** %1, align 8
  %475 = getelementptr inbounds [5 x double]* %474, i64 4
  %476 = getelementptr inbounds [5 x double]* %475, i32 0, i64 2
  store double %473, double* %476, align 8
  %477 = load double** %2, align 8
  %478 = getelementptr inbounds double* %477, i64 2
  %479 = load double* %478, align 8
  %480 = load double* %coeff, align 8
  %481 = load double** %2, align 8
  %482 = getelementptr inbounds double* %481, i64 1
  %483 = load double* %482, align 8
  %484 = fmul double %480, %483
  %485 = fsub double %479, %484
  %486 = load double** %2, align 8
  %487 = getelementptr inbounds double* %486, i64 2
  store double %485, double* %487, align 8
  %488 = load [5 x double]** %1, align 8
  %489 = getelementptr inbounds [5 x double]* %488, i64 1
  %490 = getelementptr inbounds [5 x double]* %489, i32 0, i64 3
  %491 = load double* %490, align 8
  store double %491, double* %coeff, align 8
  %492 = load [5 x double]** %1, align 8
  %493 = getelementptr inbounds [5 x double]* %492, i64 2
  %494 = getelementptr inbounds [5 x double]* %493, i32 0, i64 3
  %495 = load double* %494, align 8
  %496 = load double* %coeff, align 8
  %497 = load [5 x double]** %1, align 8
  %498 = getelementptr inbounds [5 x double]* %497, i64 2
  %499 = getelementptr inbounds [5 x double]* %498, i32 0, i64 1
  %500 = load double* %499, align 8
  %501 = fmul double %496, %500
  %502 = fsub double %495, %501
  %503 = load [5 x double]** %1, align 8
  %504 = getelementptr inbounds [5 x double]* %503, i64 2
  %505 = getelementptr inbounds [5 x double]* %504, i32 0, i64 3
  store double %502, double* %505, align 8
  %506 = load [5 x double]** %1, align 8
  %507 = getelementptr inbounds [5 x double]* %506, i64 3
  %508 = getelementptr inbounds [5 x double]* %507, i32 0, i64 3
  %509 = load double* %508, align 8
  %510 = load double* %coeff, align 8
  %511 = load [5 x double]** %1, align 8
  %512 = getelementptr inbounds [5 x double]* %511, i64 3
  %513 = getelementptr inbounds [5 x double]* %512, i32 0, i64 1
  %514 = load double* %513, align 8
  %515 = fmul double %510, %514
  %516 = fsub double %509, %515
  %517 = load [5 x double]** %1, align 8
  %518 = getelementptr inbounds [5 x double]* %517, i64 3
  %519 = getelementptr inbounds [5 x double]* %518, i32 0, i64 3
  store double %516, double* %519, align 8
  %520 = load [5 x double]** %1, align 8
  %521 = getelementptr inbounds [5 x double]* %520, i64 4
  %522 = getelementptr inbounds [5 x double]* %521, i32 0, i64 3
  %523 = load double* %522, align 8
  %524 = load double* %coeff, align 8
  %525 = load [5 x double]** %1, align 8
  %526 = getelementptr inbounds [5 x double]* %525, i64 4
  %527 = getelementptr inbounds [5 x double]* %526, i32 0, i64 1
  %528 = load double* %527, align 8
  %529 = fmul double %524, %528
  %530 = fsub double %523, %529
  %531 = load [5 x double]** %1, align 8
  %532 = getelementptr inbounds [5 x double]* %531, i64 4
  %533 = getelementptr inbounds [5 x double]* %532, i32 0, i64 3
  store double %530, double* %533, align 8
  %534 = load double** %2, align 8
  %535 = getelementptr inbounds double* %534, i64 3
  %536 = load double* %535, align 8
  %537 = load double* %coeff, align 8
  %538 = load double** %2, align 8
  %539 = getelementptr inbounds double* %538, i64 1
  %540 = load double* %539, align 8
  %541 = fmul double %537, %540
  %542 = fsub double %536, %541
  %543 = load double** %2, align 8
  %544 = getelementptr inbounds double* %543, i64 3
  store double %542, double* %544, align 8
  %545 = load [5 x double]** %1, align 8
  %546 = getelementptr inbounds [5 x double]* %545, i64 1
  %547 = getelementptr inbounds [5 x double]* %546, i32 0, i64 4
  %548 = load double* %547, align 8
  store double %548, double* %coeff, align 8
  %549 = load [5 x double]** %1, align 8
  %550 = getelementptr inbounds [5 x double]* %549, i64 2
  %551 = getelementptr inbounds [5 x double]* %550, i32 0, i64 4
  %552 = load double* %551, align 8
  %553 = load double* %coeff, align 8
  %554 = load [5 x double]** %1, align 8
  %555 = getelementptr inbounds [5 x double]* %554, i64 2
  %556 = getelementptr inbounds [5 x double]* %555, i32 0, i64 1
  %557 = load double* %556, align 8
  %558 = fmul double %553, %557
  %559 = fsub double %552, %558
  %560 = load [5 x double]** %1, align 8
  %561 = getelementptr inbounds [5 x double]* %560, i64 2
  %562 = getelementptr inbounds [5 x double]* %561, i32 0, i64 4
  store double %559, double* %562, align 8
  %563 = load [5 x double]** %1, align 8
  %564 = getelementptr inbounds [5 x double]* %563, i64 3
  %565 = getelementptr inbounds [5 x double]* %564, i32 0, i64 4
  %566 = load double* %565, align 8
  %567 = load double* %coeff, align 8
  %568 = load [5 x double]** %1, align 8
  %569 = getelementptr inbounds [5 x double]* %568, i64 3
  %570 = getelementptr inbounds [5 x double]* %569, i32 0, i64 1
  %571 = load double* %570, align 8
  %572 = fmul double %567, %571
  %573 = fsub double %566, %572
  %574 = load [5 x double]** %1, align 8
  %575 = getelementptr inbounds [5 x double]* %574, i64 3
  %576 = getelementptr inbounds [5 x double]* %575, i32 0, i64 4
  store double %573, double* %576, align 8
  %577 = load [5 x double]** %1, align 8
  %578 = getelementptr inbounds [5 x double]* %577, i64 4
  %579 = getelementptr inbounds [5 x double]* %578, i32 0, i64 4
  %580 = load double* %579, align 8
  %581 = load double* %coeff, align 8
  %582 = load [5 x double]** %1, align 8
  %583 = getelementptr inbounds [5 x double]* %582, i64 4
  %584 = getelementptr inbounds [5 x double]* %583, i32 0, i64 1
  %585 = load double* %584, align 8
  %586 = fmul double %581, %585
  %587 = fsub double %580, %586
  %588 = load [5 x double]** %1, align 8
  %589 = getelementptr inbounds [5 x double]* %588, i64 4
  %590 = getelementptr inbounds [5 x double]* %589, i32 0, i64 4
  store double %587, double* %590, align 8
  %591 = load double** %2, align 8
  %592 = getelementptr inbounds double* %591, i64 4
  %593 = load double* %592, align 8
  %594 = load double* %coeff, align 8
  %595 = load double** %2, align 8
  %596 = getelementptr inbounds double* %595, i64 1
  %597 = load double* %596, align 8
  %598 = fmul double %594, %597
  %599 = fsub double %593, %598
  %600 = load double** %2, align 8
  %601 = getelementptr inbounds double* %600, i64 4
  store double %599, double* %601, align 8
  %602 = load [5 x double]** %1, align 8
  %603 = getelementptr inbounds [5 x double]* %602, i64 2
  %604 = getelementptr inbounds [5 x double]* %603, i32 0, i64 2
  %605 = load double* %604, align 8
  %606 = fdiv double 1.000000e+00, %605
  store double %606, double* %pivot, align 8
  %607 = load [5 x double]** %1, align 8
  %608 = getelementptr inbounds [5 x double]* %607, i64 3
  %609 = getelementptr inbounds [5 x double]* %608, i32 0, i64 2
  %610 = load double* %609, align 8
  %611 = load double* %pivot, align 8
  %612 = fmul double %610, %611
  %613 = load [5 x double]** %1, align 8
  %614 = getelementptr inbounds [5 x double]* %613, i64 3
  %615 = getelementptr inbounds [5 x double]* %614, i32 0, i64 2
  store double %612, double* %615, align 8
  %616 = load [5 x double]** %1, align 8
  %617 = getelementptr inbounds [5 x double]* %616, i64 4
  %618 = getelementptr inbounds [5 x double]* %617, i32 0, i64 2
  %619 = load double* %618, align 8
  %620 = load double* %pivot, align 8
  %621 = fmul double %619, %620
  %622 = load [5 x double]** %1, align 8
  %623 = getelementptr inbounds [5 x double]* %622, i64 4
  %624 = getelementptr inbounds [5 x double]* %623, i32 0, i64 2
  store double %621, double* %624, align 8
  %625 = load double** %2, align 8
  %626 = getelementptr inbounds double* %625, i64 2
  %627 = load double* %626, align 8
  %628 = load double* %pivot, align 8
  %629 = fmul double %627, %628
  %630 = load double** %2, align 8
  %631 = getelementptr inbounds double* %630, i64 2
  store double %629, double* %631, align 8
  %632 = load [5 x double]** %1, align 8
  %633 = getelementptr inbounds [5 x double]* %632, i64 2
  %634 = getelementptr inbounds [5 x double]* %633, i32 0, i64 0
  %635 = load double* %634, align 8
  store double %635, double* %coeff, align 8
  %636 = load [5 x double]** %1, align 8
  %637 = getelementptr inbounds [5 x double]* %636, i64 3
  %638 = getelementptr inbounds [5 x double]* %637, i32 0, i64 0
  %639 = load double* %638, align 8
  %640 = load double* %coeff, align 8
  %641 = load [5 x double]** %1, align 8
  %642 = getelementptr inbounds [5 x double]* %641, i64 3
  %643 = getelementptr inbounds [5 x double]* %642, i32 0, i64 2
  %644 = load double* %643, align 8
  %645 = fmul double %640, %644
  %646 = fsub double %639, %645
  %647 = load [5 x double]** %1, align 8
  %648 = getelementptr inbounds [5 x double]* %647, i64 3
  %649 = getelementptr inbounds [5 x double]* %648, i32 0, i64 0
  store double %646, double* %649, align 8
  %650 = load [5 x double]** %1, align 8
  %651 = getelementptr inbounds [5 x double]* %650, i64 4
  %652 = getelementptr inbounds [5 x double]* %651, i32 0, i64 0
  %653 = load double* %652, align 8
  %654 = load double* %coeff, align 8
  %655 = load [5 x double]** %1, align 8
  %656 = getelementptr inbounds [5 x double]* %655, i64 4
  %657 = getelementptr inbounds [5 x double]* %656, i32 0, i64 2
  %658 = load double* %657, align 8
  %659 = fmul double %654, %658
  %660 = fsub double %653, %659
  %661 = load [5 x double]** %1, align 8
  %662 = getelementptr inbounds [5 x double]* %661, i64 4
  %663 = getelementptr inbounds [5 x double]* %662, i32 0, i64 0
  store double %660, double* %663, align 8
  %664 = load double** %2, align 8
  %665 = getelementptr inbounds double* %664, i64 0
  %666 = load double* %665, align 8
  %667 = load double* %coeff, align 8
  %668 = load double** %2, align 8
  %669 = getelementptr inbounds double* %668, i64 2
  %670 = load double* %669, align 8
  %671 = fmul double %667, %670
  %672 = fsub double %666, %671
  %673 = load double** %2, align 8
  %674 = getelementptr inbounds double* %673, i64 0
  store double %672, double* %674, align 8
  %675 = load [5 x double]** %1, align 8
  %676 = getelementptr inbounds [5 x double]* %675, i64 2
  %677 = getelementptr inbounds [5 x double]* %676, i32 0, i64 1
  %678 = load double* %677, align 8
  store double %678, double* %coeff, align 8
  %679 = load [5 x double]** %1, align 8
  %680 = getelementptr inbounds [5 x double]* %679, i64 3
  %681 = getelementptr inbounds [5 x double]* %680, i32 0, i64 1
  %682 = load double* %681, align 8
  %683 = load double* %coeff, align 8
  %684 = load [5 x double]** %1, align 8
  %685 = getelementptr inbounds [5 x double]* %684, i64 3
  %686 = getelementptr inbounds [5 x double]* %685, i32 0, i64 2
  %687 = load double* %686, align 8
  %688 = fmul double %683, %687
  %689 = fsub double %682, %688
  %690 = load [5 x double]** %1, align 8
  %691 = getelementptr inbounds [5 x double]* %690, i64 3
  %692 = getelementptr inbounds [5 x double]* %691, i32 0, i64 1
  store double %689, double* %692, align 8
  %693 = load [5 x double]** %1, align 8
  %694 = getelementptr inbounds [5 x double]* %693, i64 4
  %695 = getelementptr inbounds [5 x double]* %694, i32 0, i64 1
  %696 = load double* %695, align 8
  %697 = load double* %coeff, align 8
  %698 = load [5 x double]** %1, align 8
  %699 = getelementptr inbounds [5 x double]* %698, i64 4
  %700 = getelementptr inbounds [5 x double]* %699, i32 0, i64 2
  %701 = load double* %700, align 8
  %702 = fmul double %697, %701
  %703 = fsub double %696, %702
  %704 = load [5 x double]** %1, align 8
  %705 = getelementptr inbounds [5 x double]* %704, i64 4
  %706 = getelementptr inbounds [5 x double]* %705, i32 0, i64 1
  store double %703, double* %706, align 8
  %707 = load double** %2, align 8
  %708 = getelementptr inbounds double* %707, i64 1
  %709 = load double* %708, align 8
  %710 = load double* %coeff, align 8
  %711 = load double** %2, align 8
  %712 = getelementptr inbounds double* %711, i64 2
  %713 = load double* %712, align 8
  %714 = fmul double %710, %713
  %715 = fsub double %709, %714
  %716 = load double** %2, align 8
  %717 = getelementptr inbounds double* %716, i64 1
  store double %715, double* %717, align 8
  %718 = load [5 x double]** %1, align 8
  %719 = getelementptr inbounds [5 x double]* %718, i64 2
  %720 = getelementptr inbounds [5 x double]* %719, i32 0, i64 3
  %721 = load double* %720, align 8
  store double %721, double* %coeff, align 8
  %722 = load [5 x double]** %1, align 8
  %723 = getelementptr inbounds [5 x double]* %722, i64 3
  %724 = getelementptr inbounds [5 x double]* %723, i32 0, i64 3
  %725 = load double* %724, align 8
  %726 = load double* %coeff, align 8
  %727 = load [5 x double]** %1, align 8
  %728 = getelementptr inbounds [5 x double]* %727, i64 3
  %729 = getelementptr inbounds [5 x double]* %728, i32 0, i64 2
  %730 = load double* %729, align 8
  %731 = fmul double %726, %730
  %732 = fsub double %725, %731
  %733 = load [5 x double]** %1, align 8
  %734 = getelementptr inbounds [5 x double]* %733, i64 3
  %735 = getelementptr inbounds [5 x double]* %734, i32 0, i64 3
  store double %732, double* %735, align 8
  %736 = load [5 x double]** %1, align 8
  %737 = getelementptr inbounds [5 x double]* %736, i64 4
  %738 = getelementptr inbounds [5 x double]* %737, i32 0, i64 3
  %739 = load double* %738, align 8
  %740 = load double* %coeff, align 8
  %741 = load [5 x double]** %1, align 8
  %742 = getelementptr inbounds [5 x double]* %741, i64 4
  %743 = getelementptr inbounds [5 x double]* %742, i32 0, i64 2
  %744 = load double* %743, align 8
  %745 = fmul double %740, %744
  %746 = fsub double %739, %745
  %747 = load [5 x double]** %1, align 8
  %748 = getelementptr inbounds [5 x double]* %747, i64 4
  %749 = getelementptr inbounds [5 x double]* %748, i32 0, i64 3
  store double %746, double* %749, align 8
  %750 = load double** %2, align 8
  %751 = getelementptr inbounds double* %750, i64 3
  %752 = load double* %751, align 8
  %753 = load double* %coeff, align 8
  %754 = load double** %2, align 8
  %755 = getelementptr inbounds double* %754, i64 2
  %756 = load double* %755, align 8
  %757 = fmul double %753, %756
  %758 = fsub double %752, %757
  %759 = load double** %2, align 8
  %760 = getelementptr inbounds double* %759, i64 3
  store double %758, double* %760, align 8
  %761 = load [5 x double]** %1, align 8
  %762 = getelementptr inbounds [5 x double]* %761, i64 2
  %763 = getelementptr inbounds [5 x double]* %762, i32 0, i64 4
  %764 = load double* %763, align 8
  store double %764, double* %coeff, align 8
  %765 = load [5 x double]** %1, align 8
  %766 = getelementptr inbounds [5 x double]* %765, i64 3
  %767 = getelementptr inbounds [5 x double]* %766, i32 0, i64 4
  %768 = load double* %767, align 8
  %769 = load double* %coeff, align 8
  %770 = load [5 x double]** %1, align 8
  %771 = getelementptr inbounds [5 x double]* %770, i64 3
  %772 = getelementptr inbounds [5 x double]* %771, i32 0, i64 2
  %773 = load double* %772, align 8
  %774 = fmul double %769, %773
  %775 = fsub double %768, %774
  %776 = load [5 x double]** %1, align 8
  %777 = getelementptr inbounds [5 x double]* %776, i64 3
  %778 = getelementptr inbounds [5 x double]* %777, i32 0, i64 4
  store double %775, double* %778, align 8
  %779 = load [5 x double]** %1, align 8
  %780 = getelementptr inbounds [5 x double]* %779, i64 4
  %781 = getelementptr inbounds [5 x double]* %780, i32 0, i64 4
  %782 = load double* %781, align 8
  %783 = load double* %coeff, align 8
  %784 = load [5 x double]** %1, align 8
  %785 = getelementptr inbounds [5 x double]* %784, i64 4
  %786 = getelementptr inbounds [5 x double]* %785, i32 0, i64 2
  %787 = load double* %786, align 8
  %788 = fmul double %783, %787
  %789 = fsub double %782, %788
  %790 = load [5 x double]** %1, align 8
  %791 = getelementptr inbounds [5 x double]* %790, i64 4
  %792 = getelementptr inbounds [5 x double]* %791, i32 0, i64 4
  store double %789, double* %792, align 8
  %793 = load double** %2, align 8
  %794 = getelementptr inbounds double* %793, i64 4
  %795 = load double* %794, align 8
  %796 = load double* %coeff, align 8
  %797 = load double** %2, align 8
  %798 = getelementptr inbounds double* %797, i64 2
  %799 = load double* %798, align 8
  %800 = fmul double %796, %799
  %801 = fsub double %795, %800
  %802 = load double** %2, align 8
  %803 = getelementptr inbounds double* %802, i64 4
  store double %801, double* %803, align 8
  %804 = load [5 x double]** %1, align 8
  %805 = getelementptr inbounds [5 x double]* %804, i64 3
  %806 = getelementptr inbounds [5 x double]* %805, i32 0, i64 3
  %807 = load double* %806, align 8
  %808 = fdiv double 1.000000e+00, %807
  store double %808, double* %pivot, align 8
  %809 = load [5 x double]** %1, align 8
  %810 = getelementptr inbounds [5 x double]* %809, i64 4
  %811 = getelementptr inbounds [5 x double]* %810, i32 0, i64 3
  %812 = load double* %811, align 8
  %813 = load double* %pivot, align 8
  %814 = fmul double %812, %813
  %815 = load [5 x double]** %1, align 8
  %816 = getelementptr inbounds [5 x double]* %815, i64 4
  %817 = getelementptr inbounds [5 x double]* %816, i32 0, i64 3
  store double %814, double* %817, align 8
  %818 = load double** %2, align 8
  %819 = getelementptr inbounds double* %818, i64 3
  %820 = load double* %819, align 8
  %821 = load double* %pivot, align 8
  %822 = fmul double %820, %821
  %823 = load double** %2, align 8
  %824 = getelementptr inbounds double* %823, i64 3
  store double %822, double* %824, align 8
  %825 = load [5 x double]** %1, align 8
  %826 = getelementptr inbounds [5 x double]* %825, i64 3
  %827 = getelementptr inbounds [5 x double]* %826, i32 0, i64 0
  %828 = load double* %827, align 8
  store double %828, double* %coeff, align 8
  %829 = load [5 x double]** %1, align 8
  %830 = getelementptr inbounds [5 x double]* %829, i64 4
  %831 = getelementptr inbounds [5 x double]* %830, i32 0, i64 0
  %832 = load double* %831, align 8
  %833 = load double* %coeff, align 8
  %834 = load [5 x double]** %1, align 8
  %835 = getelementptr inbounds [5 x double]* %834, i64 4
  %836 = getelementptr inbounds [5 x double]* %835, i32 0, i64 3
  %837 = load double* %836, align 8
  %838 = fmul double %833, %837
  %839 = fsub double %832, %838
  %840 = load [5 x double]** %1, align 8
  %841 = getelementptr inbounds [5 x double]* %840, i64 4
  %842 = getelementptr inbounds [5 x double]* %841, i32 0, i64 0
  store double %839, double* %842, align 8
  %843 = load double** %2, align 8
  %844 = getelementptr inbounds double* %843, i64 0
  %845 = load double* %844, align 8
  %846 = load double* %coeff, align 8
  %847 = load double** %2, align 8
  %848 = getelementptr inbounds double* %847, i64 3
  %849 = load double* %848, align 8
  %850 = fmul double %846, %849
  %851 = fsub double %845, %850
  %852 = load double** %2, align 8
  %853 = getelementptr inbounds double* %852, i64 0
  store double %851, double* %853, align 8
  %854 = load [5 x double]** %1, align 8
  %855 = getelementptr inbounds [5 x double]* %854, i64 3
  %856 = getelementptr inbounds [5 x double]* %855, i32 0, i64 1
  %857 = load double* %856, align 8
  store double %857, double* %coeff, align 8
  %858 = load [5 x double]** %1, align 8
  %859 = getelementptr inbounds [5 x double]* %858, i64 4
  %860 = getelementptr inbounds [5 x double]* %859, i32 0, i64 1
  %861 = load double* %860, align 8
  %862 = load double* %coeff, align 8
  %863 = load [5 x double]** %1, align 8
  %864 = getelementptr inbounds [5 x double]* %863, i64 4
  %865 = getelementptr inbounds [5 x double]* %864, i32 0, i64 3
  %866 = load double* %865, align 8
  %867 = fmul double %862, %866
  %868 = fsub double %861, %867
  %869 = load [5 x double]** %1, align 8
  %870 = getelementptr inbounds [5 x double]* %869, i64 4
  %871 = getelementptr inbounds [5 x double]* %870, i32 0, i64 1
  store double %868, double* %871, align 8
  %872 = load double** %2, align 8
  %873 = getelementptr inbounds double* %872, i64 1
  %874 = load double* %873, align 8
  %875 = load double* %coeff, align 8
  %876 = load double** %2, align 8
  %877 = getelementptr inbounds double* %876, i64 3
  %878 = load double* %877, align 8
  %879 = fmul double %875, %878
  %880 = fsub double %874, %879
  %881 = load double** %2, align 8
  %882 = getelementptr inbounds double* %881, i64 1
  store double %880, double* %882, align 8
  %883 = load [5 x double]** %1, align 8
  %884 = getelementptr inbounds [5 x double]* %883, i64 3
  %885 = getelementptr inbounds [5 x double]* %884, i32 0, i64 2
  %886 = load double* %885, align 8
  store double %886, double* %coeff, align 8
  %887 = load [5 x double]** %1, align 8
  %888 = getelementptr inbounds [5 x double]* %887, i64 4
  %889 = getelementptr inbounds [5 x double]* %888, i32 0, i64 2
  %890 = load double* %889, align 8
  %891 = load double* %coeff, align 8
  %892 = load [5 x double]** %1, align 8
  %893 = getelementptr inbounds [5 x double]* %892, i64 4
  %894 = getelementptr inbounds [5 x double]* %893, i32 0, i64 3
  %895 = load double* %894, align 8
  %896 = fmul double %891, %895
  %897 = fsub double %890, %896
  %898 = load [5 x double]** %1, align 8
  %899 = getelementptr inbounds [5 x double]* %898, i64 4
  %900 = getelementptr inbounds [5 x double]* %899, i32 0, i64 2
  store double %897, double* %900, align 8
  %901 = load double** %2, align 8
  %902 = getelementptr inbounds double* %901, i64 2
  %903 = load double* %902, align 8
  %904 = load double* %coeff, align 8
  %905 = load double** %2, align 8
  %906 = getelementptr inbounds double* %905, i64 3
  %907 = load double* %906, align 8
  %908 = fmul double %904, %907
  %909 = fsub double %903, %908
  %910 = load double** %2, align 8
  %911 = getelementptr inbounds double* %910, i64 2
  store double %909, double* %911, align 8
  %912 = load [5 x double]** %1, align 8
  %913 = getelementptr inbounds [5 x double]* %912, i64 3
  %914 = getelementptr inbounds [5 x double]* %913, i32 0, i64 4
  %915 = load double* %914, align 8
  store double %915, double* %coeff, align 8
  %916 = load [5 x double]** %1, align 8
  %917 = getelementptr inbounds [5 x double]* %916, i64 4
  %918 = getelementptr inbounds [5 x double]* %917, i32 0, i64 4
  %919 = load double* %918, align 8
  %920 = load double* %coeff, align 8
  %921 = load [5 x double]** %1, align 8
  %922 = getelementptr inbounds [5 x double]* %921, i64 4
  %923 = getelementptr inbounds [5 x double]* %922, i32 0, i64 3
  %924 = load double* %923, align 8
  %925 = fmul double %920, %924
  %926 = fsub double %919, %925
  %927 = load [5 x double]** %1, align 8
  %928 = getelementptr inbounds [5 x double]* %927, i64 4
  %929 = getelementptr inbounds [5 x double]* %928, i32 0, i64 4
  store double %926, double* %929, align 8
  %930 = load double** %2, align 8
  %931 = getelementptr inbounds double* %930, i64 4
  %932 = load double* %931, align 8
  %933 = load double* %coeff, align 8
  %934 = load double** %2, align 8
  %935 = getelementptr inbounds double* %934, i64 3
  %936 = load double* %935, align 8
  %937 = fmul double %933, %936
  %938 = fsub double %932, %937
  %939 = load double** %2, align 8
  %940 = getelementptr inbounds double* %939, i64 4
  store double %938, double* %940, align 8
  %941 = load [5 x double]** %1, align 8
  %942 = getelementptr inbounds [5 x double]* %941, i64 4
  %943 = getelementptr inbounds [5 x double]* %942, i32 0, i64 4
  %944 = load double* %943, align 8
  %945 = fdiv double 1.000000e+00, %944
  store double %945, double* %pivot, align 8
  %946 = load double** %2, align 8
  %947 = getelementptr inbounds double* %946, i64 4
  %948 = load double* %947, align 8
  %949 = load double* %pivot, align 8
  %950 = fmul double %948, %949
  %951 = load double** %2, align 8
  %952 = getelementptr inbounds double* %951, i64 4
  store double %950, double* %952, align 8
  %953 = load [5 x double]** %1, align 8
  %954 = getelementptr inbounds [5 x double]* %953, i64 4
  %955 = getelementptr inbounds [5 x double]* %954, i32 0, i64 0
  %956 = load double* %955, align 8
  store double %956, double* %coeff, align 8
  %957 = load double** %2, align 8
  %958 = getelementptr inbounds double* %957, i64 0
  %959 = load double* %958, align 8
  %960 = load double* %coeff, align 8
  %961 = load double** %2, align 8
  %962 = getelementptr inbounds double* %961, i64 4
  %963 = load double* %962, align 8
  %964 = fmul double %960, %963
  %965 = fsub double %959, %964
  %966 = load double** %2, align 8
  %967 = getelementptr inbounds double* %966, i64 0
  store double %965, double* %967, align 8
  %968 = load [5 x double]** %1, align 8
  %969 = getelementptr inbounds [5 x double]* %968, i64 4
  %970 = getelementptr inbounds [5 x double]* %969, i32 0, i64 1
  %971 = load double* %970, align 8
  store double %971, double* %coeff, align 8
  %972 = load double** %2, align 8
  %973 = getelementptr inbounds double* %972, i64 1
  %974 = load double* %973, align 8
  %975 = load double* %coeff, align 8
  %976 = load double** %2, align 8
  %977 = getelementptr inbounds double* %976, i64 4
  %978 = load double* %977, align 8
  %979 = fmul double %975, %978
  %980 = fsub double %974, %979
  %981 = load double** %2, align 8
  %982 = getelementptr inbounds double* %981, i64 1
  store double %980, double* %982, align 8
  %983 = load [5 x double]** %1, align 8
  %984 = getelementptr inbounds [5 x double]* %983, i64 4
  %985 = getelementptr inbounds [5 x double]* %984, i32 0, i64 2
  %986 = load double* %985, align 8
  store double %986, double* %coeff, align 8
  %987 = load double** %2, align 8
  %988 = getelementptr inbounds double* %987, i64 2
  %989 = load double* %988, align 8
  %990 = load double* %coeff, align 8
  %991 = load double** %2, align 8
  %992 = getelementptr inbounds double* %991, i64 4
  %993 = load double* %992, align 8
  %994 = fmul double %990, %993
  %995 = fsub double %989, %994
  %996 = load double** %2, align 8
  %997 = getelementptr inbounds double* %996, i64 2
  store double %995, double* %997, align 8
  %998 = load [5 x double]** %1, align 8
  %999 = getelementptr inbounds [5 x double]* %998, i64 4
  %1000 = getelementptr inbounds [5 x double]* %999, i32 0, i64 3
  %1001 = load double* %1000, align 8
  store double %1001, double* %coeff, align 8
  %1002 = load double** %2, align 8
  %1003 = getelementptr inbounds double* %1002, i64 3
  %1004 = load double* %1003, align 8
  %1005 = load double* %coeff, align 8
  %1006 = load double** %2, align 8
  %1007 = getelementptr inbounds double* %1006, i64 4
  %1008 = load double* %1007, align 8
  %1009 = fmul double %1005, %1008
  %1010 = fsub double %1004, %1009
  %1011 = load double** %2, align 8
  %1012 = getelementptr inbounds double* %1011, i64 3
  store double %1010, double* %1012, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @verify(i32 %no_time_steps, i8* %Class, i32* %verified) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i32*, align 8
  %xcrref = alloca [5 x double], align 16
  %xceref = alloca [5 x double], align 16
  %xcrdif = alloca [5 x double], align 16
  %xcedif = alloca [5 x double], align 16
  %epsilon = alloca double, align 8
  %xce = alloca [5 x double], align 16
  %xcr = alloca [5 x double], align 16
  %dtref = alloca double, align 8
  %m = alloca i32, align 4
  store i32 %no_time_steps, i32* %1, align 4
  store i8* %Class, i8** %2, align 8
  store i32* %verified, i32** %3, align 8
  store double 0.000000e+00, double* %dtref, align 8
  store double 1.000000e-08, double* %epsilon, align 8
  %4 = getelementptr inbounds [5 x double]* %xce, i32 0, i32 0
  call void @error_norm(double* %4)
  call void (...)* bitcast (void ()* @compute_rhs to void (...)*)()
  %5 = getelementptr inbounds [5 x double]* %xcr, i32 0, i32 0
  call void @rhs_norm(double* %5)
  store i32 0, i32* %m, align 4
  br label %6

; <label>:6                                       ; preds = %19, %0
  %7 = load i32* %m, align 4
  %8 = icmp slt i32 %7, 5
  br i1 %8, label %9, label %22

; <label>:9                                       ; preds = %6
  %10 = load i32* %m, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [5 x double]* %xcr, i32 0, i64 %11
  %13 = load double* %12, align 8
  %14 = load double* @dt, align 8
  %15 = fdiv double %13, %14
  %16 = load i32* %m, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [5 x double]* %xcr, i32 0, i64 %17
  store double %15, double* %18, align 8
  br label %19

; <label>:19                                      ; preds = %9
  %20 = load i32* %m, align 4
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %m, align 4
  br label %6

; <label>:22                                      ; preds = %6
  %23 = load i8** %2, align 8
  store i8 85, i8* %23, align 1
  %24 = load i32** %3, align 8
  store i32 1, i32* %24, align 4
  store i32 0, i32* %m, align 4
  br label %25

; <label>:25                                      ; preds = %35, %22
  %26 = load i32* %m, align 4
  %27 = icmp slt i32 %26, 5
  br i1 %27, label %28, label %38

; <label>:28                                      ; preds = %25
  %29 = load i32* %m, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 %30
  store double 1.000000e+00, double* %31, align 8
  %32 = load i32* %m, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 %33
  store double 1.000000e+00, double* %34, align 8
  br label %35

; <label>:35                                      ; preds = %28
  %36 = load i32* %m, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %m, align 4
  br label %25

; <label>:38                                      ; preds = %25
  %39 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %40 = icmp eq i32 %39, 12
  br i1 %40, label %41, label %62

; <label>:41                                      ; preds = %38
  %42 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %43 = icmp eq i32 %42, 12
  br i1 %43, label %44, label %62

; <label>:44                                      ; preds = %41
  %45 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %46 = icmp eq i32 %45, 12
  br i1 %46, label %47, label %62

; <label>:47                                      ; preds = %44
  %48 = load i32* %1, align 4
  %49 = icmp eq i32 %48, 60
  br i1 %49, label %50, label %62

; <label>:50                                      ; preds = %47
  %51 = load i8** %2, align 8
  store i8 83, i8* %51, align 1
  store double 1.000000e-02, double* %dtref, align 8
  %52 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 0
  store double 0x3FC5CDCB4937613D, double* %52, align 8
  %53 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 1
  store double 0x3F8A92C4DA629DE8, double* %53, align 8
  %54 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 2
  store double 0x3FA0A7801D40C703, double* %54, align 8
  %55 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 3
  store double 0x3F9B1226333352AA, double* %55, align 8
  %56 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 4
  store double 0x3FC8975142B7E092, double* %56, align 8
  %57 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 0
  store double 0x3F40605E0AB869F8, double* %57, align 8
  %58 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 1
  store double 0x3F07B20F49394115, double* %58, align 8
  %59 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 2
  store double 0x3F13644B9BD4FD84, double* %59, align 8
  %60 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 3
  store double 0x3F135A0F39034561, double* %60, align 8
  %61 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 4
  store double 0x3F4D407ABA63DD74, double* %61, align 8
  br label %214

; <label>:62                                      ; preds = %47, %44, %41, %38
  %63 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %64 = icmp eq i32 %63, 24
  br i1 %64, label %65, label %86

; <label>:65                                      ; preds = %62
  %66 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %67 = icmp eq i32 %66, 24
  br i1 %67, label %68, label %86

; <label>:68                                      ; preds = %65
  %69 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %70 = icmp eq i32 %69, 24
  br i1 %70, label %71, label %86

; <label>:71                                      ; preds = %68
  %72 = load i32* %1, align 4
  %73 = icmp eq i32 %72, 200
  br i1 %73, label %74, label %86

; <label>:74                                      ; preds = %71
  %75 = load i8** %2, align 8
  store i8 87, i8* %75, align 1
  store double 8.000000e-04, double* %dtref, align 8
  %76 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 0
  store double 0x405C23C753A097E4, double* %76, align 8
  %77 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 1
  store double 0x402799A38E4DECB8, double* %77, align 8
  %78 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 2
  store double 0x403B1A71B776BD09, double* %78, align 8
  %79 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 3
  store double 0x4038B1167CB5E975, double* %79, align 8
  %80 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 4
  store double 0x40707D7C0EAC8A1A, double* %80, align 8
  %81 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 0
  store double 0x4011ADBA3BB6EEC4, double* %81, align 8
  %82 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 1
  store double 0x3FDDAFC505945DD2, double* %82, align 8
  %83 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 2
  store double 0x3FF02F50E3451E0A, double* %83, align 8
  %84 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 3
  store double 0x3FED8E0827AFC7E2, double* %84, align 8
  %85 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 4
  store double 0x40245C650A588DFF, double* %85, align 8
  br label %213

; <label>:86                                      ; preds = %71, %68, %65, %62
  %87 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %88 = icmp eq i32 %87, 64
  br i1 %88, label %89, label %110

; <label>:89                                      ; preds = %86
  %90 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %91 = icmp eq i32 %90, 64
  br i1 %91, label %92, label %110

; <label>:92                                      ; preds = %89
  %93 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %94 = icmp eq i32 %93, 64
  br i1 %94, label %95, label %110

; <label>:95                                      ; preds = %92
  %96 = load i32* %1, align 4
  %97 = icmp eq i32 %96, 200
  br i1 %97, label %98, label %110

; <label>:98                                      ; preds = %95
  %99 = load i8** %2, align 8
  store i8 65, i8* %99, align 1
  store double 8.000000e-04, double* %dtref, align 8
  %100 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 0
  store double 0x405B040FD881829F, double* %100, align 8
  %101 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 1
  store double 0x4026A3B3C4C8872B, double* %101, align 8
  %102 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 2
  store double 0x4039F96F4C19F4ED, double* %102, align 8
  %103 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 3
  store double 0x4037AA663D34E050, double* %103, align 8
  %104 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 4
  store double 0x406F9944AA930ECE, double* %104, align 8
  %105 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 0
  store double 0x4010F07A5144952D, double* %105, align 8
  %106 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 1
  store double 0x3FDC68E764F64543, double* %106, align 8
  %107 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 2
  store double 0x3FEEF10C47F183D3, double* %107, align 8
  %108 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 3
  store double 0x3FEC41B47B280A15, double* %108, align 8
  %109 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 4
  store double 0x402379D9D936AE4C, double* %109, align 8
  br label %212

; <label>:110                                     ; preds = %95, %92, %89, %86
  %111 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %112 = icmp eq i32 %111, 102
  br i1 %112, label %113, label %134

; <label>:113                                     ; preds = %110
  %114 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %115 = icmp eq i32 %114, 102
  br i1 %115, label %116, label %134

; <label>:116                                     ; preds = %113
  %117 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %118 = icmp eq i32 %117, 102
  br i1 %118, label %119, label %134

; <label>:119                                     ; preds = %116
  %120 = load i32* %1, align 4
  %121 = icmp eq i32 %120, 200
  br i1 %121, label %122, label %134

; <label>:122                                     ; preds = %119
  %123 = load i8** %2, align 8
  store i8 66, i8* %123, align 1
  store double 3.000000e-04, double* %dtref, align 8
  %124 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 0
  store double 0x40963D705B3519FD, double* %124, align 8
  %125 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 1
  store double 0x4058D5274838D235, double* %125, align 8
  %126 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 2
  store double 0x4076475D35DCC905, double* %126, align 8
  %127 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 3
  store double 0x40744DABF2CA9C2E, double* %127, align 8
  %128 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 4
  store double 0x40A98D821CBBAA8E, double* %128, align 8
  %129 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 0
  store double 0x404A7C23F37C38B1, double* %129, align 8
  %130 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 1
  store double 0x4011DA6897890744, double* %130, align 8
  %131 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 2
  store double 0x402A3EC1EEE04EE8, double* %131, align 8
  %132 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 3
  store double 0x4028038BB74C66C8, double* %132, align 8
  %133 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 4
  store double 0x405F2620F4E2CD84, double* %133, align 8
  br label %211

; <label>:134                                     ; preds = %119, %116, %113, %110
  %135 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %136 = icmp eq i32 %135, 162
  br i1 %136, label %137, label %158

; <label>:137                                     ; preds = %134
  %138 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %139 = icmp eq i32 %138, 162
  br i1 %139, label %140, label %158

; <label>:140                                     ; preds = %137
  %141 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %142 = icmp eq i32 %141, 162
  br i1 %142, label %143, label %158

; <label>:143                                     ; preds = %140
  %144 = load i32* %1, align 4
  %145 = icmp eq i32 %144, 200
  br i1 %145, label %146, label %158

; <label>:146                                     ; preds = %143
  %147 = load i8** %2, align 8
  store i8 67, i8* %147, align 1
  store double 1.000000e-04, double* %dtref, align 8
  %148 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 0
  store double 0x40B85FCFC8A23688, double* %148, align 8
  %149 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 1
  store double 0x407FBEEB13C5FC3B, double* %149, align 8
  %150 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 2
  store double 0x409819697B453218, double* %150, align 8
  %151 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 3
  store double 0x4094C8F486223454, double* %151, align 8
  %152 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 4
  store double 0x40C6AA0B30DAE1A8, double* %152, align 8
  %153 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 0
  store double 0x406493D7B9C0A817, double* %153, align 8
  %154 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 1
  store double 0x4026FE84ED5B045F, double* %154, align 8
  %155 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 2
  store double 0x40449A8D98EA5CFB, double* %155, align 8
  %156 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 3
  store double 0x40428B3826616C50, double* %156, align 8
  %157 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 4
  store double 0x4076A1C4BBA61CAD, double* %157, align 8
  br label %210

; <label>:158                                     ; preds = %143, %140, %137, %134
  %159 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %160 = icmp eq i32 %159, 408
  br i1 %160, label %161, label %182

; <label>:161                                     ; preds = %158
  %162 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %163 = icmp eq i32 %162, 408
  br i1 %163, label %164, label %182

; <label>:164                                     ; preds = %161
  %165 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %166 = icmp eq i32 %165, 408
  br i1 %166, label %167, label %182

; <label>:167                                     ; preds = %164
  %168 = load i32* %1, align 4
  %169 = icmp eq i32 %168, 250
  br i1 %169, label %170, label %182

; <label>:170                                     ; preds = %167
  %171 = load i8** %2, align 8
  store i8 68, i8* %171, align 1
  store double 2.000000e-05, double* %dtref, align 8
  %172 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 0
  store double 0x40D8BCF8AC5116C9, double* %172, align 8
  %173 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 1
  store double 0x40A254C99545A1F6, double* %173, align 8
  %174 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 2
  store double 0x40B8968DEAFD4AAA, double* %174, align 8
  %175 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 3
  store double 0x40B4E890BC7BC6CB, double* %175, align 8
  %176 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 4
  store double 0x40E312547E0B287D, double* %176, align 8
  %177 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 0
  store double 0x40736003D74EE103, double* %177, align 8
  %178 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 1
  store double 0x40383DA936C1D258, double* %178, align 8
  %179 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 2
  store double 0x4053749D9E277EE7, double* %179, align 8
  %180 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 3
  store double 0x405116CC9CFD6385, double* %180, align 8
  %181 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 4
  store double 0x4082F496FA87D8ED, double* %181, align 8
  br label %209

; <label>:182                                     ; preds = %167, %164, %161, %158
  %183 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %184 = icmp eq i32 %183, 1020
  br i1 %184, label %185, label %206

; <label>:185                                     ; preds = %182
  %186 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %187 = icmp eq i32 %186, 1020
  br i1 %187, label %188, label %206

; <label>:188                                     ; preds = %185
  %189 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %190 = icmp eq i32 %189, 1020
  br i1 %190, label %191, label %206

; <label>:191                                     ; preds = %188
  %192 = load i32* %1, align 4
  %193 = icmp eq i32 %192, 250
  br i1 %193, label %194, label %206

; <label>:194                                     ; preds = %191
  %195 = load i8** %2, align 8
  store i8 69, i8* %195, align 1
  store double 4.000000e-06, double* %dtref, align 8
  %196 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 0
  store double 0x40F7EA1B98F73FBD, double* %196, align 8
  %197 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 1
  store double 0x40C305E841E9DC75, double* %197, align 8
  %198 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 2
  store double 0x40D819040F3B3C16, double* %198, align 8
  %199 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 3
  store double 0x40D46F0C86D13FF9, double* %199, align 8
  %200 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 4
  store double 0x4100FE6F15E6AEF6, double* %200, align 8
  %201 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 0
  store double 0x407B0C197B0665DE, double* %201, align 8
  %202 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 1
  store double 0x40427EC9590CF895, double* %202, align 8
  %203 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 2
  store double 0x405B3F021D772159, double* %203, align 8
  %204 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 3
  store double 0x4057A802E31F3EF6, double* %204, align 8
  %205 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 4
  store double 0x4088446903AB7A25, double* %205, align 8
  br label %208

; <label>:206                                     ; preds = %191, %188, %185, %182
  %207 = load i32** %3, align 8
  store i32 0, i32* %207, align 4
  br label %208

; <label>:208                                     ; preds = %206, %194
  br label %209

; <label>:209                                     ; preds = %208, %170
  br label %210

; <label>:210                                     ; preds = %209, %146
  br label %211

; <label>:211                                     ; preds = %210, %122
  br label %212

; <label>:212                                     ; preds = %211, %98
  br label %213

; <label>:213                                     ; preds = %212, %74
  br label %214

; <label>:214                                     ; preds = %213, %50
  store i32 0, i32* %m, align 4
  br label %215

; <label>:215                                     ; preds = %255, %214
  %216 = load i32* %m, align 4
  %217 = icmp slt i32 %216, 5
  br i1 %217, label %218, label %258

; <label>:218                                     ; preds = %215
  %219 = load i32* %m, align 4
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds [5 x double]* %xcr, i32 0, i64 %220
  %222 = load double* %221, align 8
  %223 = load i32* %m, align 4
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 %224
  %226 = load double* %225, align 8
  %227 = fsub double %222, %226
  %228 = load i32* %m, align 4
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 %229
  %231 = load double* %230, align 8
  %232 = fdiv double %227, %231
  %233 = call double @fabs(double %232) #5
  %234 = load i32* %m, align 4
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds [5 x double]* %xcrdif, i32 0, i64 %235
  store double %233, double* %236, align 8
  %237 = load i32* %m, align 4
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds [5 x double]* %xce, i32 0, i64 %238
  %240 = load double* %239, align 8
  %241 = load i32* %m, align 4
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 %242
  %244 = load double* %243, align 8
  %245 = fsub double %240, %244
  %246 = load i32* %m, align 4
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 %247
  %249 = load double* %248, align 8
  %250 = fdiv double %245, %249
  %251 = call double @fabs(double %250) #5
  %252 = load i32* %m, align 4
  %253 = sext i32 %252 to i64
  %254 = getelementptr inbounds [5 x double]* %xcedif, i32 0, i64 %253
  store double %251, double* %254, align 8
  br label %255

; <label>:255                                     ; preds = %218
  %256 = load i32* %m, align 4
  %257 = add nsw i32 %256, 1
  store i32 %257, i32* %m, align 4
  br label %215

; <label>:258                                     ; preds = %215
  %259 = load i8** %2, align 8
  %260 = load i8* %259, align 1
  %261 = sext i8 %260 to i32
  %262 = icmp ne i32 %261, 85
  br i1 %262, label %263, label %286

; <label>:263                                     ; preds = %258
  %264 = load i8** %2, align 8
  %265 = load i8* %264, align 1
  %266 = sext i8 %265 to i32
  %267 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([44 x i8]* @.str95, i32 0, i32 0), i32 %266)
  %268 = load double* %epsilon, align 8
  %269 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([41 x i8]* @.str196, i32 0, i32 0), double %268)
  %270 = load double* @dt, align 8
  %271 = load double* %dtref, align 8
  %272 = fsub double %270, %271
  %273 = call double @fabs(double %272) #5
  %274 = load double* %epsilon, align 8
  %275 = fcmp ole double %273, %274
  %276 = zext i1 %275 to i32
  %277 = load i32** %3, align 8
  store i32 %276, i32* %277, align 4
  %278 = load i32** %3, align 8
  %279 = load i32* %278, align 4
  %280 = icmp ne i32 %279, 0
  br i1 %280, label %285, label %281

; <label>:281                                     ; preds = %263
  %282 = load i8** %2, align 8
  store i8 85, i8* %282, align 1
  %283 = load double* %dtref, align 8
  %284 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([50 x i8]* @.str297, i32 0, i32 0), double %283)
  br label %285

; <label>:285                                     ; preds = %281, %263
  br label %288

; <label>:286                                     ; preds = %258
  %287 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([16 x i8]* @.str398, i32 0, i32 0))
  br label %288

; <label>:288                                     ; preds = %286, %285
  %289 = load i8** %2, align 8
  %290 = load i8* %289, align 1
  %291 = sext i8 %290 to i32
  %292 = icmp ne i32 %291, 85
  br i1 %292, label %293, label %295

; <label>:293                                     ; preds = %288
  %294 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str499, i32 0, i32 0))
  br label %297

; <label>:295                                     ; preds = %288
  %296 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str5100, i32 0, i32 0))
  br label %297

; <label>:297                                     ; preds = %295, %293
  store i32 0, i32* %m, align 4
  br label %298

; <label>:298                                     ; preds = %356, %297
  %299 = load i32* %m, align 4
  %300 = icmp slt i32 %299, 5
  br i1 %300, label %301, label %359

; <label>:301                                     ; preds = %298
  %302 = load i8** %2, align 8
  %303 = load i8* %302, align 1
  %304 = sext i8 %303 to i32
  %305 = icmp eq i32 %304, 85
  br i1 %305, label %306, label %314

; <label>:306                                     ; preds = %301
  %307 = load i32* %m, align 4
  %308 = add nsw i32 %307, 1
  %309 = load i32* %m, align 4
  %310 = sext i32 %309 to i64
  %311 = getelementptr inbounds [5 x double]* %xcr, i32 0, i64 %310
  %312 = load double* %311, align 8
  %313 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([22 x i8]* @.str6101, i32 0, i32 0), i32 %308, double %312)
  br label %355

; <label>:314                                     ; preds = %301
  %315 = load i32* %m, align 4
  %316 = sext i32 %315 to i64
  %317 = getelementptr inbounds [5 x double]* %xcrdif, i32 0, i64 %316
  %318 = load double* %317, align 8
  %319 = load double* %epsilon, align 8
  %320 = fcmp ole double %318, %319
  br i1 %320, label %321, label %337

; <label>:321                                     ; preds = %314
  %322 = load i32* %m, align 4
  %323 = add nsw i32 %322, 1
  %324 = load i32* %m, align 4
  %325 = sext i32 %324 to i64
  %326 = getelementptr inbounds [5 x double]* %xcr, i32 0, i64 %325
  %327 = load double* %326, align 8
  %328 = load i32* %m, align 4
  %329 = sext i32 %328 to i64
  %330 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 %329
  %331 = load double* %330, align 8
  %332 = load i32* %m, align 4
  %333 = sext i32 %332 to i64
  %334 = getelementptr inbounds [5 x double]* %xcrdif, i32 0, i64 %333
  %335 = load double* %334, align 8
  %336 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([36 x i8]* @.str7102, i32 0, i32 0), i32 %323, double %327, double %331, double %335)
  br label %354

; <label>:337                                     ; preds = %314
  %338 = load i32** %3, align 8
  store i32 0, i32* %338, align 4
  %339 = load i32* %m, align 4
  %340 = add nsw i32 %339, 1
  %341 = load i32* %m, align 4
  %342 = sext i32 %341 to i64
  %343 = getelementptr inbounds [5 x double]* %xcr, i32 0, i64 %342
  %344 = load double* %343, align 8
  %345 = load i32* %m, align 4
  %346 = sext i32 %345 to i64
  %347 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 %346
  %348 = load double* %347, align 8
  %349 = load i32* %m, align 4
  %350 = sext i32 %349 to i64
  %351 = getelementptr inbounds [5 x double]* %xcrdif, i32 0, i64 %350
  %352 = load double* %351, align 8
  %353 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([36 x i8]* @.str8103, i32 0, i32 0), i32 %340, double %344, double %348, double %352)
  br label %354

; <label>:354                                     ; preds = %337, %321
  br label %355

; <label>:355                                     ; preds = %354, %306
  br label %356

; <label>:356                                     ; preds = %355
  %357 = load i32* %m, align 4
  %358 = add nsw i32 %357, 1
  store i32 %358, i32* %m, align 4
  br label %298

; <label>:359                                     ; preds = %298
  %360 = load i8** %2, align 8
  %361 = load i8* %360, align 1
  %362 = sext i8 %361 to i32
  %363 = icmp ne i32 %362, 85
  br i1 %363, label %364, label %366

; <label>:364                                     ; preds = %359
  %365 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([44 x i8]* @.str9104, i32 0, i32 0))
  br label %368

; <label>:366                                     ; preds = %359
  %367 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([30 x i8]* @.str10105, i32 0, i32 0))
  br label %368

; <label>:368                                     ; preds = %366, %364
  store i32 0, i32* %m, align 4
  br label %369

; <label>:369                                     ; preds = %427, %368
  %370 = load i32* %m, align 4
  %371 = icmp slt i32 %370, 5
  br i1 %371, label %372, label %430

; <label>:372                                     ; preds = %369
  %373 = load i8** %2, align 8
  %374 = load i8* %373, align 1
  %375 = sext i8 %374 to i32
  %376 = icmp eq i32 %375, 85
  br i1 %376, label %377, label %385

; <label>:377                                     ; preds = %372
  %378 = load i32* %m, align 4
  %379 = add nsw i32 %378, 1
  %380 = load i32* %m, align 4
  %381 = sext i32 %380 to i64
  %382 = getelementptr inbounds [5 x double]* %xce, i32 0, i64 %381
  %383 = load double* %382, align 8
  %384 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([22 x i8]* @.str6101, i32 0, i32 0), i32 %379, double %383)
  br label %426

; <label>:385                                     ; preds = %372
  %386 = load i32* %m, align 4
  %387 = sext i32 %386 to i64
  %388 = getelementptr inbounds [5 x double]* %xcedif, i32 0, i64 %387
  %389 = load double* %388, align 8
  %390 = load double* %epsilon, align 8
  %391 = fcmp ole double %389, %390
  br i1 %391, label %392, label %408

; <label>:392                                     ; preds = %385
  %393 = load i32* %m, align 4
  %394 = add nsw i32 %393, 1
  %395 = load i32* %m, align 4
  %396 = sext i32 %395 to i64
  %397 = getelementptr inbounds [5 x double]* %xce, i32 0, i64 %396
  %398 = load double* %397, align 8
  %399 = load i32* %m, align 4
  %400 = sext i32 %399 to i64
  %401 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 %400
  %402 = load double* %401, align 8
  %403 = load i32* %m, align 4
  %404 = sext i32 %403 to i64
  %405 = getelementptr inbounds [5 x double]* %xcedif, i32 0, i64 %404
  %406 = load double* %405, align 8
  %407 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([36 x i8]* @.str7102, i32 0, i32 0), i32 %394, double %398, double %402, double %406)
  br label %425

; <label>:408                                     ; preds = %385
  %409 = load i32** %3, align 8
  store i32 0, i32* %409, align 4
  %410 = load i32* %m, align 4
  %411 = add nsw i32 %410, 1
  %412 = load i32* %m, align 4
  %413 = sext i32 %412 to i64
  %414 = getelementptr inbounds [5 x double]* %xce, i32 0, i64 %413
  %415 = load double* %414, align 8
  %416 = load i32* %m, align 4
  %417 = sext i32 %416 to i64
  %418 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 %417
  %419 = load double* %418, align 8
  %420 = load i32* %m, align 4
  %421 = sext i32 %420 to i64
  %422 = getelementptr inbounds [5 x double]* %xcedif, i32 0, i64 %421
  %423 = load double* %422, align 8
  %424 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([36 x i8]* @.str8103, i32 0, i32 0), i32 %411, double %415, double %419, double %423)
  br label %425

; <label>:425                                     ; preds = %408, %392
  br label %426

; <label>:426                                     ; preds = %425, %377
  br label %427

; <label>:427                                     ; preds = %426
  %428 = load i32* %m, align 4
  %429 = add nsw i32 %428, 1
  store i32 %429, i32* %m, align 4
  br label %369

; <label>:430                                     ; preds = %369
  %431 = load i8** %2, align 8
  %432 = load i8* %431, align 1
  %433 = sext i8 %432 to i32
  %434 = icmp eq i32 %433, 85
  br i1 %434, label %435, label %438

; <label>:435                                     ; preds = %430
  %436 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str11106, i32 0, i32 0))
  %437 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([28 x i8]* @.str12107, i32 0, i32 0))
  br label %447

; <label>:438                                     ; preds = %430
  %439 = load i32** %3, align 8
  %440 = load i32* %439, align 4
  %441 = icmp ne i32 %440, 0
  br i1 %441, label %442, label %444

; <label>:442                                     ; preds = %438
  %443 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([26 x i8]* @.str13108, i32 0, i32 0))
  br label %446

; <label>:444                                     ; preds = %438
  %445 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([22 x i8]* @.str14109, i32 0, i32 0))
  br label %446

; <label>:446                                     ; preds = %444, %442
  br label %447

; <label>:447                                     ; preds = %446, %435
  ret void
}

; Function Attrs: nounwind readnone
declare double @fabs(double) #3

; Function Attrs: nounwind uwtable
define void @wtime_(double* %t) #0 {
  %1 = alloca double*, align 8
  %tv = alloca %struct.timeval, align 8
  store double* %t, double** %1, align 8
  %2 = call i32 @gettimeofday(%struct.timeval* %tv, %struct.timezone* null) #4
  %3 = load i32* @wtime_.sec, align 4
  %4 = icmp slt i32 %3, 0
  br i1 %4, label %5, label %9

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct.timeval* %tv, i32 0, i32 0
  %7 = load i64* %6, align 8
  %8 = trunc i64 %7 to i32
  store i32 %8, i32* @wtime_.sec, align 4
  br label %9

; <label>:9                                       ; preds = %5, %0
  %10 = getelementptr inbounds %struct.timeval* %tv, i32 0, i32 0
  %11 = load i64* %10, align 8
  %12 = load i32* @wtime_.sec, align 4
  %13 = sext i32 %12 to i64
  %14 = sub nsw i64 %11, %13
  %15 = sitofp i64 %14 to double
  %16 = getelementptr inbounds %struct.timeval* %tv, i32 0, i32 1
  %17 = load i64* %16, align 8
  %18 = sitofp i64 %17 to double
  %19 = fmul double 1.000000e-06, %18
  %20 = fadd double %15, %19
  %21 = load double** %1, align 8
  store double %20, double* %21, align 8
  ret void
}

; Function Attrs: nounwind
declare i32 @gettimeofday(%struct.timeval*, %struct.timezone*) #2

; Function Attrs: nounwind uwtable
define void @x_solve() #0 {
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %m = alloca i32, align 4
  %n = alloca i32, align 4
  %isize = alloca i32, align 4
  %1 = load i32* @timeron, align 4
  %2 = icmp ne i32 %1, 0
  br i1 %2, label %3, label %4

; <label>:3                                       ; preds = %0
  call void @timer_start(i32 6)
  br label %4

; <label>:4                                       ; preds = %3, %0
  %5 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %6 = sub nsw i32 %5, 1
  store i32 %6, i32* %isize, align 4
  store i32 1, i32* %k, align 4
  br label %7

; <label>:7                                       ; preds = %2843, %4
  %8 = load i32* %k, align 4
  %9 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %10 = sub nsw i32 %9, 2
  %11 = icmp sle i32 %8, %10
  br i1 %11, label %12, label %2846

; <label>:12                                      ; preds = %7
  store i32 1, i32* %j, align 4
  br label %13

; <label>:13                                      ; preds = %2839, %12
  %14 = load i32* %j, align 4
  %15 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %16 = sub nsw i32 %15, 2
  %17 = icmp sle i32 %14, %16
  br i1 %17, label %18, label %2842

; <label>:18                                      ; preds = %13
  store i32 0, i32* %i, align 4
  br label %19

; <label>:19                                      ; preds = %883, %18
  %20 = load i32* %i, align 4
  %21 = load i32* %isize, align 4
  %22 = icmp sle i32 %20, %21
  br i1 %22, label %23, label %886

; <label>:23                                      ; preds = %19
  %24 = load i32* %i, align 4
  %25 = sext i32 %24 to i64
  %26 = load i32* %j, align 4
  %27 = sext i32 %26 to i64
  %28 = load i32* %k, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [12 x [13 x [13 x double]]]* @rho_i, i32 0, i64 %29
  %31 = getelementptr inbounds [13 x [13 x double]]* %30, i32 0, i64 %27
  %32 = getelementptr inbounds [13 x double]* %31, i32 0, i64 %25
  %33 = load double* %32, align 8
  store double %33, double* @tmp1, align 8
  %34 = load double* @tmp1, align 8
  %35 = load double* @tmp1, align 8
  %36 = fmul double %34, %35
  store double %36, double* @tmp2, align 8
  %37 = load double* @tmp1, align 8
  %38 = load double* @tmp2, align 8
  %39 = fmul double %37, %38
  store double %39, double* @tmp3, align 8
  %40 = load i32* %i, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %41
  %43 = getelementptr inbounds [5 x [5 x double]]* %42, i32 0, i64 0
  %44 = getelementptr inbounds [5 x double]* %43, i32 0, i64 0
  store double 0.000000e+00, double* %44, align 8
  %45 = load i32* %i, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %46
  %48 = getelementptr inbounds [5 x [5 x double]]* %47, i32 0, i64 1
  %49 = getelementptr inbounds [5 x double]* %48, i32 0, i64 0
  store double 1.000000e+00, double* %49, align 8
  %50 = load i32* %i, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %51
  %53 = getelementptr inbounds [5 x [5 x double]]* %52, i32 0, i64 2
  %54 = getelementptr inbounds [5 x double]* %53, i32 0, i64 0
  store double 0.000000e+00, double* %54, align 8
  %55 = load i32* %i, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %56
  %58 = getelementptr inbounds [5 x [5 x double]]* %57, i32 0, i64 3
  %59 = getelementptr inbounds [5 x double]* %58, i32 0, i64 0
  store double 0.000000e+00, double* %59, align 8
  %60 = load i32* %i, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %61
  %63 = getelementptr inbounds [5 x [5 x double]]* %62, i32 0, i64 4
  %64 = getelementptr inbounds [5 x double]* %63, i32 0, i64 0
  store double 0.000000e+00, double* %64, align 8
  %65 = load i32* %i, align 4
  %66 = sext i32 %65 to i64
  %67 = load i32* %j, align 4
  %68 = sext i32 %67 to i64
  %69 = load i32* %k, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %70
  %72 = getelementptr inbounds [13 x [13 x [5 x double]]]* %71, i32 0, i64 %68
  %73 = getelementptr inbounds [13 x [5 x double]]* %72, i32 0, i64 %66
  %74 = getelementptr inbounds [5 x double]* %73, i32 0, i64 1
  %75 = load double* %74, align 8
  %76 = load double* @tmp2, align 8
  %77 = fmul double %75, %76
  %78 = load i32* %i, align 4
  %79 = sext i32 %78 to i64
  %80 = load i32* %j, align 4
  %81 = sext i32 %80 to i64
  %82 = load i32* %k, align 4
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %83
  %85 = getelementptr inbounds [13 x [13 x [5 x double]]]* %84, i32 0, i64 %81
  %86 = getelementptr inbounds [13 x [5 x double]]* %85, i32 0, i64 %79
  %87 = getelementptr inbounds [5 x double]* %86, i32 0, i64 1
  %88 = load double* %87, align 8
  %89 = fmul double %77, %88
  %90 = fsub double -0.000000e+00, %89
  %91 = load double* @c2, align 8
  %92 = load i32* %i, align 4
  %93 = sext i32 %92 to i64
  %94 = load i32* %j, align 4
  %95 = sext i32 %94 to i64
  %96 = load i32* %k, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [12 x [13 x [13 x double]]]* @qs, i32 0, i64 %97
  %99 = getelementptr inbounds [13 x [13 x double]]* %98, i32 0, i64 %95
  %100 = getelementptr inbounds [13 x double]* %99, i32 0, i64 %93
  %101 = load double* %100, align 8
  %102 = fmul double %91, %101
  %103 = fadd double %90, %102
  %104 = load i32* %i, align 4
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %105
  %107 = getelementptr inbounds [5 x [5 x double]]* %106, i32 0, i64 0
  %108 = getelementptr inbounds [5 x double]* %107, i32 0, i64 1
  store double %103, double* %108, align 8
  %109 = load double* @c2, align 8
  %110 = fsub double 2.000000e+00, %109
  %111 = load i32* %i, align 4
  %112 = sext i32 %111 to i64
  %113 = load i32* %j, align 4
  %114 = sext i32 %113 to i64
  %115 = load i32* %k, align 4
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %116
  %118 = getelementptr inbounds [13 x [13 x [5 x double]]]* %117, i32 0, i64 %114
  %119 = getelementptr inbounds [13 x [5 x double]]* %118, i32 0, i64 %112
  %120 = getelementptr inbounds [5 x double]* %119, i32 0, i64 1
  %121 = load double* %120, align 8
  %122 = load i32* %i, align 4
  %123 = sext i32 %122 to i64
  %124 = load i32* %j, align 4
  %125 = sext i32 %124 to i64
  %126 = load i32* %k, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %127
  %129 = getelementptr inbounds [13 x [13 x [5 x double]]]* %128, i32 0, i64 %125
  %130 = getelementptr inbounds [13 x [5 x double]]* %129, i32 0, i64 %123
  %131 = getelementptr inbounds [5 x double]* %130, i32 0, i64 0
  %132 = load double* %131, align 8
  %133 = fdiv double %121, %132
  %134 = fmul double %110, %133
  %135 = load i32* %i, align 4
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %136
  %138 = getelementptr inbounds [5 x [5 x double]]* %137, i32 0, i64 1
  %139 = getelementptr inbounds [5 x double]* %138, i32 0, i64 1
  store double %134, double* %139, align 8
  %140 = load double* @c2, align 8
  %141 = fsub double -0.000000e+00, %140
  %142 = load i32* %i, align 4
  %143 = sext i32 %142 to i64
  %144 = load i32* %j, align 4
  %145 = sext i32 %144 to i64
  %146 = load i32* %k, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %147
  %149 = getelementptr inbounds [13 x [13 x [5 x double]]]* %148, i32 0, i64 %145
  %150 = getelementptr inbounds [13 x [5 x double]]* %149, i32 0, i64 %143
  %151 = getelementptr inbounds [5 x double]* %150, i32 0, i64 2
  %152 = load double* %151, align 8
  %153 = load double* @tmp1, align 8
  %154 = fmul double %152, %153
  %155 = fmul double %141, %154
  %156 = load i32* %i, align 4
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %157
  %159 = getelementptr inbounds [5 x [5 x double]]* %158, i32 0, i64 2
  %160 = getelementptr inbounds [5 x double]* %159, i32 0, i64 1
  store double %155, double* %160, align 8
  %161 = load double* @c2, align 8
  %162 = fsub double -0.000000e+00, %161
  %163 = load i32* %i, align 4
  %164 = sext i32 %163 to i64
  %165 = load i32* %j, align 4
  %166 = sext i32 %165 to i64
  %167 = load i32* %k, align 4
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %168
  %170 = getelementptr inbounds [13 x [13 x [5 x double]]]* %169, i32 0, i64 %166
  %171 = getelementptr inbounds [13 x [5 x double]]* %170, i32 0, i64 %164
  %172 = getelementptr inbounds [5 x double]* %171, i32 0, i64 3
  %173 = load double* %172, align 8
  %174 = load double* @tmp1, align 8
  %175 = fmul double %173, %174
  %176 = fmul double %162, %175
  %177 = load i32* %i, align 4
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %178
  %180 = getelementptr inbounds [5 x [5 x double]]* %179, i32 0, i64 3
  %181 = getelementptr inbounds [5 x double]* %180, i32 0, i64 1
  store double %176, double* %181, align 8
  %182 = load double* @c2, align 8
  %183 = load i32* %i, align 4
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %184
  %186 = getelementptr inbounds [5 x [5 x double]]* %185, i32 0, i64 4
  %187 = getelementptr inbounds [5 x double]* %186, i32 0, i64 1
  store double %182, double* %187, align 8
  %188 = load i32* %i, align 4
  %189 = sext i32 %188 to i64
  %190 = load i32* %j, align 4
  %191 = sext i32 %190 to i64
  %192 = load i32* %k, align 4
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %193
  %195 = getelementptr inbounds [13 x [13 x [5 x double]]]* %194, i32 0, i64 %191
  %196 = getelementptr inbounds [13 x [5 x double]]* %195, i32 0, i64 %189
  %197 = getelementptr inbounds [5 x double]* %196, i32 0, i64 1
  %198 = load double* %197, align 8
  %199 = load i32* %i, align 4
  %200 = sext i32 %199 to i64
  %201 = load i32* %j, align 4
  %202 = sext i32 %201 to i64
  %203 = load i32* %k, align 4
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %204
  %206 = getelementptr inbounds [13 x [13 x [5 x double]]]* %205, i32 0, i64 %202
  %207 = getelementptr inbounds [13 x [5 x double]]* %206, i32 0, i64 %200
  %208 = getelementptr inbounds [5 x double]* %207, i32 0, i64 2
  %209 = load double* %208, align 8
  %210 = fmul double %198, %209
  %211 = fsub double -0.000000e+00, %210
  %212 = load double* @tmp2, align 8
  %213 = fmul double %211, %212
  %214 = load i32* %i, align 4
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %215
  %217 = getelementptr inbounds [5 x [5 x double]]* %216, i32 0, i64 0
  %218 = getelementptr inbounds [5 x double]* %217, i32 0, i64 2
  store double %213, double* %218, align 8
  %219 = load i32* %i, align 4
  %220 = sext i32 %219 to i64
  %221 = load i32* %j, align 4
  %222 = sext i32 %221 to i64
  %223 = load i32* %k, align 4
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %224
  %226 = getelementptr inbounds [13 x [13 x [5 x double]]]* %225, i32 0, i64 %222
  %227 = getelementptr inbounds [13 x [5 x double]]* %226, i32 0, i64 %220
  %228 = getelementptr inbounds [5 x double]* %227, i32 0, i64 2
  %229 = load double* %228, align 8
  %230 = load double* @tmp1, align 8
  %231 = fmul double %229, %230
  %232 = load i32* %i, align 4
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %233
  %235 = getelementptr inbounds [5 x [5 x double]]* %234, i32 0, i64 1
  %236 = getelementptr inbounds [5 x double]* %235, i32 0, i64 2
  store double %231, double* %236, align 8
  %237 = load i32* %i, align 4
  %238 = sext i32 %237 to i64
  %239 = load i32* %j, align 4
  %240 = sext i32 %239 to i64
  %241 = load i32* %k, align 4
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %242
  %244 = getelementptr inbounds [13 x [13 x [5 x double]]]* %243, i32 0, i64 %240
  %245 = getelementptr inbounds [13 x [5 x double]]* %244, i32 0, i64 %238
  %246 = getelementptr inbounds [5 x double]* %245, i32 0, i64 1
  %247 = load double* %246, align 8
  %248 = load double* @tmp1, align 8
  %249 = fmul double %247, %248
  %250 = load i32* %i, align 4
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %251
  %253 = getelementptr inbounds [5 x [5 x double]]* %252, i32 0, i64 2
  %254 = getelementptr inbounds [5 x double]* %253, i32 0, i64 2
  store double %249, double* %254, align 8
  %255 = load i32* %i, align 4
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %256
  %258 = getelementptr inbounds [5 x [5 x double]]* %257, i32 0, i64 3
  %259 = getelementptr inbounds [5 x double]* %258, i32 0, i64 2
  store double 0.000000e+00, double* %259, align 8
  %260 = load i32* %i, align 4
  %261 = sext i32 %260 to i64
  %262 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %261
  %263 = getelementptr inbounds [5 x [5 x double]]* %262, i32 0, i64 4
  %264 = getelementptr inbounds [5 x double]* %263, i32 0, i64 2
  store double 0.000000e+00, double* %264, align 8
  %265 = load i32* %i, align 4
  %266 = sext i32 %265 to i64
  %267 = load i32* %j, align 4
  %268 = sext i32 %267 to i64
  %269 = load i32* %k, align 4
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %270
  %272 = getelementptr inbounds [13 x [13 x [5 x double]]]* %271, i32 0, i64 %268
  %273 = getelementptr inbounds [13 x [5 x double]]* %272, i32 0, i64 %266
  %274 = getelementptr inbounds [5 x double]* %273, i32 0, i64 1
  %275 = load double* %274, align 8
  %276 = load i32* %i, align 4
  %277 = sext i32 %276 to i64
  %278 = load i32* %j, align 4
  %279 = sext i32 %278 to i64
  %280 = load i32* %k, align 4
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %281
  %283 = getelementptr inbounds [13 x [13 x [5 x double]]]* %282, i32 0, i64 %279
  %284 = getelementptr inbounds [13 x [5 x double]]* %283, i32 0, i64 %277
  %285 = getelementptr inbounds [5 x double]* %284, i32 0, i64 3
  %286 = load double* %285, align 8
  %287 = fmul double %275, %286
  %288 = fsub double -0.000000e+00, %287
  %289 = load double* @tmp2, align 8
  %290 = fmul double %288, %289
  %291 = load i32* %i, align 4
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %292
  %294 = getelementptr inbounds [5 x [5 x double]]* %293, i32 0, i64 0
  %295 = getelementptr inbounds [5 x double]* %294, i32 0, i64 3
  store double %290, double* %295, align 8
  %296 = load i32* %i, align 4
  %297 = sext i32 %296 to i64
  %298 = load i32* %j, align 4
  %299 = sext i32 %298 to i64
  %300 = load i32* %k, align 4
  %301 = sext i32 %300 to i64
  %302 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %301
  %303 = getelementptr inbounds [13 x [13 x [5 x double]]]* %302, i32 0, i64 %299
  %304 = getelementptr inbounds [13 x [5 x double]]* %303, i32 0, i64 %297
  %305 = getelementptr inbounds [5 x double]* %304, i32 0, i64 3
  %306 = load double* %305, align 8
  %307 = load double* @tmp1, align 8
  %308 = fmul double %306, %307
  %309 = load i32* %i, align 4
  %310 = sext i32 %309 to i64
  %311 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %310
  %312 = getelementptr inbounds [5 x [5 x double]]* %311, i32 0, i64 1
  %313 = getelementptr inbounds [5 x double]* %312, i32 0, i64 3
  store double %308, double* %313, align 8
  %314 = load i32* %i, align 4
  %315 = sext i32 %314 to i64
  %316 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %315
  %317 = getelementptr inbounds [5 x [5 x double]]* %316, i32 0, i64 2
  %318 = getelementptr inbounds [5 x double]* %317, i32 0, i64 3
  store double 0.000000e+00, double* %318, align 8
  %319 = load i32* %i, align 4
  %320 = sext i32 %319 to i64
  %321 = load i32* %j, align 4
  %322 = sext i32 %321 to i64
  %323 = load i32* %k, align 4
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %324
  %326 = getelementptr inbounds [13 x [13 x [5 x double]]]* %325, i32 0, i64 %322
  %327 = getelementptr inbounds [13 x [5 x double]]* %326, i32 0, i64 %320
  %328 = getelementptr inbounds [5 x double]* %327, i32 0, i64 1
  %329 = load double* %328, align 8
  %330 = load double* @tmp1, align 8
  %331 = fmul double %329, %330
  %332 = load i32* %i, align 4
  %333 = sext i32 %332 to i64
  %334 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %333
  %335 = getelementptr inbounds [5 x [5 x double]]* %334, i32 0, i64 3
  %336 = getelementptr inbounds [5 x double]* %335, i32 0, i64 3
  store double %331, double* %336, align 8
  %337 = load i32* %i, align 4
  %338 = sext i32 %337 to i64
  %339 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %338
  %340 = getelementptr inbounds [5 x [5 x double]]* %339, i32 0, i64 4
  %341 = getelementptr inbounds [5 x double]* %340, i32 0, i64 3
  store double 0.000000e+00, double* %341, align 8
  %342 = load double* @c2, align 8
  %343 = fmul double %342, 2.000000e+00
  %344 = load i32* %i, align 4
  %345 = sext i32 %344 to i64
  %346 = load i32* %j, align 4
  %347 = sext i32 %346 to i64
  %348 = load i32* %k, align 4
  %349 = sext i32 %348 to i64
  %350 = getelementptr inbounds [12 x [13 x [13 x double]]]* @square, i32 0, i64 %349
  %351 = getelementptr inbounds [13 x [13 x double]]* %350, i32 0, i64 %347
  %352 = getelementptr inbounds [13 x double]* %351, i32 0, i64 %345
  %353 = load double* %352, align 8
  %354 = fmul double %343, %353
  %355 = load double* @c1, align 8
  %356 = load i32* %i, align 4
  %357 = sext i32 %356 to i64
  %358 = load i32* %j, align 4
  %359 = sext i32 %358 to i64
  %360 = load i32* %k, align 4
  %361 = sext i32 %360 to i64
  %362 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %361
  %363 = getelementptr inbounds [13 x [13 x [5 x double]]]* %362, i32 0, i64 %359
  %364 = getelementptr inbounds [13 x [5 x double]]* %363, i32 0, i64 %357
  %365 = getelementptr inbounds [5 x double]* %364, i32 0, i64 4
  %366 = load double* %365, align 8
  %367 = fmul double %355, %366
  %368 = fsub double %354, %367
  %369 = load i32* %i, align 4
  %370 = sext i32 %369 to i64
  %371 = load i32* %j, align 4
  %372 = sext i32 %371 to i64
  %373 = load i32* %k, align 4
  %374 = sext i32 %373 to i64
  %375 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %374
  %376 = getelementptr inbounds [13 x [13 x [5 x double]]]* %375, i32 0, i64 %372
  %377 = getelementptr inbounds [13 x [5 x double]]* %376, i32 0, i64 %370
  %378 = getelementptr inbounds [5 x double]* %377, i32 0, i64 1
  %379 = load double* %378, align 8
  %380 = load double* @tmp2, align 8
  %381 = fmul double %379, %380
  %382 = fmul double %368, %381
  %383 = load i32* %i, align 4
  %384 = sext i32 %383 to i64
  %385 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %384
  %386 = getelementptr inbounds [5 x [5 x double]]* %385, i32 0, i64 0
  %387 = getelementptr inbounds [5 x double]* %386, i32 0, i64 4
  store double %382, double* %387, align 8
  %388 = load double* @c1, align 8
  %389 = load i32* %i, align 4
  %390 = sext i32 %389 to i64
  %391 = load i32* %j, align 4
  %392 = sext i32 %391 to i64
  %393 = load i32* %k, align 4
  %394 = sext i32 %393 to i64
  %395 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %394
  %396 = getelementptr inbounds [13 x [13 x [5 x double]]]* %395, i32 0, i64 %392
  %397 = getelementptr inbounds [13 x [5 x double]]* %396, i32 0, i64 %390
  %398 = getelementptr inbounds [5 x double]* %397, i32 0, i64 4
  %399 = load double* %398, align 8
  %400 = fmul double %388, %399
  %401 = load double* @tmp1, align 8
  %402 = fmul double %400, %401
  %403 = load double* @c2, align 8
  %404 = load i32* %i, align 4
  %405 = sext i32 %404 to i64
  %406 = load i32* %j, align 4
  %407 = sext i32 %406 to i64
  %408 = load i32* %k, align 4
  %409 = sext i32 %408 to i64
  %410 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %409
  %411 = getelementptr inbounds [13 x [13 x [5 x double]]]* %410, i32 0, i64 %407
  %412 = getelementptr inbounds [13 x [5 x double]]* %411, i32 0, i64 %405
  %413 = getelementptr inbounds [5 x double]* %412, i32 0, i64 1
  %414 = load double* %413, align 8
  %415 = load i32* %i, align 4
  %416 = sext i32 %415 to i64
  %417 = load i32* %j, align 4
  %418 = sext i32 %417 to i64
  %419 = load i32* %k, align 4
  %420 = sext i32 %419 to i64
  %421 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %420
  %422 = getelementptr inbounds [13 x [13 x [5 x double]]]* %421, i32 0, i64 %418
  %423 = getelementptr inbounds [13 x [5 x double]]* %422, i32 0, i64 %416
  %424 = getelementptr inbounds [5 x double]* %423, i32 0, i64 1
  %425 = load double* %424, align 8
  %426 = fmul double %414, %425
  %427 = load double* @tmp2, align 8
  %428 = fmul double %426, %427
  %429 = load i32* %i, align 4
  %430 = sext i32 %429 to i64
  %431 = load i32* %j, align 4
  %432 = sext i32 %431 to i64
  %433 = load i32* %k, align 4
  %434 = sext i32 %433 to i64
  %435 = getelementptr inbounds [12 x [13 x [13 x double]]]* @qs, i32 0, i64 %434
  %436 = getelementptr inbounds [13 x [13 x double]]* %435, i32 0, i64 %432
  %437 = getelementptr inbounds [13 x double]* %436, i32 0, i64 %430
  %438 = load double* %437, align 8
  %439 = fadd double %428, %438
  %440 = fmul double %403, %439
  %441 = fsub double %402, %440
  %442 = load i32* %i, align 4
  %443 = sext i32 %442 to i64
  %444 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %443
  %445 = getelementptr inbounds [5 x [5 x double]]* %444, i32 0, i64 1
  %446 = getelementptr inbounds [5 x double]* %445, i32 0, i64 4
  store double %441, double* %446, align 8
  %447 = load double* @c2, align 8
  %448 = fsub double -0.000000e+00, %447
  %449 = load i32* %i, align 4
  %450 = sext i32 %449 to i64
  %451 = load i32* %j, align 4
  %452 = sext i32 %451 to i64
  %453 = load i32* %k, align 4
  %454 = sext i32 %453 to i64
  %455 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %454
  %456 = getelementptr inbounds [13 x [13 x [5 x double]]]* %455, i32 0, i64 %452
  %457 = getelementptr inbounds [13 x [5 x double]]* %456, i32 0, i64 %450
  %458 = getelementptr inbounds [5 x double]* %457, i32 0, i64 2
  %459 = load double* %458, align 8
  %460 = load i32* %i, align 4
  %461 = sext i32 %460 to i64
  %462 = load i32* %j, align 4
  %463 = sext i32 %462 to i64
  %464 = load i32* %k, align 4
  %465 = sext i32 %464 to i64
  %466 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %465
  %467 = getelementptr inbounds [13 x [13 x [5 x double]]]* %466, i32 0, i64 %463
  %468 = getelementptr inbounds [13 x [5 x double]]* %467, i32 0, i64 %461
  %469 = getelementptr inbounds [5 x double]* %468, i32 0, i64 1
  %470 = load double* %469, align 8
  %471 = fmul double %459, %470
  %472 = fmul double %448, %471
  %473 = load double* @tmp2, align 8
  %474 = fmul double %472, %473
  %475 = load i32* %i, align 4
  %476 = sext i32 %475 to i64
  %477 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %476
  %478 = getelementptr inbounds [5 x [5 x double]]* %477, i32 0, i64 2
  %479 = getelementptr inbounds [5 x double]* %478, i32 0, i64 4
  store double %474, double* %479, align 8
  %480 = load double* @c2, align 8
  %481 = fsub double -0.000000e+00, %480
  %482 = load i32* %i, align 4
  %483 = sext i32 %482 to i64
  %484 = load i32* %j, align 4
  %485 = sext i32 %484 to i64
  %486 = load i32* %k, align 4
  %487 = sext i32 %486 to i64
  %488 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %487
  %489 = getelementptr inbounds [13 x [13 x [5 x double]]]* %488, i32 0, i64 %485
  %490 = getelementptr inbounds [13 x [5 x double]]* %489, i32 0, i64 %483
  %491 = getelementptr inbounds [5 x double]* %490, i32 0, i64 3
  %492 = load double* %491, align 8
  %493 = load i32* %i, align 4
  %494 = sext i32 %493 to i64
  %495 = load i32* %j, align 4
  %496 = sext i32 %495 to i64
  %497 = load i32* %k, align 4
  %498 = sext i32 %497 to i64
  %499 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %498
  %500 = getelementptr inbounds [13 x [13 x [5 x double]]]* %499, i32 0, i64 %496
  %501 = getelementptr inbounds [13 x [5 x double]]* %500, i32 0, i64 %494
  %502 = getelementptr inbounds [5 x double]* %501, i32 0, i64 1
  %503 = load double* %502, align 8
  %504 = fmul double %492, %503
  %505 = fmul double %481, %504
  %506 = load double* @tmp2, align 8
  %507 = fmul double %505, %506
  %508 = load i32* %i, align 4
  %509 = sext i32 %508 to i64
  %510 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %509
  %511 = getelementptr inbounds [5 x [5 x double]]* %510, i32 0, i64 3
  %512 = getelementptr inbounds [5 x double]* %511, i32 0, i64 4
  store double %507, double* %512, align 8
  %513 = load double* @c1, align 8
  %514 = load i32* %i, align 4
  %515 = sext i32 %514 to i64
  %516 = load i32* %j, align 4
  %517 = sext i32 %516 to i64
  %518 = load i32* %k, align 4
  %519 = sext i32 %518 to i64
  %520 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %519
  %521 = getelementptr inbounds [13 x [13 x [5 x double]]]* %520, i32 0, i64 %517
  %522 = getelementptr inbounds [13 x [5 x double]]* %521, i32 0, i64 %515
  %523 = getelementptr inbounds [5 x double]* %522, i32 0, i64 1
  %524 = load double* %523, align 8
  %525 = load double* @tmp1, align 8
  %526 = fmul double %524, %525
  %527 = fmul double %513, %526
  %528 = load i32* %i, align 4
  %529 = sext i32 %528 to i64
  %530 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %529
  %531 = getelementptr inbounds [5 x [5 x double]]* %530, i32 0, i64 4
  %532 = getelementptr inbounds [5 x double]* %531, i32 0, i64 4
  store double %527, double* %532, align 8
  %533 = load i32* %i, align 4
  %534 = sext i32 %533 to i64
  %535 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %534
  %536 = getelementptr inbounds [5 x [5 x double]]* %535, i32 0, i64 0
  %537 = getelementptr inbounds [5 x double]* %536, i32 0, i64 0
  store double 0.000000e+00, double* %537, align 8
  %538 = load i32* %i, align 4
  %539 = sext i32 %538 to i64
  %540 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %539
  %541 = getelementptr inbounds [5 x [5 x double]]* %540, i32 0, i64 1
  %542 = getelementptr inbounds [5 x double]* %541, i32 0, i64 0
  store double 0.000000e+00, double* %542, align 8
  %543 = load i32* %i, align 4
  %544 = sext i32 %543 to i64
  %545 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %544
  %546 = getelementptr inbounds [5 x [5 x double]]* %545, i32 0, i64 2
  %547 = getelementptr inbounds [5 x double]* %546, i32 0, i64 0
  store double 0.000000e+00, double* %547, align 8
  %548 = load i32* %i, align 4
  %549 = sext i32 %548 to i64
  %550 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %549
  %551 = getelementptr inbounds [5 x [5 x double]]* %550, i32 0, i64 3
  %552 = getelementptr inbounds [5 x double]* %551, i32 0, i64 0
  store double 0.000000e+00, double* %552, align 8
  %553 = load i32* %i, align 4
  %554 = sext i32 %553 to i64
  %555 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %554
  %556 = getelementptr inbounds [5 x [5 x double]]* %555, i32 0, i64 4
  %557 = getelementptr inbounds [5 x double]* %556, i32 0, i64 0
  store double 0.000000e+00, double* %557, align 8
  %558 = load double* @con43, align 8
  %559 = fsub double -0.000000e+00, %558
  %560 = load double* @c3c4, align 8
  %561 = fmul double %559, %560
  %562 = load double* @tmp2, align 8
  %563 = fmul double %561, %562
  %564 = load i32* %i, align 4
  %565 = sext i32 %564 to i64
  %566 = load i32* %j, align 4
  %567 = sext i32 %566 to i64
  %568 = load i32* %k, align 4
  %569 = sext i32 %568 to i64
  %570 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %569
  %571 = getelementptr inbounds [13 x [13 x [5 x double]]]* %570, i32 0, i64 %567
  %572 = getelementptr inbounds [13 x [5 x double]]* %571, i32 0, i64 %565
  %573 = getelementptr inbounds [5 x double]* %572, i32 0, i64 1
  %574 = load double* %573, align 8
  %575 = fmul double %563, %574
  %576 = load i32* %i, align 4
  %577 = sext i32 %576 to i64
  %578 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %577
  %579 = getelementptr inbounds [5 x [5 x double]]* %578, i32 0, i64 0
  %580 = getelementptr inbounds [5 x double]* %579, i32 0, i64 1
  store double %575, double* %580, align 8
  %581 = load double* @con43, align 8
  %582 = load double* @c3c4, align 8
  %583 = fmul double %581, %582
  %584 = load double* @tmp1, align 8
  %585 = fmul double %583, %584
  %586 = load i32* %i, align 4
  %587 = sext i32 %586 to i64
  %588 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %587
  %589 = getelementptr inbounds [5 x [5 x double]]* %588, i32 0, i64 1
  %590 = getelementptr inbounds [5 x double]* %589, i32 0, i64 1
  store double %585, double* %590, align 8
  %591 = load i32* %i, align 4
  %592 = sext i32 %591 to i64
  %593 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %592
  %594 = getelementptr inbounds [5 x [5 x double]]* %593, i32 0, i64 2
  %595 = getelementptr inbounds [5 x double]* %594, i32 0, i64 1
  store double 0.000000e+00, double* %595, align 8
  %596 = load i32* %i, align 4
  %597 = sext i32 %596 to i64
  %598 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %597
  %599 = getelementptr inbounds [5 x [5 x double]]* %598, i32 0, i64 3
  %600 = getelementptr inbounds [5 x double]* %599, i32 0, i64 1
  store double 0.000000e+00, double* %600, align 8
  %601 = load i32* %i, align 4
  %602 = sext i32 %601 to i64
  %603 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %602
  %604 = getelementptr inbounds [5 x [5 x double]]* %603, i32 0, i64 4
  %605 = getelementptr inbounds [5 x double]* %604, i32 0, i64 1
  store double 0.000000e+00, double* %605, align 8
  %606 = load double* @c3c4, align 8
  %607 = fsub double -0.000000e+00, %606
  %608 = load double* @tmp2, align 8
  %609 = fmul double %607, %608
  %610 = load i32* %i, align 4
  %611 = sext i32 %610 to i64
  %612 = load i32* %j, align 4
  %613 = sext i32 %612 to i64
  %614 = load i32* %k, align 4
  %615 = sext i32 %614 to i64
  %616 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %615
  %617 = getelementptr inbounds [13 x [13 x [5 x double]]]* %616, i32 0, i64 %613
  %618 = getelementptr inbounds [13 x [5 x double]]* %617, i32 0, i64 %611
  %619 = getelementptr inbounds [5 x double]* %618, i32 0, i64 2
  %620 = load double* %619, align 8
  %621 = fmul double %609, %620
  %622 = load i32* %i, align 4
  %623 = sext i32 %622 to i64
  %624 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %623
  %625 = getelementptr inbounds [5 x [5 x double]]* %624, i32 0, i64 0
  %626 = getelementptr inbounds [5 x double]* %625, i32 0, i64 2
  store double %621, double* %626, align 8
  %627 = load i32* %i, align 4
  %628 = sext i32 %627 to i64
  %629 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %628
  %630 = getelementptr inbounds [5 x [5 x double]]* %629, i32 0, i64 1
  %631 = getelementptr inbounds [5 x double]* %630, i32 0, i64 2
  store double 0.000000e+00, double* %631, align 8
  %632 = load double* @c3c4, align 8
  %633 = load double* @tmp1, align 8
  %634 = fmul double %632, %633
  %635 = load i32* %i, align 4
  %636 = sext i32 %635 to i64
  %637 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %636
  %638 = getelementptr inbounds [5 x [5 x double]]* %637, i32 0, i64 2
  %639 = getelementptr inbounds [5 x double]* %638, i32 0, i64 2
  store double %634, double* %639, align 8
  %640 = load i32* %i, align 4
  %641 = sext i32 %640 to i64
  %642 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %641
  %643 = getelementptr inbounds [5 x [5 x double]]* %642, i32 0, i64 3
  %644 = getelementptr inbounds [5 x double]* %643, i32 0, i64 2
  store double 0.000000e+00, double* %644, align 8
  %645 = load i32* %i, align 4
  %646 = sext i32 %645 to i64
  %647 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %646
  %648 = getelementptr inbounds [5 x [5 x double]]* %647, i32 0, i64 4
  %649 = getelementptr inbounds [5 x double]* %648, i32 0, i64 2
  store double 0.000000e+00, double* %649, align 8
  %650 = load double* @c3c4, align 8
  %651 = fsub double -0.000000e+00, %650
  %652 = load double* @tmp2, align 8
  %653 = fmul double %651, %652
  %654 = load i32* %i, align 4
  %655 = sext i32 %654 to i64
  %656 = load i32* %j, align 4
  %657 = sext i32 %656 to i64
  %658 = load i32* %k, align 4
  %659 = sext i32 %658 to i64
  %660 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %659
  %661 = getelementptr inbounds [13 x [13 x [5 x double]]]* %660, i32 0, i64 %657
  %662 = getelementptr inbounds [13 x [5 x double]]* %661, i32 0, i64 %655
  %663 = getelementptr inbounds [5 x double]* %662, i32 0, i64 3
  %664 = load double* %663, align 8
  %665 = fmul double %653, %664
  %666 = load i32* %i, align 4
  %667 = sext i32 %666 to i64
  %668 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %667
  %669 = getelementptr inbounds [5 x [5 x double]]* %668, i32 0, i64 0
  %670 = getelementptr inbounds [5 x double]* %669, i32 0, i64 3
  store double %665, double* %670, align 8
  %671 = load i32* %i, align 4
  %672 = sext i32 %671 to i64
  %673 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %672
  %674 = getelementptr inbounds [5 x [5 x double]]* %673, i32 0, i64 1
  %675 = getelementptr inbounds [5 x double]* %674, i32 0, i64 3
  store double 0.000000e+00, double* %675, align 8
  %676 = load i32* %i, align 4
  %677 = sext i32 %676 to i64
  %678 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %677
  %679 = getelementptr inbounds [5 x [5 x double]]* %678, i32 0, i64 2
  %680 = getelementptr inbounds [5 x double]* %679, i32 0, i64 3
  store double 0.000000e+00, double* %680, align 8
  %681 = load double* @c3c4, align 8
  %682 = load double* @tmp1, align 8
  %683 = fmul double %681, %682
  %684 = load i32* %i, align 4
  %685 = sext i32 %684 to i64
  %686 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %685
  %687 = getelementptr inbounds [5 x [5 x double]]* %686, i32 0, i64 3
  %688 = getelementptr inbounds [5 x double]* %687, i32 0, i64 3
  store double %683, double* %688, align 8
  %689 = load i32* %i, align 4
  %690 = sext i32 %689 to i64
  %691 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %690
  %692 = getelementptr inbounds [5 x [5 x double]]* %691, i32 0, i64 4
  %693 = getelementptr inbounds [5 x double]* %692, i32 0, i64 3
  store double 0.000000e+00, double* %693, align 8
  %694 = load double* @con43, align 8
  %695 = load double* @c3c4, align 8
  %696 = fmul double %694, %695
  %697 = load double* @c1345, align 8
  %698 = fsub double %696, %697
  %699 = fsub double -0.000000e+00, %698
  %700 = load double* @tmp3, align 8
  %701 = fmul double %699, %700
  %702 = load i32* %i, align 4
  %703 = sext i32 %702 to i64
  %704 = load i32* %j, align 4
  %705 = sext i32 %704 to i64
  %706 = load i32* %k, align 4
  %707 = sext i32 %706 to i64
  %708 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %707
  %709 = getelementptr inbounds [13 x [13 x [5 x double]]]* %708, i32 0, i64 %705
  %710 = getelementptr inbounds [13 x [5 x double]]* %709, i32 0, i64 %703
  %711 = getelementptr inbounds [5 x double]* %710, i32 0, i64 1
  %712 = load double* %711, align 8
  %713 = load i32* %i, align 4
  %714 = sext i32 %713 to i64
  %715 = load i32* %j, align 4
  %716 = sext i32 %715 to i64
  %717 = load i32* %k, align 4
  %718 = sext i32 %717 to i64
  %719 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %718
  %720 = getelementptr inbounds [13 x [13 x [5 x double]]]* %719, i32 0, i64 %716
  %721 = getelementptr inbounds [13 x [5 x double]]* %720, i32 0, i64 %714
  %722 = getelementptr inbounds [5 x double]* %721, i32 0, i64 1
  %723 = load double* %722, align 8
  %724 = fmul double %712, %723
  %725 = fmul double %701, %724
  %726 = load double* @c3c4, align 8
  %727 = load double* @c1345, align 8
  %728 = fsub double %726, %727
  %729 = load double* @tmp3, align 8
  %730 = fmul double %728, %729
  %731 = load i32* %i, align 4
  %732 = sext i32 %731 to i64
  %733 = load i32* %j, align 4
  %734 = sext i32 %733 to i64
  %735 = load i32* %k, align 4
  %736 = sext i32 %735 to i64
  %737 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %736
  %738 = getelementptr inbounds [13 x [13 x [5 x double]]]* %737, i32 0, i64 %734
  %739 = getelementptr inbounds [13 x [5 x double]]* %738, i32 0, i64 %732
  %740 = getelementptr inbounds [5 x double]* %739, i32 0, i64 2
  %741 = load double* %740, align 8
  %742 = load i32* %i, align 4
  %743 = sext i32 %742 to i64
  %744 = load i32* %j, align 4
  %745 = sext i32 %744 to i64
  %746 = load i32* %k, align 4
  %747 = sext i32 %746 to i64
  %748 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %747
  %749 = getelementptr inbounds [13 x [13 x [5 x double]]]* %748, i32 0, i64 %745
  %750 = getelementptr inbounds [13 x [5 x double]]* %749, i32 0, i64 %743
  %751 = getelementptr inbounds [5 x double]* %750, i32 0, i64 2
  %752 = load double* %751, align 8
  %753 = fmul double %741, %752
  %754 = fmul double %730, %753
  %755 = fsub double %725, %754
  %756 = load double* @c3c4, align 8
  %757 = load double* @c1345, align 8
  %758 = fsub double %756, %757
  %759 = load double* @tmp3, align 8
  %760 = fmul double %758, %759
  %761 = load i32* %i, align 4
  %762 = sext i32 %761 to i64
  %763 = load i32* %j, align 4
  %764 = sext i32 %763 to i64
  %765 = load i32* %k, align 4
  %766 = sext i32 %765 to i64
  %767 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %766
  %768 = getelementptr inbounds [13 x [13 x [5 x double]]]* %767, i32 0, i64 %764
  %769 = getelementptr inbounds [13 x [5 x double]]* %768, i32 0, i64 %762
  %770 = getelementptr inbounds [5 x double]* %769, i32 0, i64 3
  %771 = load double* %770, align 8
  %772 = load i32* %i, align 4
  %773 = sext i32 %772 to i64
  %774 = load i32* %j, align 4
  %775 = sext i32 %774 to i64
  %776 = load i32* %k, align 4
  %777 = sext i32 %776 to i64
  %778 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %777
  %779 = getelementptr inbounds [13 x [13 x [5 x double]]]* %778, i32 0, i64 %775
  %780 = getelementptr inbounds [13 x [5 x double]]* %779, i32 0, i64 %773
  %781 = getelementptr inbounds [5 x double]* %780, i32 0, i64 3
  %782 = load double* %781, align 8
  %783 = fmul double %771, %782
  %784 = fmul double %760, %783
  %785 = fsub double %755, %784
  %786 = load double* @c1345, align 8
  %787 = load double* @tmp2, align 8
  %788 = fmul double %786, %787
  %789 = load i32* %i, align 4
  %790 = sext i32 %789 to i64
  %791 = load i32* %j, align 4
  %792 = sext i32 %791 to i64
  %793 = load i32* %k, align 4
  %794 = sext i32 %793 to i64
  %795 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %794
  %796 = getelementptr inbounds [13 x [13 x [5 x double]]]* %795, i32 0, i64 %792
  %797 = getelementptr inbounds [13 x [5 x double]]* %796, i32 0, i64 %790
  %798 = getelementptr inbounds [5 x double]* %797, i32 0, i64 4
  %799 = load double* %798, align 8
  %800 = fmul double %788, %799
  %801 = fsub double %785, %800
  %802 = load i32* %i, align 4
  %803 = sext i32 %802 to i64
  %804 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %803
  %805 = getelementptr inbounds [5 x [5 x double]]* %804, i32 0, i64 0
  %806 = getelementptr inbounds [5 x double]* %805, i32 0, i64 4
  store double %801, double* %806, align 8
  %807 = load double* @con43, align 8
  %808 = load double* @c3c4, align 8
  %809 = fmul double %807, %808
  %810 = load double* @c1345, align 8
  %811 = fsub double %809, %810
  %812 = load double* @tmp2, align 8
  %813 = fmul double %811, %812
  %814 = load i32* %i, align 4
  %815 = sext i32 %814 to i64
  %816 = load i32* %j, align 4
  %817 = sext i32 %816 to i64
  %818 = load i32* %k, align 4
  %819 = sext i32 %818 to i64
  %820 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %819
  %821 = getelementptr inbounds [13 x [13 x [5 x double]]]* %820, i32 0, i64 %817
  %822 = getelementptr inbounds [13 x [5 x double]]* %821, i32 0, i64 %815
  %823 = getelementptr inbounds [5 x double]* %822, i32 0, i64 1
  %824 = load double* %823, align 8
  %825 = fmul double %813, %824
  %826 = load i32* %i, align 4
  %827 = sext i32 %826 to i64
  %828 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %827
  %829 = getelementptr inbounds [5 x [5 x double]]* %828, i32 0, i64 1
  %830 = getelementptr inbounds [5 x double]* %829, i32 0, i64 4
  store double %825, double* %830, align 8
  %831 = load double* @c3c4, align 8
  %832 = load double* @c1345, align 8
  %833 = fsub double %831, %832
  %834 = load double* @tmp2, align 8
  %835 = fmul double %833, %834
  %836 = load i32* %i, align 4
  %837 = sext i32 %836 to i64
  %838 = load i32* %j, align 4
  %839 = sext i32 %838 to i64
  %840 = load i32* %k, align 4
  %841 = sext i32 %840 to i64
  %842 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %841
  %843 = getelementptr inbounds [13 x [13 x [5 x double]]]* %842, i32 0, i64 %839
  %844 = getelementptr inbounds [13 x [5 x double]]* %843, i32 0, i64 %837
  %845 = getelementptr inbounds [5 x double]* %844, i32 0, i64 2
  %846 = load double* %845, align 8
  %847 = fmul double %835, %846
  %848 = load i32* %i, align 4
  %849 = sext i32 %848 to i64
  %850 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %849
  %851 = getelementptr inbounds [5 x [5 x double]]* %850, i32 0, i64 2
  %852 = getelementptr inbounds [5 x double]* %851, i32 0, i64 4
  store double %847, double* %852, align 8
  %853 = load double* @c3c4, align 8
  %854 = load double* @c1345, align 8
  %855 = fsub double %853, %854
  %856 = load double* @tmp2, align 8
  %857 = fmul double %855, %856
  %858 = load i32* %i, align 4
  %859 = sext i32 %858 to i64
  %860 = load i32* %j, align 4
  %861 = sext i32 %860 to i64
  %862 = load i32* %k, align 4
  %863 = sext i32 %862 to i64
  %864 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %863
  %865 = getelementptr inbounds [13 x [13 x [5 x double]]]* %864, i32 0, i64 %861
  %866 = getelementptr inbounds [13 x [5 x double]]* %865, i32 0, i64 %859
  %867 = getelementptr inbounds [5 x double]* %866, i32 0, i64 3
  %868 = load double* %867, align 8
  %869 = fmul double %857, %868
  %870 = load i32* %i, align 4
  %871 = sext i32 %870 to i64
  %872 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %871
  %873 = getelementptr inbounds [5 x [5 x double]]* %872, i32 0, i64 3
  %874 = getelementptr inbounds [5 x double]* %873, i32 0, i64 4
  store double %869, double* %874, align 8
  %875 = load double* @c1345, align 8
  %876 = load double* @tmp1, align 8
  %877 = fmul double %875, %876
  %878 = load i32* %i, align 4
  %879 = sext i32 %878 to i64
  %880 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %879
  %881 = getelementptr inbounds [5 x [5 x double]]* %880, i32 0, i64 4
  %882 = getelementptr inbounds [5 x double]* %881, i32 0, i64 4
  store double %877, double* %882, align 8
  br label %883

; <label>:883                                     ; preds = %23
  %884 = load i32* %i, align 4
  %885 = add nsw i32 %884, 1
  store i32 %885, i32* %i, align 4
  br label %19

; <label>:886                                     ; preds = %19
  %887 = load i32* %isize, align 4
  call void @lhsinit([3 x [5 x [5 x double]]]* getelementptr inbounds ([13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i32 0), i32 %887)
  store i32 1, i32* %i, align 4
  br label %888

; <label>:888                                     ; preds = %2620, %886
  %889 = load i32* %i, align 4
  %890 = load i32* %isize, align 4
  %891 = sub nsw i32 %890, 1
  %892 = icmp sle i32 %889, %891
  br i1 %892, label %893, label %2623

; <label>:893                                     ; preds = %888
  %894 = load double* @dt, align 8
  %895 = load double* @tx1, align 8
  %896 = fmul double %894, %895
  store double %896, double* @tmp1, align 8
  %897 = load double* @dt, align 8
  %898 = load double* @tx2, align 8
  %899 = fmul double %897, %898
  store double %899, double* @tmp2, align 8
  %900 = load double* @tmp2, align 8
  %901 = fsub double -0.000000e+00, %900
  %902 = load i32* %i, align 4
  %903 = sub nsw i32 %902, 1
  %904 = sext i32 %903 to i64
  %905 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %904
  %906 = getelementptr inbounds [5 x [5 x double]]* %905, i32 0, i64 0
  %907 = getelementptr inbounds [5 x double]* %906, i32 0, i64 0
  %908 = load double* %907, align 8
  %909 = fmul double %901, %908
  %910 = load double* @tmp1, align 8
  %911 = load i32* %i, align 4
  %912 = sub nsw i32 %911, 1
  %913 = sext i32 %912 to i64
  %914 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %913
  %915 = getelementptr inbounds [5 x [5 x double]]* %914, i32 0, i64 0
  %916 = getelementptr inbounds [5 x double]* %915, i32 0, i64 0
  %917 = load double* %916, align 8
  %918 = fmul double %910, %917
  %919 = fsub double %909, %918
  %920 = load double* @tmp1, align 8
  %921 = load double* @dx1, align 8
  %922 = fmul double %920, %921
  %923 = fsub double %919, %922
  %924 = load i32* %i, align 4
  %925 = sext i32 %924 to i64
  %926 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %925
  %927 = getelementptr inbounds [3 x [5 x [5 x double]]]* %926, i32 0, i64 0
  %928 = getelementptr inbounds [5 x [5 x double]]* %927, i32 0, i64 0
  %929 = getelementptr inbounds [5 x double]* %928, i32 0, i64 0
  store double %923, double* %929, align 8
  %930 = load double* @tmp2, align 8
  %931 = fsub double -0.000000e+00, %930
  %932 = load i32* %i, align 4
  %933 = sub nsw i32 %932, 1
  %934 = sext i32 %933 to i64
  %935 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %934
  %936 = getelementptr inbounds [5 x [5 x double]]* %935, i32 0, i64 1
  %937 = getelementptr inbounds [5 x double]* %936, i32 0, i64 0
  %938 = load double* %937, align 8
  %939 = fmul double %931, %938
  %940 = load double* @tmp1, align 8
  %941 = load i32* %i, align 4
  %942 = sub nsw i32 %941, 1
  %943 = sext i32 %942 to i64
  %944 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %943
  %945 = getelementptr inbounds [5 x [5 x double]]* %944, i32 0, i64 1
  %946 = getelementptr inbounds [5 x double]* %945, i32 0, i64 0
  %947 = load double* %946, align 8
  %948 = fmul double %940, %947
  %949 = fsub double %939, %948
  %950 = load i32* %i, align 4
  %951 = sext i32 %950 to i64
  %952 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %951
  %953 = getelementptr inbounds [3 x [5 x [5 x double]]]* %952, i32 0, i64 0
  %954 = getelementptr inbounds [5 x [5 x double]]* %953, i32 0, i64 1
  %955 = getelementptr inbounds [5 x double]* %954, i32 0, i64 0
  store double %949, double* %955, align 8
  %956 = load double* @tmp2, align 8
  %957 = fsub double -0.000000e+00, %956
  %958 = load i32* %i, align 4
  %959 = sub nsw i32 %958, 1
  %960 = sext i32 %959 to i64
  %961 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %960
  %962 = getelementptr inbounds [5 x [5 x double]]* %961, i32 0, i64 2
  %963 = getelementptr inbounds [5 x double]* %962, i32 0, i64 0
  %964 = load double* %963, align 8
  %965 = fmul double %957, %964
  %966 = load double* @tmp1, align 8
  %967 = load i32* %i, align 4
  %968 = sub nsw i32 %967, 1
  %969 = sext i32 %968 to i64
  %970 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %969
  %971 = getelementptr inbounds [5 x [5 x double]]* %970, i32 0, i64 2
  %972 = getelementptr inbounds [5 x double]* %971, i32 0, i64 0
  %973 = load double* %972, align 8
  %974 = fmul double %966, %973
  %975 = fsub double %965, %974
  %976 = load i32* %i, align 4
  %977 = sext i32 %976 to i64
  %978 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %977
  %979 = getelementptr inbounds [3 x [5 x [5 x double]]]* %978, i32 0, i64 0
  %980 = getelementptr inbounds [5 x [5 x double]]* %979, i32 0, i64 2
  %981 = getelementptr inbounds [5 x double]* %980, i32 0, i64 0
  store double %975, double* %981, align 8
  %982 = load double* @tmp2, align 8
  %983 = fsub double -0.000000e+00, %982
  %984 = load i32* %i, align 4
  %985 = sub nsw i32 %984, 1
  %986 = sext i32 %985 to i64
  %987 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %986
  %988 = getelementptr inbounds [5 x [5 x double]]* %987, i32 0, i64 3
  %989 = getelementptr inbounds [5 x double]* %988, i32 0, i64 0
  %990 = load double* %989, align 8
  %991 = fmul double %983, %990
  %992 = load double* @tmp1, align 8
  %993 = load i32* %i, align 4
  %994 = sub nsw i32 %993, 1
  %995 = sext i32 %994 to i64
  %996 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %995
  %997 = getelementptr inbounds [5 x [5 x double]]* %996, i32 0, i64 3
  %998 = getelementptr inbounds [5 x double]* %997, i32 0, i64 0
  %999 = load double* %998, align 8
  %1000 = fmul double %992, %999
  %1001 = fsub double %991, %1000
  %1002 = load i32* %i, align 4
  %1003 = sext i32 %1002 to i64
  %1004 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1003
  %1005 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1004, i32 0, i64 0
  %1006 = getelementptr inbounds [5 x [5 x double]]* %1005, i32 0, i64 3
  %1007 = getelementptr inbounds [5 x double]* %1006, i32 0, i64 0
  store double %1001, double* %1007, align 8
  %1008 = load double* @tmp2, align 8
  %1009 = fsub double -0.000000e+00, %1008
  %1010 = load i32* %i, align 4
  %1011 = sub nsw i32 %1010, 1
  %1012 = sext i32 %1011 to i64
  %1013 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1012
  %1014 = getelementptr inbounds [5 x [5 x double]]* %1013, i32 0, i64 4
  %1015 = getelementptr inbounds [5 x double]* %1014, i32 0, i64 0
  %1016 = load double* %1015, align 8
  %1017 = fmul double %1009, %1016
  %1018 = load double* @tmp1, align 8
  %1019 = load i32* %i, align 4
  %1020 = sub nsw i32 %1019, 1
  %1021 = sext i32 %1020 to i64
  %1022 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1021
  %1023 = getelementptr inbounds [5 x [5 x double]]* %1022, i32 0, i64 4
  %1024 = getelementptr inbounds [5 x double]* %1023, i32 0, i64 0
  %1025 = load double* %1024, align 8
  %1026 = fmul double %1018, %1025
  %1027 = fsub double %1017, %1026
  %1028 = load i32* %i, align 4
  %1029 = sext i32 %1028 to i64
  %1030 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1029
  %1031 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1030, i32 0, i64 0
  %1032 = getelementptr inbounds [5 x [5 x double]]* %1031, i32 0, i64 4
  %1033 = getelementptr inbounds [5 x double]* %1032, i32 0, i64 0
  store double %1027, double* %1033, align 8
  %1034 = load double* @tmp2, align 8
  %1035 = fsub double -0.000000e+00, %1034
  %1036 = load i32* %i, align 4
  %1037 = sub nsw i32 %1036, 1
  %1038 = sext i32 %1037 to i64
  %1039 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1038
  %1040 = getelementptr inbounds [5 x [5 x double]]* %1039, i32 0, i64 0
  %1041 = getelementptr inbounds [5 x double]* %1040, i32 0, i64 1
  %1042 = load double* %1041, align 8
  %1043 = fmul double %1035, %1042
  %1044 = load double* @tmp1, align 8
  %1045 = load i32* %i, align 4
  %1046 = sub nsw i32 %1045, 1
  %1047 = sext i32 %1046 to i64
  %1048 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1047
  %1049 = getelementptr inbounds [5 x [5 x double]]* %1048, i32 0, i64 0
  %1050 = getelementptr inbounds [5 x double]* %1049, i32 0, i64 1
  %1051 = load double* %1050, align 8
  %1052 = fmul double %1044, %1051
  %1053 = fsub double %1043, %1052
  %1054 = load i32* %i, align 4
  %1055 = sext i32 %1054 to i64
  %1056 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1055
  %1057 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1056, i32 0, i64 0
  %1058 = getelementptr inbounds [5 x [5 x double]]* %1057, i32 0, i64 0
  %1059 = getelementptr inbounds [5 x double]* %1058, i32 0, i64 1
  store double %1053, double* %1059, align 8
  %1060 = load double* @tmp2, align 8
  %1061 = fsub double -0.000000e+00, %1060
  %1062 = load i32* %i, align 4
  %1063 = sub nsw i32 %1062, 1
  %1064 = sext i32 %1063 to i64
  %1065 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1064
  %1066 = getelementptr inbounds [5 x [5 x double]]* %1065, i32 0, i64 1
  %1067 = getelementptr inbounds [5 x double]* %1066, i32 0, i64 1
  %1068 = load double* %1067, align 8
  %1069 = fmul double %1061, %1068
  %1070 = load double* @tmp1, align 8
  %1071 = load i32* %i, align 4
  %1072 = sub nsw i32 %1071, 1
  %1073 = sext i32 %1072 to i64
  %1074 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1073
  %1075 = getelementptr inbounds [5 x [5 x double]]* %1074, i32 0, i64 1
  %1076 = getelementptr inbounds [5 x double]* %1075, i32 0, i64 1
  %1077 = load double* %1076, align 8
  %1078 = fmul double %1070, %1077
  %1079 = fsub double %1069, %1078
  %1080 = load double* @tmp1, align 8
  %1081 = load double* @dx2, align 8
  %1082 = fmul double %1080, %1081
  %1083 = fsub double %1079, %1082
  %1084 = load i32* %i, align 4
  %1085 = sext i32 %1084 to i64
  %1086 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1085
  %1087 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1086, i32 0, i64 0
  %1088 = getelementptr inbounds [5 x [5 x double]]* %1087, i32 0, i64 1
  %1089 = getelementptr inbounds [5 x double]* %1088, i32 0, i64 1
  store double %1083, double* %1089, align 8
  %1090 = load double* @tmp2, align 8
  %1091 = fsub double -0.000000e+00, %1090
  %1092 = load i32* %i, align 4
  %1093 = sub nsw i32 %1092, 1
  %1094 = sext i32 %1093 to i64
  %1095 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1094
  %1096 = getelementptr inbounds [5 x [5 x double]]* %1095, i32 0, i64 2
  %1097 = getelementptr inbounds [5 x double]* %1096, i32 0, i64 1
  %1098 = load double* %1097, align 8
  %1099 = fmul double %1091, %1098
  %1100 = load double* @tmp1, align 8
  %1101 = load i32* %i, align 4
  %1102 = sub nsw i32 %1101, 1
  %1103 = sext i32 %1102 to i64
  %1104 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1103
  %1105 = getelementptr inbounds [5 x [5 x double]]* %1104, i32 0, i64 2
  %1106 = getelementptr inbounds [5 x double]* %1105, i32 0, i64 1
  %1107 = load double* %1106, align 8
  %1108 = fmul double %1100, %1107
  %1109 = fsub double %1099, %1108
  %1110 = load i32* %i, align 4
  %1111 = sext i32 %1110 to i64
  %1112 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1111
  %1113 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1112, i32 0, i64 0
  %1114 = getelementptr inbounds [5 x [5 x double]]* %1113, i32 0, i64 2
  %1115 = getelementptr inbounds [5 x double]* %1114, i32 0, i64 1
  store double %1109, double* %1115, align 8
  %1116 = load double* @tmp2, align 8
  %1117 = fsub double -0.000000e+00, %1116
  %1118 = load i32* %i, align 4
  %1119 = sub nsw i32 %1118, 1
  %1120 = sext i32 %1119 to i64
  %1121 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1120
  %1122 = getelementptr inbounds [5 x [5 x double]]* %1121, i32 0, i64 3
  %1123 = getelementptr inbounds [5 x double]* %1122, i32 0, i64 1
  %1124 = load double* %1123, align 8
  %1125 = fmul double %1117, %1124
  %1126 = load double* @tmp1, align 8
  %1127 = load i32* %i, align 4
  %1128 = sub nsw i32 %1127, 1
  %1129 = sext i32 %1128 to i64
  %1130 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1129
  %1131 = getelementptr inbounds [5 x [5 x double]]* %1130, i32 0, i64 3
  %1132 = getelementptr inbounds [5 x double]* %1131, i32 0, i64 1
  %1133 = load double* %1132, align 8
  %1134 = fmul double %1126, %1133
  %1135 = fsub double %1125, %1134
  %1136 = load i32* %i, align 4
  %1137 = sext i32 %1136 to i64
  %1138 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1137
  %1139 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1138, i32 0, i64 0
  %1140 = getelementptr inbounds [5 x [5 x double]]* %1139, i32 0, i64 3
  %1141 = getelementptr inbounds [5 x double]* %1140, i32 0, i64 1
  store double %1135, double* %1141, align 8
  %1142 = load double* @tmp2, align 8
  %1143 = fsub double -0.000000e+00, %1142
  %1144 = load i32* %i, align 4
  %1145 = sub nsw i32 %1144, 1
  %1146 = sext i32 %1145 to i64
  %1147 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1146
  %1148 = getelementptr inbounds [5 x [5 x double]]* %1147, i32 0, i64 4
  %1149 = getelementptr inbounds [5 x double]* %1148, i32 0, i64 1
  %1150 = load double* %1149, align 8
  %1151 = fmul double %1143, %1150
  %1152 = load double* @tmp1, align 8
  %1153 = load i32* %i, align 4
  %1154 = sub nsw i32 %1153, 1
  %1155 = sext i32 %1154 to i64
  %1156 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1155
  %1157 = getelementptr inbounds [5 x [5 x double]]* %1156, i32 0, i64 4
  %1158 = getelementptr inbounds [5 x double]* %1157, i32 0, i64 1
  %1159 = load double* %1158, align 8
  %1160 = fmul double %1152, %1159
  %1161 = fsub double %1151, %1160
  %1162 = load i32* %i, align 4
  %1163 = sext i32 %1162 to i64
  %1164 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1163
  %1165 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1164, i32 0, i64 0
  %1166 = getelementptr inbounds [5 x [5 x double]]* %1165, i32 0, i64 4
  %1167 = getelementptr inbounds [5 x double]* %1166, i32 0, i64 1
  store double %1161, double* %1167, align 8
  %1168 = load double* @tmp2, align 8
  %1169 = fsub double -0.000000e+00, %1168
  %1170 = load i32* %i, align 4
  %1171 = sub nsw i32 %1170, 1
  %1172 = sext i32 %1171 to i64
  %1173 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1172
  %1174 = getelementptr inbounds [5 x [5 x double]]* %1173, i32 0, i64 0
  %1175 = getelementptr inbounds [5 x double]* %1174, i32 0, i64 2
  %1176 = load double* %1175, align 8
  %1177 = fmul double %1169, %1176
  %1178 = load double* @tmp1, align 8
  %1179 = load i32* %i, align 4
  %1180 = sub nsw i32 %1179, 1
  %1181 = sext i32 %1180 to i64
  %1182 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1181
  %1183 = getelementptr inbounds [5 x [5 x double]]* %1182, i32 0, i64 0
  %1184 = getelementptr inbounds [5 x double]* %1183, i32 0, i64 2
  %1185 = load double* %1184, align 8
  %1186 = fmul double %1178, %1185
  %1187 = fsub double %1177, %1186
  %1188 = load i32* %i, align 4
  %1189 = sext i32 %1188 to i64
  %1190 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1189
  %1191 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1190, i32 0, i64 0
  %1192 = getelementptr inbounds [5 x [5 x double]]* %1191, i32 0, i64 0
  %1193 = getelementptr inbounds [5 x double]* %1192, i32 0, i64 2
  store double %1187, double* %1193, align 8
  %1194 = load double* @tmp2, align 8
  %1195 = fsub double -0.000000e+00, %1194
  %1196 = load i32* %i, align 4
  %1197 = sub nsw i32 %1196, 1
  %1198 = sext i32 %1197 to i64
  %1199 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1198
  %1200 = getelementptr inbounds [5 x [5 x double]]* %1199, i32 0, i64 1
  %1201 = getelementptr inbounds [5 x double]* %1200, i32 0, i64 2
  %1202 = load double* %1201, align 8
  %1203 = fmul double %1195, %1202
  %1204 = load double* @tmp1, align 8
  %1205 = load i32* %i, align 4
  %1206 = sub nsw i32 %1205, 1
  %1207 = sext i32 %1206 to i64
  %1208 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1207
  %1209 = getelementptr inbounds [5 x [5 x double]]* %1208, i32 0, i64 1
  %1210 = getelementptr inbounds [5 x double]* %1209, i32 0, i64 2
  %1211 = load double* %1210, align 8
  %1212 = fmul double %1204, %1211
  %1213 = fsub double %1203, %1212
  %1214 = load i32* %i, align 4
  %1215 = sext i32 %1214 to i64
  %1216 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1215
  %1217 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1216, i32 0, i64 0
  %1218 = getelementptr inbounds [5 x [5 x double]]* %1217, i32 0, i64 1
  %1219 = getelementptr inbounds [5 x double]* %1218, i32 0, i64 2
  store double %1213, double* %1219, align 8
  %1220 = load double* @tmp2, align 8
  %1221 = fsub double -0.000000e+00, %1220
  %1222 = load i32* %i, align 4
  %1223 = sub nsw i32 %1222, 1
  %1224 = sext i32 %1223 to i64
  %1225 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1224
  %1226 = getelementptr inbounds [5 x [5 x double]]* %1225, i32 0, i64 2
  %1227 = getelementptr inbounds [5 x double]* %1226, i32 0, i64 2
  %1228 = load double* %1227, align 8
  %1229 = fmul double %1221, %1228
  %1230 = load double* @tmp1, align 8
  %1231 = load i32* %i, align 4
  %1232 = sub nsw i32 %1231, 1
  %1233 = sext i32 %1232 to i64
  %1234 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1233
  %1235 = getelementptr inbounds [5 x [5 x double]]* %1234, i32 0, i64 2
  %1236 = getelementptr inbounds [5 x double]* %1235, i32 0, i64 2
  %1237 = load double* %1236, align 8
  %1238 = fmul double %1230, %1237
  %1239 = fsub double %1229, %1238
  %1240 = load double* @tmp1, align 8
  %1241 = load double* @dx3, align 8
  %1242 = fmul double %1240, %1241
  %1243 = fsub double %1239, %1242
  %1244 = load i32* %i, align 4
  %1245 = sext i32 %1244 to i64
  %1246 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1245
  %1247 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1246, i32 0, i64 0
  %1248 = getelementptr inbounds [5 x [5 x double]]* %1247, i32 0, i64 2
  %1249 = getelementptr inbounds [5 x double]* %1248, i32 0, i64 2
  store double %1243, double* %1249, align 8
  %1250 = load double* @tmp2, align 8
  %1251 = fsub double -0.000000e+00, %1250
  %1252 = load i32* %i, align 4
  %1253 = sub nsw i32 %1252, 1
  %1254 = sext i32 %1253 to i64
  %1255 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1254
  %1256 = getelementptr inbounds [5 x [5 x double]]* %1255, i32 0, i64 3
  %1257 = getelementptr inbounds [5 x double]* %1256, i32 0, i64 2
  %1258 = load double* %1257, align 8
  %1259 = fmul double %1251, %1258
  %1260 = load double* @tmp1, align 8
  %1261 = load i32* %i, align 4
  %1262 = sub nsw i32 %1261, 1
  %1263 = sext i32 %1262 to i64
  %1264 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1263
  %1265 = getelementptr inbounds [5 x [5 x double]]* %1264, i32 0, i64 3
  %1266 = getelementptr inbounds [5 x double]* %1265, i32 0, i64 2
  %1267 = load double* %1266, align 8
  %1268 = fmul double %1260, %1267
  %1269 = fsub double %1259, %1268
  %1270 = load i32* %i, align 4
  %1271 = sext i32 %1270 to i64
  %1272 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1271
  %1273 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1272, i32 0, i64 0
  %1274 = getelementptr inbounds [5 x [5 x double]]* %1273, i32 0, i64 3
  %1275 = getelementptr inbounds [5 x double]* %1274, i32 0, i64 2
  store double %1269, double* %1275, align 8
  %1276 = load double* @tmp2, align 8
  %1277 = fsub double -0.000000e+00, %1276
  %1278 = load i32* %i, align 4
  %1279 = sub nsw i32 %1278, 1
  %1280 = sext i32 %1279 to i64
  %1281 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1280
  %1282 = getelementptr inbounds [5 x [5 x double]]* %1281, i32 0, i64 4
  %1283 = getelementptr inbounds [5 x double]* %1282, i32 0, i64 2
  %1284 = load double* %1283, align 8
  %1285 = fmul double %1277, %1284
  %1286 = load double* @tmp1, align 8
  %1287 = load i32* %i, align 4
  %1288 = sub nsw i32 %1287, 1
  %1289 = sext i32 %1288 to i64
  %1290 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1289
  %1291 = getelementptr inbounds [5 x [5 x double]]* %1290, i32 0, i64 4
  %1292 = getelementptr inbounds [5 x double]* %1291, i32 0, i64 2
  %1293 = load double* %1292, align 8
  %1294 = fmul double %1286, %1293
  %1295 = fsub double %1285, %1294
  %1296 = load i32* %i, align 4
  %1297 = sext i32 %1296 to i64
  %1298 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1297
  %1299 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1298, i32 0, i64 0
  %1300 = getelementptr inbounds [5 x [5 x double]]* %1299, i32 0, i64 4
  %1301 = getelementptr inbounds [5 x double]* %1300, i32 0, i64 2
  store double %1295, double* %1301, align 8
  %1302 = load double* @tmp2, align 8
  %1303 = fsub double -0.000000e+00, %1302
  %1304 = load i32* %i, align 4
  %1305 = sub nsw i32 %1304, 1
  %1306 = sext i32 %1305 to i64
  %1307 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1306
  %1308 = getelementptr inbounds [5 x [5 x double]]* %1307, i32 0, i64 0
  %1309 = getelementptr inbounds [5 x double]* %1308, i32 0, i64 3
  %1310 = load double* %1309, align 8
  %1311 = fmul double %1303, %1310
  %1312 = load double* @tmp1, align 8
  %1313 = load i32* %i, align 4
  %1314 = sub nsw i32 %1313, 1
  %1315 = sext i32 %1314 to i64
  %1316 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1315
  %1317 = getelementptr inbounds [5 x [5 x double]]* %1316, i32 0, i64 0
  %1318 = getelementptr inbounds [5 x double]* %1317, i32 0, i64 3
  %1319 = load double* %1318, align 8
  %1320 = fmul double %1312, %1319
  %1321 = fsub double %1311, %1320
  %1322 = load i32* %i, align 4
  %1323 = sext i32 %1322 to i64
  %1324 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1323
  %1325 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1324, i32 0, i64 0
  %1326 = getelementptr inbounds [5 x [5 x double]]* %1325, i32 0, i64 0
  %1327 = getelementptr inbounds [5 x double]* %1326, i32 0, i64 3
  store double %1321, double* %1327, align 8
  %1328 = load double* @tmp2, align 8
  %1329 = fsub double -0.000000e+00, %1328
  %1330 = load i32* %i, align 4
  %1331 = sub nsw i32 %1330, 1
  %1332 = sext i32 %1331 to i64
  %1333 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1332
  %1334 = getelementptr inbounds [5 x [5 x double]]* %1333, i32 0, i64 1
  %1335 = getelementptr inbounds [5 x double]* %1334, i32 0, i64 3
  %1336 = load double* %1335, align 8
  %1337 = fmul double %1329, %1336
  %1338 = load double* @tmp1, align 8
  %1339 = load i32* %i, align 4
  %1340 = sub nsw i32 %1339, 1
  %1341 = sext i32 %1340 to i64
  %1342 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1341
  %1343 = getelementptr inbounds [5 x [5 x double]]* %1342, i32 0, i64 1
  %1344 = getelementptr inbounds [5 x double]* %1343, i32 0, i64 3
  %1345 = load double* %1344, align 8
  %1346 = fmul double %1338, %1345
  %1347 = fsub double %1337, %1346
  %1348 = load i32* %i, align 4
  %1349 = sext i32 %1348 to i64
  %1350 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1349
  %1351 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1350, i32 0, i64 0
  %1352 = getelementptr inbounds [5 x [5 x double]]* %1351, i32 0, i64 1
  %1353 = getelementptr inbounds [5 x double]* %1352, i32 0, i64 3
  store double %1347, double* %1353, align 8
  %1354 = load double* @tmp2, align 8
  %1355 = fsub double -0.000000e+00, %1354
  %1356 = load i32* %i, align 4
  %1357 = sub nsw i32 %1356, 1
  %1358 = sext i32 %1357 to i64
  %1359 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1358
  %1360 = getelementptr inbounds [5 x [5 x double]]* %1359, i32 0, i64 2
  %1361 = getelementptr inbounds [5 x double]* %1360, i32 0, i64 3
  %1362 = load double* %1361, align 8
  %1363 = fmul double %1355, %1362
  %1364 = load double* @tmp1, align 8
  %1365 = load i32* %i, align 4
  %1366 = sub nsw i32 %1365, 1
  %1367 = sext i32 %1366 to i64
  %1368 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1367
  %1369 = getelementptr inbounds [5 x [5 x double]]* %1368, i32 0, i64 2
  %1370 = getelementptr inbounds [5 x double]* %1369, i32 0, i64 3
  %1371 = load double* %1370, align 8
  %1372 = fmul double %1364, %1371
  %1373 = fsub double %1363, %1372
  %1374 = load i32* %i, align 4
  %1375 = sext i32 %1374 to i64
  %1376 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1375
  %1377 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1376, i32 0, i64 0
  %1378 = getelementptr inbounds [5 x [5 x double]]* %1377, i32 0, i64 2
  %1379 = getelementptr inbounds [5 x double]* %1378, i32 0, i64 3
  store double %1373, double* %1379, align 8
  %1380 = load double* @tmp2, align 8
  %1381 = fsub double -0.000000e+00, %1380
  %1382 = load i32* %i, align 4
  %1383 = sub nsw i32 %1382, 1
  %1384 = sext i32 %1383 to i64
  %1385 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1384
  %1386 = getelementptr inbounds [5 x [5 x double]]* %1385, i32 0, i64 3
  %1387 = getelementptr inbounds [5 x double]* %1386, i32 0, i64 3
  %1388 = load double* %1387, align 8
  %1389 = fmul double %1381, %1388
  %1390 = load double* @tmp1, align 8
  %1391 = load i32* %i, align 4
  %1392 = sub nsw i32 %1391, 1
  %1393 = sext i32 %1392 to i64
  %1394 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1393
  %1395 = getelementptr inbounds [5 x [5 x double]]* %1394, i32 0, i64 3
  %1396 = getelementptr inbounds [5 x double]* %1395, i32 0, i64 3
  %1397 = load double* %1396, align 8
  %1398 = fmul double %1390, %1397
  %1399 = fsub double %1389, %1398
  %1400 = load double* @tmp1, align 8
  %1401 = load double* @dx4, align 8
  %1402 = fmul double %1400, %1401
  %1403 = fsub double %1399, %1402
  %1404 = load i32* %i, align 4
  %1405 = sext i32 %1404 to i64
  %1406 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1405
  %1407 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1406, i32 0, i64 0
  %1408 = getelementptr inbounds [5 x [5 x double]]* %1407, i32 0, i64 3
  %1409 = getelementptr inbounds [5 x double]* %1408, i32 0, i64 3
  store double %1403, double* %1409, align 8
  %1410 = load double* @tmp2, align 8
  %1411 = fsub double -0.000000e+00, %1410
  %1412 = load i32* %i, align 4
  %1413 = sub nsw i32 %1412, 1
  %1414 = sext i32 %1413 to i64
  %1415 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1414
  %1416 = getelementptr inbounds [5 x [5 x double]]* %1415, i32 0, i64 4
  %1417 = getelementptr inbounds [5 x double]* %1416, i32 0, i64 3
  %1418 = load double* %1417, align 8
  %1419 = fmul double %1411, %1418
  %1420 = load double* @tmp1, align 8
  %1421 = load i32* %i, align 4
  %1422 = sub nsw i32 %1421, 1
  %1423 = sext i32 %1422 to i64
  %1424 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1423
  %1425 = getelementptr inbounds [5 x [5 x double]]* %1424, i32 0, i64 4
  %1426 = getelementptr inbounds [5 x double]* %1425, i32 0, i64 3
  %1427 = load double* %1426, align 8
  %1428 = fmul double %1420, %1427
  %1429 = fsub double %1419, %1428
  %1430 = load i32* %i, align 4
  %1431 = sext i32 %1430 to i64
  %1432 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1431
  %1433 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1432, i32 0, i64 0
  %1434 = getelementptr inbounds [5 x [5 x double]]* %1433, i32 0, i64 4
  %1435 = getelementptr inbounds [5 x double]* %1434, i32 0, i64 3
  store double %1429, double* %1435, align 8
  %1436 = load double* @tmp2, align 8
  %1437 = fsub double -0.000000e+00, %1436
  %1438 = load i32* %i, align 4
  %1439 = sub nsw i32 %1438, 1
  %1440 = sext i32 %1439 to i64
  %1441 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1440
  %1442 = getelementptr inbounds [5 x [5 x double]]* %1441, i32 0, i64 0
  %1443 = getelementptr inbounds [5 x double]* %1442, i32 0, i64 4
  %1444 = load double* %1443, align 8
  %1445 = fmul double %1437, %1444
  %1446 = load double* @tmp1, align 8
  %1447 = load i32* %i, align 4
  %1448 = sub nsw i32 %1447, 1
  %1449 = sext i32 %1448 to i64
  %1450 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1449
  %1451 = getelementptr inbounds [5 x [5 x double]]* %1450, i32 0, i64 0
  %1452 = getelementptr inbounds [5 x double]* %1451, i32 0, i64 4
  %1453 = load double* %1452, align 8
  %1454 = fmul double %1446, %1453
  %1455 = fsub double %1445, %1454
  %1456 = load i32* %i, align 4
  %1457 = sext i32 %1456 to i64
  %1458 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1457
  %1459 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1458, i32 0, i64 0
  %1460 = getelementptr inbounds [5 x [5 x double]]* %1459, i32 0, i64 0
  %1461 = getelementptr inbounds [5 x double]* %1460, i32 0, i64 4
  store double %1455, double* %1461, align 8
  %1462 = load double* @tmp2, align 8
  %1463 = fsub double -0.000000e+00, %1462
  %1464 = load i32* %i, align 4
  %1465 = sub nsw i32 %1464, 1
  %1466 = sext i32 %1465 to i64
  %1467 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1466
  %1468 = getelementptr inbounds [5 x [5 x double]]* %1467, i32 0, i64 1
  %1469 = getelementptr inbounds [5 x double]* %1468, i32 0, i64 4
  %1470 = load double* %1469, align 8
  %1471 = fmul double %1463, %1470
  %1472 = load double* @tmp1, align 8
  %1473 = load i32* %i, align 4
  %1474 = sub nsw i32 %1473, 1
  %1475 = sext i32 %1474 to i64
  %1476 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1475
  %1477 = getelementptr inbounds [5 x [5 x double]]* %1476, i32 0, i64 1
  %1478 = getelementptr inbounds [5 x double]* %1477, i32 0, i64 4
  %1479 = load double* %1478, align 8
  %1480 = fmul double %1472, %1479
  %1481 = fsub double %1471, %1480
  %1482 = load i32* %i, align 4
  %1483 = sext i32 %1482 to i64
  %1484 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1483
  %1485 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1484, i32 0, i64 0
  %1486 = getelementptr inbounds [5 x [5 x double]]* %1485, i32 0, i64 1
  %1487 = getelementptr inbounds [5 x double]* %1486, i32 0, i64 4
  store double %1481, double* %1487, align 8
  %1488 = load double* @tmp2, align 8
  %1489 = fsub double -0.000000e+00, %1488
  %1490 = load i32* %i, align 4
  %1491 = sub nsw i32 %1490, 1
  %1492 = sext i32 %1491 to i64
  %1493 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1492
  %1494 = getelementptr inbounds [5 x [5 x double]]* %1493, i32 0, i64 2
  %1495 = getelementptr inbounds [5 x double]* %1494, i32 0, i64 4
  %1496 = load double* %1495, align 8
  %1497 = fmul double %1489, %1496
  %1498 = load double* @tmp1, align 8
  %1499 = load i32* %i, align 4
  %1500 = sub nsw i32 %1499, 1
  %1501 = sext i32 %1500 to i64
  %1502 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1501
  %1503 = getelementptr inbounds [5 x [5 x double]]* %1502, i32 0, i64 2
  %1504 = getelementptr inbounds [5 x double]* %1503, i32 0, i64 4
  %1505 = load double* %1504, align 8
  %1506 = fmul double %1498, %1505
  %1507 = fsub double %1497, %1506
  %1508 = load i32* %i, align 4
  %1509 = sext i32 %1508 to i64
  %1510 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1509
  %1511 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1510, i32 0, i64 0
  %1512 = getelementptr inbounds [5 x [5 x double]]* %1511, i32 0, i64 2
  %1513 = getelementptr inbounds [5 x double]* %1512, i32 0, i64 4
  store double %1507, double* %1513, align 8
  %1514 = load double* @tmp2, align 8
  %1515 = fsub double -0.000000e+00, %1514
  %1516 = load i32* %i, align 4
  %1517 = sub nsw i32 %1516, 1
  %1518 = sext i32 %1517 to i64
  %1519 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1518
  %1520 = getelementptr inbounds [5 x [5 x double]]* %1519, i32 0, i64 3
  %1521 = getelementptr inbounds [5 x double]* %1520, i32 0, i64 4
  %1522 = load double* %1521, align 8
  %1523 = fmul double %1515, %1522
  %1524 = load double* @tmp1, align 8
  %1525 = load i32* %i, align 4
  %1526 = sub nsw i32 %1525, 1
  %1527 = sext i32 %1526 to i64
  %1528 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1527
  %1529 = getelementptr inbounds [5 x [5 x double]]* %1528, i32 0, i64 3
  %1530 = getelementptr inbounds [5 x double]* %1529, i32 0, i64 4
  %1531 = load double* %1530, align 8
  %1532 = fmul double %1524, %1531
  %1533 = fsub double %1523, %1532
  %1534 = load i32* %i, align 4
  %1535 = sext i32 %1534 to i64
  %1536 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1535
  %1537 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1536, i32 0, i64 0
  %1538 = getelementptr inbounds [5 x [5 x double]]* %1537, i32 0, i64 3
  %1539 = getelementptr inbounds [5 x double]* %1538, i32 0, i64 4
  store double %1533, double* %1539, align 8
  %1540 = load double* @tmp2, align 8
  %1541 = fsub double -0.000000e+00, %1540
  %1542 = load i32* %i, align 4
  %1543 = sub nsw i32 %1542, 1
  %1544 = sext i32 %1543 to i64
  %1545 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1544
  %1546 = getelementptr inbounds [5 x [5 x double]]* %1545, i32 0, i64 4
  %1547 = getelementptr inbounds [5 x double]* %1546, i32 0, i64 4
  %1548 = load double* %1547, align 8
  %1549 = fmul double %1541, %1548
  %1550 = load double* @tmp1, align 8
  %1551 = load i32* %i, align 4
  %1552 = sub nsw i32 %1551, 1
  %1553 = sext i32 %1552 to i64
  %1554 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1553
  %1555 = getelementptr inbounds [5 x [5 x double]]* %1554, i32 0, i64 4
  %1556 = getelementptr inbounds [5 x double]* %1555, i32 0, i64 4
  %1557 = load double* %1556, align 8
  %1558 = fmul double %1550, %1557
  %1559 = fsub double %1549, %1558
  %1560 = load double* @tmp1, align 8
  %1561 = load double* @dx5, align 8
  %1562 = fmul double %1560, %1561
  %1563 = fsub double %1559, %1562
  %1564 = load i32* %i, align 4
  %1565 = sext i32 %1564 to i64
  %1566 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1565
  %1567 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1566, i32 0, i64 0
  %1568 = getelementptr inbounds [5 x [5 x double]]* %1567, i32 0, i64 4
  %1569 = getelementptr inbounds [5 x double]* %1568, i32 0, i64 4
  store double %1563, double* %1569, align 8
  %1570 = load double* @tmp1, align 8
  %1571 = fmul double %1570, 2.000000e+00
  %1572 = load i32* %i, align 4
  %1573 = sext i32 %1572 to i64
  %1574 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1573
  %1575 = getelementptr inbounds [5 x [5 x double]]* %1574, i32 0, i64 0
  %1576 = getelementptr inbounds [5 x double]* %1575, i32 0, i64 0
  %1577 = load double* %1576, align 8
  %1578 = fmul double %1571, %1577
  %1579 = fadd double 1.000000e+00, %1578
  %1580 = load double* @tmp1, align 8
  %1581 = fmul double %1580, 2.000000e+00
  %1582 = load double* @dx1, align 8
  %1583 = fmul double %1581, %1582
  %1584 = fadd double %1579, %1583
  %1585 = load i32* %i, align 4
  %1586 = sext i32 %1585 to i64
  %1587 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1586
  %1588 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1587, i32 0, i64 1
  %1589 = getelementptr inbounds [5 x [5 x double]]* %1588, i32 0, i64 0
  %1590 = getelementptr inbounds [5 x double]* %1589, i32 0, i64 0
  store double %1584, double* %1590, align 8
  %1591 = load double* @tmp1, align 8
  %1592 = fmul double %1591, 2.000000e+00
  %1593 = load i32* %i, align 4
  %1594 = sext i32 %1593 to i64
  %1595 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1594
  %1596 = getelementptr inbounds [5 x [5 x double]]* %1595, i32 0, i64 1
  %1597 = getelementptr inbounds [5 x double]* %1596, i32 0, i64 0
  %1598 = load double* %1597, align 8
  %1599 = fmul double %1592, %1598
  %1600 = load i32* %i, align 4
  %1601 = sext i32 %1600 to i64
  %1602 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1601
  %1603 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1602, i32 0, i64 1
  %1604 = getelementptr inbounds [5 x [5 x double]]* %1603, i32 0, i64 1
  %1605 = getelementptr inbounds [5 x double]* %1604, i32 0, i64 0
  store double %1599, double* %1605, align 8
  %1606 = load double* @tmp1, align 8
  %1607 = fmul double %1606, 2.000000e+00
  %1608 = load i32* %i, align 4
  %1609 = sext i32 %1608 to i64
  %1610 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1609
  %1611 = getelementptr inbounds [5 x [5 x double]]* %1610, i32 0, i64 2
  %1612 = getelementptr inbounds [5 x double]* %1611, i32 0, i64 0
  %1613 = load double* %1612, align 8
  %1614 = fmul double %1607, %1613
  %1615 = load i32* %i, align 4
  %1616 = sext i32 %1615 to i64
  %1617 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1616
  %1618 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1617, i32 0, i64 1
  %1619 = getelementptr inbounds [5 x [5 x double]]* %1618, i32 0, i64 2
  %1620 = getelementptr inbounds [5 x double]* %1619, i32 0, i64 0
  store double %1614, double* %1620, align 8
  %1621 = load double* @tmp1, align 8
  %1622 = fmul double %1621, 2.000000e+00
  %1623 = load i32* %i, align 4
  %1624 = sext i32 %1623 to i64
  %1625 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1624
  %1626 = getelementptr inbounds [5 x [5 x double]]* %1625, i32 0, i64 3
  %1627 = getelementptr inbounds [5 x double]* %1626, i32 0, i64 0
  %1628 = load double* %1627, align 8
  %1629 = fmul double %1622, %1628
  %1630 = load i32* %i, align 4
  %1631 = sext i32 %1630 to i64
  %1632 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1631
  %1633 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1632, i32 0, i64 1
  %1634 = getelementptr inbounds [5 x [5 x double]]* %1633, i32 0, i64 3
  %1635 = getelementptr inbounds [5 x double]* %1634, i32 0, i64 0
  store double %1629, double* %1635, align 8
  %1636 = load double* @tmp1, align 8
  %1637 = fmul double %1636, 2.000000e+00
  %1638 = load i32* %i, align 4
  %1639 = sext i32 %1638 to i64
  %1640 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1639
  %1641 = getelementptr inbounds [5 x [5 x double]]* %1640, i32 0, i64 4
  %1642 = getelementptr inbounds [5 x double]* %1641, i32 0, i64 0
  %1643 = load double* %1642, align 8
  %1644 = fmul double %1637, %1643
  %1645 = load i32* %i, align 4
  %1646 = sext i32 %1645 to i64
  %1647 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1646
  %1648 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1647, i32 0, i64 1
  %1649 = getelementptr inbounds [5 x [5 x double]]* %1648, i32 0, i64 4
  %1650 = getelementptr inbounds [5 x double]* %1649, i32 0, i64 0
  store double %1644, double* %1650, align 8
  %1651 = load double* @tmp1, align 8
  %1652 = fmul double %1651, 2.000000e+00
  %1653 = load i32* %i, align 4
  %1654 = sext i32 %1653 to i64
  %1655 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1654
  %1656 = getelementptr inbounds [5 x [5 x double]]* %1655, i32 0, i64 0
  %1657 = getelementptr inbounds [5 x double]* %1656, i32 0, i64 1
  %1658 = load double* %1657, align 8
  %1659 = fmul double %1652, %1658
  %1660 = load i32* %i, align 4
  %1661 = sext i32 %1660 to i64
  %1662 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1661
  %1663 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1662, i32 0, i64 1
  %1664 = getelementptr inbounds [5 x [5 x double]]* %1663, i32 0, i64 0
  %1665 = getelementptr inbounds [5 x double]* %1664, i32 0, i64 1
  store double %1659, double* %1665, align 8
  %1666 = load double* @tmp1, align 8
  %1667 = fmul double %1666, 2.000000e+00
  %1668 = load i32* %i, align 4
  %1669 = sext i32 %1668 to i64
  %1670 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1669
  %1671 = getelementptr inbounds [5 x [5 x double]]* %1670, i32 0, i64 1
  %1672 = getelementptr inbounds [5 x double]* %1671, i32 0, i64 1
  %1673 = load double* %1672, align 8
  %1674 = fmul double %1667, %1673
  %1675 = fadd double 1.000000e+00, %1674
  %1676 = load double* @tmp1, align 8
  %1677 = fmul double %1676, 2.000000e+00
  %1678 = load double* @dx2, align 8
  %1679 = fmul double %1677, %1678
  %1680 = fadd double %1675, %1679
  %1681 = load i32* %i, align 4
  %1682 = sext i32 %1681 to i64
  %1683 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1682
  %1684 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1683, i32 0, i64 1
  %1685 = getelementptr inbounds [5 x [5 x double]]* %1684, i32 0, i64 1
  %1686 = getelementptr inbounds [5 x double]* %1685, i32 0, i64 1
  store double %1680, double* %1686, align 8
  %1687 = load double* @tmp1, align 8
  %1688 = fmul double %1687, 2.000000e+00
  %1689 = load i32* %i, align 4
  %1690 = sext i32 %1689 to i64
  %1691 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1690
  %1692 = getelementptr inbounds [5 x [5 x double]]* %1691, i32 0, i64 2
  %1693 = getelementptr inbounds [5 x double]* %1692, i32 0, i64 1
  %1694 = load double* %1693, align 8
  %1695 = fmul double %1688, %1694
  %1696 = load i32* %i, align 4
  %1697 = sext i32 %1696 to i64
  %1698 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1697
  %1699 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1698, i32 0, i64 1
  %1700 = getelementptr inbounds [5 x [5 x double]]* %1699, i32 0, i64 2
  %1701 = getelementptr inbounds [5 x double]* %1700, i32 0, i64 1
  store double %1695, double* %1701, align 8
  %1702 = load double* @tmp1, align 8
  %1703 = fmul double %1702, 2.000000e+00
  %1704 = load i32* %i, align 4
  %1705 = sext i32 %1704 to i64
  %1706 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1705
  %1707 = getelementptr inbounds [5 x [5 x double]]* %1706, i32 0, i64 3
  %1708 = getelementptr inbounds [5 x double]* %1707, i32 0, i64 1
  %1709 = load double* %1708, align 8
  %1710 = fmul double %1703, %1709
  %1711 = load i32* %i, align 4
  %1712 = sext i32 %1711 to i64
  %1713 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1712
  %1714 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1713, i32 0, i64 1
  %1715 = getelementptr inbounds [5 x [5 x double]]* %1714, i32 0, i64 3
  %1716 = getelementptr inbounds [5 x double]* %1715, i32 0, i64 1
  store double %1710, double* %1716, align 8
  %1717 = load double* @tmp1, align 8
  %1718 = fmul double %1717, 2.000000e+00
  %1719 = load i32* %i, align 4
  %1720 = sext i32 %1719 to i64
  %1721 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1720
  %1722 = getelementptr inbounds [5 x [5 x double]]* %1721, i32 0, i64 4
  %1723 = getelementptr inbounds [5 x double]* %1722, i32 0, i64 1
  %1724 = load double* %1723, align 8
  %1725 = fmul double %1718, %1724
  %1726 = load i32* %i, align 4
  %1727 = sext i32 %1726 to i64
  %1728 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1727
  %1729 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1728, i32 0, i64 1
  %1730 = getelementptr inbounds [5 x [5 x double]]* %1729, i32 0, i64 4
  %1731 = getelementptr inbounds [5 x double]* %1730, i32 0, i64 1
  store double %1725, double* %1731, align 8
  %1732 = load double* @tmp1, align 8
  %1733 = fmul double %1732, 2.000000e+00
  %1734 = load i32* %i, align 4
  %1735 = sext i32 %1734 to i64
  %1736 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1735
  %1737 = getelementptr inbounds [5 x [5 x double]]* %1736, i32 0, i64 0
  %1738 = getelementptr inbounds [5 x double]* %1737, i32 0, i64 2
  %1739 = load double* %1738, align 8
  %1740 = fmul double %1733, %1739
  %1741 = load i32* %i, align 4
  %1742 = sext i32 %1741 to i64
  %1743 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1742
  %1744 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1743, i32 0, i64 1
  %1745 = getelementptr inbounds [5 x [5 x double]]* %1744, i32 0, i64 0
  %1746 = getelementptr inbounds [5 x double]* %1745, i32 0, i64 2
  store double %1740, double* %1746, align 8
  %1747 = load double* @tmp1, align 8
  %1748 = fmul double %1747, 2.000000e+00
  %1749 = load i32* %i, align 4
  %1750 = sext i32 %1749 to i64
  %1751 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1750
  %1752 = getelementptr inbounds [5 x [5 x double]]* %1751, i32 0, i64 1
  %1753 = getelementptr inbounds [5 x double]* %1752, i32 0, i64 2
  %1754 = load double* %1753, align 8
  %1755 = fmul double %1748, %1754
  %1756 = load i32* %i, align 4
  %1757 = sext i32 %1756 to i64
  %1758 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1757
  %1759 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1758, i32 0, i64 1
  %1760 = getelementptr inbounds [5 x [5 x double]]* %1759, i32 0, i64 1
  %1761 = getelementptr inbounds [5 x double]* %1760, i32 0, i64 2
  store double %1755, double* %1761, align 8
  %1762 = load double* @tmp1, align 8
  %1763 = fmul double %1762, 2.000000e+00
  %1764 = load i32* %i, align 4
  %1765 = sext i32 %1764 to i64
  %1766 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1765
  %1767 = getelementptr inbounds [5 x [5 x double]]* %1766, i32 0, i64 2
  %1768 = getelementptr inbounds [5 x double]* %1767, i32 0, i64 2
  %1769 = load double* %1768, align 8
  %1770 = fmul double %1763, %1769
  %1771 = fadd double 1.000000e+00, %1770
  %1772 = load double* @tmp1, align 8
  %1773 = fmul double %1772, 2.000000e+00
  %1774 = load double* @dx3, align 8
  %1775 = fmul double %1773, %1774
  %1776 = fadd double %1771, %1775
  %1777 = load i32* %i, align 4
  %1778 = sext i32 %1777 to i64
  %1779 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1778
  %1780 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1779, i32 0, i64 1
  %1781 = getelementptr inbounds [5 x [5 x double]]* %1780, i32 0, i64 2
  %1782 = getelementptr inbounds [5 x double]* %1781, i32 0, i64 2
  store double %1776, double* %1782, align 8
  %1783 = load double* @tmp1, align 8
  %1784 = fmul double %1783, 2.000000e+00
  %1785 = load i32* %i, align 4
  %1786 = sext i32 %1785 to i64
  %1787 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1786
  %1788 = getelementptr inbounds [5 x [5 x double]]* %1787, i32 0, i64 3
  %1789 = getelementptr inbounds [5 x double]* %1788, i32 0, i64 2
  %1790 = load double* %1789, align 8
  %1791 = fmul double %1784, %1790
  %1792 = load i32* %i, align 4
  %1793 = sext i32 %1792 to i64
  %1794 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1793
  %1795 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1794, i32 0, i64 1
  %1796 = getelementptr inbounds [5 x [5 x double]]* %1795, i32 0, i64 3
  %1797 = getelementptr inbounds [5 x double]* %1796, i32 0, i64 2
  store double %1791, double* %1797, align 8
  %1798 = load double* @tmp1, align 8
  %1799 = fmul double %1798, 2.000000e+00
  %1800 = load i32* %i, align 4
  %1801 = sext i32 %1800 to i64
  %1802 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1801
  %1803 = getelementptr inbounds [5 x [5 x double]]* %1802, i32 0, i64 4
  %1804 = getelementptr inbounds [5 x double]* %1803, i32 0, i64 2
  %1805 = load double* %1804, align 8
  %1806 = fmul double %1799, %1805
  %1807 = load i32* %i, align 4
  %1808 = sext i32 %1807 to i64
  %1809 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1808
  %1810 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1809, i32 0, i64 1
  %1811 = getelementptr inbounds [5 x [5 x double]]* %1810, i32 0, i64 4
  %1812 = getelementptr inbounds [5 x double]* %1811, i32 0, i64 2
  store double %1806, double* %1812, align 8
  %1813 = load double* @tmp1, align 8
  %1814 = fmul double %1813, 2.000000e+00
  %1815 = load i32* %i, align 4
  %1816 = sext i32 %1815 to i64
  %1817 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1816
  %1818 = getelementptr inbounds [5 x [5 x double]]* %1817, i32 0, i64 0
  %1819 = getelementptr inbounds [5 x double]* %1818, i32 0, i64 3
  %1820 = load double* %1819, align 8
  %1821 = fmul double %1814, %1820
  %1822 = load i32* %i, align 4
  %1823 = sext i32 %1822 to i64
  %1824 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1823
  %1825 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1824, i32 0, i64 1
  %1826 = getelementptr inbounds [5 x [5 x double]]* %1825, i32 0, i64 0
  %1827 = getelementptr inbounds [5 x double]* %1826, i32 0, i64 3
  store double %1821, double* %1827, align 8
  %1828 = load double* @tmp1, align 8
  %1829 = fmul double %1828, 2.000000e+00
  %1830 = load i32* %i, align 4
  %1831 = sext i32 %1830 to i64
  %1832 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1831
  %1833 = getelementptr inbounds [5 x [5 x double]]* %1832, i32 0, i64 1
  %1834 = getelementptr inbounds [5 x double]* %1833, i32 0, i64 3
  %1835 = load double* %1834, align 8
  %1836 = fmul double %1829, %1835
  %1837 = load i32* %i, align 4
  %1838 = sext i32 %1837 to i64
  %1839 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1838
  %1840 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1839, i32 0, i64 1
  %1841 = getelementptr inbounds [5 x [5 x double]]* %1840, i32 0, i64 1
  %1842 = getelementptr inbounds [5 x double]* %1841, i32 0, i64 3
  store double %1836, double* %1842, align 8
  %1843 = load double* @tmp1, align 8
  %1844 = fmul double %1843, 2.000000e+00
  %1845 = load i32* %i, align 4
  %1846 = sext i32 %1845 to i64
  %1847 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1846
  %1848 = getelementptr inbounds [5 x [5 x double]]* %1847, i32 0, i64 2
  %1849 = getelementptr inbounds [5 x double]* %1848, i32 0, i64 3
  %1850 = load double* %1849, align 8
  %1851 = fmul double %1844, %1850
  %1852 = load i32* %i, align 4
  %1853 = sext i32 %1852 to i64
  %1854 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1853
  %1855 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1854, i32 0, i64 1
  %1856 = getelementptr inbounds [5 x [5 x double]]* %1855, i32 0, i64 2
  %1857 = getelementptr inbounds [5 x double]* %1856, i32 0, i64 3
  store double %1851, double* %1857, align 8
  %1858 = load double* @tmp1, align 8
  %1859 = fmul double %1858, 2.000000e+00
  %1860 = load i32* %i, align 4
  %1861 = sext i32 %1860 to i64
  %1862 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1861
  %1863 = getelementptr inbounds [5 x [5 x double]]* %1862, i32 0, i64 3
  %1864 = getelementptr inbounds [5 x double]* %1863, i32 0, i64 3
  %1865 = load double* %1864, align 8
  %1866 = fmul double %1859, %1865
  %1867 = fadd double 1.000000e+00, %1866
  %1868 = load double* @tmp1, align 8
  %1869 = fmul double %1868, 2.000000e+00
  %1870 = load double* @dx4, align 8
  %1871 = fmul double %1869, %1870
  %1872 = fadd double %1867, %1871
  %1873 = load i32* %i, align 4
  %1874 = sext i32 %1873 to i64
  %1875 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1874
  %1876 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1875, i32 0, i64 1
  %1877 = getelementptr inbounds [5 x [5 x double]]* %1876, i32 0, i64 3
  %1878 = getelementptr inbounds [5 x double]* %1877, i32 0, i64 3
  store double %1872, double* %1878, align 8
  %1879 = load double* @tmp1, align 8
  %1880 = fmul double %1879, 2.000000e+00
  %1881 = load i32* %i, align 4
  %1882 = sext i32 %1881 to i64
  %1883 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1882
  %1884 = getelementptr inbounds [5 x [5 x double]]* %1883, i32 0, i64 4
  %1885 = getelementptr inbounds [5 x double]* %1884, i32 0, i64 3
  %1886 = load double* %1885, align 8
  %1887 = fmul double %1880, %1886
  %1888 = load i32* %i, align 4
  %1889 = sext i32 %1888 to i64
  %1890 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1889
  %1891 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1890, i32 0, i64 1
  %1892 = getelementptr inbounds [5 x [5 x double]]* %1891, i32 0, i64 4
  %1893 = getelementptr inbounds [5 x double]* %1892, i32 0, i64 3
  store double %1887, double* %1893, align 8
  %1894 = load double* @tmp1, align 8
  %1895 = fmul double %1894, 2.000000e+00
  %1896 = load i32* %i, align 4
  %1897 = sext i32 %1896 to i64
  %1898 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1897
  %1899 = getelementptr inbounds [5 x [5 x double]]* %1898, i32 0, i64 0
  %1900 = getelementptr inbounds [5 x double]* %1899, i32 0, i64 4
  %1901 = load double* %1900, align 8
  %1902 = fmul double %1895, %1901
  %1903 = load i32* %i, align 4
  %1904 = sext i32 %1903 to i64
  %1905 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1904
  %1906 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1905, i32 0, i64 1
  %1907 = getelementptr inbounds [5 x [5 x double]]* %1906, i32 0, i64 0
  %1908 = getelementptr inbounds [5 x double]* %1907, i32 0, i64 4
  store double %1902, double* %1908, align 8
  %1909 = load double* @tmp1, align 8
  %1910 = fmul double %1909, 2.000000e+00
  %1911 = load i32* %i, align 4
  %1912 = sext i32 %1911 to i64
  %1913 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1912
  %1914 = getelementptr inbounds [5 x [5 x double]]* %1913, i32 0, i64 1
  %1915 = getelementptr inbounds [5 x double]* %1914, i32 0, i64 4
  %1916 = load double* %1915, align 8
  %1917 = fmul double %1910, %1916
  %1918 = load i32* %i, align 4
  %1919 = sext i32 %1918 to i64
  %1920 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1919
  %1921 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1920, i32 0, i64 1
  %1922 = getelementptr inbounds [5 x [5 x double]]* %1921, i32 0, i64 1
  %1923 = getelementptr inbounds [5 x double]* %1922, i32 0, i64 4
  store double %1917, double* %1923, align 8
  %1924 = load double* @tmp1, align 8
  %1925 = fmul double %1924, 2.000000e+00
  %1926 = load i32* %i, align 4
  %1927 = sext i32 %1926 to i64
  %1928 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1927
  %1929 = getelementptr inbounds [5 x [5 x double]]* %1928, i32 0, i64 2
  %1930 = getelementptr inbounds [5 x double]* %1929, i32 0, i64 4
  %1931 = load double* %1930, align 8
  %1932 = fmul double %1925, %1931
  %1933 = load i32* %i, align 4
  %1934 = sext i32 %1933 to i64
  %1935 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1934
  %1936 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1935, i32 0, i64 1
  %1937 = getelementptr inbounds [5 x [5 x double]]* %1936, i32 0, i64 2
  %1938 = getelementptr inbounds [5 x double]* %1937, i32 0, i64 4
  store double %1932, double* %1938, align 8
  %1939 = load double* @tmp1, align 8
  %1940 = fmul double %1939, 2.000000e+00
  %1941 = load i32* %i, align 4
  %1942 = sext i32 %1941 to i64
  %1943 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1942
  %1944 = getelementptr inbounds [5 x [5 x double]]* %1943, i32 0, i64 3
  %1945 = getelementptr inbounds [5 x double]* %1944, i32 0, i64 4
  %1946 = load double* %1945, align 8
  %1947 = fmul double %1940, %1946
  %1948 = load i32* %i, align 4
  %1949 = sext i32 %1948 to i64
  %1950 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1949
  %1951 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1950, i32 0, i64 1
  %1952 = getelementptr inbounds [5 x [5 x double]]* %1951, i32 0, i64 3
  %1953 = getelementptr inbounds [5 x double]* %1952, i32 0, i64 4
  store double %1947, double* %1953, align 8
  %1954 = load double* @tmp1, align 8
  %1955 = fmul double %1954, 2.000000e+00
  %1956 = load i32* %i, align 4
  %1957 = sext i32 %1956 to i64
  %1958 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1957
  %1959 = getelementptr inbounds [5 x [5 x double]]* %1958, i32 0, i64 4
  %1960 = getelementptr inbounds [5 x double]* %1959, i32 0, i64 4
  %1961 = load double* %1960, align 8
  %1962 = fmul double %1955, %1961
  %1963 = fadd double 1.000000e+00, %1962
  %1964 = load double* @tmp1, align 8
  %1965 = fmul double %1964, 2.000000e+00
  %1966 = load double* @dx5, align 8
  %1967 = fmul double %1965, %1966
  %1968 = fadd double %1963, %1967
  %1969 = load i32* %i, align 4
  %1970 = sext i32 %1969 to i64
  %1971 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1970
  %1972 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1971, i32 0, i64 1
  %1973 = getelementptr inbounds [5 x [5 x double]]* %1972, i32 0, i64 4
  %1974 = getelementptr inbounds [5 x double]* %1973, i32 0, i64 4
  store double %1968, double* %1974, align 8
  %1975 = load double* @tmp2, align 8
  %1976 = load i32* %i, align 4
  %1977 = add nsw i32 %1976, 1
  %1978 = sext i32 %1977 to i64
  %1979 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1978
  %1980 = getelementptr inbounds [5 x [5 x double]]* %1979, i32 0, i64 0
  %1981 = getelementptr inbounds [5 x double]* %1980, i32 0, i64 0
  %1982 = load double* %1981, align 8
  %1983 = fmul double %1975, %1982
  %1984 = load double* @tmp1, align 8
  %1985 = load i32* %i, align 4
  %1986 = add nsw i32 %1985, 1
  %1987 = sext i32 %1986 to i64
  %1988 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1987
  %1989 = getelementptr inbounds [5 x [5 x double]]* %1988, i32 0, i64 0
  %1990 = getelementptr inbounds [5 x double]* %1989, i32 0, i64 0
  %1991 = load double* %1990, align 8
  %1992 = fmul double %1984, %1991
  %1993 = fsub double %1983, %1992
  %1994 = load double* @tmp1, align 8
  %1995 = load double* @dx1, align 8
  %1996 = fmul double %1994, %1995
  %1997 = fsub double %1993, %1996
  %1998 = load i32* %i, align 4
  %1999 = sext i32 %1998 to i64
  %2000 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1999
  %2001 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2000, i32 0, i64 2
  %2002 = getelementptr inbounds [5 x [5 x double]]* %2001, i32 0, i64 0
  %2003 = getelementptr inbounds [5 x double]* %2002, i32 0, i64 0
  store double %1997, double* %2003, align 8
  %2004 = load double* @tmp2, align 8
  %2005 = load i32* %i, align 4
  %2006 = add nsw i32 %2005, 1
  %2007 = sext i32 %2006 to i64
  %2008 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2007
  %2009 = getelementptr inbounds [5 x [5 x double]]* %2008, i32 0, i64 1
  %2010 = getelementptr inbounds [5 x double]* %2009, i32 0, i64 0
  %2011 = load double* %2010, align 8
  %2012 = fmul double %2004, %2011
  %2013 = load double* @tmp1, align 8
  %2014 = load i32* %i, align 4
  %2015 = add nsw i32 %2014, 1
  %2016 = sext i32 %2015 to i64
  %2017 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2016
  %2018 = getelementptr inbounds [5 x [5 x double]]* %2017, i32 0, i64 1
  %2019 = getelementptr inbounds [5 x double]* %2018, i32 0, i64 0
  %2020 = load double* %2019, align 8
  %2021 = fmul double %2013, %2020
  %2022 = fsub double %2012, %2021
  %2023 = load i32* %i, align 4
  %2024 = sext i32 %2023 to i64
  %2025 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2024
  %2026 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2025, i32 0, i64 2
  %2027 = getelementptr inbounds [5 x [5 x double]]* %2026, i32 0, i64 1
  %2028 = getelementptr inbounds [5 x double]* %2027, i32 0, i64 0
  store double %2022, double* %2028, align 8
  %2029 = load double* @tmp2, align 8
  %2030 = load i32* %i, align 4
  %2031 = add nsw i32 %2030, 1
  %2032 = sext i32 %2031 to i64
  %2033 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2032
  %2034 = getelementptr inbounds [5 x [5 x double]]* %2033, i32 0, i64 2
  %2035 = getelementptr inbounds [5 x double]* %2034, i32 0, i64 0
  %2036 = load double* %2035, align 8
  %2037 = fmul double %2029, %2036
  %2038 = load double* @tmp1, align 8
  %2039 = load i32* %i, align 4
  %2040 = add nsw i32 %2039, 1
  %2041 = sext i32 %2040 to i64
  %2042 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2041
  %2043 = getelementptr inbounds [5 x [5 x double]]* %2042, i32 0, i64 2
  %2044 = getelementptr inbounds [5 x double]* %2043, i32 0, i64 0
  %2045 = load double* %2044, align 8
  %2046 = fmul double %2038, %2045
  %2047 = fsub double %2037, %2046
  %2048 = load i32* %i, align 4
  %2049 = sext i32 %2048 to i64
  %2050 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2049
  %2051 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2050, i32 0, i64 2
  %2052 = getelementptr inbounds [5 x [5 x double]]* %2051, i32 0, i64 2
  %2053 = getelementptr inbounds [5 x double]* %2052, i32 0, i64 0
  store double %2047, double* %2053, align 8
  %2054 = load double* @tmp2, align 8
  %2055 = load i32* %i, align 4
  %2056 = add nsw i32 %2055, 1
  %2057 = sext i32 %2056 to i64
  %2058 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2057
  %2059 = getelementptr inbounds [5 x [5 x double]]* %2058, i32 0, i64 3
  %2060 = getelementptr inbounds [5 x double]* %2059, i32 0, i64 0
  %2061 = load double* %2060, align 8
  %2062 = fmul double %2054, %2061
  %2063 = load double* @tmp1, align 8
  %2064 = load i32* %i, align 4
  %2065 = add nsw i32 %2064, 1
  %2066 = sext i32 %2065 to i64
  %2067 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2066
  %2068 = getelementptr inbounds [5 x [5 x double]]* %2067, i32 0, i64 3
  %2069 = getelementptr inbounds [5 x double]* %2068, i32 0, i64 0
  %2070 = load double* %2069, align 8
  %2071 = fmul double %2063, %2070
  %2072 = fsub double %2062, %2071
  %2073 = load i32* %i, align 4
  %2074 = sext i32 %2073 to i64
  %2075 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2074
  %2076 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2075, i32 0, i64 2
  %2077 = getelementptr inbounds [5 x [5 x double]]* %2076, i32 0, i64 3
  %2078 = getelementptr inbounds [5 x double]* %2077, i32 0, i64 0
  store double %2072, double* %2078, align 8
  %2079 = load double* @tmp2, align 8
  %2080 = load i32* %i, align 4
  %2081 = add nsw i32 %2080, 1
  %2082 = sext i32 %2081 to i64
  %2083 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2082
  %2084 = getelementptr inbounds [5 x [5 x double]]* %2083, i32 0, i64 4
  %2085 = getelementptr inbounds [5 x double]* %2084, i32 0, i64 0
  %2086 = load double* %2085, align 8
  %2087 = fmul double %2079, %2086
  %2088 = load double* @tmp1, align 8
  %2089 = load i32* %i, align 4
  %2090 = add nsw i32 %2089, 1
  %2091 = sext i32 %2090 to i64
  %2092 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2091
  %2093 = getelementptr inbounds [5 x [5 x double]]* %2092, i32 0, i64 4
  %2094 = getelementptr inbounds [5 x double]* %2093, i32 0, i64 0
  %2095 = load double* %2094, align 8
  %2096 = fmul double %2088, %2095
  %2097 = fsub double %2087, %2096
  %2098 = load i32* %i, align 4
  %2099 = sext i32 %2098 to i64
  %2100 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2099
  %2101 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2100, i32 0, i64 2
  %2102 = getelementptr inbounds [5 x [5 x double]]* %2101, i32 0, i64 4
  %2103 = getelementptr inbounds [5 x double]* %2102, i32 0, i64 0
  store double %2097, double* %2103, align 8
  %2104 = load double* @tmp2, align 8
  %2105 = load i32* %i, align 4
  %2106 = add nsw i32 %2105, 1
  %2107 = sext i32 %2106 to i64
  %2108 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2107
  %2109 = getelementptr inbounds [5 x [5 x double]]* %2108, i32 0, i64 0
  %2110 = getelementptr inbounds [5 x double]* %2109, i32 0, i64 1
  %2111 = load double* %2110, align 8
  %2112 = fmul double %2104, %2111
  %2113 = load double* @tmp1, align 8
  %2114 = load i32* %i, align 4
  %2115 = add nsw i32 %2114, 1
  %2116 = sext i32 %2115 to i64
  %2117 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2116
  %2118 = getelementptr inbounds [5 x [5 x double]]* %2117, i32 0, i64 0
  %2119 = getelementptr inbounds [5 x double]* %2118, i32 0, i64 1
  %2120 = load double* %2119, align 8
  %2121 = fmul double %2113, %2120
  %2122 = fsub double %2112, %2121
  %2123 = load i32* %i, align 4
  %2124 = sext i32 %2123 to i64
  %2125 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2124
  %2126 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2125, i32 0, i64 2
  %2127 = getelementptr inbounds [5 x [5 x double]]* %2126, i32 0, i64 0
  %2128 = getelementptr inbounds [5 x double]* %2127, i32 0, i64 1
  store double %2122, double* %2128, align 8
  %2129 = load double* @tmp2, align 8
  %2130 = load i32* %i, align 4
  %2131 = add nsw i32 %2130, 1
  %2132 = sext i32 %2131 to i64
  %2133 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2132
  %2134 = getelementptr inbounds [5 x [5 x double]]* %2133, i32 0, i64 1
  %2135 = getelementptr inbounds [5 x double]* %2134, i32 0, i64 1
  %2136 = load double* %2135, align 8
  %2137 = fmul double %2129, %2136
  %2138 = load double* @tmp1, align 8
  %2139 = load i32* %i, align 4
  %2140 = add nsw i32 %2139, 1
  %2141 = sext i32 %2140 to i64
  %2142 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2141
  %2143 = getelementptr inbounds [5 x [5 x double]]* %2142, i32 0, i64 1
  %2144 = getelementptr inbounds [5 x double]* %2143, i32 0, i64 1
  %2145 = load double* %2144, align 8
  %2146 = fmul double %2138, %2145
  %2147 = fsub double %2137, %2146
  %2148 = load double* @tmp1, align 8
  %2149 = load double* @dx2, align 8
  %2150 = fmul double %2148, %2149
  %2151 = fsub double %2147, %2150
  %2152 = load i32* %i, align 4
  %2153 = sext i32 %2152 to i64
  %2154 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2153
  %2155 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2154, i32 0, i64 2
  %2156 = getelementptr inbounds [5 x [5 x double]]* %2155, i32 0, i64 1
  %2157 = getelementptr inbounds [5 x double]* %2156, i32 0, i64 1
  store double %2151, double* %2157, align 8
  %2158 = load double* @tmp2, align 8
  %2159 = load i32* %i, align 4
  %2160 = add nsw i32 %2159, 1
  %2161 = sext i32 %2160 to i64
  %2162 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2161
  %2163 = getelementptr inbounds [5 x [5 x double]]* %2162, i32 0, i64 2
  %2164 = getelementptr inbounds [5 x double]* %2163, i32 0, i64 1
  %2165 = load double* %2164, align 8
  %2166 = fmul double %2158, %2165
  %2167 = load double* @tmp1, align 8
  %2168 = load i32* %i, align 4
  %2169 = add nsw i32 %2168, 1
  %2170 = sext i32 %2169 to i64
  %2171 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2170
  %2172 = getelementptr inbounds [5 x [5 x double]]* %2171, i32 0, i64 2
  %2173 = getelementptr inbounds [5 x double]* %2172, i32 0, i64 1
  %2174 = load double* %2173, align 8
  %2175 = fmul double %2167, %2174
  %2176 = fsub double %2166, %2175
  %2177 = load i32* %i, align 4
  %2178 = sext i32 %2177 to i64
  %2179 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2178
  %2180 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2179, i32 0, i64 2
  %2181 = getelementptr inbounds [5 x [5 x double]]* %2180, i32 0, i64 2
  %2182 = getelementptr inbounds [5 x double]* %2181, i32 0, i64 1
  store double %2176, double* %2182, align 8
  %2183 = load double* @tmp2, align 8
  %2184 = load i32* %i, align 4
  %2185 = add nsw i32 %2184, 1
  %2186 = sext i32 %2185 to i64
  %2187 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2186
  %2188 = getelementptr inbounds [5 x [5 x double]]* %2187, i32 0, i64 3
  %2189 = getelementptr inbounds [5 x double]* %2188, i32 0, i64 1
  %2190 = load double* %2189, align 8
  %2191 = fmul double %2183, %2190
  %2192 = load double* @tmp1, align 8
  %2193 = load i32* %i, align 4
  %2194 = add nsw i32 %2193, 1
  %2195 = sext i32 %2194 to i64
  %2196 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2195
  %2197 = getelementptr inbounds [5 x [5 x double]]* %2196, i32 0, i64 3
  %2198 = getelementptr inbounds [5 x double]* %2197, i32 0, i64 1
  %2199 = load double* %2198, align 8
  %2200 = fmul double %2192, %2199
  %2201 = fsub double %2191, %2200
  %2202 = load i32* %i, align 4
  %2203 = sext i32 %2202 to i64
  %2204 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2203
  %2205 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2204, i32 0, i64 2
  %2206 = getelementptr inbounds [5 x [5 x double]]* %2205, i32 0, i64 3
  %2207 = getelementptr inbounds [5 x double]* %2206, i32 0, i64 1
  store double %2201, double* %2207, align 8
  %2208 = load double* @tmp2, align 8
  %2209 = load i32* %i, align 4
  %2210 = add nsw i32 %2209, 1
  %2211 = sext i32 %2210 to i64
  %2212 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2211
  %2213 = getelementptr inbounds [5 x [5 x double]]* %2212, i32 0, i64 4
  %2214 = getelementptr inbounds [5 x double]* %2213, i32 0, i64 1
  %2215 = load double* %2214, align 8
  %2216 = fmul double %2208, %2215
  %2217 = load double* @tmp1, align 8
  %2218 = load i32* %i, align 4
  %2219 = add nsw i32 %2218, 1
  %2220 = sext i32 %2219 to i64
  %2221 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2220
  %2222 = getelementptr inbounds [5 x [5 x double]]* %2221, i32 0, i64 4
  %2223 = getelementptr inbounds [5 x double]* %2222, i32 0, i64 1
  %2224 = load double* %2223, align 8
  %2225 = fmul double %2217, %2224
  %2226 = fsub double %2216, %2225
  %2227 = load i32* %i, align 4
  %2228 = sext i32 %2227 to i64
  %2229 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2228
  %2230 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2229, i32 0, i64 2
  %2231 = getelementptr inbounds [5 x [5 x double]]* %2230, i32 0, i64 4
  %2232 = getelementptr inbounds [5 x double]* %2231, i32 0, i64 1
  store double %2226, double* %2232, align 8
  %2233 = load double* @tmp2, align 8
  %2234 = load i32* %i, align 4
  %2235 = add nsw i32 %2234, 1
  %2236 = sext i32 %2235 to i64
  %2237 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2236
  %2238 = getelementptr inbounds [5 x [5 x double]]* %2237, i32 0, i64 0
  %2239 = getelementptr inbounds [5 x double]* %2238, i32 0, i64 2
  %2240 = load double* %2239, align 8
  %2241 = fmul double %2233, %2240
  %2242 = load double* @tmp1, align 8
  %2243 = load i32* %i, align 4
  %2244 = add nsw i32 %2243, 1
  %2245 = sext i32 %2244 to i64
  %2246 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2245
  %2247 = getelementptr inbounds [5 x [5 x double]]* %2246, i32 0, i64 0
  %2248 = getelementptr inbounds [5 x double]* %2247, i32 0, i64 2
  %2249 = load double* %2248, align 8
  %2250 = fmul double %2242, %2249
  %2251 = fsub double %2241, %2250
  %2252 = load i32* %i, align 4
  %2253 = sext i32 %2252 to i64
  %2254 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2253
  %2255 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2254, i32 0, i64 2
  %2256 = getelementptr inbounds [5 x [5 x double]]* %2255, i32 0, i64 0
  %2257 = getelementptr inbounds [5 x double]* %2256, i32 0, i64 2
  store double %2251, double* %2257, align 8
  %2258 = load double* @tmp2, align 8
  %2259 = load i32* %i, align 4
  %2260 = add nsw i32 %2259, 1
  %2261 = sext i32 %2260 to i64
  %2262 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2261
  %2263 = getelementptr inbounds [5 x [5 x double]]* %2262, i32 0, i64 1
  %2264 = getelementptr inbounds [5 x double]* %2263, i32 0, i64 2
  %2265 = load double* %2264, align 8
  %2266 = fmul double %2258, %2265
  %2267 = load double* @tmp1, align 8
  %2268 = load i32* %i, align 4
  %2269 = add nsw i32 %2268, 1
  %2270 = sext i32 %2269 to i64
  %2271 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2270
  %2272 = getelementptr inbounds [5 x [5 x double]]* %2271, i32 0, i64 1
  %2273 = getelementptr inbounds [5 x double]* %2272, i32 0, i64 2
  %2274 = load double* %2273, align 8
  %2275 = fmul double %2267, %2274
  %2276 = fsub double %2266, %2275
  %2277 = load i32* %i, align 4
  %2278 = sext i32 %2277 to i64
  %2279 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2278
  %2280 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2279, i32 0, i64 2
  %2281 = getelementptr inbounds [5 x [5 x double]]* %2280, i32 0, i64 1
  %2282 = getelementptr inbounds [5 x double]* %2281, i32 0, i64 2
  store double %2276, double* %2282, align 8
  %2283 = load double* @tmp2, align 8
  %2284 = load i32* %i, align 4
  %2285 = add nsw i32 %2284, 1
  %2286 = sext i32 %2285 to i64
  %2287 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2286
  %2288 = getelementptr inbounds [5 x [5 x double]]* %2287, i32 0, i64 2
  %2289 = getelementptr inbounds [5 x double]* %2288, i32 0, i64 2
  %2290 = load double* %2289, align 8
  %2291 = fmul double %2283, %2290
  %2292 = load double* @tmp1, align 8
  %2293 = load i32* %i, align 4
  %2294 = add nsw i32 %2293, 1
  %2295 = sext i32 %2294 to i64
  %2296 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2295
  %2297 = getelementptr inbounds [5 x [5 x double]]* %2296, i32 0, i64 2
  %2298 = getelementptr inbounds [5 x double]* %2297, i32 0, i64 2
  %2299 = load double* %2298, align 8
  %2300 = fmul double %2292, %2299
  %2301 = fsub double %2291, %2300
  %2302 = load double* @tmp1, align 8
  %2303 = load double* @dx3, align 8
  %2304 = fmul double %2302, %2303
  %2305 = fsub double %2301, %2304
  %2306 = load i32* %i, align 4
  %2307 = sext i32 %2306 to i64
  %2308 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2307
  %2309 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2308, i32 0, i64 2
  %2310 = getelementptr inbounds [5 x [5 x double]]* %2309, i32 0, i64 2
  %2311 = getelementptr inbounds [5 x double]* %2310, i32 0, i64 2
  store double %2305, double* %2311, align 8
  %2312 = load double* @tmp2, align 8
  %2313 = load i32* %i, align 4
  %2314 = add nsw i32 %2313, 1
  %2315 = sext i32 %2314 to i64
  %2316 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2315
  %2317 = getelementptr inbounds [5 x [5 x double]]* %2316, i32 0, i64 3
  %2318 = getelementptr inbounds [5 x double]* %2317, i32 0, i64 2
  %2319 = load double* %2318, align 8
  %2320 = fmul double %2312, %2319
  %2321 = load double* @tmp1, align 8
  %2322 = load i32* %i, align 4
  %2323 = add nsw i32 %2322, 1
  %2324 = sext i32 %2323 to i64
  %2325 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2324
  %2326 = getelementptr inbounds [5 x [5 x double]]* %2325, i32 0, i64 3
  %2327 = getelementptr inbounds [5 x double]* %2326, i32 0, i64 2
  %2328 = load double* %2327, align 8
  %2329 = fmul double %2321, %2328
  %2330 = fsub double %2320, %2329
  %2331 = load i32* %i, align 4
  %2332 = sext i32 %2331 to i64
  %2333 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2332
  %2334 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2333, i32 0, i64 2
  %2335 = getelementptr inbounds [5 x [5 x double]]* %2334, i32 0, i64 3
  %2336 = getelementptr inbounds [5 x double]* %2335, i32 0, i64 2
  store double %2330, double* %2336, align 8
  %2337 = load double* @tmp2, align 8
  %2338 = load i32* %i, align 4
  %2339 = add nsw i32 %2338, 1
  %2340 = sext i32 %2339 to i64
  %2341 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2340
  %2342 = getelementptr inbounds [5 x [5 x double]]* %2341, i32 0, i64 4
  %2343 = getelementptr inbounds [5 x double]* %2342, i32 0, i64 2
  %2344 = load double* %2343, align 8
  %2345 = fmul double %2337, %2344
  %2346 = load double* @tmp1, align 8
  %2347 = load i32* %i, align 4
  %2348 = add nsw i32 %2347, 1
  %2349 = sext i32 %2348 to i64
  %2350 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2349
  %2351 = getelementptr inbounds [5 x [5 x double]]* %2350, i32 0, i64 4
  %2352 = getelementptr inbounds [5 x double]* %2351, i32 0, i64 2
  %2353 = load double* %2352, align 8
  %2354 = fmul double %2346, %2353
  %2355 = fsub double %2345, %2354
  %2356 = load i32* %i, align 4
  %2357 = sext i32 %2356 to i64
  %2358 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2357
  %2359 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2358, i32 0, i64 2
  %2360 = getelementptr inbounds [5 x [5 x double]]* %2359, i32 0, i64 4
  %2361 = getelementptr inbounds [5 x double]* %2360, i32 0, i64 2
  store double %2355, double* %2361, align 8
  %2362 = load double* @tmp2, align 8
  %2363 = load i32* %i, align 4
  %2364 = add nsw i32 %2363, 1
  %2365 = sext i32 %2364 to i64
  %2366 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2365
  %2367 = getelementptr inbounds [5 x [5 x double]]* %2366, i32 0, i64 0
  %2368 = getelementptr inbounds [5 x double]* %2367, i32 0, i64 3
  %2369 = load double* %2368, align 8
  %2370 = fmul double %2362, %2369
  %2371 = load double* @tmp1, align 8
  %2372 = load i32* %i, align 4
  %2373 = add nsw i32 %2372, 1
  %2374 = sext i32 %2373 to i64
  %2375 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2374
  %2376 = getelementptr inbounds [5 x [5 x double]]* %2375, i32 0, i64 0
  %2377 = getelementptr inbounds [5 x double]* %2376, i32 0, i64 3
  %2378 = load double* %2377, align 8
  %2379 = fmul double %2371, %2378
  %2380 = fsub double %2370, %2379
  %2381 = load i32* %i, align 4
  %2382 = sext i32 %2381 to i64
  %2383 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2382
  %2384 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2383, i32 0, i64 2
  %2385 = getelementptr inbounds [5 x [5 x double]]* %2384, i32 0, i64 0
  %2386 = getelementptr inbounds [5 x double]* %2385, i32 0, i64 3
  store double %2380, double* %2386, align 8
  %2387 = load double* @tmp2, align 8
  %2388 = load i32* %i, align 4
  %2389 = add nsw i32 %2388, 1
  %2390 = sext i32 %2389 to i64
  %2391 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2390
  %2392 = getelementptr inbounds [5 x [5 x double]]* %2391, i32 0, i64 1
  %2393 = getelementptr inbounds [5 x double]* %2392, i32 0, i64 3
  %2394 = load double* %2393, align 8
  %2395 = fmul double %2387, %2394
  %2396 = load double* @tmp1, align 8
  %2397 = load i32* %i, align 4
  %2398 = add nsw i32 %2397, 1
  %2399 = sext i32 %2398 to i64
  %2400 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2399
  %2401 = getelementptr inbounds [5 x [5 x double]]* %2400, i32 0, i64 1
  %2402 = getelementptr inbounds [5 x double]* %2401, i32 0, i64 3
  %2403 = load double* %2402, align 8
  %2404 = fmul double %2396, %2403
  %2405 = fsub double %2395, %2404
  %2406 = load i32* %i, align 4
  %2407 = sext i32 %2406 to i64
  %2408 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2407
  %2409 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2408, i32 0, i64 2
  %2410 = getelementptr inbounds [5 x [5 x double]]* %2409, i32 0, i64 1
  %2411 = getelementptr inbounds [5 x double]* %2410, i32 0, i64 3
  store double %2405, double* %2411, align 8
  %2412 = load double* @tmp2, align 8
  %2413 = load i32* %i, align 4
  %2414 = add nsw i32 %2413, 1
  %2415 = sext i32 %2414 to i64
  %2416 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2415
  %2417 = getelementptr inbounds [5 x [5 x double]]* %2416, i32 0, i64 2
  %2418 = getelementptr inbounds [5 x double]* %2417, i32 0, i64 3
  %2419 = load double* %2418, align 8
  %2420 = fmul double %2412, %2419
  %2421 = load double* @tmp1, align 8
  %2422 = load i32* %i, align 4
  %2423 = add nsw i32 %2422, 1
  %2424 = sext i32 %2423 to i64
  %2425 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2424
  %2426 = getelementptr inbounds [5 x [5 x double]]* %2425, i32 0, i64 2
  %2427 = getelementptr inbounds [5 x double]* %2426, i32 0, i64 3
  %2428 = load double* %2427, align 8
  %2429 = fmul double %2421, %2428
  %2430 = fsub double %2420, %2429
  %2431 = load i32* %i, align 4
  %2432 = sext i32 %2431 to i64
  %2433 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2432
  %2434 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2433, i32 0, i64 2
  %2435 = getelementptr inbounds [5 x [5 x double]]* %2434, i32 0, i64 2
  %2436 = getelementptr inbounds [5 x double]* %2435, i32 0, i64 3
  store double %2430, double* %2436, align 8
  %2437 = load double* @tmp2, align 8
  %2438 = load i32* %i, align 4
  %2439 = add nsw i32 %2438, 1
  %2440 = sext i32 %2439 to i64
  %2441 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2440
  %2442 = getelementptr inbounds [5 x [5 x double]]* %2441, i32 0, i64 3
  %2443 = getelementptr inbounds [5 x double]* %2442, i32 0, i64 3
  %2444 = load double* %2443, align 8
  %2445 = fmul double %2437, %2444
  %2446 = load double* @tmp1, align 8
  %2447 = load i32* %i, align 4
  %2448 = add nsw i32 %2447, 1
  %2449 = sext i32 %2448 to i64
  %2450 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2449
  %2451 = getelementptr inbounds [5 x [5 x double]]* %2450, i32 0, i64 3
  %2452 = getelementptr inbounds [5 x double]* %2451, i32 0, i64 3
  %2453 = load double* %2452, align 8
  %2454 = fmul double %2446, %2453
  %2455 = fsub double %2445, %2454
  %2456 = load double* @tmp1, align 8
  %2457 = load double* @dx4, align 8
  %2458 = fmul double %2456, %2457
  %2459 = fsub double %2455, %2458
  %2460 = load i32* %i, align 4
  %2461 = sext i32 %2460 to i64
  %2462 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2461
  %2463 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2462, i32 0, i64 2
  %2464 = getelementptr inbounds [5 x [5 x double]]* %2463, i32 0, i64 3
  %2465 = getelementptr inbounds [5 x double]* %2464, i32 0, i64 3
  store double %2459, double* %2465, align 8
  %2466 = load double* @tmp2, align 8
  %2467 = load i32* %i, align 4
  %2468 = add nsw i32 %2467, 1
  %2469 = sext i32 %2468 to i64
  %2470 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2469
  %2471 = getelementptr inbounds [5 x [5 x double]]* %2470, i32 0, i64 4
  %2472 = getelementptr inbounds [5 x double]* %2471, i32 0, i64 3
  %2473 = load double* %2472, align 8
  %2474 = fmul double %2466, %2473
  %2475 = load double* @tmp1, align 8
  %2476 = load i32* %i, align 4
  %2477 = add nsw i32 %2476, 1
  %2478 = sext i32 %2477 to i64
  %2479 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2478
  %2480 = getelementptr inbounds [5 x [5 x double]]* %2479, i32 0, i64 4
  %2481 = getelementptr inbounds [5 x double]* %2480, i32 0, i64 3
  %2482 = load double* %2481, align 8
  %2483 = fmul double %2475, %2482
  %2484 = fsub double %2474, %2483
  %2485 = load i32* %i, align 4
  %2486 = sext i32 %2485 to i64
  %2487 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2486
  %2488 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2487, i32 0, i64 2
  %2489 = getelementptr inbounds [5 x [5 x double]]* %2488, i32 0, i64 4
  %2490 = getelementptr inbounds [5 x double]* %2489, i32 0, i64 3
  store double %2484, double* %2490, align 8
  %2491 = load double* @tmp2, align 8
  %2492 = load i32* %i, align 4
  %2493 = add nsw i32 %2492, 1
  %2494 = sext i32 %2493 to i64
  %2495 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2494
  %2496 = getelementptr inbounds [5 x [5 x double]]* %2495, i32 0, i64 0
  %2497 = getelementptr inbounds [5 x double]* %2496, i32 0, i64 4
  %2498 = load double* %2497, align 8
  %2499 = fmul double %2491, %2498
  %2500 = load double* @tmp1, align 8
  %2501 = load i32* %i, align 4
  %2502 = add nsw i32 %2501, 1
  %2503 = sext i32 %2502 to i64
  %2504 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2503
  %2505 = getelementptr inbounds [5 x [5 x double]]* %2504, i32 0, i64 0
  %2506 = getelementptr inbounds [5 x double]* %2505, i32 0, i64 4
  %2507 = load double* %2506, align 8
  %2508 = fmul double %2500, %2507
  %2509 = fsub double %2499, %2508
  %2510 = load i32* %i, align 4
  %2511 = sext i32 %2510 to i64
  %2512 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2511
  %2513 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2512, i32 0, i64 2
  %2514 = getelementptr inbounds [5 x [5 x double]]* %2513, i32 0, i64 0
  %2515 = getelementptr inbounds [5 x double]* %2514, i32 0, i64 4
  store double %2509, double* %2515, align 8
  %2516 = load double* @tmp2, align 8
  %2517 = load i32* %i, align 4
  %2518 = add nsw i32 %2517, 1
  %2519 = sext i32 %2518 to i64
  %2520 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2519
  %2521 = getelementptr inbounds [5 x [5 x double]]* %2520, i32 0, i64 1
  %2522 = getelementptr inbounds [5 x double]* %2521, i32 0, i64 4
  %2523 = load double* %2522, align 8
  %2524 = fmul double %2516, %2523
  %2525 = load double* @tmp1, align 8
  %2526 = load i32* %i, align 4
  %2527 = add nsw i32 %2526, 1
  %2528 = sext i32 %2527 to i64
  %2529 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2528
  %2530 = getelementptr inbounds [5 x [5 x double]]* %2529, i32 0, i64 1
  %2531 = getelementptr inbounds [5 x double]* %2530, i32 0, i64 4
  %2532 = load double* %2531, align 8
  %2533 = fmul double %2525, %2532
  %2534 = fsub double %2524, %2533
  %2535 = load i32* %i, align 4
  %2536 = sext i32 %2535 to i64
  %2537 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2536
  %2538 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2537, i32 0, i64 2
  %2539 = getelementptr inbounds [5 x [5 x double]]* %2538, i32 0, i64 1
  %2540 = getelementptr inbounds [5 x double]* %2539, i32 0, i64 4
  store double %2534, double* %2540, align 8
  %2541 = load double* @tmp2, align 8
  %2542 = load i32* %i, align 4
  %2543 = add nsw i32 %2542, 1
  %2544 = sext i32 %2543 to i64
  %2545 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2544
  %2546 = getelementptr inbounds [5 x [5 x double]]* %2545, i32 0, i64 2
  %2547 = getelementptr inbounds [5 x double]* %2546, i32 0, i64 4
  %2548 = load double* %2547, align 8
  %2549 = fmul double %2541, %2548
  %2550 = load double* @tmp1, align 8
  %2551 = load i32* %i, align 4
  %2552 = add nsw i32 %2551, 1
  %2553 = sext i32 %2552 to i64
  %2554 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2553
  %2555 = getelementptr inbounds [5 x [5 x double]]* %2554, i32 0, i64 2
  %2556 = getelementptr inbounds [5 x double]* %2555, i32 0, i64 4
  %2557 = load double* %2556, align 8
  %2558 = fmul double %2550, %2557
  %2559 = fsub double %2549, %2558
  %2560 = load i32* %i, align 4
  %2561 = sext i32 %2560 to i64
  %2562 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2561
  %2563 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2562, i32 0, i64 2
  %2564 = getelementptr inbounds [5 x [5 x double]]* %2563, i32 0, i64 2
  %2565 = getelementptr inbounds [5 x double]* %2564, i32 0, i64 4
  store double %2559, double* %2565, align 8
  %2566 = load double* @tmp2, align 8
  %2567 = load i32* %i, align 4
  %2568 = add nsw i32 %2567, 1
  %2569 = sext i32 %2568 to i64
  %2570 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2569
  %2571 = getelementptr inbounds [5 x [5 x double]]* %2570, i32 0, i64 3
  %2572 = getelementptr inbounds [5 x double]* %2571, i32 0, i64 4
  %2573 = load double* %2572, align 8
  %2574 = fmul double %2566, %2573
  %2575 = load double* @tmp1, align 8
  %2576 = load i32* %i, align 4
  %2577 = add nsw i32 %2576, 1
  %2578 = sext i32 %2577 to i64
  %2579 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2578
  %2580 = getelementptr inbounds [5 x [5 x double]]* %2579, i32 0, i64 3
  %2581 = getelementptr inbounds [5 x double]* %2580, i32 0, i64 4
  %2582 = load double* %2581, align 8
  %2583 = fmul double %2575, %2582
  %2584 = fsub double %2574, %2583
  %2585 = load i32* %i, align 4
  %2586 = sext i32 %2585 to i64
  %2587 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2586
  %2588 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2587, i32 0, i64 2
  %2589 = getelementptr inbounds [5 x [5 x double]]* %2588, i32 0, i64 3
  %2590 = getelementptr inbounds [5 x double]* %2589, i32 0, i64 4
  store double %2584, double* %2590, align 8
  %2591 = load double* @tmp2, align 8
  %2592 = load i32* %i, align 4
  %2593 = add nsw i32 %2592, 1
  %2594 = sext i32 %2593 to i64
  %2595 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2594
  %2596 = getelementptr inbounds [5 x [5 x double]]* %2595, i32 0, i64 4
  %2597 = getelementptr inbounds [5 x double]* %2596, i32 0, i64 4
  %2598 = load double* %2597, align 8
  %2599 = fmul double %2591, %2598
  %2600 = load double* @tmp1, align 8
  %2601 = load i32* %i, align 4
  %2602 = add nsw i32 %2601, 1
  %2603 = sext i32 %2602 to i64
  %2604 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2603
  %2605 = getelementptr inbounds [5 x [5 x double]]* %2604, i32 0, i64 4
  %2606 = getelementptr inbounds [5 x double]* %2605, i32 0, i64 4
  %2607 = load double* %2606, align 8
  %2608 = fmul double %2600, %2607
  %2609 = fsub double %2599, %2608
  %2610 = load double* @tmp1, align 8
  %2611 = load double* @dx5, align 8
  %2612 = fmul double %2610, %2611
  %2613 = fsub double %2609, %2612
  %2614 = load i32* %i, align 4
  %2615 = sext i32 %2614 to i64
  %2616 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2615
  %2617 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2616, i32 0, i64 2
  %2618 = getelementptr inbounds [5 x [5 x double]]* %2617, i32 0, i64 4
  %2619 = getelementptr inbounds [5 x double]* %2618, i32 0, i64 4
  store double %2613, double* %2619, align 8
  br label %2620

; <label>:2620                                    ; preds = %893
  %2621 = load i32* %i, align 4
  %2622 = add nsw i32 %2621, 1
  store i32 %2622, i32* %i, align 4
  br label %888

; <label>:2623                                    ; preds = %888
  %2624 = load i32* %j, align 4
  %2625 = sext i32 %2624 to i64
  %2626 = load i32* %k, align 4
  %2627 = sext i32 %2626 to i64
  %2628 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2627
  %2629 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2628, i32 0, i64 %2625
  %2630 = getelementptr inbounds [13 x [5 x double]]* %2629, i32 0, i64 0
  %2631 = getelementptr inbounds [5 x double]* %2630, i32 0, i32 0
  call void @binvcrhs([5 x double]* getelementptr inbounds ([13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 0, i64 1, i32 0), [5 x double]* getelementptr inbounds ([13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 0, i64 2, i32 0), double* %2631)
  store i32 1, i32* %i, align 4
  br label %2632

; <label>:2632                                    ; preds = %2700, %2623
  %2633 = load i32* %i, align 4
  %2634 = load i32* %isize, align 4
  %2635 = sub nsw i32 %2634, 1
  %2636 = icmp sle i32 %2633, %2635
  br i1 %2636, label %2637, label %2703

; <label>:2637                                    ; preds = %2632
  %2638 = load i32* %i, align 4
  %2639 = sext i32 %2638 to i64
  %2640 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2639
  %2641 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2640, i32 0, i64 0
  %2642 = getelementptr inbounds [5 x [5 x double]]* %2641, i32 0, i32 0
  %2643 = load i32* %i, align 4
  %2644 = sub nsw i32 %2643, 1
  %2645 = sext i32 %2644 to i64
  %2646 = load i32* %j, align 4
  %2647 = sext i32 %2646 to i64
  %2648 = load i32* %k, align 4
  %2649 = sext i32 %2648 to i64
  %2650 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2649
  %2651 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2650, i32 0, i64 %2647
  %2652 = getelementptr inbounds [13 x [5 x double]]* %2651, i32 0, i64 %2645
  %2653 = getelementptr inbounds [5 x double]* %2652, i32 0, i32 0
  %2654 = load i32* %i, align 4
  %2655 = sext i32 %2654 to i64
  %2656 = load i32* %j, align 4
  %2657 = sext i32 %2656 to i64
  %2658 = load i32* %k, align 4
  %2659 = sext i32 %2658 to i64
  %2660 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2659
  %2661 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2660, i32 0, i64 %2657
  %2662 = getelementptr inbounds [13 x [5 x double]]* %2661, i32 0, i64 %2655
  %2663 = getelementptr inbounds [5 x double]* %2662, i32 0, i32 0
  call void @matvec_sub([5 x double]* %2642, double* %2653, double* %2663)
  %2664 = load i32* %i, align 4
  %2665 = sext i32 %2664 to i64
  %2666 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2665
  %2667 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2666, i32 0, i64 0
  %2668 = getelementptr inbounds [5 x [5 x double]]* %2667, i32 0, i32 0
  %2669 = load i32* %i, align 4
  %2670 = sub nsw i32 %2669, 1
  %2671 = sext i32 %2670 to i64
  %2672 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2671
  %2673 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2672, i32 0, i64 2
  %2674 = getelementptr inbounds [5 x [5 x double]]* %2673, i32 0, i32 0
  %2675 = load i32* %i, align 4
  %2676 = sext i32 %2675 to i64
  %2677 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2676
  %2678 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2677, i32 0, i64 1
  %2679 = getelementptr inbounds [5 x [5 x double]]* %2678, i32 0, i32 0
  call void @matmul_sub([5 x double]* %2668, [5 x double]* %2674, [5 x double]* %2679)
  %2680 = load i32* %i, align 4
  %2681 = sext i32 %2680 to i64
  %2682 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2681
  %2683 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2682, i32 0, i64 1
  %2684 = getelementptr inbounds [5 x [5 x double]]* %2683, i32 0, i32 0
  %2685 = load i32* %i, align 4
  %2686 = sext i32 %2685 to i64
  %2687 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2686
  %2688 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2687, i32 0, i64 2
  %2689 = getelementptr inbounds [5 x [5 x double]]* %2688, i32 0, i32 0
  %2690 = load i32* %i, align 4
  %2691 = sext i32 %2690 to i64
  %2692 = load i32* %j, align 4
  %2693 = sext i32 %2692 to i64
  %2694 = load i32* %k, align 4
  %2695 = sext i32 %2694 to i64
  %2696 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2695
  %2697 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2696, i32 0, i64 %2693
  %2698 = getelementptr inbounds [13 x [5 x double]]* %2697, i32 0, i64 %2691
  %2699 = getelementptr inbounds [5 x double]* %2698, i32 0, i32 0
  call void @binvcrhs([5 x double]* %2684, [5 x double]* %2689, double* %2699)
  br label %2700

; <label>:2700                                    ; preds = %2637
  %2701 = load i32* %i, align 4
  %2702 = add nsw i32 %2701, 1
  store i32 %2702, i32* %i, align 4
  br label %2632

; <label>:2703                                    ; preds = %2632
  %2704 = load i32* %isize, align 4
  %2705 = sext i32 %2704 to i64
  %2706 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2705
  %2707 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2706, i32 0, i64 0
  %2708 = getelementptr inbounds [5 x [5 x double]]* %2707, i32 0, i32 0
  %2709 = load i32* %isize, align 4
  %2710 = sub nsw i32 %2709, 1
  %2711 = sext i32 %2710 to i64
  %2712 = load i32* %j, align 4
  %2713 = sext i32 %2712 to i64
  %2714 = load i32* %k, align 4
  %2715 = sext i32 %2714 to i64
  %2716 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2715
  %2717 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2716, i32 0, i64 %2713
  %2718 = getelementptr inbounds [13 x [5 x double]]* %2717, i32 0, i64 %2711
  %2719 = getelementptr inbounds [5 x double]* %2718, i32 0, i32 0
  %2720 = load i32* %isize, align 4
  %2721 = sext i32 %2720 to i64
  %2722 = load i32* %j, align 4
  %2723 = sext i32 %2722 to i64
  %2724 = load i32* %k, align 4
  %2725 = sext i32 %2724 to i64
  %2726 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2725
  %2727 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2726, i32 0, i64 %2723
  %2728 = getelementptr inbounds [13 x [5 x double]]* %2727, i32 0, i64 %2721
  %2729 = getelementptr inbounds [5 x double]* %2728, i32 0, i32 0
  call void @matvec_sub([5 x double]* %2708, double* %2719, double* %2729)
  %2730 = load i32* %isize, align 4
  %2731 = sext i32 %2730 to i64
  %2732 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2731
  %2733 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2732, i32 0, i64 0
  %2734 = getelementptr inbounds [5 x [5 x double]]* %2733, i32 0, i32 0
  %2735 = load i32* %isize, align 4
  %2736 = sub nsw i32 %2735, 1
  %2737 = sext i32 %2736 to i64
  %2738 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2737
  %2739 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2738, i32 0, i64 2
  %2740 = getelementptr inbounds [5 x [5 x double]]* %2739, i32 0, i32 0
  %2741 = load i32* %isize, align 4
  %2742 = sext i32 %2741 to i64
  %2743 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2742
  %2744 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2743, i32 0, i64 1
  %2745 = getelementptr inbounds [5 x [5 x double]]* %2744, i32 0, i32 0
  call void @matmul_sub([5 x double]* %2734, [5 x double]* %2740, [5 x double]* %2745)
  %2746 = load i32* %isize, align 4
  %2747 = sext i32 %2746 to i64
  %2748 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2747
  %2749 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2748, i32 0, i64 1
  %2750 = getelementptr inbounds [5 x [5 x double]]* %2749, i32 0, i32 0
  %2751 = load i32* %isize, align 4
  %2752 = sext i32 %2751 to i64
  %2753 = load i32* %j, align 4
  %2754 = sext i32 %2753 to i64
  %2755 = load i32* %k, align 4
  %2756 = sext i32 %2755 to i64
  %2757 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2756
  %2758 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2757, i32 0, i64 %2754
  %2759 = getelementptr inbounds [13 x [5 x double]]* %2758, i32 0, i64 %2752
  %2760 = getelementptr inbounds [5 x double]* %2759, i32 0, i32 0
  call void @binvrhs([5 x double]* %2750, double* %2760)
  %2761 = load i32* %isize, align 4
  %2762 = sub nsw i32 %2761, 1
  store i32 %2762, i32* %i, align 4
  br label %2763

; <label>:2763                                    ; preds = %2835, %2703
  %2764 = load i32* %i, align 4
  %2765 = icmp sge i32 %2764, 0
  br i1 %2765, label %2766, label %2838

; <label>:2766                                    ; preds = %2763
  store i32 0, i32* %m, align 4
  br label %2767

; <label>:2767                                    ; preds = %2831, %2766
  %2768 = load i32* %m, align 4
  %2769 = icmp slt i32 %2768, 5
  br i1 %2769, label %2770, label %2834

; <label>:2770                                    ; preds = %2767
  store i32 0, i32* %n, align 4
  br label %2771

; <label>:2771                                    ; preds = %2827, %2770
  %2772 = load i32* %n, align 4
  %2773 = icmp slt i32 %2772, 5
  br i1 %2773, label %2774, label %2830

; <label>:2774                                    ; preds = %2771
  %2775 = load i32* %m, align 4
  %2776 = sext i32 %2775 to i64
  %2777 = load i32* %i, align 4
  %2778 = sext i32 %2777 to i64
  %2779 = load i32* %j, align 4
  %2780 = sext i32 %2779 to i64
  %2781 = load i32* %k, align 4
  %2782 = sext i32 %2781 to i64
  %2783 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2782
  %2784 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2783, i32 0, i64 %2780
  %2785 = getelementptr inbounds [13 x [5 x double]]* %2784, i32 0, i64 %2778
  %2786 = getelementptr inbounds [5 x double]* %2785, i32 0, i64 %2776
  %2787 = load double* %2786, align 8
  %2788 = load i32* %m, align 4
  %2789 = sext i32 %2788 to i64
  %2790 = load i32* %n, align 4
  %2791 = sext i32 %2790 to i64
  %2792 = load i32* %i, align 4
  %2793 = sext i32 %2792 to i64
  %2794 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2793
  %2795 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2794, i32 0, i64 2
  %2796 = getelementptr inbounds [5 x [5 x double]]* %2795, i32 0, i64 %2791
  %2797 = getelementptr inbounds [5 x double]* %2796, i32 0, i64 %2789
  %2798 = load double* %2797, align 8
  %2799 = load i32* %n, align 4
  %2800 = sext i32 %2799 to i64
  %2801 = load i32* %i, align 4
  %2802 = add nsw i32 %2801, 1
  %2803 = sext i32 %2802 to i64
  %2804 = load i32* %j, align 4
  %2805 = sext i32 %2804 to i64
  %2806 = load i32* %k, align 4
  %2807 = sext i32 %2806 to i64
  %2808 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2807
  %2809 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2808, i32 0, i64 %2805
  %2810 = getelementptr inbounds [13 x [5 x double]]* %2809, i32 0, i64 %2803
  %2811 = getelementptr inbounds [5 x double]* %2810, i32 0, i64 %2800
  %2812 = load double* %2811, align 8
  %2813 = fmul double %2798, %2812
  %2814 = fsub double %2787, %2813
  %2815 = load i32* %m, align 4
  %2816 = sext i32 %2815 to i64
  %2817 = load i32* %i, align 4
  %2818 = sext i32 %2817 to i64
  %2819 = load i32* %j, align 4
  %2820 = sext i32 %2819 to i64
  %2821 = load i32* %k, align 4
  %2822 = sext i32 %2821 to i64
  %2823 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2822
  %2824 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2823, i32 0, i64 %2820
  %2825 = getelementptr inbounds [13 x [5 x double]]* %2824, i32 0, i64 %2818
  %2826 = getelementptr inbounds [5 x double]* %2825, i32 0, i64 %2816
  store double %2814, double* %2826, align 8
  br label %2827

; <label>:2827                                    ; preds = %2774
  %2828 = load i32* %n, align 4
  %2829 = add nsw i32 %2828, 1
  store i32 %2829, i32* %n, align 4
  br label %2771

; <label>:2830                                    ; preds = %2771
  br label %2831

; <label>:2831                                    ; preds = %2830
  %2832 = load i32* %m, align 4
  %2833 = add nsw i32 %2832, 1
  store i32 %2833, i32* %m, align 4
  br label %2767

; <label>:2834                                    ; preds = %2767
  br label %2835

; <label>:2835                                    ; preds = %2834
  %2836 = load i32* %i, align 4
  %2837 = add nsw i32 %2836, -1
  store i32 %2837, i32* %i, align 4
  br label %2763

; <label>:2838                                    ; preds = %2763
  br label %2839

; <label>:2839                                    ; preds = %2838
  %2840 = load i32* %j, align 4
  %2841 = add nsw i32 %2840, 1
  store i32 %2841, i32* %j, align 4
  br label %13

; <label>:2842                                    ; preds = %13
  br label %2843

; <label>:2843                                    ; preds = %2842
  %2844 = load i32* %k, align 4
  %2845 = add nsw i32 %2844, 1
  store i32 %2845, i32* %k, align 4
  br label %7

; <label>:2846                                    ; preds = %7
  %2847 = load i32* @timeron, align 4
  %2848 = icmp ne i32 %2847, 0
  br i1 %2848, label %2849, label %2850

; <label>:2849                                    ; preds = %2846
  call void @timer_stop(i32 6)
  br label %2850

; <label>:2850                                    ; preds = %2849, %2846
  ret void
}

; Function Attrs: nounwind uwtable
define void @y_solve() #0 {
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %m = alloca i32, align 4
  %n = alloca i32, align 4
  %jsize = alloca i32, align 4
  %1 = load i32* @timeron, align 4
  %2 = icmp ne i32 %1, 0
  br i1 %2, label %3, label %4

; <label>:3                                       ; preds = %0
  call void @timer_start(i32 7)
  br label %4

; <label>:4                                       ; preds = %3, %0
  %5 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %6 = sub nsw i32 %5, 1
  store i32 %6, i32* %jsize, align 4
  store i32 1, i32* %k, align 4
  br label %7

; <label>:7                                       ; preds = %2833, %4
  %8 = load i32* %k, align 4
  %9 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %10 = sub nsw i32 %9, 2
  %11 = icmp sle i32 %8, %10
  br i1 %11, label %12, label %2836

; <label>:12                                      ; preds = %7
  store i32 1, i32* %i, align 4
  br label %13

; <label>:13                                      ; preds = %2829, %12
  %14 = load i32* %i, align 4
  %15 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %16 = sub nsw i32 %15, 2
  %17 = icmp sle i32 %14, %16
  br i1 %17, label %18, label %2832

; <label>:18                                      ; preds = %13
  store i32 0, i32* %j, align 4
  br label %19

; <label>:19                                      ; preds = %873, %18
  %20 = load i32* %j, align 4
  %21 = load i32* %jsize, align 4
  %22 = icmp sle i32 %20, %21
  br i1 %22, label %23, label %876

; <label>:23                                      ; preds = %19
  %24 = load i32* %i, align 4
  %25 = sext i32 %24 to i64
  %26 = load i32* %j, align 4
  %27 = sext i32 %26 to i64
  %28 = load i32* %k, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [12 x [13 x [13 x double]]]* @rho_i, i32 0, i64 %29
  %31 = getelementptr inbounds [13 x [13 x double]]* %30, i32 0, i64 %27
  %32 = getelementptr inbounds [13 x double]* %31, i32 0, i64 %25
  %33 = load double* %32, align 8
  store double %33, double* @tmp1, align 8
  %34 = load double* @tmp1, align 8
  %35 = load double* @tmp1, align 8
  %36 = fmul double %34, %35
  store double %36, double* @tmp2, align 8
  %37 = load double* @tmp1, align 8
  %38 = load double* @tmp2, align 8
  %39 = fmul double %37, %38
  store double %39, double* @tmp3, align 8
  %40 = load i32* %j, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %41
  %43 = getelementptr inbounds [5 x [5 x double]]* %42, i32 0, i64 0
  %44 = getelementptr inbounds [5 x double]* %43, i32 0, i64 0
  store double 0.000000e+00, double* %44, align 8
  %45 = load i32* %j, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %46
  %48 = getelementptr inbounds [5 x [5 x double]]* %47, i32 0, i64 1
  %49 = getelementptr inbounds [5 x double]* %48, i32 0, i64 0
  store double 0.000000e+00, double* %49, align 8
  %50 = load i32* %j, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %51
  %53 = getelementptr inbounds [5 x [5 x double]]* %52, i32 0, i64 2
  %54 = getelementptr inbounds [5 x double]* %53, i32 0, i64 0
  store double 1.000000e+00, double* %54, align 8
  %55 = load i32* %j, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %56
  %58 = getelementptr inbounds [5 x [5 x double]]* %57, i32 0, i64 3
  %59 = getelementptr inbounds [5 x double]* %58, i32 0, i64 0
  store double 0.000000e+00, double* %59, align 8
  %60 = load i32* %j, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %61
  %63 = getelementptr inbounds [5 x [5 x double]]* %62, i32 0, i64 4
  %64 = getelementptr inbounds [5 x double]* %63, i32 0, i64 0
  store double 0.000000e+00, double* %64, align 8
  %65 = load i32* %i, align 4
  %66 = sext i32 %65 to i64
  %67 = load i32* %j, align 4
  %68 = sext i32 %67 to i64
  %69 = load i32* %k, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %70
  %72 = getelementptr inbounds [13 x [13 x [5 x double]]]* %71, i32 0, i64 %68
  %73 = getelementptr inbounds [13 x [5 x double]]* %72, i32 0, i64 %66
  %74 = getelementptr inbounds [5 x double]* %73, i32 0, i64 1
  %75 = load double* %74, align 8
  %76 = load i32* %i, align 4
  %77 = sext i32 %76 to i64
  %78 = load i32* %j, align 4
  %79 = sext i32 %78 to i64
  %80 = load i32* %k, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %81
  %83 = getelementptr inbounds [13 x [13 x [5 x double]]]* %82, i32 0, i64 %79
  %84 = getelementptr inbounds [13 x [5 x double]]* %83, i32 0, i64 %77
  %85 = getelementptr inbounds [5 x double]* %84, i32 0, i64 2
  %86 = load double* %85, align 8
  %87 = fmul double %75, %86
  %88 = fsub double -0.000000e+00, %87
  %89 = load double* @tmp2, align 8
  %90 = fmul double %88, %89
  %91 = load i32* %j, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %92
  %94 = getelementptr inbounds [5 x [5 x double]]* %93, i32 0, i64 0
  %95 = getelementptr inbounds [5 x double]* %94, i32 0, i64 1
  store double %90, double* %95, align 8
  %96 = load i32* %i, align 4
  %97 = sext i32 %96 to i64
  %98 = load i32* %j, align 4
  %99 = sext i32 %98 to i64
  %100 = load i32* %k, align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %101
  %103 = getelementptr inbounds [13 x [13 x [5 x double]]]* %102, i32 0, i64 %99
  %104 = getelementptr inbounds [13 x [5 x double]]* %103, i32 0, i64 %97
  %105 = getelementptr inbounds [5 x double]* %104, i32 0, i64 2
  %106 = load double* %105, align 8
  %107 = load double* @tmp1, align 8
  %108 = fmul double %106, %107
  %109 = load i32* %j, align 4
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %110
  %112 = getelementptr inbounds [5 x [5 x double]]* %111, i32 0, i64 1
  %113 = getelementptr inbounds [5 x double]* %112, i32 0, i64 1
  store double %108, double* %113, align 8
  %114 = load i32* %i, align 4
  %115 = sext i32 %114 to i64
  %116 = load i32* %j, align 4
  %117 = sext i32 %116 to i64
  %118 = load i32* %k, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %119
  %121 = getelementptr inbounds [13 x [13 x [5 x double]]]* %120, i32 0, i64 %117
  %122 = getelementptr inbounds [13 x [5 x double]]* %121, i32 0, i64 %115
  %123 = getelementptr inbounds [5 x double]* %122, i32 0, i64 1
  %124 = load double* %123, align 8
  %125 = load double* @tmp1, align 8
  %126 = fmul double %124, %125
  %127 = load i32* %j, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %128
  %130 = getelementptr inbounds [5 x [5 x double]]* %129, i32 0, i64 2
  %131 = getelementptr inbounds [5 x double]* %130, i32 0, i64 1
  store double %126, double* %131, align 8
  %132 = load i32* %j, align 4
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %133
  %135 = getelementptr inbounds [5 x [5 x double]]* %134, i32 0, i64 3
  %136 = getelementptr inbounds [5 x double]* %135, i32 0, i64 1
  store double 0.000000e+00, double* %136, align 8
  %137 = load i32* %j, align 4
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %138
  %140 = getelementptr inbounds [5 x [5 x double]]* %139, i32 0, i64 4
  %141 = getelementptr inbounds [5 x double]* %140, i32 0, i64 1
  store double 0.000000e+00, double* %141, align 8
  %142 = load i32* %i, align 4
  %143 = sext i32 %142 to i64
  %144 = load i32* %j, align 4
  %145 = sext i32 %144 to i64
  %146 = load i32* %k, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %147
  %149 = getelementptr inbounds [13 x [13 x [5 x double]]]* %148, i32 0, i64 %145
  %150 = getelementptr inbounds [13 x [5 x double]]* %149, i32 0, i64 %143
  %151 = getelementptr inbounds [5 x double]* %150, i32 0, i64 2
  %152 = load double* %151, align 8
  %153 = load i32* %i, align 4
  %154 = sext i32 %153 to i64
  %155 = load i32* %j, align 4
  %156 = sext i32 %155 to i64
  %157 = load i32* %k, align 4
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %158
  %160 = getelementptr inbounds [13 x [13 x [5 x double]]]* %159, i32 0, i64 %156
  %161 = getelementptr inbounds [13 x [5 x double]]* %160, i32 0, i64 %154
  %162 = getelementptr inbounds [5 x double]* %161, i32 0, i64 2
  %163 = load double* %162, align 8
  %164 = fmul double %152, %163
  %165 = load double* @tmp2, align 8
  %166 = fmul double %164, %165
  %167 = fsub double -0.000000e+00, %166
  %168 = load double* @c2, align 8
  %169 = load i32* %i, align 4
  %170 = sext i32 %169 to i64
  %171 = load i32* %j, align 4
  %172 = sext i32 %171 to i64
  %173 = load i32* %k, align 4
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds [12 x [13 x [13 x double]]]* @qs, i32 0, i64 %174
  %176 = getelementptr inbounds [13 x [13 x double]]* %175, i32 0, i64 %172
  %177 = getelementptr inbounds [13 x double]* %176, i32 0, i64 %170
  %178 = load double* %177, align 8
  %179 = fmul double %168, %178
  %180 = fadd double %167, %179
  %181 = load i32* %j, align 4
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %182
  %184 = getelementptr inbounds [5 x [5 x double]]* %183, i32 0, i64 0
  %185 = getelementptr inbounds [5 x double]* %184, i32 0, i64 2
  store double %180, double* %185, align 8
  %186 = load double* @c2, align 8
  %187 = fsub double -0.000000e+00, %186
  %188 = load i32* %i, align 4
  %189 = sext i32 %188 to i64
  %190 = load i32* %j, align 4
  %191 = sext i32 %190 to i64
  %192 = load i32* %k, align 4
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %193
  %195 = getelementptr inbounds [13 x [13 x [5 x double]]]* %194, i32 0, i64 %191
  %196 = getelementptr inbounds [13 x [5 x double]]* %195, i32 0, i64 %189
  %197 = getelementptr inbounds [5 x double]* %196, i32 0, i64 1
  %198 = load double* %197, align 8
  %199 = fmul double %187, %198
  %200 = load double* @tmp1, align 8
  %201 = fmul double %199, %200
  %202 = load i32* %j, align 4
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %203
  %205 = getelementptr inbounds [5 x [5 x double]]* %204, i32 0, i64 1
  %206 = getelementptr inbounds [5 x double]* %205, i32 0, i64 2
  store double %201, double* %206, align 8
  %207 = load double* @c2, align 8
  %208 = fsub double 2.000000e+00, %207
  %209 = load i32* %i, align 4
  %210 = sext i32 %209 to i64
  %211 = load i32* %j, align 4
  %212 = sext i32 %211 to i64
  %213 = load i32* %k, align 4
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %214
  %216 = getelementptr inbounds [13 x [13 x [5 x double]]]* %215, i32 0, i64 %212
  %217 = getelementptr inbounds [13 x [5 x double]]* %216, i32 0, i64 %210
  %218 = getelementptr inbounds [5 x double]* %217, i32 0, i64 2
  %219 = load double* %218, align 8
  %220 = fmul double %208, %219
  %221 = load double* @tmp1, align 8
  %222 = fmul double %220, %221
  %223 = load i32* %j, align 4
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %224
  %226 = getelementptr inbounds [5 x [5 x double]]* %225, i32 0, i64 2
  %227 = getelementptr inbounds [5 x double]* %226, i32 0, i64 2
  store double %222, double* %227, align 8
  %228 = load double* @c2, align 8
  %229 = fsub double -0.000000e+00, %228
  %230 = load i32* %i, align 4
  %231 = sext i32 %230 to i64
  %232 = load i32* %j, align 4
  %233 = sext i32 %232 to i64
  %234 = load i32* %k, align 4
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %235
  %237 = getelementptr inbounds [13 x [13 x [5 x double]]]* %236, i32 0, i64 %233
  %238 = getelementptr inbounds [13 x [5 x double]]* %237, i32 0, i64 %231
  %239 = getelementptr inbounds [5 x double]* %238, i32 0, i64 3
  %240 = load double* %239, align 8
  %241 = fmul double %229, %240
  %242 = load double* @tmp1, align 8
  %243 = fmul double %241, %242
  %244 = load i32* %j, align 4
  %245 = sext i32 %244 to i64
  %246 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %245
  %247 = getelementptr inbounds [5 x [5 x double]]* %246, i32 0, i64 3
  %248 = getelementptr inbounds [5 x double]* %247, i32 0, i64 2
  store double %243, double* %248, align 8
  %249 = load double* @c2, align 8
  %250 = load i32* %j, align 4
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %251
  %253 = getelementptr inbounds [5 x [5 x double]]* %252, i32 0, i64 4
  %254 = getelementptr inbounds [5 x double]* %253, i32 0, i64 2
  store double %249, double* %254, align 8
  %255 = load i32* %i, align 4
  %256 = sext i32 %255 to i64
  %257 = load i32* %j, align 4
  %258 = sext i32 %257 to i64
  %259 = load i32* %k, align 4
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %260
  %262 = getelementptr inbounds [13 x [13 x [5 x double]]]* %261, i32 0, i64 %258
  %263 = getelementptr inbounds [13 x [5 x double]]* %262, i32 0, i64 %256
  %264 = getelementptr inbounds [5 x double]* %263, i32 0, i64 2
  %265 = load double* %264, align 8
  %266 = load i32* %i, align 4
  %267 = sext i32 %266 to i64
  %268 = load i32* %j, align 4
  %269 = sext i32 %268 to i64
  %270 = load i32* %k, align 4
  %271 = sext i32 %270 to i64
  %272 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %271
  %273 = getelementptr inbounds [13 x [13 x [5 x double]]]* %272, i32 0, i64 %269
  %274 = getelementptr inbounds [13 x [5 x double]]* %273, i32 0, i64 %267
  %275 = getelementptr inbounds [5 x double]* %274, i32 0, i64 3
  %276 = load double* %275, align 8
  %277 = fmul double %265, %276
  %278 = fsub double -0.000000e+00, %277
  %279 = load double* @tmp2, align 8
  %280 = fmul double %278, %279
  %281 = load i32* %j, align 4
  %282 = sext i32 %281 to i64
  %283 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %282
  %284 = getelementptr inbounds [5 x [5 x double]]* %283, i32 0, i64 0
  %285 = getelementptr inbounds [5 x double]* %284, i32 0, i64 3
  store double %280, double* %285, align 8
  %286 = load i32* %j, align 4
  %287 = sext i32 %286 to i64
  %288 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %287
  %289 = getelementptr inbounds [5 x [5 x double]]* %288, i32 0, i64 1
  %290 = getelementptr inbounds [5 x double]* %289, i32 0, i64 3
  store double 0.000000e+00, double* %290, align 8
  %291 = load i32* %i, align 4
  %292 = sext i32 %291 to i64
  %293 = load i32* %j, align 4
  %294 = sext i32 %293 to i64
  %295 = load i32* %k, align 4
  %296 = sext i32 %295 to i64
  %297 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %296
  %298 = getelementptr inbounds [13 x [13 x [5 x double]]]* %297, i32 0, i64 %294
  %299 = getelementptr inbounds [13 x [5 x double]]* %298, i32 0, i64 %292
  %300 = getelementptr inbounds [5 x double]* %299, i32 0, i64 3
  %301 = load double* %300, align 8
  %302 = load double* @tmp1, align 8
  %303 = fmul double %301, %302
  %304 = load i32* %j, align 4
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %305
  %307 = getelementptr inbounds [5 x [5 x double]]* %306, i32 0, i64 2
  %308 = getelementptr inbounds [5 x double]* %307, i32 0, i64 3
  store double %303, double* %308, align 8
  %309 = load i32* %i, align 4
  %310 = sext i32 %309 to i64
  %311 = load i32* %j, align 4
  %312 = sext i32 %311 to i64
  %313 = load i32* %k, align 4
  %314 = sext i32 %313 to i64
  %315 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %314
  %316 = getelementptr inbounds [13 x [13 x [5 x double]]]* %315, i32 0, i64 %312
  %317 = getelementptr inbounds [13 x [5 x double]]* %316, i32 0, i64 %310
  %318 = getelementptr inbounds [5 x double]* %317, i32 0, i64 2
  %319 = load double* %318, align 8
  %320 = load double* @tmp1, align 8
  %321 = fmul double %319, %320
  %322 = load i32* %j, align 4
  %323 = sext i32 %322 to i64
  %324 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %323
  %325 = getelementptr inbounds [5 x [5 x double]]* %324, i32 0, i64 3
  %326 = getelementptr inbounds [5 x double]* %325, i32 0, i64 3
  store double %321, double* %326, align 8
  %327 = load i32* %j, align 4
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %328
  %330 = getelementptr inbounds [5 x [5 x double]]* %329, i32 0, i64 4
  %331 = getelementptr inbounds [5 x double]* %330, i32 0, i64 3
  store double 0.000000e+00, double* %331, align 8
  %332 = load double* @c2, align 8
  %333 = fmul double %332, 2.000000e+00
  %334 = load i32* %i, align 4
  %335 = sext i32 %334 to i64
  %336 = load i32* %j, align 4
  %337 = sext i32 %336 to i64
  %338 = load i32* %k, align 4
  %339 = sext i32 %338 to i64
  %340 = getelementptr inbounds [12 x [13 x [13 x double]]]* @square, i32 0, i64 %339
  %341 = getelementptr inbounds [13 x [13 x double]]* %340, i32 0, i64 %337
  %342 = getelementptr inbounds [13 x double]* %341, i32 0, i64 %335
  %343 = load double* %342, align 8
  %344 = fmul double %333, %343
  %345 = load double* @c1, align 8
  %346 = load i32* %i, align 4
  %347 = sext i32 %346 to i64
  %348 = load i32* %j, align 4
  %349 = sext i32 %348 to i64
  %350 = load i32* %k, align 4
  %351 = sext i32 %350 to i64
  %352 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %351
  %353 = getelementptr inbounds [13 x [13 x [5 x double]]]* %352, i32 0, i64 %349
  %354 = getelementptr inbounds [13 x [5 x double]]* %353, i32 0, i64 %347
  %355 = getelementptr inbounds [5 x double]* %354, i32 0, i64 4
  %356 = load double* %355, align 8
  %357 = fmul double %345, %356
  %358 = fsub double %344, %357
  %359 = load i32* %i, align 4
  %360 = sext i32 %359 to i64
  %361 = load i32* %j, align 4
  %362 = sext i32 %361 to i64
  %363 = load i32* %k, align 4
  %364 = sext i32 %363 to i64
  %365 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %364
  %366 = getelementptr inbounds [13 x [13 x [5 x double]]]* %365, i32 0, i64 %362
  %367 = getelementptr inbounds [13 x [5 x double]]* %366, i32 0, i64 %360
  %368 = getelementptr inbounds [5 x double]* %367, i32 0, i64 2
  %369 = load double* %368, align 8
  %370 = fmul double %358, %369
  %371 = load double* @tmp2, align 8
  %372 = fmul double %370, %371
  %373 = load i32* %j, align 4
  %374 = sext i32 %373 to i64
  %375 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %374
  %376 = getelementptr inbounds [5 x [5 x double]]* %375, i32 0, i64 0
  %377 = getelementptr inbounds [5 x double]* %376, i32 0, i64 4
  store double %372, double* %377, align 8
  %378 = load double* @c2, align 8
  %379 = fsub double -0.000000e+00, %378
  %380 = load i32* %i, align 4
  %381 = sext i32 %380 to i64
  %382 = load i32* %j, align 4
  %383 = sext i32 %382 to i64
  %384 = load i32* %k, align 4
  %385 = sext i32 %384 to i64
  %386 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %385
  %387 = getelementptr inbounds [13 x [13 x [5 x double]]]* %386, i32 0, i64 %383
  %388 = getelementptr inbounds [13 x [5 x double]]* %387, i32 0, i64 %381
  %389 = getelementptr inbounds [5 x double]* %388, i32 0, i64 1
  %390 = load double* %389, align 8
  %391 = fmul double %379, %390
  %392 = load i32* %i, align 4
  %393 = sext i32 %392 to i64
  %394 = load i32* %j, align 4
  %395 = sext i32 %394 to i64
  %396 = load i32* %k, align 4
  %397 = sext i32 %396 to i64
  %398 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %397
  %399 = getelementptr inbounds [13 x [13 x [5 x double]]]* %398, i32 0, i64 %395
  %400 = getelementptr inbounds [13 x [5 x double]]* %399, i32 0, i64 %393
  %401 = getelementptr inbounds [5 x double]* %400, i32 0, i64 2
  %402 = load double* %401, align 8
  %403 = fmul double %391, %402
  %404 = load double* @tmp2, align 8
  %405 = fmul double %403, %404
  %406 = load i32* %j, align 4
  %407 = sext i32 %406 to i64
  %408 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %407
  %409 = getelementptr inbounds [5 x [5 x double]]* %408, i32 0, i64 1
  %410 = getelementptr inbounds [5 x double]* %409, i32 0, i64 4
  store double %405, double* %410, align 8
  %411 = load double* @c1, align 8
  %412 = load i32* %i, align 4
  %413 = sext i32 %412 to i64
  %414 = load i32* %j, align 4
  %415 = sext i32 %414 to i64
  %416 = load i32* %k, align 4
  %417 = sext i32 %416 to i64
  %418 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %417
  %419 = getelementptr inbounds [13 x [13 x [5 x double]]]* %418, i32 0, i64 %415
  %420 = getelementptr inbounds [13 x [5 x double]]* %419, i32 0, i64 %413
  %421 = getelementptr inbounds [5 x double]* %420, i32 0, i64 4
  %422 = load double* %421, align 8
  %423 = fmul double %411, %422
  %424 = load double* @tmp1, align 8
  %425 = fmul double %423, %424
  %426 = load double* @c2, align 8
  %427 = load i32* %i, align 4
  %428 = sext i32 %427 to i64
  %429 = load i32* %j, align 4
  %430 = sext i32 %429 to i64
  %431 = load i32* %k, align 4
  %432 = sext i32 %431 to i64
  %433 = getelementptr inbounds [12 x [13 x [13 x double]]]* @qs, i32 0, i64 %432
  %434 = getelementptr inbounds [13 x [13 x double]]* %433, i32 0, i64 %430
  %435 = getelementptr inbounds [13 x double]* %434, i32 0, i64 %428
  %436 = load double* %435, align 8
  %437 = load i32* %i, align 4
  %438 = sext i32 %437 to i64
  %439 = load i32* %j, align 4
  %440 = sext i32 %439 to i64
  %441 = load i32* %k, align 4
  %442 = sext i32 %441 to i64
  %443 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %442
  %444 = getelementptr inbounds [13 x [13 x [5 x double]]]* %443, i32 0, i64 %440
  %445 = getelementptr inbounds [13 x [5 x double]]* %444, i32 0, i64 %438
  %446 = getelementptr inbounds [5 x double]* %445, i32 0, i64 2
  %447 = load double* %446, align 8
  %448 = load i32* %i, align 4
  %449 = sext i32 %448 to i64
  %450 = load i32* %j, align 4
  %451 = sext i32 %450 to i64
  %452 = load i32* %k, align 4
  %453 = sext i32 %452 to i64
  %454 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %453
  %455 = getelementptr inbounds [13 x [13 x [5 x double]]]* %454, i32 0, i64 %451
  %456 = getelementptr inbounds [13 x [5 x double]]* %455, i32 0, i64 %449
  %457 = getelementptr inbounds [5 x double]* %456, i32 0, i64 2
  %458 = load double* %457, align 8
  %459 = fmul double %447, %458
  %460 = load double* @tmp2, align 8
  %461 = fmul double %459, %460
  %462 = fadd double %436, %461
  %463 = fmul double %426, %462
  %464 = fsub double %425, %463
  %465 = load i32* %j, align 4
  %466 = sext i32 %465 to i64
  %467 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %466
  %468 = getelementptr inbounds [5 x [5 x double]]* %467, i32 0, i64 2
  %469 = getelementptr inbounds [5 x double]* %468, i32 0, i64 4
  store double %464, double* %469, align 8
  %470 = load double* @c2, align 8
  %471 = fsub double -0.000000e+00, %470
  %472 = load i32* %i, align 4
  %473 = sext i32 %472 to i64
  %474 = load i32* %j, align 4
  %475 = sext i32 %474 to i64
  %476 = load i32* %k, align 4
  %477 = sext i32 %476 to i64
  %478 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %477
  %479 = getelementptr inbounds [13 x [13 x [5 x double]]]* %478, i32 0, i64 %475
  %480 = getelementptr inbounds [13 x [5 x double]]* %479, i32 0, i64 %473
  %481 = getelementptr inbounds [5 x double]* %480, i32 0, i64 2
  %482 = load double* %481, align 8
  %483 = load i32* %i, align 4
  %484 = sext i32 %483 to i64
  %485 = load i32* %j, align 4
  %486 = sext i32 %485 to i64
  %487 = load i32* %k, align 4
  %488 = sext i32 %487 to i64
  %489 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %488
  %490 = getelementptr inbounds [13 x [13 x [5 x double]]]* %489, i32 0, i64 %486
  %491 = getelementptr inbounds [13 x [5 x double]]* %490, i32 0, i64 %484
  %492 = getelementptr inbounds [5 x double]* %491, i32 0, i64 3
  %493 = load double* %492, align 8
  %494 = fmul double %482, %493
  %495 = fmul double %471, %494
  %496 = load double* @tmp2, align 8
  %497 = fmul double %495, %496
  %498 = load i32* %j, align 4
  %499 = sext i32 %498 to i64
  %500 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %499
  %501 = getelementptr inbounds [5 x [5 x double]]* %500, i32 0, i64 3
  %502 = getelementptr inbounds [5 x double]* %501, i32 0, i64 4
  store double %497, double* %502, align 8
  %503 = load double* @c1, align 8
  %504 = load i32* %i, align 4
  %505 = sext i32 %504 to i64
  %506 = load i32* %j, align 4
  %507 = sext i32 %506 to i64
  %508 = load i32* %k, align 4
  %509 = sext i32 %508 to i64
  %510 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %509
  %511 = getelementptr inbounds [13 x [13 x [5 x double]]]* %510, i32 0, i64 %507
  %512 = getelementptr inbounds [13 x [5 x double]]* %511, i32 0, i64 %505
  %513 = getelementptr inbounds [5 x double]* %512, i32 0, i64 2
  %514 = load double* %513, align 8
  %515 = fmul double %503, %514
  %516 = load double* @tmp1, align 8
  %517 = fmul double %515, %516
  %518 = load i32* %j, align 4
  %519 = sext i32 %518 to i64
  %520 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %519
  %521 = getelementptr inbounds [5 x [5 x double]]* %520, i32 0, i64 4
  %522 = getelementptr inbounds [5 x double]* %521, i32 0, i64 4
  store double %517, double* %522, align 8
  %523 = load i32* %j, align 4
  %524 = sext i32 %523 to i64
  %525 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %524
  %526 = getelementptr inbounds [5 x [5 x double]]* %525, i32 0, i64 0
  %527 = getelementptr inbounds [5 x double]* %526, i32 0, i64 0
  store double 0.000000e+00, double* %527, align 8
  %528 = load i32* %j, align 4
  %529 = sext i32 %528 to i64
  %530 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %529
  %531 = getelementptr inbounds [5 x [5 x double]]* %530, i32 0, i64 1
  %532 = getelementptr inbounds [5 x double]* %531, i32 0, i64 0
  store double 0.000000e+00, double* %532, align 8
  %533 = load i32* %j, align 4
  %534 = sext i32 %533 to i64
  %535 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %534
  %536 = getelementptr inbounds [5 x [5 x double]]* %535, i32 0, i64 2
  %537 = getelementptr inbounds [5 x double]* %536, i32 0, i64 0
  store double 0.000000e+00, double* %537, align 8
  %538 = load i32* %j, align 4
  %539 = sext i32 %538 to i64
  %540 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %539
  %541 = getelementptr inbounds [5 x [5 x double]]* %540, i32 0, i64 3
  %542 = getelementptr inbounds [5 x double]* %541, i32 0, i64 0
  store double 0.000000e+00, double* %542, align 8
  %543 = load i32* %j, align 4
  %544 = sext i32 %543 to i64
  %545 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %544
  %546 = getelementptr inbounds [5 x [5 x double]]* %545, i32 0, i64 4
  %547 = getelementptr inbounds [5 x double]* %546, i32 0, i64 0
  store double 0.000000e+00, double* %547, align 8
  %548 = load double* @c3c4, align 8
  %549 = fsub double -0.000000e+00, %548
  %550 = load double* @tmp2, align 8
  %551 = fmul double %549, %550
  %552 = load i32* %i, align 4
  %553 = sext i32 %552 to i64
  %554 = load i32* %j, align 4
  %555 = sext i32 %554 to i64
  %556 = load i32* %k, align 4
  %557 = sext i32 %556 to i64
  %558 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %557
  %559 = getelementptr inbounds [13 x [13 x [5 x double]]]* %558, i32 0, i64 %555
  %560 = getelementptr inbounds [13 x [5 x double]]* %559, i32 0, i64 %553
  %561 = getelementptr inbounds [5 x double]* %560, i32 0, i64 1
  %562 = load double* %561, align 8
  %563 = fmul double %551, %562
  %564 = load i32* %j, align 4
  %565 = sext i32 %564 to i64
  %566 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %565
  %567 = getelementptr inbounds [5 x [5 x double]]* %566, i32 0, i64 0
  %568 = getelementptr inbounds [5 x double]* %567, i32 0, i64 1
  store double %563, double* %568, align 8
  %569 = load double* @c3c4, align 8
  %570 = load double* @tmp1, align 8
  %571 = fmul double %569, %570
  %572 = load i32* %j, align 4
  %573 = sext i32 %572 to i64
  %574 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %573
  %575 = getelementptr inbounds [5 x [5 x double]]* %574, i32 0, i64 1
  %576 = getelementptr inbounds [5 x double]* %575, i32 0, i64 1
  store double %571, double* %576, align 8
  %577 = load i32* %j, align 4
  %578 = sext i32 %577 to i64
  %579 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %578
  %580 = getelementptr inbounds [5 x [5 x double]]* %579, i32 0, i64 2
  %581 = getelementptr inbounds [5 x double]* %580, i32 0, i64 1
  store double 0.000000e+00, double* %581, align 8
  %582 = load i32* %j, align 4
  %583 = sext i32 %582 to i64
  %584 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %583
  %585 = getelementptr inbounds [5 x [5 x double]]* %584, i32 0, i64 3
  %586 = getelementptr inbounds [5 x double]* %585, i32 0, i64 1
  store double 0.000000e+00, double* %586, align 8
  %587 = load i32* %j, align 4
  %588 = sext i32 %587 to i64
  %589 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %588
  %590 = getelementptr inbounds [5 x [5 x double]]* %589, i32 0, i64 4
  %591 = getelementptr inbounds [5 x double]* %590, i32 0, i64 1
  store double 0.000000e+00, double* %591, align 8
  %592 = load double* @con43, align 8
  %593 = fsub double -0.000000e+00, %592
  %594 = load double* @c3c4, align 8
  %595 = fmul double %593, %594
  %596 = load double* @tmp2, align 8
  %597 = fmul double %595, %596
  %598 = load i32* %i, align 4
  %599 = sext i32 %598 to i64
  %600 = load i32* %j, align 4
  %601 = sext i32 %600 to i64
  %602 = load i32* %k, align 4
  %603 = sext i32 %602 to i64
  %604 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %603
  %605 = getelementptr inbounds [13 x [13 x [5 x double]]]* %604, i32 0, i64 %601
  %606 = getelementptr inbounds [13 x [5 x double]]* %605, i32 0, i64 %599
  %607 = getelementptr inbounds [5 x double]* %606, i32 0, i64 2
  %608 = load double* %607, align 8
  %609 = fmul double %597, %608
  %610 = load i32* %j, align 4
  %611 = sext i32 %610 to i64
  %612 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %611
  %613 = getelementptr inbounds [5 x [5 x double]]* %612, i32 0, i64 0
  %614 = getelementptr inbounds [5 x double]* %613, i32 0, i64 2
  store double %609, double* %614, align 8
  %615 = load i32* %j, align 4
  %616 = sext i32 %615 to i64
  %617 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %616
  %618 = getelementptr inbounds [5 x [5 x double]]* %617, i32 0, i64 1
  %619 = getelementptr inbounds [5 x double]* %618, i32 0, i64 2
  store double 0.000000e+00, double* %619, align 8
  %620 = load double* @con43, align 8
  %621 = load double* @c3c4, align 8
  %622 = fmul double %620, %621
  %623 = load double* @tmp1, align 8
  %624 = fmul double %622, %623
  %625 = load i32* %j, align 4
  %626 = sext i32 %625 to i64
  %627 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %626
  %628 = getelementptr inbounds [5 x [5 x double]]* %627, i32 0, i64 2
  %629 = getelementptr inbounds [5 x double]* %628, i32 0, i64 2
  store double %624, double* %629, align 8
  %630 = load i32* %j, align 4
  %631 = sext i32 %630 to i64
  %632 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %631
  %633 = getelementptr inbounds [5 x [5 x double]]* %632, i32 0, i64 3
  %634 = getelementptr inbounds [5 x double]* %633, i32 0, i64 2
  store double 0.000000e+00, double* %634, align 8
  %635 = load i32* %j, align 4
  %636 = sext i32 %635 to i64
  %637 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %636
  %638 = getelementptr inbounds [5 x [5 x double]]* %637, i32 0, i64 4
  %639 = getelementptr inbounds [5 x double]* %638, i32 0, i64 2
  store double 0.000000e+00, double* %639, align 8
  %640 = load double* @c3c4, align 8
  %641 = fsub double -0.000000e+00, %640
  %642 = load double* @tmp2, align 8
  %643 = fmul double %641, %642
  %644 = load i32* %i, align 4
  %645 = sext i32 %644 to i64
  %646 = load i32* %j, align 4
  %647 = sext i32 %646 to i64
  %648 = load i32* %k, align 4
  %649 = sext i32 %648 to i64
  %650 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %649
  %651 = getelementptr inbounds [13 x [13 x [5 x double]]]* %650, i32 0, i64 %647
  %652 = getelementptr inbounds [13 x [5 x double]]* %651, i32 0, i64 %645
  %653 = getelementptr inbounds [5 x double]* %652, i32 0, i64 3
  %654 = load double* %653, align 8
  %655 = fmul double %643, %654
  %656 = load i32* %j, align 4
  %657 = sext i32 %656 to i64
  %658 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %657
  %659 = getelementptr inbounds [5 x [5 x double]]* %658, i32 0, i64 0
  %660 = getelementptr inbounds [5 x double]* %659, i32 0, i64 3
  store double %655, double* %660, align 8
  %661 = load i32* %j, align 4
  %662 = sext i32 %661 to i64
  %663 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %662
  %664 = getelementptr inbounds [5 x [5 x double]]* %663, i32 0, i64 1
  %665 = getelementptr inbounds [5 x double]* %664, i32 0, i64 3
  store double 0.000000e+00, double* %665, align 8
  %666 = load i32* %j, align 4
  %667 = sext i32 %666 to i64
  %668 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %667
  %669 = getelementptr inbounds [5 x [5 x double]]* %668, i32 0, i64 2
  %670 = getelementptr inbounds [5 x double]* %669, i32 0, i64 3
  store double 0.000000e+00, double* %670, align 8
  %671 = load double* @c3c4, align 8
  %672 = load double* @tmp1, align 8
  %673 = fmul double %671, %672
  %674 = load i32* %j, align 4
  %675 = sext i32 %674 to i64
  %676 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %675
  %677 = getelementptr inbounds [5 x [5 x double]]* %676, i32 0, i64 3
  %678 = getelementptr inbounds [5 x double]* %677, i32 0, i64 3
  store double %673, double* %678, align 8
  %679 = load i32* %j, align 4
  %680 = sext i32 %679 to i64
  %681 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %680
  %682 = getelementptr inbounds [5 x [5 x double]]* %681, i32 0, i64 4
  %683 = getelementptr inbounds [5 x double]* %682, i32 0, i64 3
  store double 0.000000e+00, double* %683, align 8
  %684 = load double* @c3c4, align 8
  %685 = load double* @c1345, align 8
  %686 = fsub double %684, %685
  %687 = fsub double -0.000000e+00, %686
  %688 = load double* @tmp3, align 8
  %689 = fmul double %687, %688
  %690 = load i32* %i, align 4
  %691 = sext i32 %690 to i64
  %692 = load i32* %j, align 4
  %693 = sext i32 %692 to i64
  %694 = load i32* %k, align 4
  %695 = sext i32 %694 to i64
  %696 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %695
  %697 = getelementptr inbounds [13 x [13 x [5 x double]]]* %696, i32 0, i64 %693
  %698 = getelementptr inbounds [13 x [5 x double]]* %697, i32 0, i64 %691
  %699 = getelementptr inbounds [5 x double]* %698, i32 0, i64 1
  %700 = load double* %699, align 8
  %701 = load i32* %i, align 4
  %702 = sext i32 %701 to i64
  %703 = load i32* %j, align 4
  %704 = sext i32 %703 to i64
  %705 = load i32* %k, align 4
  %706 = sext i32 %705 to i64
  %707 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %706
  %708 = getelementptr inbounds [13 x [13 x [5 x double]]]* %707, i32 0, i64 %704
  %709 = getelementptr inbounds [13 x [5 x double]]* %708, i32 0, i64 %702
  %710 = getelementptr inbounds [5 x double]* %709, i32 0, i64 1
  %711 = load double* %710, align 8
  %712 = fmul double %700, %711
  %713 = fmul double %689, %712
  %714 = load double* @con43, align 8
  %715 = load double* @c3c4, align 8
  %716 = fmul double %714, %715
  %717 = load double* @c1345, align 8
  %718 = fsub double %716, %717
  %719 = load double* @tmp3, align 8
  %720 = fmul double %718, %719
  %721 = load i32* %i, align 4
  %722 = sext i32 %721 to i64
  %723 = load i32* %j, align 4
  %724 = sext i32 %723 to i64
  %725 = load i32* %k, align 4
  %726 = sext i32 %725 to i64
  %727 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %726
  %728 = getelementptr inbounds [13 x [13 x [5 x double]]]* %727, i32 0, i64 %724
  %729 = getelementptr inbounds [13 x [5 x double]]* %728, i32 0, i64 %722
  %730 = getelementptr inbounds [5 x double]* %729, i32 0, i64 2
  %731 = load double* %730, align 8
  %732 = load i32* %i, align 4
  %733 = sext i32 %732 to i64
  %734 = load i32* %j, align 4
  %735 = sext i32 %734 to i64
  %736 = load i32* %k, align 4
  %737 = sext i32 %736 to i64
  %738 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %737
  %739 = getelementptr inbounds [13 x [13 x [5 x double]]]* %738, i32 0, i64 %735
  %740 = getelementptr inbounds [13 x [5 x double]]* %739, i32 0, i64 %733
  %741 = getelementptr inbounds [5 x double]* %740, i32 0, i64 2
  %742 = load double* %741, align 8
  %743 = fmul double %731, %742
  %744 = fmul double %720, %743
  %745 = fsub double %713, %744
  %746 = load double* @c3c4, align 8
  %747 = load double* @c1345, align 8
  %748 = fsub double %746, %747
  %749 = load double* @tmp3, align 8
  %750 = fmul double %748, %749
  %751 = load i32* %i, align 4
  %752 = sext i32 %751 to i64
  %753 = load i32* %j, align 4
  %754 = sext i32 %753 to i64
  %755 = load i32* %k, align 4
  %756 = sext i32 %755 to i64
  %757 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %756
  %758 = getelementptr inbounds [13 x [13 x [5 x double]]]* %757, i32 0, i64 %754
  %759 = getelementptr inbounds [13 x [5 x double]]* %758, i32 0, i64 %752
  %760 = getelementptr inbounds [5 x double]* %759, i32 0, i64 3
  %761 = load double* %760, align 8
  %762 = load i32* %i, align 4
  %763 = sext i32 %762 to i64
  %764 = load i32* %j, align 4
  %765 = sext i32 %764 to i64
  %766 = load i32* %k, align 4
  %767 = sext i32 %766 to i64
  %768 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %767
  %769 = getelementptr inbounds [13 x [13 x [5 x double]]]* %768, i32 0, i64 %765
  %770 = getelementptr inbounds [13 x [5 x double]]* %769, i32 0, i64 %763
  %771 = getelementptr inbounds [5 x double]* %770, i32 0, i64 3
  %772 = load double* %771, align 8
  %773 = fmul double %761, %772
  %774 = fmul double %750, %773
  %775 = fsub double %745, %774
  %776 = load double* @c1345, align 8
  %777 = load double* @tmp2, align 8
  %778 = fmul double %776, %777
  %779 = load i32* %i, align 4
  %780 = sext i32 %779 to i64
  %781 = load i32* %j, align 4
  %782 = sext i32 %781 to i64
  %783 = load i32* %k, align 4
  %784 = sext i32 %783 to i64
  %785 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %784
  %786 = getelementptr inbounds [13 x [13 x [5 x double]]]* %785, i32 0, i64 %782
  %787 = getelementptr inbounds [13 x [5 x double]]* %786, i32 0, i64 %780
  %788 = getelementptr inbounds [5 x double]* %787, i32 0, i64 4
  %789 = load double* %788, align 8
  %790 = fmul double %778, %789
  %791 = fsub double %775, %790
  %792 = load i32* %j, align 4
  %793 = sext i32 %792 to i64
  %794 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %793
  %795 = getelementptr inbounds [5 x [5 x double]]* %794, i32 0, i64 0
  %796 = getelementptr inbounds [5 x double]* %795, i32 0, i64 4
  store double %791, double* %796, align 8
  %797 = load double* @c3c4, align 8
  %798 = load double* @c1345, align 8
  %799 = fsub double %797, %798
  %800 = load double* @tmp2, align 8
  %801 = fmul double %799, %800
  %802 = load i32* %i, align 4
  %803 = sext i32 %802 to i64
  %804 = load i32* %j, align 4
  %805 = sext i32 %804 to i64
  %806 = load i32* %k, align 4
  %807 = sext i32 %806 to i64
  %808 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %807
  %809 = getelementptr inbounds [13 x [13 x [5 x double]]]* %808, i32 0, i64 %805
  %810 = getelementptr inbounds [13 x [5 x double]]* %809, i32 0, i64 %803
  %811 = getelementptr inbounds [5 x double]* %810, i32 0, i64 1
  %812 = load double* %811, align 8
  %813 = fmul double %801, %812
  %814 = load i32* %j, align 4
  %815 = sext i32 %814 to i64
  %816 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %815
  %817 = getelementptr inbounds [5 x [5 x double]]* %816, i32 0, i64 1
  %818 = getelementptr inbounds [5 x double]* %817, i32 0, i64 4
  store double %813, double* %818, align 8
  %819 = load double* @con43, align 8
  %820 = load double* @c3c4, align 8
  %821 = fmul double %819, %820
  %822 = load double* @c1345, align 8
  %823 = fsub double %821, %822
  %824 = load double* @tmp2, align 8
  %825 = fmul double %823, %824
  %826 = load i32* %i, align 4
  %827 = sext i32 %826 to i64
  %828 = load i32* %j, align 4
  %829 = sext i32 %828 to i64
  %830 = load i32* %k, align 4
  %831 = sext i32 %830 to i64
  %832 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %831
  %833 = getelementptr inbounds [13 x [13 x [5 x double]]]* %832, i32 0, i64 %829
  %834 = getelementptr inbounds [13 x [5 x double]]* %833, i32 0, i64 %827
  %835 = getelementptr inbounds [5 x double]* %834, i32 0, i64 2
  %836 = load double* %835, align 8
  %837 = fmul double %825, %836
  %838 = load i32* %j, align 4
  %839 = sext i32 %838 to i64
  %840 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %839
  %841 = getelementptr inbounds [5 x [5 x double]]* %840, i32 0, i64 2
  %842 = getelementptr inbounds [5 x double]* %841, i32 0, i64 4
  store double %837, double* %842, align 8
  %843 = load double* @c3c4, align 8
  %844 = load double* @c1345, align 8
  %845 = fsub double %843, %844
  %846 = load double* @tmp2, align 8
  %847 = fmul double %845, %846
  %848 = load i32* %i, align 4
  %849 = sext i32 %848 to i64
  %850 = load i32* %j, align 4
  %851 = sext i32 %850 to i64
  %852 = load i32* %k, align 4
  %853 = sext i32 %852 to i64
  %854 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %853
  %855 = getelementptr inbounds [13 x [13 x [5 x double]]]* %854, i32 0, i64 %851
  %856 = getelementptr inbounds [13 x [5 x double]]* %855, i32 0, i64 %849
  %857 = getelementptr inbounds [5 x double]* %856, i32 0, i64 3
  %858 = load double* %857, align 8
  %859 = fmul double %847, %858
  %860 = load i32* %j, align 4
  %861 = sext i32 %860 to i64
  %862 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %861
  %863 = getelementptr inbounds [5 x [5 x double]]* %862, i32 0, i64 3
  %864 = getelementptr inbounds [5 x double]* %863, i32 0, i64 4
  store double %859, double* %864, align 8
  %865 = load double* @c1345, align 8
  %866 = load double* @tmp1, align 8
  %867 = fmul double %865, %866
  %868 = load i32* %j, align 4
  %869 = sext i32 %868 to i64
  %870 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %869
  %871 = getelementptr inbounds [5 x [5 x double]]* %870, i32 0, i64 4
  %872 = getelementptr inbounds [5 x double]* %871, i32 0, i64 4
  store double %867, double* %872, align 8
  br label %873

; <label>:873                                     ; preds = %23
  %874 = load i32* %j, align 4
  %875 = add nsw i32 %874, 1
  store i32 %875, i32* %j, align 4
  br label %19

; <label>:876                                     ; preds = %19
  %877 = load i32* %jsize, align 4
  call void @lhsinit([3 x [5 x [5 x double]]]* getelementptr inbounds ([13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i32 0), i32 %877)
  store i32 1, i32* %j, align 4
  br label %878

; <label>:878                                     ; preds = %2610, %876
  %879 = load i32* %j, align 4
  %880 = load i32* %jsize, align 4
  %881 = sub nsw i32 %880, 1
  %882 = icmp sle i32 %879, %881
  br i1 %882, label %883, label %2613

; <label>:883                                     ; preds = %878
  %884 = load double* @dt, align 8
  %885 = load double* @ty1, align 8
  %886 = fmul double %884, %885
  store double %886, double* @tmp1, align 8
  %887 = load double* @dt, align 8
  %888 = load double* @ty2, align 8
  %889 = fmul double %887, %888
  store double %889, double* @tmp2, align 8
  %890 = load double* @tmp2, align 8
  %891 = fsub double -0.000000e+00, %890
  %892 = load i32* %j, align 4
  %893 = sub nsw i32 %892, 1
  %894 = sext i32 %893 to i64
  %895 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %894
  %896 = getelementptr inbounds [5 x [5 x double]]* %895, i32 0, i64 0
  %897 = getelementptr inbounds [5 x double]* %896, i32 0, i64 0
  %898 = load double* %897, align 8
  %899 = fmul double %891, %898
  %900 = load double* @tmp1, align 8
  %901 = load i32* %j, align 4
  %902 = sub nsw i32 %901, 1
  %903 = sext i32 %902 to i64
  %904 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %903
  %905 = getelementptr inbounds [5 x [5 x double]]* %904, i32 0, i64 0
  %906 = getelementptr inbounds [5 x double]* %905, i32 0, i64 0
  %907 = load double* %906, align 8
  %908 = fmul double %900, %907
  %909 = fsub double %899, %908
  %910 = load double* @tmp1, align 8
  %911 = load double* @dy1, align 8
  %912 = fmul double %910, %911
  %913 = fsub double %909, %912
  %914 = load i32* %j, align 4
  %915 = sext i32 %914 to i64
  %916 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %915
  %917 = getelementptr inbounds [3 x [5 x [5 x double]]]* %916, i32 0, i64 0
  %918 = getelementptr inbounds [5 x [5 x double]]* %917, i32 0, i64 0
  %919 = getelementptr inbounds [5 x double]* %918, i32 0, i64 0
  store double %913, double* %919, align 8
  %920 = load double* @tmp2, align 8
  %921 = fsub double -0.000000e+00, %920
  %922 = load i32* %j, align 4
  %923 = sub nsw i32 %922, 1
  %924 = sext i32 %923 to i64
  %925 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %924
  %926 = getelementptr inbounds [5 x [5 x double]]* %925, i32 0, i64 1
  %927 = getelementptr inbounds [5 x double]* %926, i32 0, i64 0
  %928 = load double* %927, align 8
  %929 = fmul double %921, %928
  %930 = load double* @tmp1, align 8
  %931 = load i32* %j, align 4
  %932 = sub nsw i32 %931, 1
  %933 = sext i32 %932 to i64
  %934 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %933
  %935 = getelementptr inbounds [5 x [5 x double]]* %934, i32 0, i64 1
  %936 = getelementptr inbounds [5 x double]* %935, i32 0, i64 0
  %937 = load double* %936, align 8
  %938 = fmul double %930, %937
  %939 = fsub double %929, %938
  %940 = load i32* %j, align 4
  %941 = sext i32 %940 to i64
  %942 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %941
  %943 = getelementptr inbounds [3 x [5 x [5 x double]]]* %942, i32 0, i64 0
  %944 = getelementptr inbounds [5 x [5 x double]]* %943, i32 0, i64 1
  %945 = getelementptr inbounds [5 x double]* %944, i32 0, i64 0
  store double %939, double* %945, align 8
  %946 = load double* @tmp2, align 8
  %947 = fsub double -0.000000e+00, %946
  %948 = load i32* %j, align 4
  %949 = sub nsw i32 %948, 1
  %950 = sext i32 %949 to i64
  %951 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %950
  %952 = getelementptr inbounds [5 x [5 x double]]* %951, i32 0, i64 2
  %953 = getelementptr inbounds [5 x double]* %952, i32 0, i64 0
  %954 = load double* %953, align 8
  %955 = fmul double %947, %954
  %956 = load double* @tmp1, align 8
  %957 = load i32* %j, align 4
  %958 = sub nsw i32 %957, 1
  %959 = sext i32 %958 to i64
  %960 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %959
  %961 = getelementptr inbounds [5 x [5 x double]]* %960, i32 0, i64 2
  %962 = getelementptr inbounds [5 x double]* %961, i32 0, i64 0
  %963 = load double* %962, align 8
  %964 = fmul double %956, %963
  %965 = fsub double %955, %964
  %966 = load i32* %j, align 4
  %967 = sext i32 %966 to i64
  %968 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %967
  %969 = getelementptr inbounds [3 x [5 x [5 x double]]]* %968, i32 0, i64 0
  %970 = getelementptr inbounds [5 x [5 x double]]* %969, i32 0, i64 2
  %971 = getelementptr inbounds [5 x double]* %970, i32 0, i64 0
  store double %965, double* %971, align 8
  %972 = load double* @tmp2, align 8
  %973 = fsub double -0.000000e+00, %972
  %974 = load i32* %j, align 4
  %975 = sub nsw i32 %974, 1
  %976 = sext i32 %975 to i64
  %977 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %976
  %978 = getelementptr inbounds [5 x [5 x double]]* %977, i32 0, i64 3
  %979 = getelementptr inbounds [5 x double]* %978, i32 0, i64 0
  %980 = load double* %979, align 8
  %981 = fmul double %973, %980
  %982 = load double* @tmp1, align 8
  %983 = load i32* %j, align 4
  %984 = sub nsw i32 %983, 1
  %985 = sext i32 %984 to i64
  %986 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %985
  %987 = getelementptr inbounds [5 x [5 x double]]* %986, i32 0, i64 3
  %988 = getelementptr inbounds [5 x double]* %987, i32 0, i64 0
  %989 = load double* %988, align 8
  %990 = fmul double %982, %989
  %991 = fsub double %981, %990
  %992 = load i32* %j, align 4
  %993 = sext i32 %992 to i64
  %994 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %993
  %995 = getelementptr inbounds [3 x [5 x [5 x double]]]* %994, i32 0, i64 0
  %996 = getelementptr inbounds [5 x [5 x double]]* %995, i32 0, i64 3
  %997 = getelementptr inbounds [5 x double]* %996, i32 0, i64 0
  store double %991, double* %997, align 8
  %998 = load double* @tmp2, align 8
  %999 = fsub double -0.000000e+00, %998
  %1000 = load i32* %j, align 4
  %1001 = sub nsw i32 %1000, 1
  %1002 = sext i32 %1001 to i64
  %1003 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1002
  %1004 = getelementptr inbounds [5 x [5 x double]]* %1003, i32 0, i64 4
  %1005 = getelementptr inbounds [5 x double]* %1004, i32 0, i64 0
  %1006 = load double* %1005, align 8
  %1007 = fmul double %999, %1006
  %1008 = load double* @tmp1, align 8
  %1009 = load i32* %j, align 4
  %1010 = sub nsw i32 %1009, 1
  %1011 = sext i32 %1010 to i64
  %1012 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1011
  %1013 = getelementptr inbounds [5 x [5 x double]]* %1012, i32 0, i64 4
  %1014 = getelementptr inbounds [5 x double]* %1013, i32 0, i64 0
  %1015 = load double* %1014, align 8
  %1016 = fmul double %1008, %1015
  %1017 = fsub double %1007, %1016
  %1018 = load i32* %j, align 4
  %1019 = sext i32 %1018 to i64
  %1020 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1019
  %1021 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1020, i32 0, i64 0
  %1022 = getelementptr inbounds [5 x [5 x double]]* %1021, i32 0, i64 4
  %1023 = getelementptr inbounds [5 x double]* %1022, i32 0, i64 0
  store double %1017, double* %1023, align 8
  %1024 = load double* @tmp2, align 8
  %1025 = fsub double -0.000000e+00, %1024
  %1026 = load i32* %j, align 4
  %1027 = sub nsw i32 %1026, 1
  %1028 = sext i32 %1027 to i64
  %1029 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1028
  %1030 = getelementptr inbounds [5 x [5 x double]]* %1029, i32 0, i64 0
  %1031 = getelementptr inbounds [5 x double]* %1030, i32 0, i64 1
  %1032 = load double* %1031, align 8
  %1033 = fmul double %1025, %1032
  %1034 = load double* @tmp1, align 8
  %1035 = load i32* %j, align 4
  %1036 = sub nsw i32 %1035, 1
  %1037 = sext i32 %1036 to i64
  %1038 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1037
  %1039 = getelementptr inbounds [5 x [5 x double]]* %1038, i32 0, i64 0
  %1040 = getelementptr inbounds [5 x double]* %1039, i32 0, i64 1
  %1041 = load double* %1040, align 8
  %1042 = fmul double %1034, %1041
  %1043 = fsub double %1033, %1042
  %1044 = load i32* %j, align 4
  %1045 = sext i32 %1044 to i64
  %1046 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1045
  %1047 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1046, i32 0, i64 0
  %1048 = getelementptr inbounds [5 x [5 x double]]* %1047, i32 0, i64 0
  %1049 = getelementptr inbounds [5 x double]* %1048, i32 0, i64 1
  store double %1043, double* %1049, align 8
  %1050 = load double* @tmp2, align 8
  %1051 = fsub double -0.000000e+00, %1050
  %1052 = load i32* %j, align 4
  %1053 = sub nsw i32 %1052, 1
  %1054 = sext i32 %1053 to i64
  %1055 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1054
  %1056 = getelementptr inbounds [5 x [5 x double]]* %1055, i32 0, i64 1
  %1057 = getelementptr inbounds [5 x double]* %1056, i32 0, i64 1
  %1058 = load double* %1057, align 8
  %1059 = fmul double %1051, %1058
  %1060 = load double* @tmp1, align 8
  %1061 = load i32* %j, align 4
  %1062 = sub nsw i32 %1061, 1
  %1063 = sext i32 %1062 to i64
  %1064 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1063
  %1065 = getelementptr inbounds [5 x [5 x double]]* %1064, i32 0, i64 1
  %1066 = getelementptr inbounds [5 x double]* %1065, i32 0, i64 1
  %1067 = load double* %1066, align 8
  %1068 = fmul double %1060, %1067
  %1069 = fsub double %1059, %1068
  %1070 = load double* @tmp1, align 8
  %1071 = load double* @dy2, align 8
  %1072 = fmul double %1070, %1071
  %1073 = fsub double %1069, %1072
  %1074 = load i32* %j, align 4
  %1075 = sext i32 %1074 to i64
  %1076 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1075
  %1077 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1076, i32 0, i64 0
  %1078 = getelementptr inbounds [5 x [5 x double]]* %1077, i32 0, i64 1
  %1079 = getelementptr inbounds [5 x double]* %1078, i32 0, i64 1
  store double %1073, double* %1079, align 8
  %1080 = load double* @tmp2, align 8
  %1081 = fsub double -0.000000e+00, %1080
  %1082 = load i32* %j, align 4
  %1083 = sub nsw i32 %1082, 1
  %1084 = sext i32 %1083 to i64
  %1085 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1084
  %1086 = getelementptr inbounds [5 x [5 x double]]* %1085, i32 0, i64 2
  %1087 = getelementptr inbounds [5 x double]* %1086, i32 0, i64 1
  %1088 = load double* %1087, align 8
  %1089 = fmul double %1081, %1088
  %1090 = load double* @tmp1, align 8
  %1091 = load i32* %j, align 4
  %1092 = sub nsw i32 %1091, 1
  %1093 = sext i32 %1092 to i64
  %1094 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1093
  %1095 = getelementptr inbounds [5 x [5 x double]]* %1094, i32 0, i64 2
  %1096 = getelementptr inbounds [5 x double]* %1095, i32 0, i64 1
  %1097 = load double* %1096, align 8
  %1098 = fmul double %1090, %1097
  %1099 = fsub double %1089, %1098
  %1100 = load i32* %j, align 4
  %1101 = sext i32 %1100 to i64
  %1102 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1101
  %1103 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1102, i32 0, i64 0
  %1104 = getelementptr inbounds [5 x [5 x double]]* %1103, i32 0, i64 2
  %1105 = getelementptr inbounds [5 x double]* %1104, i32 0, i64 1
  store double %1099, double* %1105, align 8
  %1106 = load double* @tmp2, align 8
  %1107 = fsub double -0.000000e+00, %1106
  %1108 = load i32* %j, align 4
  %1109 = sub nsw i32 %1108, 1
  %1110 = sext i32 %1109 to i64
  %1111 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1110
  %1112 = getelementptr inbounds [5 x [5 x double]]* %1111, i32 0, i64 3
  %1113 = getelementptr inbounds [5 x double]* %1112, i32 0, i64 1
  %1114 = load double* %1113, align 8
  %1115 = fmul double %1107, %1114
  %1116 = load double* @tmp1, align 8
  %1117 = load i32* %j, align 4
  %1118 = sub nsw i32 %1117, 1
  %1119 = sext i32 %1118 to i64
  %1120 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1119
  %1121 = getelementptr inbounds [5 x [5 x double]]* %1120, i32 0, i64 3
  %1122 = getelementptr inbounds [5 x double]* %1121, i32 0, i64 1
  %1123 = load double* %1122, align 8
  %1124 = fmul double %1116, %1123
  %1125 = fsub double %1115, %1124
  %1126 = load i32* %j, align 4
  %1127 = sext i32 %1126 to i64
  %1128 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1127
  %1129 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1128, i32 0, i64 0
  %1130 = getelementptr inbounds [5 x [5 x double]]* %1129, i32 0, i64 3
  %1131 = getelementptr inbounds [5 x double]* %1130, i32 0, i64 1
  store double %1125, double* %1131, align 8
  %1132 = load double* @tmp2, align 8
  %1133 = fsub double -0.000000e+00, %1132
  %1134 = load i32* %j, align 4
  %1135 = sub nsw i32 %1134, 1
  %1136 = sext i32 %1135 to i64
  %1137 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1136
  %1138 = getelementptr inbounds [5 x [5 x double]]* %1137, i32 0, i64 4
  %1139 = getelementptr inbounds [5 x double]* %1138, i32 0, i64 1
  %1140 = load double* %1139, align 8
  %1141 = fmul double %1133, %1140
  %1142 = load double* @tmp1, align 8
  %1143 = load i32* %j, align 4
  %1144 = sub nsw i32 %1143, 1
  %1145 = sext i32 %1144 to i64
  %1146 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1145
  %1147 = getelementptr inbounds [5 x [5 x double]]* %1146, i32 0, i64 4
  %1148 = getelementptr inbounds [5 x double]* %1147, i32 0, i64 1
  %1149 = load double* %1148, align 8
  %1150 = fmul double %1142, %1149
  %1151 = fsub double %1141, %1150
  %1152 = load i32* %j, align 4
  %1153 = sext i32 %1152 to i64
  %1154 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1153
  %1155 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1154, i32 0, i64 0
  %1156 = getelementptr inbounds [5 x [5 x double]]* %1155, i32 0, i64 4
  %1157 = getelementptr inbounds [5 x double]* %1156, i32 0, i64 1
  store double %1151, double* %1157, align 8
  %1158 = load double* @tmp2, align 8
  %1159 = fsub double -0.000000e+00, %1158
  %1160 = load i32* %j, align 4
  %1161 = sub nsw i32 %1160, 1
  %1162 = sext i32 %1161 to i64
  %1163 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1162
  %1164 = getelementptr inbounds [5 x [5 x double]]* %1163, i32 0, i64 0
  %1165 = getelementptr inbounds [5 x double]* %1164, i32 0, i64 2
  %1166 = load double* %1165, align 8
  %1167 = fmul double %1159, %1166
  %1168 = load double* @tmp1, align 8
  %1169 = load i32* %j, align 4
  %1170 = sub nsw i32 %1169, 1
  %1171 = sext i32 %1170 to i64
  %1172 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1171
  %1173 = getelementptr inbounds [5 x [5 x double]]* %1172, i32 0, i64 0
  %1174 = getelementptr inbounds [5 x double]* %1173, i32 0, i64 2
  %1175 = load double* %1174, align 8
  %1176 = fmul double %1168, %1175
  %1177 = fsub double %1167, %1176
  %1178 = load i32* %j, align 4
  %1179 = sext i32 %1178 to i64
  %1180 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1179
  %1181 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1180, i32 0, i64 0
  %1182 = getelementptr inbounds [5 x [5 x double]]* %1181, i32 0, i64 0
  %1183 = getelementptr inbounds [5 x double]* %1182, i32 0, i64 2
  store double %1177, double* %1183, align 8
  %1184 = load double* @tmp2, align 8
  %1185 = fsub double -0.000000e+00, %1184
  %1186 = load i32* %j, align 4
  %1187 = sub nsw i32 %1186, 1
  %1188 = sext i32 %1187 to i64
  %1189 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1188
  %1190 = getelementptr inbounds [5 x [5 x double]]* %1189, i32 0, i64 1
  %1191 = getelementptr inbounds [5 x double]* %1190, i32 0, i64 2
  %1192 = load double* %1191, align 8
  %1193 = fmul double %1185, %1192
  %1194 = load double* @tmp1, align 8
  %1195 = load i32* %j, align 4
  %1196 = sub nsw i32 %1195, 1
  %1197 = sext i32 %1196 to i64
  %1198 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1197
  %1199 = getelementptr inbounds [5 x [5 x double]]* %1198, i32 0, i64 1
  %1200 = getelementptr inbounds [5 x double]* %1199, i32 0, i64 2
  %1201 = load double* %1200, align 8
  %1202 = fmul double %1194, %1201
  %1203 = fsub double %1193, %1202
  %1204 = load i32* %j, align 4
  %1205 = sext i32 %1204 to i64
  %1206 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1205
  %1207 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1206, i32 0, i64 0
  %1208 = getelementptr inbounds [5 x [5 x double]]* %1207, i32 0, i64 1
  %1209 = getelementptr inbounds [5 x double]* %1208, i32 0, i64 2
  store double %1203, double* %1209, align 8
  %1210 = load double* @tmp2, align 8
  %1211 = fsub double -0.000000e+00, %1210
  %1212 = load i32* %j, align 4
  %1213 = sub nsw i32 %1212, 1
  %1214 = sext i32 %1213 to i64
  %1215 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1214
  %1216 = getelementptr inbounds [5 x [5 x double]]* %1215, i32 0, i64 2
  %1217 = getelementptr inbounds [5 x double]* %1216, i32 0, i64 2
  %1218 = load double* %1217, align 8
  %1219 = fmul double %1211, %1218
  %1220 = load double* @tmp1, align 8
  %1221 = load i32* %j, align 4
  %1222 = sub nsw i32 %1221, 1
  %1223 = sext i32 %1222 to i64
  %1224 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1223
  %1225 = getelementptr inbounds [5 x [5 x double]]* %1224, i32 0, i64 2
  %1226 = getelementptr inbounds [5 x double]* %1225, i32 0, i64 2
  %1227 = load double* %1226, align 8
  %1228 = fmul double %1220, %1227
  %1229 = fsub double %1219, %1228
  %1230 = load double* @tmp1, align 8
  %1231 = load double* @dy3, align 8
  %1232 = fmul double %1230, %1231
  %1233 = fsub double %1229, %1232
  %1234 = load i32* %j, align 4
  %1235 = sext i32 %1234 to i64
  %1236 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1235
  %1237 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1236, i32 0, i64 0
  %1238 = getelementptr inbounds [5 x [5 x double]]* %1237, i32 0, i64 2
  %1239 = getelementptr inbounds [5 x double]* %1238, i32 0, i64 2
  store double %1233, double* %1239, align 8
  %1240 = load double* @tmp2, align 8
  %1241 = fsub double -0.000000e+00, %1240
  %1242 = load i32* %j, align 4
  %1243 = sub nsw i32 %1242, 1
  %1244 = sext i32 %1243 to i64
  %1245 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1244
  %1246 = getelementptr inbounds [5 x [5 x double]]* %1245, i32 0, i64 3
  %1247 = getelementptr inbounds [5 x double]* %1246, i32 0, i64 2
  %1248 = load double* %1247, align 8
  %1249 = fmul double %1241, %1248
  %1250 = load double* @tmp1, align 8
  %1251 = load i32* %j, align 4
  %1252 = sub nsw i32 %1251, 1
  %1253 = sext i32 %1252 to i64
  %1254 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1253
  %1255 = getelementptr inbounds [5 x [5 x double]]* %1254, i32 0, i64 3
  %1256 = getelementptr inbounds [5 x double]* %1255, i32 0, i64 2
  %1257 = load double* %1256, align 8
  %1258 = fmul double %1250, %1257
  %1259 = fsub double %1249, %1258
  %1260 = load i32* %j, align 4
  %1261 = sext i32 %1260 to i64
  %1262 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1261
  %1263 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1262, i32 0, i64 0
  %1264 = getelementptr inbounds [5 x [5 x double]]* %1263, i32 0, i64 3
  %1265 = getelementptr inbounds [5 x double]* %1264, i32 0, i64 2
  store double %1259, double* %1265, align 8
  %1266 = load double* @tmp2, align 8
  %1267 = fsub double -0.000000e+00, %1266
  %1268 = load i32* %j, align 4
  %1269 = sub nsw i32 %1268, 1
  %1270 = sext i32 %1269 to i64
  %1271 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1270
  %1272 = getelementptr inbounds [5 x [5 x double]]* %1271, i32 0, i64 4
  %1273 = getelementptr inbounds [5 x double]* %1272, i32 0, i64 2
  %1274 = load double* %1273, align 8
  %1275 = fmul double %1267, %1274
  %1276 = load double* @tmp1, align 8
  %1277 = load i32* %j, align 4
  %1278 = sub nsw i32 %1277, 1
  %1279 = sext i32 %1278 to i64
  %1280 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1279
  %1281 = getelementptr inbounds [5 x [5 x double]]* %1280, i32 0, i64 4
  %1282 = getelementptr inbounds [5 x double]* %1281, i32 0, i64 2
  %1283 = load double* %1282, align 8
  %1284 = fmul double %1276, %1283
  %1285 = fsub double %1275, %1284
  %1286 = load i32* %j, align 4
  %1287 = sext i32 %1286 to i64
  %1288 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1287
  %1289 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1288, i32 0, i64 0
  %1290 = getelementptr inbounds [5 x [5 x double]]* %1289, i32 0, i64 4
  %1291 = getelementptr inbounds [5 x double]* %1290, i32 0, i64 2
  store double %1285, double* %1291, align 8
  %1292 = load double* @tmp2, align 8
  %1293 = fsub double -0.000000e+00, %1292
  %1294 = load i32* %j, align 4
  %1295 = sub nsw i32 %1294, 1
  %1296 = sext i32 %1295 to i64
  %1297 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1296
  %1298 = getelementptr inbounds [5 x [5 x double]]* %1297, i32 0, i64 0
  %1299 = getelementptr inbounds [5 x double]* %1298, i32 0, i64 3
  %1300 = load double* %1299, align 8
  %1301 = fmul double %1293, %1300
  %1302 = load double* @tmp1, align 8
  %1303 = load i32* %j, align 4
  %1304 = sub nsw i32 %1303, 1
  %1305 = sext i32 %1304 to i64
  %1306 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1305
  %1307 = getelementptr inbounds [5 x [5 x double]]* %1306, i32 0, i64 0
  %1308 = getelementptr inbounds [5 x double]* %1307, i32 0, i64 3
  %1309 = load double* %1308, align 8
  %1310 = fmul double %1302, %1309
  %1311 = fsub double %1301, %1310
  %1312 = load i32* %j, align 4
  %1313 = sext i32 %1312 to i64
  %1314 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1313
  %1315 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1314, i32 0, i64 0
  %1316 = getelementptr inbounds [5 x [5 x double]]* %1315, i32 0, i64 0
  %1317 = getelementptr inbounds [5 x double]* %1316, i32 0, i64 3
  store double %1311, double* %1317, align 8
  %1318 = load double* @tmp2, align 8
  %1319 = fsub double -0.000000e+00, %1318
  %1320 = load i32* %j, align 4
  %1321 = sub nsw i32 %1320, 1
  %1322 = sext i32 %1321 to i64
  %1323 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1322
  %1324 = getelementptr inbounds [5 x [5 x double]]* %1323, i32 0, i64 1
  %1325 = getelementptr inbounds [5 x double]* %1324, i32 0, i64 3
  %1326 = load double* %1325, align 8
  %1327 = fmul double %1319, %1326
  %1328 = load double* @tmp1, align 8
  %1329 = load i32* %j, align 4
  %1330 = sub nsw i32 %1329, 1
  %1331 = sext i32 %1330 to i64
  %1332 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1331
  %1333 = getelementptr inbounds [5 x [5 x double]]* %1332, i32 0, i64 1
  %1334 = getelementptr inbounds [5 x double]* %1333, i32 0, i64 3
  %1335 = load double* %1334, align 8
  %1336 = fmul double %1328, %1335
  %1337 = fsub double %1327, %1336
  %1338 = load i32* %j, align 4
  %1339 = sext i32 %1338 to i64
  %1340 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1339
  %1341 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1340, i32 0, i64 0
  %1342 = getelementptr inbounds [5 x [5 x double]]* %1341, i32 0, i64 1
  %1343 = getelementptr inbounds [5 x double]* %1342, i32 0, i64 3
  store double %1337, double* %1343, align 8
  %1344 = load double* @tmp2, align 8
  %1345 = fsub double -0.000000e+00, %1344
  %1346 = load i32* %j, align 4
  %1347 = sub nsw i32 %1346, 1
  %1348 = sext i32 %1347 to i64
  %1349 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1348
  %1350 = getelementptr inbounds [5 x [5 x double]]* %1349, i32 0, i64 2
  %1351 = getelementptr inbounds [5 x double]* %1350, i32 0, i64 3
  %1352 = load double* %1351, align 8
  %1353 = fmul double %1345, %1352
  %1354 = load double* @tmp1, align 8
  %1355 = load i32* %j, align 4
  %1356 = sub nsw i32 %1355, 1
  %1357 = sext i32 %1356 to i64
  %1358 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1357
  %1359 = getelementptr inbounds [5 x [5 x double]]* %1358, i32 0, i64 2
  %1360 = getelementptr inbounds [5 x double]* %1359, i32 0, i64 3
  %1361 = load double* %1360, align 8
  %1362 = fmul double %1354, %1361
  %1363 = fsub double %1353, %1362
  %1364 = load i32* %j, align 4
  %1365 = sext i32 %1364 to i64
  %1366 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1365
  %1367 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1366, i32 0, i64 0
  %1368 = getelementptr inbounds [5 x [5 x double]]* %1367, i32 0, i64 2
  %1369 = getelementptr inbounds [5 x double]* %1368, i32 0, i64 3
  store double %1363, double* %1369, align 8
  %1370 = load double* @tmp2, align 8
  %1371 = fsub double -0.000000e+00, %1370
  %1372 = load i32* %j, align 4
  %1373 = sub nsw i32 %1372, 1
  %1374 = sext i32 %1373 to i64
  %1375 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1374
  %1376 = getelementptr inbounds [5 x [5 x double]]* %1375, i32 0, i64 3
  %1377 = getelementptr inbounds [5 x double]* %1376, i32 0, i64 3
  %1378 = load double* %1377, align 8
  %1379 = fmul double %1371, %1378
  %1380 = load double* @tmp1, align 8
  %1381 = load i32* %j, align 4
  %1382 = sub nsw i32 %1381, 1
  %1383 = sext i32 %1382 to i64
  %1384 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1383
  %1385 = getelementptr inbounds [5 x [5 x double]]* %1384, i32 0, i64 3
  %1386 = getelementptr inbounds [5 x double]* %1385, i32 0, i64 3
  %1387 = load double* %1386, align 8
  %1388 = fmul double %1380, %1387
  %1389 = fsub double %1379, %1388
  %1390 = load double* @tmp1, align 8
  %1391 = load double* @dy4, align 8
  %1392 = fmul double %1390, %1391
  %1393 = fsub double %1389, %1392
  %1394 = load i32* %j, align 4
  %1395 = sext i32 %1394 to i64
  %1396 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1395
  %1397 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1396, i32 0, i64 0
  %1398 = getelementptr inbounds [5 x [5 x double]]* %1397, i32 0, i64 3
  %1399 = getelementptr inbounds [5 x double]* %1398, i32 0, i64 3
  store double %1393, double* %1399, align 8
  %1400 = load double* @tmp2, align 8
  %1401 = fsub double -0.000000e+00, %1400
  %1402 = load i32* %j, align 4
  %1403 = sub nsw i32 %1402, 1
  %1404 = sext i32 %1403 to i64
  %1405 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1404
  %1406 = getelementptr inbounds [5 x [5 x double]]* %1405, i32 0, i64 4
  %1407 = getelementptr inbounds [5 x double]* %1406, i32 0, i64 3
  %1408 = load double* %1407, align 8
  %1409 = fmul double %1401, %1408
  %1410 = load double* @tmp1, align 8
  %1411 = load i32* %j, align 4
  %1412 = sub nsw i32 %1411, 1
  %1413 = sext i32 %1412 to i64
  %1414 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1413
  %1415 = getelementptr inbounds [5 x [5 x double]]* %1414, i32 0, i64 4
  %1416 = getelementptr inbounds [5 x double]* %1415, i32 0, i64 3
  %1417 = load double* %1416, align 8
  %1418 = fmul double %1410, %1417
  %1419 = fsub double %1409, %1418
  %1420 = load i32* %j, align 4
  %1421 = sext i32 %1420 to i64
  %1422 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1421
  %1423 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1422, i32 0, i64 0
  %1424 = getelementptr inbounds [5 x [5 x double]]* %1423, i32 0, i64 4
  %1425 = getelementptr inbounds [5 x double]* %1424, i32 0, i64 3
  store double %1419, double* %1425, align 8
  %1426 = load double* @tmp2, align 8
  %1427 = fsub double -0.000000e+00, %1426
  %1428 = load i32* %j, align 4
  %1429 = sub nsw i32 %1428, 1
  %1430 = sext i32 %1429 to i64
  %1431 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1430
  %1432 = getelementptr inbounds [5 x [5 x double]]* %1431, i32 0, i64 0
  %1433 = getelementptr inbounds [5 x double]* %1432, i32 0, i64 4
  %1434 = load double* %1433, align 8
  %1435 = fmul double %1427, %1434
  %1436 = load double* @tmp1, align 8
  %1437 = load i32* %j, align 4
  %1438 = sub nsw i32 %1437, 1
  %1439 = sext i32 %1438 to i64
  %1440 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1439
  %1441 = getelementptr inbounds [5 x [5 x double]]* %1440, i32 0, i64 0
  %1442 = getelementptr inbounds [5 x double]* %1441, i32 0, i64 4
  %1443 = load double* %1442, align 8
  %1444 = fmul double %1436, %1443
  %1445 = fsub double %1435, %1444
  %1446 = load i32* %j, align 4
  %1447 = sext i32 %1446 to i64
  %1448 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1447
  %1449 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1448, i32 0, i64 0
  %1450 = getelementptr inbounds [5 x [5 x double]]* %1449, i32 0, i64 0
  %1451 = getelementptr inbounds [5 x double]* %1450, i32 0, i64 4
  store double %1445, double* %1451, align 8
  %1452 = load double* @tmp2, align 8
  %1453 = fsub double -0.000000e+00, %1452
  %1454 = load i32* %j, align 4
  %1455 = sub nsw i32 %1454, 1
  %1456 = sext i32 %1455 to i64
  %1457 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1456
  %1458 = getelementptr inbounds [5 x [5 x double]]* %1457, i32 0, i64 1
  %1459 = getelementptr inbounds [5 x double]* %1458, i32 0, i64 4
  %1460 = load double* %1459, align 8
  %1461 = fmul double %1453, %1460
  %1462 = load double* @tmp1, align 8
  %1463 = load i32* %j, align 4
  %1464 = sub nsw i32 %1463, 1
  %1465 = sext i32 %1464 to i64
  %1466 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1465
  %1467 = getelementptr inbounds [5 x [5 x double]]* %1466, i32 0, i64 1
  %1468 = getelementptr inbounds [5 x double]* %1467, i32 0, i64 4
  %1469 = load double* %1468, align 8
  %1470 = fmul double %1462, %1469
  %1471 = fsub double %1461, %1470
  %1472 = load i32* %j, align 4
  %1473 = sext i32 %1472 to i64
  %1474 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1473
  %1475 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1474, i32 0, i64 0
  %1476 = getelementptr inbounds [5 x [5 x double]]* %1475, i32 0, i64 1
  %1477 = getelementptr inbounds [5 x double]* %1476, i32 0, i64 4
  store double %1471, double* %1477, align 8
  %1478 = load double* @tmp2, align 8
  %1479 = fsub double -0.000000e+00, %1478
  %1480 = load i32* %j, align 4
  %1481 = sub nsw i32 %1480, 1
  %1482 = sext i32 %1481 to i64
  %1483 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1482
  %1484 = getelementptr inbounds [5 x [5 x double]]* %1483, i32 0, i64 2
  %1485 = getelementptr inbounds [5 x double]* %1484, i32 0, i64 4
  %1486 = load double* %1485, align 8
  %1487 = fmul double %1479, %1486
  %1488 = load double* @tmp1, align 8
  %1489 = load i32* %j, align 4
  %1490 = sub nsw i32 %1489, 1
  %1491 = sext i32 %1490 to i64
  %1492 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1491
  %1493 = getelementptr inbounds [5 x [5 x double]]* %1492, i32 0, i64 2
  %1494 = getelementptr inbounds [5 x double]* %1493, i32 0, i64 4
  %1495 = load double* %1494, align 8
  %1496 = fmul double %1488, %1495
  %1497 = fsub double %1487, %1496
  %1498 = load i32* %j, align 4
  %1499 = sext i32 %1498 to i64
  %1500 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1499
  %1501 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1500, i32 0, i64 0
  %1502 = getelementptr inbounds [5 x [5 x double]]* %1501, i32 0, i64 2
  %1503 = getelementptr inbounds [5 x double]* %1502, i32 0, i64 4
  store double %1497, double* %1503, align 8
  %1504 = load double* @tmp2, align 8
  %1505 = fsub double -0.000000e+00, %1504
  %1506 = load i32* %j, align 4
  %1507 = sub nsw i32 %1506, 1
  %1508 = sext i32 %1507 to i64
  %1509 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1508
  %1510 = getelementptr inbounds [5 x [5 x double]]* %1509, i32 0, i64 3
  %1511 = getelementptr inbounds [5 x double]* %1510, i32 0, i64 4
  %1512 = load double* %1511, align 8
  %1513 = fmul double %1505, %1512
  %1514 = load double* @tmp1, align 8
  %1515 = load i32* %j, align 4
  %1516 = sub nsw i32 %1515, 1
  %1517 = sext i32 %1516 to i64
  %1518 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1517
  %1519 = getelementptr inbounds [5 x [5 x double]]* %1518, i32 0, i64 3
  %1520 = getelementptr inbounds [5 x double]* %1519, i32 0, i64 4
  %1521 = load double* %1520, align 8
  %1522 = fmul double %1514, %1521
  %1523 = fsub double %1513, %1522
  %1524 = load i32* %j, align 4
  %1525 = sext i32 %1524 to i64
  %1526 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1525
  %1527 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1526, i32 0, i64 0
  %1528 = getelementptr inbounds [5 x [5 x double]]* %1527, i32 0, i64 3
  %1529 = getelementptr inbounds [5 x double]* %1528, i32 0, i64 4
  store double %1523, double* %1529, align 8
  %1530 = load double* @tmp2, align 8
  %1531 = fsub double -0.000000e+00, %1530
  %1532 = load i32* %j, align 4
  %1533 = sub nsw i32 %1532, 1
  %1534 = sext i32 %1533 to i64
  %1535 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1534
  %1536 = getelementptr inbounds [5 x [5 x double]]* %1535, i32 0, i64 4
  %1537 = getelementptr inbounds [5 x double]* %1536, i32 0, i64 4
  %1538 = load double* %1537, align 8
  %1539 = fmul double %1531, %1538
  %1540 = load double* @tmp1, align 8
  %1541 = load i32* %j, align 4
  %1542 = sub nsw i32 %1541, 1
  %1543 = sext i32 %1542 to i64
  %1544 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1543
  %1545 = getelementptr inbounds [5 x [5 x double]]* %1544, i32 0, i64 4
  %1546 = getelementptr inbounds [5 x double]* %1545, i32 0, i64 4
  %1547 = load double* %1546, align 8
  %1548 = fmul double %1540, %1547
  %1549 = fsub double %1539, %1548
  %1550 = load double* @tmp1, align 8
  %1551 = load double* @dy5, align 8
  %1552 = fmul double %1550, %1551
  %1553 = fsub double %1549, %1552
  %1554 = load i32* %j, align 4
  %1555 = sext i32 %1554 to i64
  %1556 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1555
  %1557 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1556, i32 0, i64 0
  %1558 = getelementptr inbounds [5 x [5 x double]]* %1557, i32 0, i64 4
  %1559 = getelementptr inbounds [5 x double]* %1558, i32 0, i64 4
  store double %1553, double* %1559, align 8
  %1560 = load double* @tmp1, align 8
  %1561 = fmul double %1560, 2.000000e+00
  %1562 = load i32* %j, align 4
  %1563 = sext i32 %1562 to i64
  %1564 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1563
  %1565 = getelementptr inbounds [5 x [5 x double]]* %1564, i32 0, i64 0
  %1566 = getelementptr inbounds [5 x double]* %1565, i32 0, i64 0
  %1567 = load double* %1566, align 8
  %1568 = fmul double %1561, %1567
  %1569 = fadd double 1.000000e+00, %1568
  %1570 = load double* @tmp1, align 8
  %1571 = fmul double %1570, 2.000000e+00
  %1572 = load double* @dy1, align 8
  %1573 = fmul double %1571, %1572
  %1574 = fadd double %1569, %1573
  %1575 = load i32* %j, align 4
  %1576 = sext i32 %1575 to i64
  %1577 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1576
  %1578 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1577, i32 0, i64 1
  %1579 = getelementptr inbounds [5 x [5 x double]]* %1578, i32 0, i64 0
  %1580 = getelementptr inbounds [5 x double]* %1579, i32 0, i64 0
  store double %1574, double* %1580, align 8
  %1581 = load double* @tmp1, align 8
  %1582 = fmul double %1581, 2.000000e+00
  %1583 = load i32* %j, align 4
  %1584 = sext i32 %1583 to i64
  %1585 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1584
  %1586 = getelementptr inbounds [5 x [5 x double]]* %1585, i32 0, i64 1
  %1587 = getelementptr inbounds [5 x double]* %1586, i32 0, i64 0
  %1588 = load double* %1587, align 8
  %1589 = fmul double %1582, %1588
  %1590 = load i32* %j, align 4
  %1591 = sext i32 %1590 to i64
  %1592 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1591
  %1593 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1592, i32 0, i64 1
  %1594 = getelementptr inbounds [5 x [5 x double]]* %1593, i32 0, i64 1
  %1595 = getelementptr inbounds [5 x double]* %1594, i32 0, i64 0
  store double %1589, double* %1595, align 8
  %1596 = load double* @tmp1, align 8
  %1597 = fmul double %1596, 2.000000e+00
  %1598 = load i32* %j, align 4
  %1599 = sext i32 %1598 to i64
  %1600 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1599
  %1601 = getelementptr inbounds [5 x [5 x double]]* %1600, i32 0, i64 2
  %1602 = getelementptr inbounds [5 x double]* %1601, i32 0, i64 0
  %1603 = load double* %1602, align 8
  %1604 = fmul double %1597, %1603
  %1605 = load i32* %j, align 4
  %1606 = sext i32 %1605 to i64
  %1607 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1606
  %1608 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1607, i32 0, i64 1
  %1609 = getelementptr inbounds [5 x [5 x double]]* %1608, i32 0, i64 2
  %1610 = getelementptr inbounds [5 x double]* %1609, i32 0, i64 0
  store double %1604, double* %1610, align 8
  %1611 = load double* @tmp1, align 8
  %1612 = fmul double %1611, 2.000000e+00
  %1613 = load i32* %j, align 4
  %1614 = sext i32 %1613 to i64
  %1615 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1614
  %1616 = getelementptr inbounds [5 x [5 x double]]* %1615, i32 0, i64 3
  %1617 = getelementptr inbounds [5 x double]* %1616, i32 0, i64 0
  %1618 = load double* %1617, align 8
  %1619 = fmul double %1612, %1618
  %1620 = load i32* %j, align 4
  %1621 = sext i32 %1620 to i64
  %1622 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1621
  %1623 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1622, i32 0, i64 1
  %1624 = getelementptr inbounds [5 x [5 x double]]* %1623, i32 0, i64 3
  %1625 = getelementptr inbounds [5 x double]* %1624, i32 0, i64 0
  store double %1619, double* %1625, align 8
  %1626 = load double* @tmp1, align 8
  %1627 = fmul double %1626, 2.000000e+00
  %1628 = load i32* %j, align 4
  %1629 = sext i32 %1628 to i64
  %1630 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1629
  %1631 = getelementptr inbounds [5 x [5 x double]]* %1630, i32 0, i64 4
  %1632 = getelementptr inbounds [5 x double]* %1631, i32 0, i64 0
  %1633 = load double* %1632, align 8
  %1634 = fmul double %1627, %1633
  %1635 = load i32* %j, align 4
  %1636 = sext i32 %1635 to i64
  %1637 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1636
  %1638 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1637, i32 0, i64 1
  %1639 = getelementptr inbounds [5 x [5 x double]]* %1638, i32 0, i64 4
  %1640 = getelementptr inbounds [5 x double]* %1639, i32 0, i64 0
  store double %1634, double* %1640, align 8
  %1641 = load double* @tmp1, align 8
  %1642 = fmul double %1641, 2.000000e+00
  %1643 = load i32* %j, align 4
  %1644 = sext i32 %1643 to i64
  %1645 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1644
  %1646 = getelementptr inbounds [5 x [5 x double]]* %1645, i32 0, i64 0
  %1647 = getelementptr inbounds [5 x double]* %1646, i32 0, i64 1
  %1648 = load double* %1647, align 8
  %1649 = fmul double %1642, %1648
  %1650 = load i32* %j, align 4
  %1651 = sext i32 %1650 to i64
  %1652 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1651
  %1653 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1652, i32 0, i64 1
  %1654 = getelementptr inbounds [5 x [5 x double]]* %1653, i32 0, i64 0
  %1655 = getelementptr inbounds [5 x double]* %1654, i32 0, i64 1
  store double %1649, double* %1655, align 8
  %1656 = load double* @tmp1, align 8
  %1657 = fmul double %1656, 2.000000e+00
  %1658 = load i32* %j, align 4
  %1659 = sext i32 %1658 to i64
  %1660 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1659
  %1661 = getelementptr inbounds [5 x [5 x double]]* %1660, i32 0, i64 1
  %1662 = getelementptr inbounds [5 x double]* %1661, i32 0, i64 1
  %1663 = load double* %1662, align 8
  %1664 = fmul double %1657, %1663
  %1665 = fadd double 1.000000e+00, %1664
  %1666 = load double* @tmp1, align 8
  %1667 = fmul double %1666, 2.000000e+00
  %1668 = load double* @dy2, align 8
  %1669 = fmul double %1667, %1668
  %1670 = fadd double %1665, %1669
  %1671 = load i32* %j, align 4
  %1672 = sext i32 %1671 to i64
  %1673 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1672
  %1674 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1673, i32 0, i64 1
  %1675 = getelementptr inbounds [5 x [5 x double]]* %1674, i32 0, i64 1
  %1676 = getelementptr inbounds [5 x double]* %1675, i32 0, i64 1
  store double %1670, double* %1676, align 8
  %1677 = load double* @tmp1, align 8
  %1678 = fmul double %1677, 2.000000e+00
  %1679 = load i32* %j, align 4
  %1680 = sext i32 %1679 to i64
  %1681 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1680
  %1682 = getelementptr inbounds [5 x [5 x double]]* %1681, i32 0, i64 2
  %1683 = getelementptr inbounds [5 x double]* %1682, i32 0, i64 1
  %1684 = load double* %1683, align 8
  %1685 = fmul double %1678, %1684
  %1686 = load i32* %j, align 4
  %1687 = sext i32 %1686 to i64
  %1688 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1687
  %1689 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1688, i32 0, i64 1
  %1690 = getelementptr inbounds [5 x [5 x double]]* %1689, i32 0, i64 2
  %1691 = getelementptr inbounds [5 x double]* %1690, i32 0, i64 1
  store double %1685, double* %1691, align 8
  %1692 = load double* @tmp1, align 8
  %1693 = fmul double %1692, 2.000000e+00
  %1694 = load i32* %j, align 4
  %1695 = sext i32 %1694 to i64
  %1696 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1695
  %1697 = getelementptr inbounds [5 x [5 x double]]* %1696, i32 0, i64 3
  %1698 = getelementptr inbounds [5 x double]* %1697, i32 0, i64 1
  %1699 = load double* %1698, align 8
  %1700 = fmul double %1693, %1699
  %1701 = load i32* %j, align 4
  %1702 = sext i32 %1701 to i64
  %1703 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1702
  %1704 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1703, i32 0, i64 1
  %1705 = getelementptr inbounds [5 x [5 x double]]* %1704, i32 0, i64 3
  %1706 = getelementptr inbounds [5 x double]* %1705, i32 0, i64 1
  store double %1700, double* %1706, align 8
  %1707 = load double* @tmp1, align 8
  %1708 = fmul double %1707, 2.000000e+00
  %1709 = load i32* %j, align 4
  %1710 = sext i32 %1709 to i64
  %1711 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1710
  %1712 = getelementptr inbounds [5 x [5 x double]]* %1711, i32 0, i64 4
  %1713 = getelementptr inbounds [5 x double]* %1712, i32 0, i64 1
  %1714 = load double* %1713, align 8
  %1715 = fmul double %1708, %1714
  %1716 = load i32* %j, align 4
  %1717 = sext i32 %1716 to i64
  %1718 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1717
  %1719 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1718, i32 0, i64 1
  %1720 = getelementptr inbounds [5 x [5 x double]]* %1719, i32 0, i64 4
  %1721 = getelementptr inbounds [5 x double]* %1720, i32 0, i64 1
  store double %1715, double* %1721, align 8
  %1722 = load double* @tmp1, align 8
  %1723 = fmul double %1722, 2.000000e+00
  %1724 = load i32* %j, align 4
  %1725 = sext i32 %1724 to i64
  %1726 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1725
  %1727 = getelementptr inbounds [5 x [5 x double]]* %1726, i32 0, i64 0
  %1728 = getelementptr inbounds [5 x double]* %1727, i32 0, i64 2
  %1729 = load double* %1728, align 8
  %1730 = fmul double %1723, %1729
  %1731 = load i32* %j, align 4
  %1732 = sext i32 %1731 to i64
  %1733 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1732
  %1734 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1733, i32 0, i64 1
  %1735 = getelementptr inbounds [5 x [5 x double]]* %1734, i32 0, i64 0
  %1736 = getelementptr inbounds [5 x double]* %1735, i32 0, i64 2
  store double %1730, double* %1736, align 8
  %1737 = load double* @tmp1, align 8
  %1738 = fmul double %1737, 2.000000e+00
  %1739 = load i32* %j, align 4
  %1740 = sext i32 %1739 to i64
  %1741 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1740
  %1742 = getelementptr inbounds [5 x [5 x double]]* %1741, i32 0, i64 1
  %1743 = getelementptr inbounds [5 x double]* %1742, i32 0, i64 2
  %1744 = load double* %1743, align 8
  %1745 = fmul double %1738, %1744
  %1746 = load i32* %j, align 4
  %1747 = sext i32 %1746 to i64
  %1748 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1747
  %1749 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1748, i32 0, i64 1
  %1750 = getelementptr inbounds [5 x [5 x double]]* %1749, i32 0, i64 1
  %1751 = getelementptr inbounds [5 x double]* %1750, i32 0, i64 2
  store double %1745, double* %1751, align 8
  %1752 = load double* @tmp1, align 8
  %1753 = fmul double %1752, 2.000000e+00
  %1754 = load i32* %j, align 4
  %1755 = sext i32 %1754 to i64
  %1756 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1755
  %1757 = getelementptr inbounds [5 x [5 x double]]* %1756, i32 0, i64 2
  %1758 = getelementptr inbounds [5 x double]* %1757, i32 0, i64 2
  %1759 = load double* %1758, align 8
  %1760 = fmul double %1753, %1759
  %1761 = fadd double 1.000000e+00, %1760
  %1762 = load double* @tmp1, align 8
  %1763 = fmul double %1762, 2.000000e+00
  %1764 = load double* @dy3, align 8
  %1765 = fmul double %1763, %1764
  %1766 = fadd double %1761, %1765
  %1767 = load i32* %j, align 4
  %1768 = sext i32 %1767 to i64
  %1769 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1768
  %1770 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1769, i32 0, i64 1
  %1771 = getelementptr inbounds [5 x [5 x double]]* %1770, i32 0, i64 2
  %1772 = getelementptr inbounds [5 x double]* %1771, i32 0, i64 2
  store double %1766, double* %1772, align 8
  %1773 = load double* @tmp1, align 8
  %1774 = fmul double %1773, 2.000000e+00
  %1775 = load i32* %j, align 4
  %1776 = sext i32 %1775 to i64
  %1777 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1776
  %1778 = getelementptr inbounds [5 x [5 x double]]* %1777, i32 0, i64 3
  %1779 = getelementptr inbounds [5 x double]* %1778, i32 0, i64 2
  %1780 = load double* %1779, align 8
  %1781 = fmul double %1774, %1780
  %1782 = load i32* %j, align 4
  %1783 = sext i32 %1782 to i64
  %1784 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1783
  %1785 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1784, i32 0, i64 1
  %1786 = getelementptr inbounds [5 x [5 x double]]* %1785, i32 0, i64 3
  %1787 = getelementptr inbounds [5 x double]* %1786, i32 0, i64 2
  store double %1781, double* %1787, align 8
  %1788 = load double* @tmp1, align 8
  %1789 = fmul double %1788, 2.000000e+00
  %1790 = load i32* %j, align 4
  %1791 = sext i32 %1790 to i64
  %1792 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1791
  %1793 = getelementptr inbounds [5 x [5 x double]]* %1792, i32 0, i64 4
  %1794 = getelementptr inbounds [5 x double]* %1793, i32 0, i64 2
  %1795 = load double* %1794, align 8
  %1796 = fmul double %1789, %1795
  %1797 = load i32* %j, align 4
  %1798 = sext i32 %1797 to i64
  %1799 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1798
  %1800 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1799, i32 0, i64 1
  %1801 = getelementptr inbounds [5 x [5 x double]]* %1800, i32 0, i64 4
  %1802 = getelementptr inbounds [5 x double]* %1801, i32 0, i64 2
  store double %1796, double* %1802, align 8
  %1803 = load double* @tmp1, align 8
  %1804 = fmul double %1803, 2.000000e+00
  %1805 = load i32* %j, align 4
  %1806 = sext i32 %1805 to i64
  %1807 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1806
  %1808 = getelementptr inbounds [5 x [5 x double]]* %1807, i32 0, i64 0
  %1809 = getelementptr inbounds [5 x double]* %1808, i32 0, i64 3
  %1810 = load double* %1809, align 8
  %1811 = fmul double %1804, %1810
  %1812 = load i32* %j, align 4
  %1813 = sext i32 %1812 to i64
  %1814 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1813
  %1815 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1814, i32 0, i64 1
  %1816 = getelementptr inbounds [5 x [5 x double]]* %1815, i32 0, i64 0
  %1817 = getelementptr inbounds [5 x double]* %1816, i32 0, i64 3
  store double %1811, double* %1817, align 8
  %1818 = load double* @tmp1, align 8
  %1819 = fmul double %1818, 2.000000e+00
  %1820 = load i32* %j, align 4
  %1821 = sext i32 %1820 to i64
  %1822 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1821
  %1823 = getelementptr inbounds [5 x [5 x double]]* %1822, i32 0, i64 1
  %1824 = getelementptr inbounds [5 x double]* %1823, i32 0, i64 3
  %1825 = load double* %1824, align 8
  %1826 = fmul double %1819, %1825
  %1827 = load i32* %j, align 4
  %1828 = sext i32 %1827 to i64
  %1829 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1828
  %1830 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1829, i32 0, i64 1
  %1831 = getelementptr inbounds [5 x [5 x double]]* %1830, i32 0, i64 1
  %1832 = getelementptr inbounds [5 x double]* %1831, i32 0, i64 3
  store double %1826, double* %1832, align 8
  %1833 = load double* @tmp1, align 8
  %1834 = fmul double %1833, 2.000000e+00
  %1835 = load i32* %j, align 4
  %1836 = sext i32 %1835 to i64
  %1837 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1836
  %1838 = getelementptr inbounds [5 x [5 x double]]* %1837, i32 0, i64 2
  %1839 = getelementptr inbounds [5 x double]* %1838, i32 0, i64 3
  %1840 = load double* %1839, align 8
  %1841 = fmul double %1834, %1840
  %1842 = load i32* %j, align 4
  %1843 = sext i32 %1842 to i64
  %1844 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1843
  %1845 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1844, i32 0, i64 1
  %1846 = getelementptr inbounds [5 x [5 x double]]* %1845, i32 0, i64 2
  %1847 = getelementptr inbounds [5 x double]* %1846, i32 0, i64 3
  store double %1841, double* %1847, align 8
  %1848 = load double* @tmp1, align 8
  %1849 = fmul double %1848, 2.000000e+00
  %1850 = load i32* %j, align 4
  %1851 = sext i32 %1850 to i64
  %1852 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1851
  %1853 = getelementptr inbounds [5 x [5 x double]]* %1852, i32 0, i64 3
  %1854 = getelementptr inbounds [5 x double]* %1853, i32 0, i64 3
  %1855 = load double* %1854, align 8
  %1856 = fmul double %1849, %1855
  %1857 = fadd double 1.000000e+00, %1856
  %1858 = load double* @tmp1, align 8
  %1859 = fmul double %1858, 2.000000e+00
  %1860 = load double* @dy4, align 8
  %1861 = fmul double %1859, %1860
  %1862 = fadd double %1857, %1861
  %1863 = load i32* %j, align 4
  %1864 = sext i32 %1863 to i64
  %1865 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1864
  %1866 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1865, i32 0, i64 1
  %1867 = getelementptr inbounds [5 x [5 x double]]* %1866, i32 0, i64 3
  %1868 = getelementptr inbounds [5 x double]* %1867, i32 0, i64 3
  store double %1862, double* %1868, align 8
  %1869 = load double* @tmp1, align 8
  %1870 = fmul double %1869, 2.000000e+00
  %1871 = load i32* %j, align 4
  %1872 = sext i32 %1871 to i64
  %1873 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1872
  %1874 = getelementptr inbounds [5 x [5 x double]]* %1873, i32 0, i64 4
  %1875 = getelementptr inbounds [5 x double]* %1874, i32 0, i64 3
  %1876 = load double* %1875, align 8
  %1877 = fmul double %1870, %1876
  %1878 = load i32* %j, align 4
  %1879 = sext i32 %1878 to i64
  %1880 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1879
  %1881 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1880, i32 0, i64 1
  %1882 = getelementptr inbounds [5 x [5 x double]]* %1881, i32 0, i64 4
  %1883 = getelementptr inbounds [5 x double]* %1882, i32 0, i64 3
  store double %1877, double* %1883, align 8
  %1884 = load double* @tmp1, align 8
  %1885 = fmul double %1884, 2.000000e+00
  %1886 = load i32* %j, align 4
  %1887 = sext i32 %1886 to i64
  %1888 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1887
  %1889 = getelementptr inbounds [5 x [5 x double]]* %1888, i32 0, i64 0
  %1890 = getelementptr inbounds [5 x double]* %1889, i32 0, i64 4
  %1891 = load double* %1890, align 8
  %1892 = fmul double %1885, %1891
  %1893 = load i32* %j, align 4
  %1894 = sext i32 %1893 to i64
  %1895 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1894
  %1896 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1895, i32 0, i64 1
  %1897 = getelementptr inbounds [5 x [5 x double]]* %1896, i32 0, i64 0
  %1898 = getelementptr inbounds [5 x double]* %1897, i32 0, i64 4
  store double %1892, double* %1898, align 8
  %1899 = load double* @tmp1, align 8
  %1900 = fmul double %1899, 2.000000e+00
  %1901 = load i32* %j, align 4
  %1902 = sext i32 %1901 to i64
  %1903 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1902
  %1904 = getelementptr inbounds [5 x [5 x double]]* %1903, i32 0, i64 1
  %1905 = getelementptr inbounds [5 x double]* %1904, i32 0, i64 4
  %1906 = load double* %1905, align 8
  %1907 = fmul double %1900, %1906
  %1908 = load i32* %j, align 4
  %1909 = sext i32 %1908 to i64
  %1910 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1909
  %1911 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1910, i32 0, i64 1
  %1912 = getelementptr inbounds [5 x [5 x double]]* %1911, i32 0, i64 1
  %1913 = getelementptr inbounds [5 x double]* %1912, i32 0, i64 4
  store double %1907, double* %1913, align 8
  %1914 = load double* @tmp1, align 8
  %1915 = fmul double %1914, 2.000000e+00
  %1916 = load i32* %j, align 4
  %1917 = sext i32 %1916 to i64
  %1918 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1917
  %1919 = getelementptr inbounds [5 x [5 x double]]* %1918, i32 0, i64 2
  %1920 = getelementptr inbounds [5 x double]* %1919, i32 0, i64 4
  %1921 = load double* %1920, align 8
  %1922 = fmul double %1915, %1921
  %1923 = load i32* %j, align 4
  %1924 = sext i32 %1923 to i64
  %1925 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1924
  %1926 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1925, i32 0, i64 1
  %1927 = getelementptr inbounds [5 x [5 x double]]* %1926, i32 0, i64 2
  %1928 = getelementptr inbounds [5 x double]* %1927, i32 0, i64 4
  store double %1922, double* %1928, align 8
  %1929 = load double* @tmp1, align 8
  %1930 = fmul double %1929, 2.000000e+00
  %1931 = load i32* %j, align 4
  %1932 = sext i32 %1931 to i64
  %1933 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1932
  %1934 = getelementptr inbounds [5 x [5 x double]]* %1933, i32 0, i64 3
  %1935 = getelementptr inbounds [5 x double]* %1934, i32 0, i64 4
  %1936 = load double* %1935, align 8
  %1937 = fmul double %1930, %1936
  %1938 = load i32* %j, align 4
  %1939 = sext i32 %1938 to i64
  %1940 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1939
  %1941 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1940, i32 0, i64 1
  %1942 = getelementptr inbounds [5 x [5 x double]]* %1941, i32 0, i64 3
  %1943 = getelementptr inbounds [5 x double]* %1942, i32 0, i64 4
  store double %1937, double* %1943, align 8
  %1944 = load double* @tmp1, align 8
  %1945 = fmul double %1944, 2.000000e+00
  %1946 = load i32* %j, align 4
  %1947 = sext i32 %1946 to i64
  %1948 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1947
  %1949 = getelementptr inbounds [5 x [5 x double]]* %1948, i32 0, i64 4
  %1950 = getelementptr inbounds [5 x double]* %1949, i32 0, i64 4
  %1951 = load double* %1950, align 8
  %1952 = fmul double %1945, %1951
  %1953 = fadd double 1.000000e+00, %1952
  %1954 = load double* @tmp1, align 8
  %1955 = fmul double %1954, 2.000000e+00
  %1956 = load double* @dy5, align 8
  %1957 = fmul double %1955, %1956
  %1958 = fadd double %1953, %1957
  %1959 = load i32* %j, align 4
  %1960 = sext i32 %1959 to i64
  %1961 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1960
  %1962 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1961, i32 0, i64 1
  %1963 = getelementptr inbounds [5 x [5 x double]]* %1962, i32 0, i64 4
  %1964 = getelementptr inbounds [5 x double]* %1963, i32 0, i64 4
  store double %1958, double* %1964, align 8
  %1965 = load double* @tmp2, align 8
  %1966 = load i32* %j, align 4
  %1967 = add nsw i32 %1966, 1
  %1968 = sext i32 %1967 to i64
  %1969 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1968
  %1970 = getelementptr inbounds [5 x [5 x double]]* %1969, i32 0, i64 0
  %1971 = getelementptr inbounds [5 x double]* %1970, i32 0, i64 0
  %1972 = load double* %1971, align 8
  %1973 = fmul double %1965, %1972
  %1974 = load double* @tmp1, align 8
  %1975 = load i32* %j, align 4
  %1976 = add nsw i32 %1975, 1
  %1977 = sext i32 %1976 to i64
  %1978 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1977
  %1979 = getelementptr inbounds [5 x [5 x double]]* %1978, i32 0, i64 0
  %1980 = getelementptr inbounds [5 x double]* %1979, i32 0, i64 0
  %1981 = load double* %1980, align 8
  %1982 = fmul double %1974, %1981
  %1983 = fsub double %1973, %1982
  %1984 = load double* @tmp1, align 8
  %1985 = load double* @dy1, align 8
  %1986 = fmul double %1984, %1985
  %1987 = fsub double %1983, %1986
  %1988 = load i32* %j, align 4
  %1989 = sext i32 %1988 to i64
  %1990 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1989
  %1991 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1990, i32 0, i64 2
  %1992 = getelementptr inbounds [5 x [5 x double]]* %1991, i32 0, i64 0
  %1993 = getelementptr inbounds [5 x double]* %1992, i32 0, i64 0
  store double %1987, double* %1993, align 8
  %1994 = load double* @tmp2, align 8
  %1995 = load i32* %j, align 4
  %1996 = add nsw i32 %1995, 1
  %1997 = sext i32 %1996 to i64
  %1998 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1997
  %1999 = getelementptr inbounds [5 x [5 x double]]* %1998, i32 0, i64 1
  %2000 = getelementptr inbounds [5 x double]* %1999, i32 0, i64 0
  %2001 = load double* %2000, align 8
  %2002 = fmul double %1994, %2001
  %2003 = load double* @tmp1, align 8
  %2004 = load i32* %j, align 4
  %2005 = add nsw i32 %2004, 1
  %2006 = sext i32 %2005 to i64
  %2007 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2006
  %2008 = getelementptr inbounds [5 x [5 x double]]* %2007, i32 0, i64 1
  %2009 = getelementptr inbounds [5 x double]* %2008, i32 0, i64 0
  %2010 = load double* %2009, align 8
  %2011 = fmul double %2003, %2010
  %2012 = fsub double %2002, %2011
  %2013 = load i32* %j, align 4
  %2014 = sext i32 %2013 to i64
  %2015 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2014
  %2016 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2015, i32 0, i64 2
  %2017 = getelementptr inbounds [5 x [5 x double]]* %2016, i32 0, i64 1
  %2018 = getelementptr inbounds [5 x double]* %2017, i32 0, i64 0
  store double %2012, double* %2018, align 8
  %2019 = load double* @tmp2, align 8
  %2020 = load i32* %j, align 4
  %2021 = add nsw i32 %2020, 1
  %2022 = sext i32 %2021 to i64
  %2023 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2022
  %2024 = getelementptr inbounds [5 x [5 x double]]* %2023, i32 0, i64 2
  %2025 = getelementptr inbounds [5 x double]* %2024, i32 0, i64 0
  %2026 = load double* %2025, align 8
  %2027 = fmul double %2019, %2026
  %2028 = load double* @tmp1, align 8
  %2029 = load i32* %j, align 4
  %2030 = add nsw i32 %2029, 1
  %2031 = sext i32 %2030 to i64
  %2032 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2031
  %2033 = getelementptr inbounds [5 x [5 x double]]* %2032, i32 0, i64 2
  %2034 = getelementptr inbounds [5 x double]* %2033, i32 0, i64 0
  %2035 = load double* %2034, align 8
  %2036 = fmul double %2028, %2035
  %2037 = fsub double %2027, %2036
  %2038 = load i32* %j, align 4
  %2039 = sext i32 %2038 to i64
  %2040 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2039
  %2041 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2040, i32 0, i64 2
  %2042 = getelementptr inbounds [5 x [5 x double]]* %2041, i32 0, i64 2
  %2043 = getelementptr inbounds [5 x double]* %2042, i32 0, i64 0
  store double %2037, double* %2043, align 8
  %2044 = load double* @tmp2, align 8
  %2045 = load i32* %j, align 4
  %2046 = add nsw i32 %2045, 1
  %2047 = sext i32 %2046 to i64
  %2048 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2047
  %2049 = getelementptr inbounds [5 x [5 x double]]* %2048, i32 0, i64 3
  %2050 = getelementptr inbounds [5 x double]* %2049, i32 0, i64 0
  %2051 = load double* %2050, align 8
  %2052 = fmul double %2044, %2051
  %2053 = load double* @tmp1, align 8
  %2054 = load i32* %j, align 4
  %2055 = add nsw i32 %2054, 1
  %2056 = sext i32 %2055 to i64
  %2057 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2056
  %2058 = getelementptr inbounds [5 x [5 x double]]* %2057, i32 0, i64 3
  %2059 = getelementptr inbounds [5 x double]* %2058, i32 0, i64 0
  %2060 = load double* %2059, align 8
  %2061 = fmul double %2053, %2060
  %2062 = fsub double %2052, %2061
  %2063 = load i32* %j, align 4
  %2064 = sext i32 %2063 to i64
  %2065 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2064
  %2066 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2065, i32 0, i64 2
  %2067 = getelementptr inbounds [5 x [5 x double]]* %2066, i32 0, i64 3
  %2068 = getelementptr inbounds [5 x double]* %2067, i32 0, i64 0
  store double %2062, double* %2068, align 8
  %2069 = load double* @tmp2, align 8
  %2070 = load i32* %j, align 4
  %2071 = add nsw i32 %2070, 1
  %2072 = sext i32 %2071 to i64
  %2073 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2072
  %2074 = getelementptr inbounds [5 x [5 x double]]* %2073, i32 0, i64 4
  %2075 = getelementptr inbounds [5 x double]* %2074, i32 0, i64 0
  %2076 = load double* %2075, align 8
  %2077 = fmul double %2069, %2076
  %2078 = load double* @tmp1, align 8
  %2079 = load i32* %j, align 4
  %2080 = add nsw i32 %2079, 1
  %2081 = sext i32 %2080 to i64
  %2082 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2081
  %2083 = getelementptr inbounds [5 x [5 x double]]* %2082, i32 0, i64 4
  %2084 = getelementptr inbounds [5 x double]* %2083, i32 0, i64 0
  %2085 = load double* %2084, align 8
  %2086 = fmul double %2078, %2085
  %2087 = fsub double %2077, %2086
  %2088 = load i32* %j, align 4
  %2089 = sext i32 %2088 to i64
  %2090 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2089
  %2091 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2090, i32 0, i64 2
  %2092 = getelementptr inbounds [5 x [5 x double]]* %2091, i32 0, i64 4
  %2093 = getelementptr inbounds [5 x double]* %2092, i32 0, i64 0
  store double %2087, double* %2093, align 8
  %2094 = load double* @tmp2, align 8
  %2095 = load i32* %j, align 4
  %2096 = add nsw i32 %2095, 1
  %2097 = sext i32 %2096 to i64
  %2098 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2097
  %2099 = getelementptr inbounds [5 x [5 x double]]* %2098, i32 0, i64 0
  %2100 = getelementptr inbounds [5 x double]* %2099, i32 0, i64 1
  %2101 = load double* %2100, align 8
  %2102 = fmul double %2094, %2101
  %2103 = load double* @tmp1, align 8
  %2104 = load i32* %j, align 4
  %2105 = add nsw i32 %2104, 1
  %2106 = sext i32 %2105 to i64
  %2107 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2106
  %2108 = getelementptr inbounds [5 x [5 x double]]* %2107, i32 0, i64 0
  %2109 = getelementptr inbounds [5 x double]* %2108, i32 0, i64 1
  %2110 = load double* %2109, align 8
  %2111 = fmul double %2103, %2110
  %2112 = fsub double %2102, %2111
  %2113 = load i32* %j, align 4
  %2114 = sext i32 %2113 to i64
  %2115 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2114
  %2116 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2115, i32 0, i64 2
  %2117 = getelementptr inbounds [5 x [5 x double]]* %2116, i32 0, i64 0
  %2118 = getelementptr inbounds [5 x double]* %2117, i32 0, i64 1
  store double %2112, double* %2118, align 8
  %2119 = load double* @tmp2, align 8
  %2120 = load i32* %j, align 4
  %2121 = add nsw i32 %2120, 1
  %2122 = sext i32 %2121 to i64
  %2123 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2122
  %2124 = getelementptr inbounds [5 x [5 x double]]* %2123, i32 0, i64 1
  %2125 = getelementptr inbounds [5 x double]* %2124, i32 0, i64 1
  %2126 = load double* %2125, align 8
  %2127 = fmul double %2119, %2126
  %2128 = load double* @tmp1, align 8
  %2129 = load i32* %j, align 4
  %2130 = add nsw i32 %2129, 1
  %2131 = sext i32 %2130 to i64
  %2132 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2131
  %2133 = getelementptr inbounds [5 x [5 x double]]* %2132, i32 0, i64 1
  %2134 = getelementptr inbounds [5 x double]* %2133, i32 0, i64 1
  %2135 = load double* %2134, align 8
  %2136 = fmul double %2128, %2135
  %2137 = fsub double %2127, %2136
  %2138 = load double* @tmp1, align 8
  %2139 = load double* @dy2, align 8
  %2140 = fmul double %2138, %2139
  %2141 = fsub double %2137, %2140
  %2142 = load i32* %j, align 4
  %2143 = sext i32 %2142 to i64
  %2144 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2143
  %2145 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2144, i32 0, i64 2
  %2146 = getelementptr inbounds [5 x [5 x double]]* %2145, i32 0, i64 1
  %2147 = getelementptr inbounds [5 x double]* %2146, i32 0, i64 1
  store double %2141, double* %2147, align 8
  %2148 = load double* @tmp2, align 8
  %2149 = load i32* %j, align 4
  %2150 = add nsw i32 %2149, 1
  %2151 = sext i32 %2150 to i64
  %2152 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2151
  %2153 = getelementptr inbounds [5 x [5 x double]]* %2152, i32 0, i64 2
  %2154 = getelementptr inbounds [5 x double]* %2153, i32 0, i64 1
  %2155 = load double* %2154, align 8
  %2156 = fmul double %2148, %2155
  %2157 = load double* @tmp1, align 8
  %2158 = load i32* %j, align 4
  %2159 = add nsw i32 %2158, 1
  %2160 = sext i32 %2159 to i64
  %2161 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2160
  %2162 = getelementptr inbounds [5 x [5 x double]]* %2161, i32 0, i64 2
  %2163 = getelementptr inbounds [5 x double]* %2162, i32 0, i64 1
  %2164 = load double* %2163, align 8
  %2165 = fmul double %2157, %2164
  %2166 = fsub double %2156, %2165
  %2167 = load i32* %j, align 4
  %2168 = sext i32 %2167 to i64
  %2169 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2168
  %2170 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2169, i32 0, i64 2
  %2171 = getelementptr inbounds [5 x [5 x double]]* %2170, i32 0, i64 2
  %2172 = getelementptr inbounds [5 x double]* %2171, i32 0, i64 1
  store double %2166, double* %2172, align 8
  %2173 = load double* @tmp2, align 8
  %2174 = load i32* %j, align 4
  %2175 = add nsw i32 %2174, 1
  %2176 = sext i32 %2175 to i64
  %2177 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2176
  %2178 = getelementptr inbounds [5 x [5 x double]]* %2177, i32 0, i64 3
  %2179 = getelementptr inbounds [5 x double]* %2178, i32 0, i64 1
  %2180 = load double* %2179, align 8
  %2181 = fmul double %2173, %2180
  %2182 = load double* @tmp1, align 8
  %2183 = load i32* %j, align 4
  %2184 = add nsw i32 %2183, 1
  %2185 = sext i32 %2184 to i64
  %2186 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2185
  %2187 = getelementptr inbounds [5 x [5 x double]]* %2186, i32 0, i64 3
  %2188 = getelementptr inbounds [5 x double]* %2187, i32 0, i64 1
  %2189 = load double* %2188, align 8
  %2190 = fmul double %2182, %2189
  %2191 = fsub double %2181, %2190
  %2192 = load i32* %j, align 4
  %2193 = sext i32 %2192 to i64
  %2194 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2193
  %2195 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2194, i32 0, i64 2
  %2196 = getelementptr inbounds [5 x [5 x double]]* %2195, i32 0, i64 3
  %2197 = getelementptr inbounds [5 x double]* %2196, i32 0, i64 1
  store double %2191, double* %2197, align 8
  %2198 = load double* @tmp2, align 8
  %2199 = load i32* %j, align 4
  %2200 = add nsw i32 %2199, 1
  %2201 = sext i32 %2200 to i64
  %2202 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2201
  %2203 = getelementptr inbounds [5 x [5 x double]]* %2202, i32 0, i64 4
  %2204 = getelementptr inbounds [5 x double]* %2203, i32 0, i64 1
  %2205 = load double* %2204, align 8
  %2206 = fmul double %2198, %2205
  %2207 = load double* @tmp1, align 8
  %2208 = load i32* %j, align 4
  %2209 = add nsw i32 %2208, 1
  %2210 = sext i32 %2209 to i64
  %2211 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2210
  %2212 = getelementptr inbounds [5 x [5 x double]]* %2211, i32 0, i64 4
  %2213 = getelementptr inbounds [5 x double]* %2212, i32 0, i64 1
  %2214 = load double* %2213, align 8
  %2215 = fmul double %2207, %2214
  %2216 = fsub double %2206, %2215
  %2217 = load i32* %j, align 4
  %2218 = sext i32 %2217 to i64
  %2219 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2218
  %2220 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2219, i32 0, i64 2
  %2221 = getelementptr inbounds [5 x [5 x double]]* %2220, i32 0, i64 4
  %2222 = getelementptr inbounds [5 x double]* %2221, i32 0, i64 1
  store double %2216, double* %2222, align 8
  %2223 = load double* @tmp2, align 8
  %2224 = load i32* %j, align 4
  %2225 = add nsw i32 %2224, 1
  %2226 = sext i32 %2225 to i64
  %2227 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2226
  %2228 = getelementptr inbounds [5 x [5 x double]]* %2227, i32 0, i64 0
  %2229 = getelementptr inbounds [5 x double]* %2228, i32 0, i64 2
  %2230 = load double* %2229, align 8
  %2231 = fmul double %2223, %2230
  %2232 = load double* @tmp1, align 8
  %2233 = load i32* %j, align 4
  %2234 = add nsw i32 %2233, 1
  %2235 = sext i32 %2234 to i64
  %2236 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2235
  %2237 = getelementptr inbounds [5 x [5 x double]]* %2236, i32 0, i64 0
  %2238 = getelementptr inbounds [5 x double]* %2237, i32 0, i64 2
  %2239 = load double* %2238, align 8
  %2240 = fmul double %2232, %2239
  %2241 = fsub double %2231, %2240
  %2242 = load i32* %j, align 4
  %2243 = sext i32 %2242 to i64
  %2244 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2243
  %2245 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2244, i32 0, i64 2
  %2246 = getelementptr inbounds [5 x [5 x double]]* %2245, i32 0, i64 0
  %2247 = getelementptr inbounds [5 x double]* %2246, i32 0, i64 2
  store double %2241, double* %2247, align 8
  %2248 = load double* @tmp2, align 8
  %2249 = load i32* %j, align 4
  %2250 = add nsw i32 %2249, 1
  %2251 = sext i32 %2250 to i64
  %2252 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2251
  %2253 = getelementptr inbounds [5 x [5 x double]]* %2252, i32 0, i64 1
  %2254 = getelementptr inbounds [5 x double]* %2253, i32 0, i64 2
  %2255 = load double* %2254, align 8
  %2256 = fmul double %2248, %2255
  %2257 = load double* @tmp1, align 8
  %2258 = load i32* %j, align 4
  %2259 = add nsw i32 %2258, 1
  %2260 = sext i32 %2259 to i64
  %2261 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2260
  %2262 = getelementptr inbounds [5 x [5 x double]]* %2261, i32 0, i64 1
  %2263 = getelementptr inbounds [5 x double]* %2262, i32 0, i64 2
  %2264 = load double* %2263, align 8
  %2265 = fmul double %2257, %2264
  %2266 = fsub double %2256, %2265
  %2267 = load i32* %j, align 4
  %2268 = sext i32 %2267 to i64
  %2269 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2268
  %2270 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2269, i32 0, i64 2
  %2271 = getelementptr inbounds [5 x [5 x double]]* %2270, i32 0, i64 1
  %2272 = getelementptr inbounds [5 x double]* %2271, i32 0, i64 2
  store double %2266, double* %2272, align 8
  %2273 = load double* @tmp2, align 8
  %2274 = load i32* %j, align 4
  %2275 = add nsw i32 %2274, 1
  %2276 = sext i32 %2275 to i64
  %2277 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2276
  %2278 = getelementptr inbounds [5 x [5 x double]]* %2277, i32 0, i64 2
  %2279 = getelementptr inbounds [5 x double]* %2278, i32 0, i64 2
  %2280 = load double* %2279, align 8
  %2281 = fmul double %2273, %2280
  %2282 = load double* @tmp1, align 8
  %2283 = load i32* %j, align 4
  %2284 = add nsw i32 %2283, 1
  %2285 = sext i32 %2284 to i64
  %2286 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2285
  %2287 = getelementptr inbounds [5 x [5 x double]]* %2286, i32 0, i64 2
  %2288 = getelementptr inbounds [5 x double]* %2287, i32 0, i64 2
  %2289 = load double* %2288, align 8
  %2290 = fmul double %2282, %2289
  %2291 = fsub double %2281, %2290
  %2292 = load double* @tmp1, align 8
  %2293 = load double* @dy3, align 8
  %2294 = fmul double %2292, %2293
  %2295 = fsub double %2291, %2294
  %2296 = load i32* %j, align 4
  %2297 = sext i32 %2296 to i64
  %2298 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2297
  %2299 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2298, i32 0, i64 2
  %2300 = getelementptr inbounds [5 x [5 x double]]* %2299, i32 0, i64 2
  %2301 = getelementptr inbounds [5 x double]* %2300, i32 0, i64 2
  store double %2295, double* %2301, align 8
  %2302 = load double* @tmp2, align 8
  %2303 = load i32* %j, align 4
  %2304 = add nsw i32 %2303, 1
  %2305 = sext i32 %2304 to i64
  %2306 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2305
  %2307 = getelementptr inbounds [5 x [5 x double]]* %2306, i32 0, i64 3
  %2308 = getelementptr inbounds [5 x double]* %2307, i32 0, i64 2
  %2309 = load double* %2308, align 8
  %2310 = fmul double %2302, %2309
  %2311 = load double* @tmp1, align 8
  %2312 = load i32* %j, align 4
  %2313 = add nsw i32 %2312, 1
  %2314 = sext i32 %2313 to i64
  %2315 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2314
  %2316 = getelementptr inbounds [5 x [5 x double]]* %2315, i32 0, i64 3
  %2317 = getelementptr inbounds [5 x double]* %2316, i32 0, i64 2
  %2318 = load double* %2317, align 8
  %2319 = fmul double %2311, %2318
  %2320 = fsub double %2310, %2319
  %2321 = load i32* %j, align 4
  %2322 = sext i32 %2321 to i64
  %2323 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2322
  %2324 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2323, i32 0, i64 2
  %2325 = getelementptr inbounds [5 x [5 x double]]* %2324, i32 0, i64 3
  %2326 = getelementptr inbounds [5 x double]* %2325, i32 0, i64 2
  store double %2320, double* %2326, align 8
  %2327 = load double* @tmp2, align 8
  %2328 = load i32* %j, align 4
  %2329 = add nsw i32 %2328, 1
  %2330 = sext i32 %2329 to i64
  %2331 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2330
  %2332 = getelementptr inbounds [5 x [5 x double]]* %2331, i32 0, i64 4
  %2333 = getelementptr inbounds [5 x double]* %2332, i32 0, i64 2
  %2334 = load double* %2333, align 8
  %2335 = fmul double %2327, %2334
  %2336 = load double* @tmp1, align 8
  %2337 = load i32* %j, align 4
  %2338 = add nsw i32 %2337, 1
  %2339 = sext i32 %2338 to i64
  %2340 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2339
  %2341 = getelementptr inbounds [5 x [5 x double]]* %2340, i32 0, i64 4
  %2342 = getelementptr inbounds [5 x double]* %2341, i32 0, i64 2
  %2343 = load double* %2342, align 8
  %2344 = fmul double %2336, %2343
  %2345 = fsub double %2335, %2344
  %2346 = load i32* %j, align 4
  %2347 = sext i32 %2346 to i64
  %2348 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2347
  %2349 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2348, i32 0, i64 2
  %2350 = getelementptr inbounds [5 x [5 x double]]* %2349, i32 0, i64 4
  %2351 = getelementptr inbounds [5 x double]* %2350, i32 0, i64 2
  store double %2345, double* %2351, align 8
  %2352 = load double* @tmp2, align 8
  %2353 = load i32* %j, align 4
  %2354 = add nsw i32 %2353, 1
  %2355 = sext i32 %2354 to i64
  %2356 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2355
  %2357 = getelementptr inbounds [5 x [5 x double]]* %2356, i32 0, i64 0
  %2358 = getelementptr inbounds [5 x double]* %2357, i32 0, i64 3
  %2359 = load double* %2358, align 8
  %2360 = fmul double %2352, %2359
  %2361 = load double* @tmp1, align 8
  %2362 = load i32* %j, align 4
  %2363 = add nsw i32 %2362, 1
  %2364 = sext i32 %2363 to i64
  %2365 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2364
  %2366 = getelementptr inbounds [5 x [5 x double]]* %2365, i32 0, i64 0
  %2367 = getelementptr inbounds [5 x double]* %2366, i32 0, i64 3
  %2368 = load double* %2367, align 8
  %2369 = fmul double %2361, %2368
  %2370 = fsub double %2360, %2369
  %2371 = load i32* %j, align 4
  %2372 = sext i32 %2371 to i64
  %2373 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2372
  %2374 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2373, i32 0, i64 2
  %2375 = getelementptr inbounds [5 x [5 x double]]* %2374, i32 0, i64 0
  %2376 = getelementptr inbounds [5 x double]* %2375, i32 0, i64 3
  store double %2370, double* %2376, align 8
  %2377 = load double* @tmp2, align 8
  %2378 = load i32* %j, align 4
  %2379 = add nsw i32 %2378, 1
  %2380 = sext i32 %2379 to i64
  %2381 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2380
  %2382 = getelementptr inbounds [5 x [5 x double]]* %2381, i32 0, i64 1
  %2383 = getelementptr inbounds [5 x double]* %2382, i32 0, i64 3
  %2384 = load double* %2383, align 8
  %2385 = fmul double %2377, %2384
  %2386 = load double* @tmp1, align 8
  %2387 = load i32* %j, align 4
  %2388 = add nsw i32 %2387, 1
  %2389 = sext i32 %2388 to i64
  %2390 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2389
  %2391 = getelementptr inbounds [5 x [5 x double]]* %2390, i32 0, i64 1
  %2392 = getelementptr inbounds [5 x double]* %2391, i32 0, i64 3
  %2393 = load double* %2392, align 8
  %2394 = fmul double %2386, %2393
  %2395 = fsub double %2385, %2394
  %2396 = load i32* %j, align 4
  %2397 = sext i32 %2396 to i64
  %2398 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2397
  %2399 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2398, i32 0, i64 2
  %2400 = getelementptr inbounds [5 x [5 x double]]* %2399, i32 0, i64 1
  %2401 = getelementptr inbounds [5 x double]* %2400, i32 0, i64 3
  store double %2395, double* %2401, align 8
  %2402 = load double* @tmp2, align 8
  %2403 = load i32* %j, align 4
  %2404 = add nsw i32 %2403, 1
  %2405 = sext i32 %2404 to i64
  %2406 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2405
  %2407 = getelementptr inbounds [5 x [5 x double]]* %2406, i32 0, i64 2
  %2408 = getelementptr inbounds [5 x double]* %2407, i32 0, i64 3
  %2409 = load double* %2408, align 8
  %2410 = fmul double %2402, %2409
  %2411 = load double* @tmp1, align 8
  %2412 = load i32* %j, align 4
  %2413 = add nsw i32 %2412, 1
  %2414 = sext i32 %2413 to i64
  %2415 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2414
  %2416 = getelementptr inbounds [5 x [5 x double]]* %2415, i32 0, i64 2
  %2417 = getelementptr inbounds [5 x double]* %2416, i32 0, i64 3
  %2418 = load double* %2417, align 8
  %2419 = fmul double %2411, %2418
  %2420 = fsub double %2410, %2419
  %2421 = load i32* %j, align 4
  %2422 = sext i32 %2421 to i64
  %2423 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2422
  %2424 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2423, i32 0, i64 2
  %2425 = getelementptr inbounds [5 x [5 x double]]* %2424, i32 0, i64 2
  %2426 = getelementptr inbounds [5 x double]* %2425, i32 0, i64 3
  store double %2420, double* %2426, align 8
  %2427 = load double* @tmp2, align 8
  %2428 = load i32* %j, align 4
  %2429 = add nsw i32 %2428, 1
  %2430 = sext i32 %2429 to i64
  %2431 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2430
  %2432 = getelementptr inbounds [5 x [5 x double]]* %2431, i32 0, i64 3
  %2433 = getelementptr inbounds [5 x double]* %2432, i32 0, i64 3
  %2434 = load double* %2433, align 8
  %2435 = fmul double %2427, %2434
  %2436 = load double* @tmp1, align 8
  %2437 = load i32* %j, align 4
  %2438 = add nsw i32 %2437, 1
  %2439 = sext i32 %2438 to i64
  %2440 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2439
  %2441 = getelementptr inbounds [5 x [5 x double]]* %2440, i32 0, i64 3
  %2442 = getelementptr inbounds [5 x double]* %2441, i32 0, i64 3
  %2443 = load double* %2442, align 8
  %2444 = fmul double %2436, %2443
  %2445 = fsub double %2435, %2444
  %2446 = load double* @tmp1, align 8
  %2447 = load double* @dy4, align 8
  %2448 = fmul double %2446, %2447
  %2449 = fsub double %2445, %2448
  %2450 = load i32* %j, align 4
  %2451 = sext i32 %2450 to i64
  %2452 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2451
  %2453 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2452, i32 0, i64 2
  %2454 = getelementptr inbounds [5 x [5 x double]]* %2453, i32 0, i64 3
  %2455 = getelementptr inbounds [5 x double]* %2454, i32 0, i64 3
  store double %2449, double* %2455, align 8
  %2456 = load double* @tmp2, align 8
  %2457 = load i32* %j, align 4
  %2458 = add nsw i32 %2457, 1
  %2459 = sext i32 %2458 to i64
  %2460 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2459
  %2461 = getelementptr inbounds [5 x [5 x double]]* %2460, i32 0, i64 4
  %2462 = getelementptr inbounds [5 x double]* %2461, i32 0, i64 3
  %2463 = load double* %2462, align 8
  %2464 = fmul double %2456, %2463
  %2465 = load double* @tmp1, align 8
  %2466 = load i32* %j, align 4
  %2467 = add nsw i32 %2466, 1
  %2468 = sext i32 %2467 to i64
  %2469 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2468
  %2470 = getelementptr inbounds [5 x [5 x double]]* %2469, i32 0, i64 4
  %2471 = getelementptr inbounds [5 x double]* %2470, i32 0, i64 3
  %2472 = load double* %2471, align 8
  %2473 = fmul double %2465, %2472
  %2474 = fsub double %2464, %2473
  %2475 = load i32* %j, align 4
  %2476 = sext i32 %2475 to i64
  %2477 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2476
  %2478 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2477, i32 0, i64 2
  %2479 = getelementptr inbounds [5 x [5 x double]]* %2478, i32 0, i64 4
  %2480 = getelementptr inbounds [5 x double]* %2479, i32 0, i64 3
  store double %2474, double* %2480, align 8
  %2481 = load double* @tmp2, align 8
  %2482 = load i32* %j, align 4
  %2483 = add nsw i32 %2482, 1
  %2484 = sext i32 %2483 to i64
  %2485 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2484
  %2486 = getelementptr inbounds [5 x [5 x double]]* %2485, i32 0, i64 0
  %2487 = getelementptr inbounds [5 x double]* %2486, i32 0, i64 4
  %2488 = load double* %2487, align 8
  %2489 = fmul double %2481, %2488
  %2490 = load double* @tmp1, align 8
  %2491 = load i32* %j, align 4
  %2492 = add nsw i32 %2491, 1
  %2493 = sext i32 %2492 to i64
  %2494 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2493
  %2495 = getelementptr inbounds [5 x [5 x double]]* %2494, i32 0, i64 0
  %2496 = getelementptr inbounds [5 x double]* %2495, i32 0, i64 4
  %2497 = load double* %2496, align 8
  %2498 = fmul double %2490, %2497
  %2499 = fsub double %2489, %2498
  %2500 = load i32* %j, align 4
  %2501 = sext i32 %2500 to i64
  %2502 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2501
  %2503 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2502, i32 0, i64 2
  %2504 = getelementptr inbounds [5 x [5 x double]]* %2503, i32 0, i64 0
  %2505 = getelementptr inbounds [5 x double]* %2504, i32 0, i64 4
  store double %2499, double* %2505, align 8
  %2506 = load double* @tmp2, align 8
  %2507 = load i32* %j, align 4
  %2508 = add nsw i32 %2507, 1
  %2509 = sext i32 %2508 to i64
  %2510 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2509
  %2511 = getelementptr inbounds [5 x [5 x double]]* %2510, i32 0, i64 1
  %2512 = getelementptr inbounds [5 x double]* %2511, i32 0, i64 4
  %2513 = load double* %2512, align 8
  %2514 = fmul double %2506, %2513
  %2515 = load double* @tmp1, align 8
  %2516 = load i32* %j, align 4
  %2517 = add nsw i32 %2516, 1
  %2518 = sext i32 %2517 to i64
  %2519 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2518
  %2520 = getelementptr inbounds [5 x [5 x double]]* %2519, i32 0, i64 1
  %2521 = getelementptr inbounds [5 x double]* %2520, i32 0, i64 4
  %2522 = load double* %2521, align 8
  %2523 = fmul double %2515, %2522
  %2524 = fsub double %2514, %2523
  %2525 = load i32* %j, align 4
  %2526 = sext i32 %2525 to i64
  %2527 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2526
  %2528 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2527, i32 0, i64 2
  %2529 = getelementptr inbounds [5 x [5 x double]]* %2528, i32 0, i64 1
  %2530 = getelementptr inbounds [5 x double]* %2529, i32 0, i64 4
  store double %2524, double* %2530, align 8
  %2531 = load double* @tmp2, align 8
  %2532 = load i32* %j, align 4
  %2533 = add nsw i32 %2532, 1
  %2534 = sext i32 %2533 to i64
  %2535 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2534
  %2536 = getelementptr inbounds [5 x [5 x double]]* %2535, i32 0, i64 2
  %2537 = getelementptr inbounds [5 x double]* %2536, i32 0, i64 4
  %2538 = load double* %2537, align 8
  %2539 = fmul double %2531, %2538
  %2540 = load double* @tmp1, align 8
  %2541 = load i32* %j, align 4
  %2542 = add nsw i32 %2541, 1
  %2543 = sext i32 %2542 to i64
  %2544 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2543
  %2545 = getelementptr inbounds [5 x [5 x double]]* %2544, i32 0, i64 2
  %2546 = getelementptr inbounds [5 x double]* %2545, i32 0, i64 4
  %2547 = load double* %2546, align 8
  %2548 = fmul double %2540, %2547
  %2549 = fsub double %2539, %2548
  %2550 = load i32* %j, align 4
  %2551 = sext i32 %2550 to i64
  %2552 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2551
  %2553 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2552, i32 0, i64 2
  %2554 = getelementptr inbounds [5 x [5 x double]]* %2553, i32 0, i64 2
  %2555 = getelementptr inbounds [5 x double]* %2554, i32 0, i64 4
  store double %2549, double* %2555, align 8
  %2556 = load double* @tmp2, align 8
  %2557 = load i32* %j, align 4
  %2558 = add nsw i32 %2557, 1
  %2559 = sext i32 %2558 to i64
  %2560 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2559
  %2561 = getelementptr inbounds [5 x [5 x double]]* %2560, i32 0, i64 3
  %2562 = getelementptr inbounds [5 x double]* %2561, i32 0, i64 4
  %2563 = load double* %2562, align 8
  %2564 = fmul double %2556, %2563
  %2565 = load double* @tmp1, align 8
  %2566 = load i32* %j, align 4
  %2567 = add nsw i32 %2566, 1
  %2568 = sext i32 %2567 to i64
  %2569 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2568
  %2570 = getelementptr inbounds [5 x [5 x double]]* %2569, i32 0, i64 3
  %2571 = getelementptr inbounds [5 x double]* %2570, i32 0, i64 4
  %2572 = load double* %2571, align 8
  %2573 = fmul double %2565, %2572
  %2574 = fsub double %2564, %2573
  %2575 = load i32* %j, align 4
  %2576 = sext i32 %2575 to i64
  %2577 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2576
  %2578 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2577, i32 0, i64 2
  %2579 = getelementptr inbounds [5 x [5 x double]]* %2578, i32 0, i64 3
  %2580 = getelementptr inbounds [5 x double]* %2579, i32 0, i64 4
  store double %2574, double* %2580, align 8
  %2581 = load double* @tmp2, align 8
  %2582 = load i32* %j, align 4
  %2583 = add nsw i32 %2582, 1
  %2584 = sext i32 %2583 to i64
  %2585 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2584
  %2586 = getelementptr inbounds [5 x [5 x double]]* %2585, i32 0, i64 4
  %2587 = getelementptr inbounds [5 x double]* %2586, i32 0, i64 4
  %2588 = load double* %2587, align 8
  %2589 = fmul double %2581, %2588
  %2590 = load double* @tmp1, align 8
  %2591 = load i32* %j, align 4
  %2592 = add nsw i32 %2591, 1
  %2593 = sext i32 %2592 to i64
  %2594 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2593
  %2595 = getelementptr inbounds [5 x [5 x double]]* %2594, i32 0, i64 4
  %2596 = getelementptr inbounds [5 x double]* %2595, i32 0, i64 4
  %2597 = load double* %2596, align 8
  %2598 = fmul double %2590, %2597
  %2599 = fsub double %2589, %2598
  %2600 = load double* @tmp1, align 8
  %2601 = load double* @dy5, align 8
  %2602 = fmul double %2600, %2601
  %2603 = fsub double %2599, %2602
  %2604 = load i32* %j, align 4
  %2605 = sext i32 %2604 to i64
  %2606 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2605
  %2607 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2606, i32 0, i64 2
  %2608 = getelementptr inbounds [5 x [5 x double]]* %2607, i32 0, i64 4
  %2609 = getelementptr inbounds [5 x double]* %2608, i32 0, i64 4
  store double %2603, double* %2609, align 8
  br label %2610

; <label>:2610                                    ; preds = %883
  %2611 = load i32* %j, align 4
  %2612 = add nsw i32 %2611, 1
  store i32 %2612, i32* %j, align 4
  br label %878

; <label>:2613                                    ; preds = %878
  %2614 = load i32* %i, align 4
  %2615 = sext i32 %2614 to i64
  %2616 = load i32* %k, align 4
  %2617 = sext i32 %2616 to i64
  %2618 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2617
  %2619 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2618, i32 0, i64 0
  %2620 = getelementptr inbounds [13 x [5 x double]]* %2619, i32 0, i64 %2615
  %2621 = getelementptr inbounds [5 x double]* %2620, i32 0, i32 0
  call void @binvcrhs([5 x double]* getelementptr inbounds ([13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 0, i64 1, i32 0), [5 x double]* getelementptr inbounds ([13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 0, i64 2, i32 0), double* %2621)
  store i32 1, i32* %j, align 4
  br label %2622

; <label>:2622                                    ; preds = %2690, %2613
  %2623 = load i32* %j, align 4
  %2624 = load i32* %jsize, align 4
  %2625 = sub nsw i32 %2624, 1
  %2626 = icmp sle i32 %2623, %2625
  br i1 %2626, label %2627, label %2693

; <label>:2627                                    ; preds = %2622
  %2628 = load i32* %j, align 4
  %2629 = sext i32 %2628 to i64
  %2630 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2629
  %2631 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2630, i32 0, i64 0
  %2632 = getelementptr inbounds [5 x [5 x double]]* %2631, i32 0, i32 0
  %2633 = load i32* %i, align 4
  %2634 = sext i32 %2633 to i64
  %2635 = load i32* %j, align 4
  %2636 = sub nsw i32 %2635, 1
  %2637 = sext i32 %2636 to i64
  %2638 = load i32* %k, align 4
  %2639 = sext i32 %2638 to i64
  %2640 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2639
  %2641 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2640, i32 0, i64 %2637
  %2642 = getelementptr inbounds [13 x [5 x double]]* %2641, i32 0, i64 %2634
  %2643 = getelementptr inbounds [5 x double]* %2642, i32 0, i32 0
  %2644 = load i32* %i, align 4
  %2645 = sext i32 %2644 to i64
  %2646 = load i32* %j, align 4
  %2647 = sext i32 %2646 to i64
  %2648 = load i32* %k, align 4
  %2649 = sext i32 %2648 to i64
  %2650 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2649
  %2651 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2650, i32 0, i64 %2647
  %2652 = getelementptr inbounds [13 x [5 x double]]* %2651, i32 0, i64 %2645
  %2653 = getelementptr inbounds [5 x double]* %2652, i32 0, i32 0
  call void @matvec_sub([5 x double]* %2632, double* %2643, double* %2653)
  %2654 = load i32* %j, align 4
  %2655 = sext i32 %2654 to i64
  %2656 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2655
  %2657 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2656, i32 0, i64 0
  %2658 = getelementptr inbounds [5 x [5 x double]]* %2657, i32 0, i32 0
  %2659 = load i32* %j, align 4
  %2660 = sub nsw i32 %2659, 1
  %2661 = sext i32 %2660 to i64
  %2662 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2661
  %2663 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2662, i32 0, i64 2
  %2664 = getelementptr inbounds [5 x [5 x double]]* %2663, i32 0, i32 0
  %2665 = load i32* %j, align 4
  %2666 = sext i32 %2665 to i64
  %2667 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2666
  %2668 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2667, i32 0, i64 1
  %2669 = getelementptr inbounds [5 x [5 x double]]* %2668, i32 0, i32 0
  call void @matmul_sub([5 x double]* %2658, [5 x double]* %2664, [5 x double]* %2669)
  %2670 = load i32* %j, align 4
  %2671 = sext i32 %2670 to i64
  %2672 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2671
  %2673 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2672, i32 0, i64 1
  %2674 = getelementptr inbounds [5 x [5 x double]]* %2673, i32 0, i32 0
  %2675 = load i32* %j, align 4
  %2676 = sext i32 %2675 to i64
  %2677 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2676
  %2678 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2677, i32 0, i64 2
  %2679 = getelementptr inbounds [5 x [5 x double]]* %2678, i32 0, i32 0
  %2680 = load i32* %i, align 4
  %2681 = sext i32 %2680 to i64
  %2682 = load i32* %j, align 4
  %2683 = sext i32 %2682 to i64
  %2684 = load i32* %k, align 4
  %2685 = sext i32 %2684 to i64
  %2686 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2685
  %2687 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2686, i32 0, i64 %2683
  %2688 = getelementptr inbounds [13 x [5 x double]]* %2687, i32 0, i64 %2681
  %2689 = getelementptr inbounds [5 x double]* %2688, i32 0, i32 0
  call void @binvcrhs([5 x double]* %2674, [5 x double]* %2679, double* %2689)
  br label %2690

; <label>:2690                                    ; preds = %2627
  %2691 = load i32* %j, align 4
  %2692 = add nsw i32 %2691, 1
  store i32 %2692, i32* %j, align 4
  br label %2622

; <label>:2693                                    ; preds = %2622
  %2694 = load i32* %jsize, align 4
  %2695 = sext i32 %2694 to i64
  %2696 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2695
  %2697 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2696, i32 0, i64 0
  %2698 = getelementptr inbounds [5 x [5 x double]]* %2697, i32 0, i32 0
  %2699 = load i32* %i, align 4
  %2700 = sext i32 %2699 to i64
  %2701 = load i32* %jsize, align 4
  %2702 = sub nsw i32 %2701, 1
  %2703 = sext i32 %2702 to i64
  %2704 = load i32* %k, align 4
  %2705 = sext i32 %2704 to i64
  %2706 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2705
  %2707 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2706, i32 0, i64 %2703
  %2708 = getelementptr inbounds [13 x [5 x double]]* %2707, i32 0, i64 %2700
  %2709 = getelementptr inbounds [5 x double]* %2708, i32 0, i32 0
  %2710 = load i32* %i, align 4
  %2711 = sext i32 %2710 to i64
  %2712 = load i32* %jsize, align 4
  %2713 = sext i32 %2712 to i64
  %2714 = load i32* %k, align 4
  %2715 = sext i32 %2714 to i64
  %2716 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2715
  %2717 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2716, i32 0, i64 %2713
  %2718 = getelementptr inbounds [13 x [5 x double]]* %2717, i32 0, i64 %2711
  %2719 = getelementptr inbounds [5 x double]* %2718, i32 0, i32 0
  call void @matvec_sub([5 x double]* %2698, double* %2709, double* %2719)
  %2720 = load i32* %jsize, align 4
  %2721 = sext i32 %2720 to i64
  %2722 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2721
  %2723 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2722, i32 0, i64 0
  %2724 = getelementptr inbounds [5 x [5 x double]]* %2723, i32 0, i32 0
  %2725 = load i32* %jsize, align 4
  %2726 = sub nsw i32 %2725, 1
  %2727 = sext i32 %2726 to i64
  %2728 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2727
  %2729 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2728, i32 0, i64 2
  %2730 = getelementptr inbounds [5 x [5 x double]]* %2729, i32 0, i32 0
  %2731 = load i32* %jsize, align 4
  %2732 = sext i32 %2731 to i64
  %2733 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2732
  %2734 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2733, i32 0, i64 1
  %2735 = getelementptr inbounds [5 x [5 x double]]* %2734, i32 0, i32 0
  call void @matmul_sub([5 x double]* %2724, [5 x double]* %2730, [5 x double]* %2735)
  %2736 = load i32* %jsize, align 4
  %2737 = sext i32 %2736 to i64
  %2738 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2737
  %2739 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2738, i32 0, i64 1
  %2740 = getelementptr inbounds [5 x [5 x double]]* %2739, i32 0, i32 0
  %2741 = load i32* %i, align 4
  %2742 = sext i32 %2741 to i64
  %2743 = load i32* %jsize, align 4
  %2744 = sext i32 %2743 to i64
  %2745 = load i32* %k, align 4
  %2746 = sext i32 %2745 to i64
  %2747 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2746
  %2748 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2747, i32 0, i64 %2744
  %2749 = getelementptr inbounds [13 x [5 x double]]* %2748, i32 0, i64 %2742
  %2750 = getelementptr inbounds [5 x double]* %2749, i32 0, i32 0
  call void @binvrhs([5 x double]* %2740, double* %2750)
  %2751 = load i32* %jsize, align 4
  %2752 = sub nsw i32 %2751, 1
  store i32 %2752, i32* %j, align 4
  br label %2753

; <label>:2753                                    ; preds = %2825, %2693
  %2754 = load i32* %j, align 4
  %2755 = icmp sge i32 %2754, 0
  br i1 %2755, label %2756, label %2828

; <label>:2756                                    ; preds = %2753
  store i32 0, i32* %m, align 4
  br label %2757

; <label>:2757                                    ; preds = %2821, %2756
  %2758 = load i32* %m, align 4
  %2759 = icmp slt i32 %2758, 5
  br i1 %2759, label %2760, label %2824

; <label>:2760                                    ; preds = %2757
  store i32 0, i32* %n, align 4
  br label %2761

; <label>:2761                                    ; preds = %2817, %2760
  %2762 = load i32* %n, align 4
  %2763 = icmp slt i32 %2762, 5
  br i1 %2763, label %2764, label %2820

; <label>:2764                                    ; preds = %2761
  %2765 = load i32* %m, align 4
  %2766 = sext i32 %2765 to i64
  %2767 = load i32* %i, align 4
  %2768 = sext i32 %2767 to i64
  %2769 = load i32* %j, align 4
  %2770 = sext i32 %2769 to i64
  %2771 = load i32* %k, align 4
  %2772 = sext i32 %2771 to i64
  %2773 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2772
  %2774 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2773, i32 0, i64 %2770
  %2775 = getelementptr inbounds [13 x [5 x double]]* %2774, i32 0, i64 %2768
  %2776 = getelementptr inbounds [5 x double]* %2775, i32 0, i64 %2766
  %2777 = load double* %2776, align 8
  %2778 = load i32* %m, align 4
  %2779 = sext i32 %2778 to i64
  %2780 = load i32* %n, align 4
  %2781 = sext i32 %2780 to i64
  %2782 = load i32* %j, align 4
  %2783 = sext i32 %2782 to i64
  %2784 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2783
  %2785 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2784, i32 0, i64 2
  %2786 = getelementptr inbounds [5 x [5 x double]]* %2785, i32 0, i64 %2781
  %2787 = getelementptr inbounds [5 x double]* %2786, i32 0, i64 %2779
  %2788 = load double* %2787, align 8
  %2789 = load i32* %n, align 4
  %2790 = sext i32 %2789 to i64
  %2791 = load i32* %i, align 4
  %2792 = sext i32 %2791 to i64
  %2793 = load i32* %j, align 4
  %2794 = add nsw i32 %2793, 1
  %2795 = sext i32 %2794 to i64
  %2796 = load i32* %k, align 4
  %2797 = sext i32 %2796 to i64
  %2798 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2797
  %2799 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2798, i32 0, i64 %2795
  %2800 = getelementptr inbounds [13 x [5 x double]]* %2799, i32 0, i64 %2792
  %2801 = getelementptr inbounds [5 x double]* %2800, i32 0, i64 %2790
  %2802 = load double* %2801, align 8
  %2803 = fmul double %2788, %2802
  %2804 = fsub double %2777, %2803
  %2805 = load i32* %m, align 4
  %2806 = sext i32 %2805 to i64
  %2807 = load i32* %i, align 4
  %2808 = sext i32 %2807 to i64
  %2809 = load i32* %j, align 4
  %2810 = sext i32 %2809 to i64
  %2811 = load i32* %k, align 4
  %2812 = sext i32 %2811 to i64
  %2813 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2812
  %2814 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2813, i32 0, i64 %2810
  %2815 = getelementptr inbounds [13 x [5 x double]]* %2814, i32 0, i64 %2808
  %2816 = getelementptr inbounds [5 x double]* %2815, i32 0, i64 %2806
  store double %2804, double* %2816, align 8
  br label %2817

; <label>:2817                                    ; preds = %2764
  %2818 = load i32* %n, align 4
  %2819 = add nsw i32 %2818, 1
  store i32 %2819, i32* %n, align 4
  br label %2761

; <label>:2820                                    ; preds = %2761
  br label %2821

; <label>:2821                                    ; preds = %2820
  %2822 = load i32* %m, align 4
  %2823 = add nsw i32 %2822, 1
  store i32 %2823, i32* %m, align 4
  br label %2757

; <label>:2824                                    ; preds = %2757
  br label %2825

; <label>:2825                                    ; preds = %2824
  %2826 = load i32* %j, align 4
  %2827 = add nsw i32 %2826, -1
  store i32 %2827, i32* %j, align 4
  br label %2753

; <label>:2828                                    ; preds = %2753
  br label %2829

; <label>:2829                                    ; preds = %2828
  %2830 = load i32* %i, align 4
  %2831 = add nsw i32 %2830, 1
  store i32 %2831, i32* %i, align 4
  br label %13

; <label>:2832                                    ; preds = %13
  br label %2833

; <label>:2833                                    ; preds = %2832
  %2834 = load i32* %k, align 4
  %2835 = add nsw i32 %2834, 1
  store i32 %2835, i32* %k, align 4
  br label %7

; <label>:2836                                    ; preds = %7
  %2837 = load i32* @timeron, align 4
  %2838 = icmp ne i32 %2837, 0
  br i1 %2838, label %2839, label %2840

; <label>:2839                                    ; preds = %2836
  call void @timer_stop(i32 7)
  br label %2840

; <label>:2840                                    ; preds = %2839, %2836
  ret void
}

; Function Attrs: nounwind uwtable
define void @z_solve() #0 {
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %m = alloca i32, align 4
  %n = alloca i32, align 4
  %ksize = alloca i32, align 4
  %1 = load i32* @timeron, align 4
  %2 = icmp ne i32 %1, 0
  br i1 %2, label %3, label %4

; <label>:3                                       ; preds = %0
  call void @timer_start(i32 8)
  br label %4

; <label>:4                                       ; preds = %3, %0
  %5 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 2), align 4
  %6 = sub nsw i32 %5, 1
  store i32 %6, i32* %ksize, align 4
  store i32 1, i32* %j, align 4
  br label %7

; <label>:7                                       ; preds = %2836, %4
  %8 = load i32* %j, align 4
  %9 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 1), align 4
  %10 = sub nsw i32 %9, 2
  %11 = icmp sle i32 %8, %10
  br i1 %11, label %12, label %2839

; <label>:12                                      ; preds = %7
  store i32 1, i32* %i, align 4
  br label %13

; <label>:13                                      ; preds = %2832, %12
  %14 = load i32* %i, align 4
  %15 = load i32* getelementptr inbounds ([3 x i32]* @grid_points, i32 0, i64 0), align 4
  %16 = sub nsw i32 %15, 2
  %17 = icmp sle i32 %14, %16
  br i1 %17, label %18, label %2835

; <label>:18                                      ; preds = %13
  store i32 0, i32* %k, align 4
  br label %19

; <label>:19                                      ; preds = %877, %18
  %20 = load i32* %k, align 4
  %21 = load i32* %ksize, align 4
  %22 = icmp sle i32 %20, %21
  br i1 %22, label %23, label %880

; <label>:23                                      ; preds = %19
  %24 = load i32* %i, align 4
  %25 = sext i32 %24 to i64
  %26 = load i32* %j, align 4
  %27 = sext i32 %26 to i64
  %28 = load i32* %k, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %29
  %31 = getelementptr inbounds [13 x [13 x [5 x double]]]* %30, i32 0, i64 %27
  %32 = getelementptr inbounds [13 x [5 x double]]* %31, i32 0, i64 %25
  %33 = getelementptr inbounds [5 x double]* %32, i32 0, i64 0
  %34 = load double* %33, align 8
  %35 = fdiv double 1.000000e+00, %34
  store double %35, double* @tmp1, align 8
  %36 = load double* @tmp1, align 8
  %37 = load double* @tmp1, align 8
  %38 = fmul double %36, %37
  store double %38, double* @tmp2, align 8
  %39 = load double* @tmp1, align 8
  %40 = load double* @tmp2, align 8
  %41 = fmul double %39, %40
  store double %41, double* @tmp3, align 8
  %42 = load i32* %k, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %43
  %45 = getelementptr inbounds [5 x [5 x double]]* %44, i32 0, i64 0
  %46 = getelementptr inbounds [5 x double]* %45, i32 0, i64 0
  store double 0.000000e+00, double* %46, align 8
  %47 = load i32* %k, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %48
  %50 = getelementptr inbounds [5 x [5 x double]]* %49, i32 0, i64 1
  %51 = getelementptr inbounds [5 x double]* %50, i32 0, i64 0
  store double 0.000000e+00, double* %51, align 8
  %52 = load i32* %k, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %53
  %55 = getelementptr inbounds [5 x [5 x double]]* %54, i32 0, i64 2
  %56 = getelementptr inbounds [5 x double]* %55, i32 0, i64 0
  store double 0.000000e+00, double* %56, align 8
  %57 = load i32* %k, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %58
  %60 = getelementptr inbounds [5 x [5 x double]]* %59, i32 0, i64 3
  %61 = getelementptr inbounds [5 x double]* %60, i32 0, i64 0
  store double 1.000000e+00, double* %61, align 8
  %62 = load i32* %k, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %63
  %65 = getelementptr inbounds [5 x [5 x double]]* %64, i32 0, i64 4
  %66 = getelementptr inbounds [5 x double]* %65, i32 0, i64 0
  store double 0.000000e+00, double* %66, align 8
  %67 = load i32* %i, align 4
  %68 = sext i32 %67 to i64
  %69 = load i32* %j, align 4
  %70 = sext i32 %69 to i64
  %71 = load i32* %k, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %72
  %74 = getelementptr inbounds [13 x [13 x [5 x double]]]* %73, i32 0, i64 %70
  %75 = getelementptr inbounds [13 x [5 x double]]* %74, i32 0, i64 %68
  %76 = getelementptr inbounds [5 x double]* %75, i32 0, i64 1
  %77 = load double* %76, align 8
  %78 = load i32* %i, align 4
  %79 = sext i32 %78 to i64
  %80 = load i32* %j, align 4
  %81 = sext i32 %80 to i64
  %82 = load i32* %k, align 4
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %83
  %85 = getelementptr inbounds [13 x [13 x [5 x double]]]* %84, i32 0, i64 %81
  %86 = getelementptr inbounds [13 x [5 x double]]* %85, i32 0, i64 %79
  %87 = getelementptr inbounds [5 x double]* %86, i32 0, i64 3
  %88 = load double* %87, align 8
  %89 = fmul double %77, %88
  %90 = fsub double -0.000000e+00, %89
  %91 = load double* @tmp2, align 8
  %92 = fmul double %90, %91
  %93 = load i32* %k, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %94
  %96 = getelementptr inbounds [5 x [5 x double]]* %95, i32 0, i64 0
  %97 = getelementptr inbounds [5 x double]* %96, i32 0, i64 1
  store double %92, double* %97, align 8
  %98 = load i32* %i, align 4
  %99 = sext i32 %98 to i64
  %100 = load i32* %j, align 4
  %101 = sext i32 %100 to i64
  %102 = load i32* %k, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %103
  %105 = getelementptr inbounds [13 x [13 x [5 x double]]]* %104, i32 0, i64 %101
  %106 = getelementptr inbounds [13 x [5 x double]]* %105, i32 0, i64 %99
  %107 = getelementptr inbounds [5 x double]* %106, i32 0, i64 3
  %108 = load double* %107, align 8
  %109 = load double* @tmp1, align 8
  %110 = fmul double %108, %109
  %111 = load i32* %k, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %112
  %114 = getelementptr inbounds [5 x [5 x double]]* %113, i32 0, i64 1
  %115 = getelementptr inbounds [5 x double]* %114, i32 0, i64 1
  store double %110, double* %115, align 8
  %116 = load i32* %k, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %117
  %119 = getelementptr inbounds [5 x [5 x double]]* %118, i32 0, i64 2
  %120 = getelementptr inbounds [5 x double]* %119, i32 0, i64 1
  store double 0.000000e+00, double* %120, align 8
  %121 = load i32* %i, align 4
  %122 = sext i32 %121 to i64
  %123 = load i32* %j, align 4
  %124 = sext i32 %123 to i64
  %125 = load i32* %k, align 4
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %126
  %128 = getelementptr inbounds [13 x [13 x [5 x double]]]* %127, i32 0, i64 %124
  %129 = getelementptr inbounds [13 x [5 x double]]* %128, i32 0, i64 %122
  %130 = getelementptr inbounds [5 x double]* %129, i32 0, i64 1
  %131 = load double* %130, align 8
  %132 = load double* @tmp1, align 8
  %133 = fmul double %131, %132
  %134 = load i32* %k, align 4
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %135
  %137 = getelementptr inbounds [5 x [5 x double]]* %136, i32 0, i64 3
  %138 = getelementptr inbounds [5 x double]* %137, i32 0, i64 1
  store double %133, double* %138, align 8
  %139 = load i32* %k, align 4
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %140
  %142 = getelementptr inbounds [5 x [5 x double]]* %141, i32 0, i64 4
  %143 = getelementptr inbounds [5 x double]* %142, i32 0, i64 1
  store double 0.000000e+00, double* %143, align 8
  %144 = load i32* %i, align 4
  %145 = sext i32 %144 to i64
  %146 = load i32* %j, align 4
  %147 = sext i32 %146 to i64
  %148 = load i32* %k, align 4
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %149
  %151 = getelementptr inbounds [13 x [13 x [5 x double]]]* %150, i32 0, i64 %147
  %152 = getelementptr inbounds [13 x [5 x double]]* %151, i32 0, i64 %145
  %153 = getelementptr inbounds [5 x double]* %152, i32 0, i64 2
  %154 = load double* %153, align 8
  %155 = load i32* %i, align 4
  %156 = sext i32 %155 to i64
  %157 = load i32* %j, align 4
  %158 = sext i32 %157 to i64
  %159 = load i32* %k, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %160
  %162 = getelementptr inbounds [13 x [13 x [5 x double]]]* %161, i32 0, i64 %158
  %163 = getelementptr inbounds [13 x [5 x double]]* %162, i32 0, i64 %156
  %164 = getelementptr inbounds [5 x double]* %163, i32 0, i64 3
  %165 = load double* %164, align 8
  %166 = fmul double %154, %165
  %167 = fsub double -0.000000e+00, %166
  %168 = load double* @tmp2, align 8
  %169 = fmul double %167, %168
  %170 = load i32* %k, align 4
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %171
  %173 = getelementptr inbounds [5 x [5 x double]]* %172, i32 0, i64 0
  %174 = getelementptr inbounds [5 x double]* %173, i32 0, i64 2
  store double %169, double* %174, align 8
  %175 = load i32* %k, align 4
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %176
  %178 = getelementptr inbounds [5 x [5 x double]]* %177, i32 0, i64 1
  %179 = getelementptr inbounds [5 x double]* %178, i32 0, i64 2
  store double 0.000000e+00, double* %179, align 8
  %180 = load i32* %i, align 4
  %181 = sext i32 %180 to i64
  %182 = load i32* %j, align 4
  %183 = sext i32 %182 to i64
  %184 = load i32* %k, align 4
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %185
  %187 = getelementptr inbounds [13 x [13 x [5 x double]]]* %186, i32 0, i64 %183
  %188 = getelementptr inbounds [13 x [5 x double]]* %187, i32 0, i64 %181
  %189 = getelementptr inbounds [5 x double]* %188, i32 0, i64 3
  %190 = load double* %189, align 8
  %191 = load double* @tmp1, align 8
  %192 = fmul double %190, %191
  %193 = load i32* %k, align 4
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %194
  %196 = getelementptr inbounds [5 x [5 x double]]* %195, i32 0, i64 2
  %197 = getelementptr inbounds [5 x double]* %196, i32 0, i64 2
  store double %192, double* %197, align 8
  %198 = load i32* %i, align 4
  %199 = sext i32 %198 to i64
  %200 = load i32* %j, align 4
  %201 = sext i32 %200 to i64
  %202 = load i32* %k, align 4
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %203
  %205 = getelementptr inbounds [13 x [13 x [5 x double]]]* %204, i32 0, i64 %201
  %206 = getelementptr inbounds [13 x [5 x double]]* %205, i32 0, i64 %199
  %207 = getelementptr inbounds [5 x double]* %206, i32 0, i64 2
  %208 = load double* %207, align 8
  %209 = load double* @tmp1, align 8
  %210 = fmul double %208, %209
  %211 = load i32* %k, align 4
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %212
  %214 = getelementptr inbounds [5 x [5 x double]]* %213, i32 0, i64 3
  %215 = getelementptr inbounds [5 x double]* %214, i32 0, i64 2
  store double %210, double* %215, align 8
  %216 = load i32* %k, align 4
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %217
  %219 = getelementptr inbounds [5 x [5 x double]]* %218, i32 0, i64 4
  %220 = getelementptr inbounds [5 x double]* %219, i32 0, i64 2
  store double 0.000000e+00, double* %220, align 8
  %221 = load i32* %i, align 4
  %222 = sext i32 %221 to i64
  %223 = load i32* %j, align 4
  %224 = sext i32 %223 to i64
  %225 = load i32* %k, align 4
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %226
  %228 = getelementptr inbounds [13 x [13 x [5 x double]]]* %227, i32 0, i64 %224
  %229 = getelementptr inbounds [13 x [5 x double]]* %228, i32 0, i64 %222
  %230 = getelementptr inbounds [5 x double]* %229, i32 0, i64 3
  %231 = load double* %230, align 8
  %232 = load i32* %i, align 4
  %233 = sext i32 %232 to i64
  %234 = load i32* %j, align 4
  %235 = sext i32 %234 to i64
  %236 = load i32* %k, align 4
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %237
  %239 = getelementptr inbounds [13 x [13 x [5 x double]]]* %238, i32 0, i64 %235
  %240 = getelementptr inbounds [13 x [5 x double]]* %239, i32 0, i64 %233
  %241 = getelementptr inbounds [5 x double]* %240, i32 0, i64 3
  %242 = load double* %241, align 8
  %243 = fmul double %231, %242
  %244 = load double* @tmp2, align 8
  %245 = fmul double %243, %244
  %246 = fsub double -0.000000e+00, %245
  %247 = load double* @c2, align 8
  %248 = load i32* %i, align 4
  %249 = sext i32 %248 to i64
  %250 = load i32* %j, align 4
  %251 = sext i32 %250 to i64
  %252 = load i32* %k, align 4
  %253 = sext i32 %252 to i64
  %254 = getelementptr inbounds [12 x [13 x [13 x double]]]* @qs, i32 0, i64 %253
  %255 = getelementptr inbounds [13 x [13 x double]]* %254, i32 0, i64 %251
  %256 = getelementptr inbounds [13 x double]* %255, i32 0, i64 %249
  %257 = load double* %256, align 8
  %258 = fmul double %247, %257
  %259 = fadd double %246, %258
  %260 = load i32* %k, align 4
  %261 = sext i32 %260 to i64
  %262 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %261
  %263 = getelementptr inbounds [5 x [5 x double]]* %262, i32 0, i64 0
  %264 = getelementptr inbounds [5 x double]* %263, i32 0, i64 3
  store double %259, double* %264, align 8
  %265 = load double* @c2, align 8
  %266 = fsub double -0.000000e+00, %265
  %267 = load i32* %i, align 4
  %268 = sext i32 %267 to i64
  %269 = load i32* %j, align 4
  %270 = sext i32 %269 to i64
  %271 = load i32* %k, align 4
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %272
  %274 = getelementptr inbounds [13 x [13 x [5 x double]]]* %273, i32 0, i64 %270
  %275 = getelementptr inbounds [13 x [5 x double]]* %274, i32 0, i64 %268
  %276 = getelementptr inbounds [5 x double]* %275, i32 0, i64 1
  %277 = load double* %276, align 8
  %278 = fmul double %266, %277
  %279 = load double* @tmp1, align 8
  %280 = fmul double %278, %279
  %281 = load i32* %k, align 4
  %282 = sext i32 %281 to i64
  %283 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %282
  %284 = getelementptr inbounds [5 x [5 x double]]* %283, i32 0, i64 1
  %285 = getelementptr inbounds [5 x double]* %284, i32 0, i64 3
  store double %280, double* %285, align 8
  %286 = load double* @c2, align 8
  %287 = fsub double -0.000000e+00, %286
  %288 = load i32* %i, align 4
  %289 = sext i32 %288 to i64
  %290 = load i32* %j, align 4
  %291 = sext i32 %290 to i64
  %292 = load i32* %k, align 4
  %293 = sext i32 %292 to i64
  %294 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %293
  %295 = getelementptr inbounds [13 x [13 x [5 x double]]]* %294, i32 0, i64 %291
  %296 = getelementptr inbounds [13 x [5 x double]]* %295, i32 0, i64 %289
  %297 = getelementptr inbounds [5 x double]* %296, i32 0, i64 2
  %298 = load double* %297, align 8
  %299 = fmul double %287, %298
  %300 = load double* @tmp1, align 8
  %301 = fmul double %299, %300
  %302 = load i32* %k, align 4
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %303
  %305 = getelementptr inbounds [5 x [5 x double]]* %304, i32 0, i64 2
  %306 = getelementptr inbounds [5 x double]* %305, i32 0, i64 3
  store double %301, double* %306, align 8
  %307 = load double* @c2, align 8
  %308 = fsub double 2.000000e+00, %307
  %309 = load i32* %i, align 4
  %310 = sext i32 %309 to i64
  %311 = load i32* %j, align 4
  %312 = sext i32 %311 to i64
  %313 = load i32* %k, align 4
  %314 = sext i32 %313 to i64
  %315 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %314
  %316 = getelementptr inbounds [13 x [13 x [5 x double]]]* %315, i32 0, i64 %312
  %317 = getelementptr inbounds [13 x [5 x double]]* %316, i32 0, i64 %310
  %318 = getelementptr inbounds [5 x double]* %317, i32 0, i64 3
  %319 = load double* %318, align 8
  %320 = fmul double %308, %319
  %321 = load double* @tmp1, align 8
  %322 = fmul double %320, %321
  %323 = load i32* %k, align 4
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %324
  %326 = getelementptr inbounds [5 x [5 x double]]* %325, i32 0, i64 3
  %327 = getelementptr inbounds [5 x double]* %326, i32 0, i64 3
  store double %322, double* %327, align 8
  %328 = load double* @c2, align 8
  %329 = load i32* %k, align 4
  %330 = sext i32 %329 to i64
  %331 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %330
  %332 = getelementptr inbounds [5 x [5 x double]]* %331, i32 0, i64 4
  %333 = getelementptr inbounds [5 x double]* %332, i32 0, i64 3
  store double %328, double* %333, align 8
  %334 = load double* @c2, align 8
  %335 = fmul double %334, 2.000000e+00
  %336 = load i32* %i, align 4
  %337 = sext i32 %336 to i64
  %338 = load i32* %j, align 4
  %339 = sext i32 %338 to i64
  %340 = load i32* %k, align 4
  %341 = sext i32 %340 to i64
  %342 = getelementptr inbounds [12 x [13 x [13 x double]]]* @square, i32 0, i64 %341
  %343 = getelementptr inbounds [13 x [13 x double]]* %342, i32 0, i64 %339
  %344 = getelementptr inbounds [13 x double]* %343, i32 0, i64 %337
  %345 = load double* %344, align 8
  %346 = fmul double %335, %345
  %347 = load double* @c1, align 8
  %348 = load i32* %i, align 4
  %349 = sext i32 %348 to i64
  %350 = load i32* %j, align 4
  %351 = sext i32 %350 to i64
  %352 = load i32* %k, align 4
  %353 = sext i32 %352 to i64
  %354 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %353
  %355 = getelementptr inbounds [13 x [13 x [5 x double]]]* %354, i32 0, i64 %351
  %356 = getelementptr inbounds [13 x [5 x double]]* %355, i32 0, i64 %349
  %357 = getelementptr inbounds [5 x double]* %356, i32 0, i64 4
  %358 = load double* %357, align 8
  %359 = fmul double %347, %358
  %360 = fsub double %346, %359
  %361 = load i32* %i, align 4
  %362 = sext i32 %361 to i64
  %363 = load i32* %j, align 4
  %364 = sext i32 %363 to i64
  %365 = load i32* %k, align 4
  %366 = sext i32 %365 to i64
  %367 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %366
  %368 = getelementptr inbounds [13 x [13 x [5 x double]]]* %367, i32 0, i64 %364
  %369 = getelementptr inbounds [13 x [5 x double]]* %368, i32 0, i64 %362
  %370 = getelementptr inbounds [5 x double]* %369, i32 0, i64 3
  %371 = load double* %370, align 8
  %372 = fmul double %360, %371
  %373 = load double* @tmp2, align 8
  %374 = fmul double %372, %373
  %375 = load i32* %k, align 4
  %376 = sext i32 %375 to i64
  %377 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %376
  %378 = getelementptr inbounds [5 x [5 x double]]* %377, i32 0, i64 0
  %379 = getelementptr inbounds [5 x double]* %378, i32 0, i64 4
  store double %374, double* %379, align 8
  %380 = load double* @c2, align 8
  %381 = fsub double -0.000000e+00, %380
  %382 = load i32* %i, align 4
  %383 = sext i32 %382 to i64
  %384 = load i32* %j, align 4
  %385 = sext i32 %384 to i64
  %386 = load i32* %k, align 4
  %387 = sext i32 %386 to i64
  %388 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %387
  %389 = getelementptr inbounds [13 x [13 x [5 x double]]]* %388, i32 0, i64 %385
  %390 = getelementptr inbounds [13 x [5 x double]]* %389, i32 0, i64 %383
  %391 = getelementptr inbounds [5 x double]* %390, i32 0, i64 1
  %392 = load double* %391, align 8
  %393 = load i32* %i, align 4
  %394 = sext i32 %393 to i64
  %395 = load i32* %j, align 4
  %396 = sext i32 %395 to i64
  %397 = load i32* %k, align 4
  %398 = sext i32 %397 to i64
  %399 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %398
  %400 = getelementptr inbounds [13 x [13 x [5 x double]]]* %399, i32 0, i64 %396
  %401 = getelementptr inbounds [13 x [5 x double]]* %400, i32 0, i64 %394
  %402 = getelementptr inbounds [5 x double]* %401, i32 0, i64 3
  %403 = load double* %402, align 8
  %404 = fmul double %392, %403
  %405 = fmul double %381, %404
  %406 = load double* @tmp2, align 8
  %407 = fmul double %405, %406
  %408 = load i32* %k, align 4
  %409 = sext i32 %408 to i64
  %410 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %409
  %411 = getelementptr inbounds [5 x [5 x double]]* %410, i32 0, i64 1
  %412 = getelementptr inbounds [5 x double]* %411, i32 0, i64 4
  store double %407, double* %412, align 8
  %413 = load double* @c2, align 8
  %414 = fsub double -0.000000e+00, %413
  %415 = load i32* %i, align 4
  %416 = sext i32 %415 to i64
  %417 = load i32* %j, align 4
  %418 = sext i32 %417 to i64
  %419 = load i32* %k, align 4
  %420 = sext i32 %419 to i64
  %421 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %420
  %422 = getelementptr inbounds [13 x [13 x [5 x double]]]* %421, i32 0, i64 %418
  %423 = getelementptr inbounds [13 x [5 x double]]* %422, i32 0, i64 %416
  %424 = getelementptr inbounds [5 x double]* %423, i32 0, i64 2
  %425 = load double* %424, align 8
  %426 = load i32* %i, align 4
  %427 = sext i32 %426 to i64
  %428 = load i32* %j, align 4
  %429 = sext i32 %428 to i64
  %430 = load i32* %k, align 4
  %431 = sext i32 %430 to i64
  %432 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %431
  %433 = getelementptr inbounds [13 x [13 x [5 x double]]]* %432, i32 0, i64 %429
  %434 = getelementptr inbounds [13 x [5 x double]]* %433, i32 0, i64 %427
  %435 = getelementptr inbounds [5 x double]* %434, i32 0, i64 3
  %436 = load double* %435, align 8
  %437 = fmul double %425, %436
  %438 = fmul double %414, %437
  %439 = load double* @tmp2, align 8
  %440 = fmul double %438, %439
  %441 = load i32* %k, align 4
  %442 = sext i32 %441 to i64
  %443 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %442
  %444 = getelementptr inbounds [5 x [5 x double]]* %443, i32 0, i64 2
  %445 = getelementptr inbounds [5 x double]* %444, i32 0, i64 4
  store double %440, double* %445, align 8
  %446 = load double* @c1, align 8
  %447 = load i32* %i, align 4
  %448 = sext i32 %447 to i64
  %449 = load i32* %j, align 4
  %450 = sext i32 %449 to i64
  %451 = load i32* %k, align 4
  %452 = sext i32 %451 to i64
  %453 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %452
  %454 = getelementptr inbounds [13 x [13 x [5 x double]]]* %453, i32 0, i64 %450
  %455 = getelementptr inbounds [13 x [5 x double]]* %454, i32 0, i64 %448
  %456 = getelementptr inbounds [5 x double]* %455, i32 0, i64 4
  %457 = load double* %456, align 8
  %458 = load double* @tmp1, align 8
  %459 = fmul double %457, %458
  %460 = fmul double %446, %459
  %461 = load double* @c2, align 8
  %462 = load i32* %i, align 4
  %463 = sext i32 %462 to i64
  %464 = load i32* %j, align 4
  %465 = sext i32 %464 to i64
  %466 = load i32* %k, align 4
  %467 = sext i32 %466 to i64
  %468 = getelementptr inbounds [12 x [13 x [13 x double]]]* @qs, i32 0, i64 %467
  %469 = getelementptr inbounds [13 x [13 x double]]* %468, i32 0, i64 %465
  %470 = getelementptr inbounds [13 x double]* %469, i32 0, i64 %463
  %471 = load double* %470, align 8
  %472 = load i32* %i, align 4
  %473 = sext i32 %472 to i64
  %474 = load i32* %j, align 4
  %475 = sext i32 %474 to i64
  %476 = load i32* %k, align 4
  %477 = sext i32 %476 to i64
  %478 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %477
  %479 = getelementptr inbounds [13 x [13 x [5 x double]]]* %478, i32 0, i64 %475
  %480 = getelementptr inbounds [13 x [5 x double]]* %479, i32 0, i64 %473
  %481 = getelementptr inbounds [5 x double]* %480, i32 0, i64 3
  %482 = load double* %481, align 8
  %483 = load i32* %i, align 4
  %484 = sext i32 %483 to i64
  %485 = load i32* %j, align 4
  %486 = sext i32 %485 to i64
  %487 = load i32* %k, align 4
  %488 = sext i32 %487 to i64
  %489 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %488
  %490 = getelementptr inbounds [13 x [13 x [5 x double]]]* %489, i32 0, i64 %486
  %491 = getelementptr inbounds [13 x [5 x double]]* %490, i32 0, i64 %484
  %492 = getelementptr inbounds [5 x double]* %491, i32 0, i64 3
  %493 = load double* %492, align 8
  %494 = fmul double %482, %493
  %495 = load double* @tmp2, align 8
  %496 = fmul double %494, %495
  %497 = fadd double %471, %496
  %498 = fmul double %461, %497
  %499 = fsub double %460, %498
  %500 = load i32* %k, align 4
  %501 = sext i32 %500 to i64
  %502 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %501
  %503 = getelementptr inbounds [5 x [5 x double]]* %502, i32 0, i64 3
  %504 = getelementptr inbounds [5 x double]* %503, i32 0, i64 4
  store double %499, double* %504, align 8
  %505 = load double* @c1, align 8
  %506 = load i32* %i, align 4
  %507 = sext i32 %506 to i64
  %508 = load i32* %j, align 4
  %509 = sext i32 %508 to i64
  %510 = load i32* %k, align 4
  %511 = sext i32 %510 to i64
  %512 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %511
  %513 = getelementptr inbounds [13 x [13 x [5 x double]]]* %512, i32 0, i64 %509
  %514 = getelementptr inbounds [13 x [5 x double]]* %513, i32 0, i64 %507
  %515 = getelementptr inbounds [5 x double]* %514, i32 0, i64 3
  %516 = load double* %515, align 8
  %517 = fmul double %505, %516
  %518 = load double* @tmp1, align 8
  %519 = fmul double %517, %518
  %520 = load i32* %k, align 4
  %521 = sext i32 %520 to i64
  %522 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %521
  %523 = getelementptr inbounds [5 x [5 x double]]* %522, i32 0, i64 4
  %524 = getelementptr inbounds [5 x double]* %523, i32 0, i64 4
  store double %519, double* %524, align 8
  %525 = load i32* %k, align 4
  %526 = sext i32 %525 to i64
  %527 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %526
  %528 = getelementptr inbounds [5 x [5 x double]]* %527, i32 0, i64 0
  %529 = getelementptr inbounds [5 x double]* %528, i32 0, i64 0
  store double 0.000000e+00, double* %529, align 8
  %530 = load i32* %k, align 4
  %531 = sext i32 %530 to i64
  %532 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %531
  %533 = getelementptr inbounds [5 x [5 x double]]* %532, i32 0, i64 1
  %534 = getelementptr inbounds [5 x double]* %533, i32 0, i64 0
  store double 0.000000e+00, double* %534, align 8
  %535 = load i32* %k, align 4
  %536 = sext i32 %535 to i64
  %537 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %536
  %538 = getelementptr inbounds [5 x [5 x double]]* %537, i32 0, i64 2
  %539 = getelementptr inbounds [5 x double]* %538, i32 0, i64 0
  store double 0.000000e+00, double* %539, align 8
  %540 = load i32* %k, align 4
  %541 = sext i32 %540 to i64
  %542 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %541
  %543 = getelementptr inbounds [5 x [5 x double]]* %542, i32 0, i64 3
  %544 = getelementptr inbounds [5 x double]* %543, i32 0, i64 0
  store double 0.000000e+00, double* %544, align 8
  %545 = load i32* %k, align 4
  %546 = sext i32 %545 to i64
  %547 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %546
  %548 = getelementptr inbounds [5 x [5 x double]]* %547, i32 0, i64 4
  %549 = getelementptr inbounds [5 x double]* %548, i32 0, i64 0
  store double 0.000000e+00, double* %549, align 8
  %550 = load double* @c3c4, align 8
  %551 = fsub double -0.000000e+00, %550
  %552 = load double* @tmp2, align 8
  %553 = fmul double %551, %552
  %554 = load i32* %i, align 4
  %555 = sext i32 %554 to i64
  %556 = load i32* %j, align 4
  %557 = sext i32 %556 to i64
  %558 = load i32* %k, align 4
  %559 = sext i32 %558 to i64
  %560 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %559
  %561 = getelementptr inbounds [13 x [13 x [5 x double]]]* %560, i32 0, i64 %557
  %562 = getelementptr inbounds [13 x [5 x double]]* %561, i32 0, i64 %555
  %563 = getelementptr inbounds [5 x double]* %562, i32 0, i64 1
  %564 = load double* %563, align 8
  %565 = fmul double %553, %564
  %566 = load i32* %k, align 4
  %567 = sext i32 %566 to i64
  %568 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %567
  %569 = getelementptr inbounds [5 x [5 x double]]* %568, i32 0, i64 0
  %570 = getelementptr inbounds [5 x double]* %569, i32 0, i64 1
  store double %565, double* %570, align 8
  %571 = load double* @c3c4, align 8
  %572 = load double* @tmp1, align 8
  %573 = fmul double %571, %572
  %574 = load i32* %k, align 4
  %575 = sext i32 %574 to i64
  %576 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %575
  %577 = getelementptr inbounds [5 x [5 x double]]* %576, i32 0, i64 1
  %578 = getelementptr inbounds [5 x double]* %577, i32 0, i64 1
  store double %573, double* %578, align 8
  %579 = load i32* %k, align 4
  %580 = sext i32 %579 to i64
  %581 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %580
  %582 = getelementptr inbounds [5 x [5 x double]]* %581, i32 0, i64 2
  %583 = getelementptr inbounds [5 x double]* %582, i32 0, i64 1
  store double 0.000000e+00, double* %583, align 8
  %584 = load i32* %k, align 4
  %585 = sext i32 %584 to i64
  %586 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %585
  %587 = getelementptr inbounds [5 x [5 x double]]* %586, i32 0, i64 3
  %588 = getelementptr inbounds [5 x double]* %587, i32 0, i64 1
  store double 0.000000e+00, double* %588, align 8
  %589 = load i32* %k, align 4
  %590 = sext i32 %589 to i64
  %591 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %590
  %592 = getelementptr inbounds [5 x [5 x double]]* %591, i32 0, i64 4
  %593 = getelementptr inbounds [5 x double]* %592, i32 0, i64 1
  store double 0.000000e+00, double* %593, align 8
  %594 = load double* @c3c4, align 8
  %595 = fsub double -0.000000e+00, %594
  %596 = load double* @tmp2, align 8
  %597 = fmul double %595, %596
  %598 = load i32* %i, align 4
  %599 = sext i32 %598 to i64
  %600 = load i32* %j, align 4
  %601 = sext i32 %600 to i64
  %602 = load i32* %k, align 4
  %603 = sext i32 %602 to i64
  %604 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %603
  %605 = getelementptr inbounds [13 x [13 x [5 x double]]]* %604, i32 0, i64 %601
  %606 = getelementptr inbounds [13 x [5 x double]]* %605, i32 0, i64 %599
  %607 = getelementptr inbounds [5 x double]* %606, i32 0, i64 2
  %608 = load double* %607, align 8
  %609 = fmul double %597, %608
  %610 = load i32* %k, align 4
  %611 = sext i32 %610 to i64
  %612 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %611
  %613 = getelementptr inbounds [5 x [5 x double]]* %612, i32 0, i64 0
  %614 = getelementptr inbounds [5 x double]* %613, i32 0, i64 2
  store double %609, double* %614, align 8
  %615 = load i32* %k, align 4
  %616 = sext i32 %615 to i64
  %617 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %616
  %618 = getelementptr inbounds [5 x [5 x double]]* %617, i32 0, i64 1
  %619 = getelementptr inbounds [5 x double]* %618, i32 0, i64 2
  store double 0.000000e+00, double* %619, align 8
  %620 = load double* @c3c4, align 8
  %621 = load double* @tmp1, align 8
  %622 = fmul double %620, %621
  %623 = load i32* %k, align 4
  %624 = sext i32 %623 to i64
  %625 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %624
  %626 = getelementptr inbounds [5 x [5 x double]]* %625, i32 0, i64 2
  %627 = getelementptr inbounds [5 x double]* %626, i32 0, i64 2
  store double %622, double* %627, align 8
  %628 = load i32* %k, align 4
  %629 = sext i32 %628 to i64
  %630 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %629
  %631 = getelementptr inbounds [5 x [5 x double]]* %630, i32 0, i64 3
  %632 = getelementptr inbounds [5 x double]* %631, i32 0, i64 2
  store double 0.000000e+00, double* %632, align 8
  %633 = load i32* %k, align 4
  %634 = sext i32 %633 to i64
  %635 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %634
  %636 = getelementptr inbounds [5 x [5 x double]]* %635, i32 0, i64 4
  %637 = getelementptr inbounds [5 x double]* %636, i32 0, i64 2
  store double 0.000000e+00, double* %637, align 8
  %638 = load double* @con43, align 8
  %639 = fsub double -0.000000e+00, %638
  %640 = load double* @c3c4, align 8
  %641 = fmul double %639, %640
  %642 = load double* @tmp2, align 8
  %643 = fmul double %641, %642
  %644 = load i32* %i, align 4
  %645 = sext i32 %644 to i64
  %646 = load i32* %j, align 4
  %647 = sext i32 %646 to i64
  %648 = load i32* %k, align 4
  %649 = sext i32 %648 to i64
  %650 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %649
  %651 = getelementptr inbounds [13 x [13 x [5 x double]]]* %650, i32 0, i64 %647
  %652 = getelementptr inbounds [13 x [5 x double]]* %651, i32 0, i64 %645
  %653 = getelementptr inbounds [5 x double]* %652, i32 0, i64 3
  %654 = load double* %653, align 8
  %655 = fmul double %643, %654
  %656 = load i32* %k, align 4
  %657 = sext i32 %656 to i64
  %658 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %657
  %659 = getelementptr inbounds [5 x [5 x double]]* %658, i32 0, i64 0
  %660 = getelementptr inbounds [5 x double]* %659, i32 0, i64 3
  store double %655, double* %660, align 8
  %661 = load i32* %k, align 4
  %662 = sext i32 %661 to i64
  %663 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %662
  %664 = getelementptr inbounds [5 x [5 x double]]* %663, i32 0, i64 1
  %665 = getelementptr inbounds [5 x double]* %664, i32 0, i64 3
  store double 0.000000e+00, double* %665, align 8
  %666 = load i32* %k, align 4
  %667 = sext i32 %666 to i64
  %668 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %667
  %669 = getelementptr inbounds [5 x [5 x double]]* %668, i32 0, i64 2
  %670 = getelementptr inbounds [5 x double]* %669, i32 0, i64 3
  store double 0.000000e+00, double* %670, align 8
  %671 = load double* @con43, align 8
  %672 = load double* @c3, align 8
  %673 = fmul double %671, %672
  %674 = load double* @c4, align 8
  %675 = fmul double %673, %674
  %676 = load double* @tmp1, align 8
  %677 = fmul double %675, %676
  %678 = load i32* %k, align 4
  %679 = sext i32 %678 to i64
  %680 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %679
  %681 = getelementptr inbounds [5 x [5 x double]]* %680, i32 0, i64 3
  %682 = getelementptr inbounds [5 x double]* %681, i32 0, i64 3
  store double %677, double* %682, align 8
  %683 = load i32* %k, align 4
  %684 = sext i32 %683 to i64
  %685 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %684
  %686 = getelementptr inbounds [5 x [5 x double]]* %685, i32 0, i64 4
  %687 = getelementptr inbounds [5 x double]* %686, i32 0, i64 3
  store double 0.000000e+00, double* %687, align 8
  %688 = load double* @c3c4, align 8
  %689 = load double* @c1345, align 8
  %690 = fsub double %688, %689
  %691 = fsub double -0.000000e+00, %690
  %692 = load double* @tmp3, align 8
  %693 = fmul double %691, %692
  %694 = load i32* %i, align 4
  %695 = sext i32 %694 to i64
  %696 = load i32* %j, align 4
  %697 = sext i32 %696 to i64
  %698 = load i32* %k, align 4
  %699 = sext i32 %698 to i64
  %700 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %699
  %701 = getelementptr inbounds [13 x [13 x [5 x double]]]* %700, i32 0, i64 %697
  %702 = getelementptr inbounds [13 x [5 x double]]* %701, i32 0, i64 %695
  %703 = getelementptr inbounds [5 x double]* %702, i32 0, i64 1
  %704 = load double* %703, align 8
  %705 = load i32* %i, align 4
  %706 = sext i32 %705 to i64
  %707 = load i32* %j, align 4
  %708 = sext i32 %707 to i64
  %709 = load i32* %k, align 4
  %710 = sext i32 %709 to i64
  %711 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %710
  %712 = getelementptr inbounds [13 x [13 x [5 x double]]]* %711, i32 0, i64 %708
  %713 = getelementptr inbounds [13 x [5 x double]]* %712, i32 0, i64 %706
  %714 = getelementptr inbounds [5 x double]* %713, i32 0, i64 1
  %715 = load double* %714, align 8
  %716 = fmul double %704, %715
  %717 = fmul double %693, %716
  %718 = load double* @c3c4, align 8
  %719 = load double* @c1345, align 8
  %720 = fsub double %718, %719
  %721 = load double* @tmp3, align 8
  %722 = fmul double %720, %721
  %723 = load i32* %i, align 4
  %724 = sext i32 %723 to i64
  %725 = load i32* %j, align 4
  %726 = sext i32 %725 to i64
  %727 = load i32* %k, align 4
  %728 = sext i32 %727 to i64
  %729 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %728
  %730 = getelementptr inbounds [13 x [13 x [5 x double]]]* %729, i32 0, i64 %726
  %731 = getelementptr inbounds [13 x [5 x double]]* %730, i32 0, i64 %724
  %732 = getelementptr inbounds [5 x double]* %731, i32 0, i64 2
  %733 = load double* %732, align 8
  %734 = load i32* %i, align 4
  %735 = sext i32 %734 to i64
  %736 = load i32* %j, align 4
  %737 = sext i32 %736 to i64
  %738 = load i32* %k, align 4
  %739 = sext i32 %738 to i64
  %740 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %739
  %741 = getelementptr inbounds [13 x [13 x [5 x double]]]* %740, i32 0, i64 %737
  %742 = getelementptr inbounds [13 x [5 x double]]* %741, i32 0, i64 %735
  %743 = getelementptr inbounds [5 x double]* %742, i32 0, i64 2
  %744 = load double* %743, align 8
  %745 = fmul double %733, %744
  %746 = fmul double %722, %745
  %747 = fsub double %717, %746
  %748 = load double* @con43, align 8
  %749 = load double* @c3c4, align 8
  %750 = fmul double %748, %749
  %751 = load double* @c1345, align 8
  %752 = fsub double %750, %751
  %753 = load double* @tmp3, align 8
  %754 = fmul double %752, %753
  %755 = load i32* %i, align 4
  %756 = sext i32 %755 to i64
  %757 = load i32* %j, align 4
  %758 = sext i32 %757 to i64
  %759 = load i32* %k, align 4
  %760 = sext i32 %759 to i64
  %761 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %760
  %762 = getelementptr inbounds [13 x [13 x [5 x double]]]* %761, i32 0, i64 %758
  %763 = getelementptr inbounds [13 x [5 x double]]* %762, i32 0, i64 %756
  %764 = getelementptr inbounds [5 x double]* %763, i32 0, i64 3
  %765 = load double* %764, align 8
  %766 = load i32* %i, align 4
  %767 = sext i32 %766 to i64
  %768 = load i32* %j, align 4
  %769 = sext i32 %768 to i64
  %770 = load i32* %k, align 4
  %771 = sext i32 %770 to i64
  %772 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %771
  %773 = getelementptr inbounds [13 x [13 x [5 x double]]]* %772, i32 0, i64 %769
  %774 = getelementptr inbounds [13 x [5 x double]]* %773, i32 0, i64 %767
  %775 = getelementptr inbounds [5 x double]* %774, i32 0, i64 3
  %776 = load double* %775, align 8
  %777 = fmul double %765, %776
  %778 = fmul double %754, %777
  %779 = fsub double %747, %778
  %780 = load double* @c1345, align 8
  %781 = load double* @tmp2, align 8
  %782 = fmul double %780, %781
  %783 = load i32* %i, align 4
  %784 = sext i32 %783 to i64
  %785 = load i32* %j, align 4
  %786 = sext i32 %785 to i64
  %787 = load i32* %k, align 4
  %788 = sext i32 %787 to i64
  %789 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %788
  %790 = getelementptr inbounds [13 x [13 x [5 x double]]]* %789, i32 0, i64 %786
  %791 = getelementptr inbounds [13 x [5 x double]]* %790, i32 0, i64 %784
  %792 = getelementptr inbounds [5 x double]* %791, i32 0, i64 4
  %793 = load double* %792, align 8
  %794 = fmul double %782, %793
  %795 = fsub double %779, %794
  %796 = load i32* %k, align 4
  %797 = sext i32 %796 to i64
  %798 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %797
  %799 = getelementptr inbounds [5 x [5 x double]]* %798, i32 0, i64 0
  %800 = getelementptr inbounds [5 x double]* %799, i32 0, i64 4
  store double %795, double* %800, align 8
  %801 = load double* @c3c4, align 8
  %802 = load double* @c1345, align 8
  %803 = fsub double %801, %802
  %804 = load double* @tmp2, align 8
  %805 = fmul double %803, %804
  %806 = load i32* %i, align 4
  %807 = sext i32 %806 to i64
  %808 = load i32* %j, align 4
  %809 = sext i32 %808 to i64
  %810 = load i32* %k, align 4
  %811 = sext i32 %810 to i64
  %812 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %811
  %813 = getelementptr inbounds [13 x [13 x [5 x double]]]* %812, i32 0, i64 %809
  %814 = getelementptr inbounds [13 x [5 x double]]* %813, i32 0, i64 %807
  %815 = getelementptr inbounds [5 x double]* %814, i32 0, i64 1
  %816 = load double* %815, align 8
  %817 = fmul double %805, %816
  %818 = load i32* %k, align 4
  %819 = sext i32 %818 to i64
  %820 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %819
  %821 = getelementptr inbounds [5 x [5 x double]]* %820, i32 0, i64 1
  %822 = getelementptr inbounds [5 x double]* %821, i32 0, i64 4
  store double %817, double* %822, align 8
  %823 = load double* @c3c4, align 8
  %824 = load double* @c1345, align 8
  %825 = fsub double %823, %824
  %826 = load double* @tmp2, align 8
  %827 = fmul double %825, %826
  %828 = load i32* %i, align 4
  %829 = sext i32 %828 to i64
  %830 = load i32* %j, align 4
  %831 = sext i32 %830 to i64
  %832 = load i32* %k, align 4
  %833 = sext i32 %832 to i64
  %834 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %833
  %835 = getelementptr inbounds [13 x [13 x [5 x double]]]* %834, i32 0, i64 %831
  %836 = getelementptr inbounds [13 x [5 x double]]* %835, i32 0, i64 %829
  %837 = getelementptr inbounds [5 x double]* %836, i32 0, i64 2
  %838 = load double* %837, align 8
  %839 = fmul double %827, %838
  %840 = load i32* %k, align 4
  %841 = sext i32 %840 to i64
  %842 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %841
  %843 = getelementptr inbounds [5 x [5 x double]]* %842, i32 0, i64 2
  %844 = getelementptr inbounds [5 x double]* %843, i32 0, i64 4
  store double %839, double* %844, align 8
  %845 = load double* @con43, align 8
  %846 = load double* @c3c4, align 8
  %847 = fmul double %845, %846
  %848 = load double* @c1345, align 8
  %849 = fsub double %847, %848
  %850 = load double* @tmp2, align 8
  %851 = fmul double %849, %850
  %852 = load i32* %i, align 4
  %853 = sext i32 %852 to i64
  %854 = load i32* %j, align 4
  %855 = sext i32 %854 to i64
  %856 = load i32* %k, align 4
  %857 = sext i32 %856 to i64
  %858 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @u, i32 0, i64 %857
  %859 = getelementptr inbounds [13 x [13 x [5 x double]]]* %858, i32 0, i64 %855
  %860 = getelementptr inbounds [13 x [5 x double]]* %859, i32 0, i64 %853
  %861 = getelementptr inbounds [5 x double]* %860, i32 0, i64 3
  %862 = load double* %861, align 8
  %863 = fmul double %851, %862
  %864 = load i32* %k, align 4
  %865 = sext i32 %864 to i64
  %866 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %865
  %867 = getelementptr inbounds [5 x [5 x double]]* %866, i32 0, i64 3
  %868 = getelementptr inbounds [5 x double]* %867, i32 0, i64 4
  store double %863, double* %868, align 8
  %869 = load double* @c1345, align 8
  %870 = load double* @tmp1, align 8
  %871 = fmul double %869, %870
  %872 = load i32* %k, align 4
  %873 = sext i32 %872 to i64
  %874 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %873
  %875 = getelementptr inbounds [5 x [5 x double]]* %874, i32 0, i64 4
  %876 = getelementptr inbounds [5 x double]* %875, i32 0, i64 4
  store double %871, double* %876, align 8
  br label %877

; <label>:877                                     ; preds = %23
  %878 = load i32* %k, align 4
  %879 = add nsw i32 %878, 1
  store i32 %879, i32* %k, align 4
  br label %19

; <label>:880                                     ; preds = %19
  %881 = load i32* %ksize, align 4
  call void @lhsinit([3 x [5 x [5 x double]]]* getelementptr inbounds ([13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i32 0), i32 %881)
  store i32 1, i32* %k, align 4
  br label %882

; <label>:882                                     ; preds = %2614, %880
  %883 = load i32* %k, align 4
  %884 = load i32* %ksize, align 4
  %885 = sub nsw i32 %884, 1
  %886 = icmp sle i32 %883, %885
  br i1 %886, label %887, label %2617

; <label>:887                                     ; preds = %882
  %888 = load double* @dt, align 8
  %889 = load double* @tz1, align 8
  %890 = fmul double %888, %889
  store double %890, double* @tmp1, align 8
  %891 = load double* @dt, align 8
  %892 = load double* @tz2, align 8
  %893 = fmul double %891, %892
  store double %893, double* @tmp2, align 8
  %894 = load double* @tmp2, align 8
  %895 = fsub double -0.000000e+00, %894
  %896 = load i32* %k, align 4
  %897 = sub nsw i32 %896, 1
  %898 = sext i32 %897 to i64
  %899 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %898
  %900 = getelementptr inbounds [5 x [5 x double]]* %899, i32 0, i64 0
  %901 = getelementptr inbounds [5 x double]* %900, i32 0, i64 0
  %902 = load double* %901, align 8
  %903 = fmul double %895, %902
  %904 = load double* @tmp1, align 8
  %905 = load i32* %k, align 4
  %906 = sub nsw i32 %905, 1
  %907 = sext i32 %906 to i64
  %908 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %907
  %909 = getelementptr inbounds [5 x [5 x double]]* %908, i32 0, i64 0
  %910 = getelementptr inbounds [5 x double]* %909, i32 0, i64 0
  %911 = load double* %910, align 8
  %912 = fmul double %904, %911
  %913 = fsub double %903, %912
  %914 = load double* @tmp1, align 8
  %915 = load double* @dz1, align 8
  %916 = fmul double %914, %915
  %917 = fsub double %913, %916
  %918 = load i32* %k, align 4
  %919 = sext i32 %918 to i64
  %920 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %919
  %921 = getelementptr inbounds [3 x [5 x [5 x double]]]* %920, i32 0, i64 0
  %922 = getelementptr inbounds [5 x [5 x double]]* %921, i32 0, i64 0
  %923 = getelementptr inbounds [5 x double]* %922, i32 0, i64 0
  store double %917, double* %923, align 8
  %924 = load double* @tmp2, align 8
  %925 = fsub double -0.000000e+00, %924
  %926 = load i32* %k, align 4
  %927 = sub nsw i32 %926, 1
  %928 = sext i32 %927 to i64
  %929 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %928
  %930 = getelementptr inbounds [5 x [5 x double]]* %929, i32 0, i64 1
  %931 = getelementptr inbounds [5 x double]* %930, i32 0, i64 0
  %932 = load double* %931, align 8
  %933 = fmul double %925, %932
  %934 = load double* @tmp1, align 8
  %935 = load i32* %k, align 4
  %936 = sub nsw i32 %935, 1
  %937 = sext i32 %936 to i64
  %938 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %937
  %939 = getelementptr inbounds [5 x [5 x double]]* %938, i32 0, i64 1
  %940 = getelementptr inbounds [5 x double]* %939, i32 0, i64 0
  %941 = load double* %940, align 8
  %942 = fmul double %934, %941
  %943 = fsub double %933, %942
  %944 = load i32* %k, align 4
  %945 = sext i32 %944 to i64
  %946 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %945
  %947 = getelementptr inbounds [3 x [5 x [5 x double]]]* %946, i32 0, i64 0
  %948 = getelementptr inbounds [5 x [5 x double]]* %947, i32 0, i64 1
  %949 = getelementptr inbounds [5 x double]* %948, i32 0, i64 0
  store double %943, double* %949, align 8
  %950 = load double* @tmp2, align 8
  %951 = fsub double -0.000000e+00, %950
  %952 = load i32* %k, align 4
  %953 = sub nsw i32 %952, 1
  %954 = sext i32 %953 to i64
  %955 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %954
  %956 = getelementptr inbounds [5 x [5 x double]]* %955, i32 0, i64 2
  %957 = getelementptr inbounds [5 x double]* %956, i32 0, i64 0
  %958 = load double* %957, align 8
  %959 = fmul double %951, %958
  %960 = load double* @tmp1, align 8
  %961 = load i32* %k, align 4
  %962 = sub nsw i32 %961, 1
  %963 = sext i32 %962 to i64
  %964 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %963
  %965 = getelementptr inbounds [5 x [5 x double]]* %964, i32 0, i64 2
  %966 = getelementptr inbounds [5 x double]* %965, i32 0, i64 0
  %967 = load double* %966, align 8
  %968 = fmul double %960, %967
  %969 = fsub double %959, %968
  %970 = load i32* %k, align 4
  %971 = sext i32 %970 to i64
  %972 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %971
  %973 = getelementptr inbounds [3 x [5 x [5 x double]]]* %972, i32 0, i64 0
  %974 = getelementptr inbounds [5 x [5 x double]]* %973, i32 0, i64 2
  %975 = getelementptr inbounds [5 x double]* %974, i32 0, i64 0
  store double %969, double* %975, align 8
  %976 = load double* @tmp2, align 8
  %977 = fsub double -0.000000e+00, %976
  %978 = load i32* %k, align 4
  %979 = sub nsw i32 %978, 1
  %980 = sext i32 %979 to i64
  %981 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %980
  %982 = getelementptr inbounds [5 x [5 x double]]* %981, i32 0, i64 3
  %983 = getelementptr inbounds [5 x double]* %982, i32 0, i64 0
  %984 = load double* %983, align 8
  %985 = fmul double %977, %984
  %986 = load double* @tmp1, align 8
  %987 = load i32* %k, align 4
  %988 = sub nsw i32 %987, 1
  %989 = sext i32 %988 to i64
  %990 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %989
  %991 = getelementptr inbounds [5 x [5 x double]]* %990, i32 0, i64 3
  %992 = getelementptr inbounds [5 x double]* %991, i32 0, i64 0
  %993 = load double* %992, align 8
  %994 = fmul double %986, %993
  %995 = fsub double %985, %994
  %996 = load i32* %k, align 4
  %997 = sext i32 %996 to i64
  %998 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %997
  %999 = getelementptr inbounds [3 x [5 x [5 x double]]]* %998, i32 0, i64 0
  %1000 = getelementptr inbounds [5 x [5 x double]]* %999, i32 0, i64 3
  %1001 = getelementptr inbounds [5 x double]* %1000, i32 0, i64 0
  store double %995, double* %1001, align 8
  %1002 = load double* @tmp2, align 8
  %1003 = fsub double -0.000000e+00, %1002
  %1004 = load i32* %k, align 4
  %1005 = sub nsw i32 %1004, 1
  %1006 = sext i32 %1005 to i64
  %1007 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1006
  %1008 = getelementptr inbounds [5 x [5 x double]]* %1007, i32 0, i64 4
  %1009 = getelementptr inbounds [5 x double]* %1008, i32 0, i64 0
  %1010 = load double* %1009, align 8
  %1011 = fmul double %1003, %1010
  %1012 = load double* @tmp1, align 8
  %1013 = load i32* %k, align 4
  %1014 = sub nsw i32 %1013, 1
  %1015 = sext i32 %1014 to i64
  %1016 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1015
  %1017 = getelementptr inbounds [5 x [5 x double]]* %1016, i32 0, i64 4
  %1018 = getelementptr inbounds [5 x double]* %1017, i32 0, i64 0
  %1019 = load double* %1018, align 8
  %1020 = fmul double %1012, %1019
  %1021 = fsub double %1011, %1020
  %1022 = load i32* %k, align 4
  %1023 = sext i32 %1022 to i64
  %1024 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1023
  %1025 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1024, i32 0, i64 0
  %1026 = getelementptr inbounds [5 x [5 x double]]* %1025, i32 0, i64 4
  %1027 = getelementptr inbounds [5 x double]* %1026, i32 0, i64 0
  store double %1021, double* %1027, align 8
  %1028 = load double* @tmp2, align 8
  %1029 = fsub double -0.000000e+00, %1028
  %1030 = load i32* %k, align 4
  %1031 = sub nsw i32 %1030, 1
  %1032 = sext i32 %1031 to i64
  %1033 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1032
  %1034 = getelementptr inbounds [5 x [5 x double]]* %1033, i32 0, i64 0
  %1035 = getelementptr inbounds [5 x double]* %1034, i32 0, i64 1
  %1036 = load double* %1035, align 8
  %1037 = fmul double %1029, %1036
  %1038 = load double* @tmp1, align 8
  %1039 = load i32* %k, align 4
  %1040 = sub nsw i32 %1039, 1
  %1041 = sext i32 %1040 to i64
  %1042 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1041
  %1043 = getelementptr inbounds [5 x [5 x double]]* %1042, i32 0, i64 0
  %1044 = getelementptr inbounds [5 x double]* %1043, i32 0, i64 1
  %1045 = load double* %1044, align 8
  %1046 = fmul double %1038, %1045
  %1047 = fsub double %1037, %1046
  %1048 = load i32* %k, align 4
  %1049 = sext i32 %1048 to i64
  %1050 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1049
  %1051 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1050, i32 0, i64 0
  %1052 = getelementptr inbounds [5 x [5 x double]]* %1051, i32 0, i64 0
  %1053 = getelementptr inbounds [5 x double]* %1052, i32 0, i64 1
  store double %1047, double* %1053, align 8
  %1054 = load double* @tmp2, align 8
  %1055 = fsub double -0.000000e+00, %1054
  %1056 = load i32* %k, align 4
  %1057 = sub nsw i32 %1056, 1
  %1058 = sext i32 %1057 to i64
  %1059 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1058
  %1060 = getelementptr inbounds [5 x [5 x double]]* %1059, i32 0, i64 1
  %1061 = getelementptr inbounds [5 x double]* %1060, i32 0, i64 1
  %1062 = load double* %1061, align 8
  %1063 = fmul double %1055, %1062
  %1064 = load double* @tmp1, align 8
  %1065 = load i32* %k, align 4
  %1066 = sub nsw i32 %1065, 1
  %1067 = sext i32 %1066 to i64
  %1068 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1067
  %1069 = getelementptr inbounds [5 x [5 x double]]* %1068, i32 0, i64 1
  %1070 = getelementptr inbounds [5 x double]* %1069, i32 0, i64 1
  %1071 = load double* %1070, align 8
  %1072 = fmul double %1064, %1071
  %1073 = fsub double %1063, %1072
  %1074 = load double* @tmp1, align 8
  %1075 = load double* @dz2, align 8
  %1076 = fmul double %1074, %1075
  %1077 = fsub double %1073, %1076
  %1078 = load i32* %k, align 4
  %1079 = sext i32 %1078 to i64
  %1080 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1079
  %1081 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1080, i32 0, i64 0
  %1082 = getelementptr inbounds [5 x [5 x double]]* %1081, i32 0, i64 1
  %1083 = getelementptr inbounds [5 x double]* %1082, i32 0, i64 1
  store double %1077, double* %1083, align 8
  %1084 = load double* @tmp2, align 8
  %1085 = fsub double -0.000000e+00, %1084
  %1086 = load i32* %k, align 4
  %1087 = sub nsw i32 %1086, 1
  %1088 = sext i32 %1087 to i64
  %1089 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1088
  %1090 = getelementptr inbounds [5 x [5 x double]]* %1089, i32 0, i64 2
  %1091 = getelementptr inbounds [5 x double]* %1090, i32 0, i64 1
  %1092 = load double* %1091, align 8
  %1093 = fmul double %1085, %1092
  %1094 = load double* @tmp1, align 8
  %1095 = load i32* %k, align 4
  %1096 = sub nsw i32 %1095, 1
  %1097 = sext i32 %1096 to i64
  %1098 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1097
  %1099 = getelementptr inbounds [5 x [5 x double]]* %1098, i32 0, i64 2
  %1100 = getelementptr inbounds [5 x double]* %1099, i32 0, i64 1
  %1101 = load double* %1100, align 8
  %1102 = fmul double %1094, %1101
  %1103 = fsub double %1093, %1102
  %1104 = load i32* %k, align 4
  %1105 = sext i32 %1104 to i64
  %1106 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1105
  %1107 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1106, i32 0, i64 0
  %1108 = getelementptr inbounds [5 x [5 x double]]* %1107, i32 0, i64 2
  %1109 = getelementptr inbounds [5 x double]* %1108, i32 0, i64 1
  store double %1103, double* %1109, align 8
  %1110 = load double* @tmp2, align 8
  %1111 = fsub double -0.000000e+00, %1110
  %1112 = load i32* %k, align 4
  %1113 = sub nsw i32 %1112, 1
  %1114 = sext i32 %1113 to i64
  %1115 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1114
  %1116 = getelementptr inbounds [5 x [5 x double]]* %1115, i32 0, i64 3
  %1117 = getelementptr inbounds [5 x double]* %1116, i32 0, i64 1
  %1118 = load double* %1117, align 8
  %1119 = fmul double %1111, %1118
  %1120 = load double* @tmp1, align 8
  %1121 = load i32* %k, align 4
  %1122 = sub nsw i32 %1121, 1
  %1123 = sext i32 %1122 to i64
  %1124 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1123
  %1125 = getelementptr inbounds [5 x [5 x double]]* %1124, i32 0, i64 3
  %1126 = getelementptr inbounds [5 x double]* %1125, i32 0, i64 1
  %1127 = load double* %1126, align 8
  %1128 = fmul double %1120, %1127
  %1129 = fsub double %1119, %1128
  %1130 = load i32* %k, align 4
  %1131 = sext i32 %1130 to i64
  %1132 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1131
  %1133 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1132, i32 0, i64 0
  %1134 = getelementptr inbounds [5 x [5 x double]]* %1133, i32 0, i64 3
  %1135 = getelementptr inbounds [5 x double]* %1134, i32 0, i64 1
  store double %1129, double* %1135, align 8
  %1136 = load double* @tmp2, align 8
  %1137 = fsub double -0.000000e+00, %1136
  %1138 = load i32* %k, align 4
  %1139 = sub nsw i32 %1138, 1
  %1140 = sext i32 %1139 to i64
  %1141 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1140
  %1142 = getelementptr inbounds [5 x [5 x double]]* %1141, i32 0, i64 4
  %1143 = getelementptr inbounds [5 x double]* %1142, i32 0, i64 1
  %1144 = load double* %1143, align 8
  %1145 = fmul double %1137, %1144
  %1146 = load double* @tmp1, align 8
  %1147 = load i32* %k, align 4
  %1148 = sub nsw i32 %1147, 1
  %1149 = sext i32 %1148 to i64
  %1150 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1149
  %1151 = getelementptr inbounds [5 x [5 x double]]* %1150, i32 0, i64 4
  %1152 = getelementptr inbounds [5 x double]* %1151, i32 0, i64 1
  %1153 = load double* %1152, align 8
  %1154 = fmul double %1146, %1153
  %1155 = fsub double %1145, %1154
  %1156 = load i32* %k, align 4
  %1157 = sext i32 %1156 to i64
  %1158 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1157
  %1159 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1158, i32 0, i64 0
  %1160 = getelementptr inbounds [5 x [5 x double]]* %1159, i32 0, i64 4
  %1161 = getelementptr inbounds [5 x double]* %1160, i32 0, i64 1
  store double %1155, double* %1161, align 8
  %1162 = load double* @tmp2, align 8
  %1163 = fsub double -0.000000e+00, %1162
  %1164 = load i32* %k, align 4
  %1165 = sub nsw i32 %1164, 1
  %1166 = sext i32 %1165 to i64
  %1167 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1166
  %1168 = getelementptr inbounds [5 x [5 x double]]* %1167, i32 0, i64 0
  %1169 = getelementptr inbounds [5 x double]* %1168, i32 0, i64 2
  %1170 = load double* %1169, align 8
  %1171 = fmul double %1163, %1170
  %1172 = load double* @tmp1, align 8
  %1173 = load i32* %k, align 4
  %1174 = sub nsw i32 %1173, 1
  %1175 = sext i32 %1174 to i64
  %1176 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1175
  %1177 = getelementptr inbounds [5 x [5 x double]]* %1176, i32 0, i64 0
  %1178 = getelementptr inbounds [5 x double]* %1177, i32 0, i64 2
  %1179 = load double* %1178, align 8
  %1180 = fmul double %1172, %1179
  %1181 = fsub double %1171, %1180
  %1182 = load i32* %k, align 4
  %1183 = sext i32 %1182 to i64
  %1184 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1183
  %1185 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1184, i32 0, i64 0
  %1186 = getelementptr inbounds [5 x [5 x double]]* %1185, i32 0, i64 0
  %1187 = getelementptr inbounds [5 x double]* %1186, i32 0, i64 2
  store double %1181, double* %1187, align 8
  %1188 = load double* @tmp2, align 8
  %1189 = fsub double -0.000000e+00, %1188
  %1190 = load i32* %k, align 4
  %1191 = sub nsw i32 %1190, 1
  %1192 = sext i32 %1191 to i64
  %1193 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1192
  %1194 = getelementptr inbounds [5 x [5 x double]]* %1193, i32 0, i64 1
  %1195 = getelementptr inbounds [5 x double]* %1194, i32 0, i64 2
  %1196 = load double* %1195, align 8
  %1197 = fmul double %1189, %1196
  %1198 = load double* @tmp1, align 8
  %1199 = load i32* %k, align 4
  %1200 = sub nsw i32 %1199, 1
  %1201 = sext i32 %1200 to i64
  %1202 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1201
  %1203 = getelementptr inbounds [5 x [5 x double]]* %1202, i32 0, i64 1
  %1204 = getelementptr inbounds [5 x double]* %1203, i32 0, i64 2
  %1205 = load double* %1204, align 8
  %1206 = fmul double %1198, %1205
  %1207 = fsub double %1197, %1206
  %1208 = load i32* %k, align 4
  %1209 = sext i32 %1208 to i64
  %1210 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1209
  %1211 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1210, i32 0, i64 0
  %1212 = getelementptr inbounds [5 x [5 x double]]* %1211, i32 0, i64 1
  %1213 = getelementptr inbounds [5 x double]* %1212, i32 0, i64 2
  store double %1207, double* %1213, align 8
  %1214 = load double* @tmp2, align 8
  %1215 = fsub double -0.000000e+00, %1214
  %1216 = load i32* %k, align 4
  %1217 = sub nsw i32 %1216, 1
  %1218 = sext i32 %1217 to i64
  %1219 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1218
  %1220 = getelementptr inbounds [5 x [5 x double]]* %1219, i32 0, i64 2
  %1221 = getelementptr inbounds [5 x double]* %1220, i32 0, i64 2
  %1222 = load double* %1221, align 8
  %1223 = fmul double %1215, %1222
  %1224 = load double* @tmp1, align 8
  %1225 = load i32* %k, align 4
  %1226 = sub nsw i32 %1225, 1
  %1227 = sext i32 %1226 to i64
  %1228 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1227
  %1229 = getelementptr inbounds [5 x [5 x double]]* %1228, i32 0, i64 2
  %1230 = getelementptr inbounds [5 x double]* %1229, i32 0, i64 2
  %1231 = load double* %1230, align 8
  %1232 = fmul double %1224, %1231
  %1233 = fsub double %1223, %1232
  %1234 = load double* @tmp1, align 8
  %1235 = load double* @dz3, align 8
  %1236 = fmul double %1234, %1235
  %1237 = fsub double %1233, %1236
  %1238 = load i32* %k, align 4
  %1239 = sext i32 %1238 to i64
  %1240 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1239
  %1241 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1240, i32 0, i64 0
  %1242 = getelementptr inbounds [5 x [5 x double]]* %1241, i32 0, i64 2
  %1243 = getelementptr inbounds [5 x double]* %1242, i32 0, i64 2
  store double %1237, double* %1243, align 8
  %1244 = load double* @tmp2, align 8
  %1245 = fsub double -0.000000e+00, %1244
  %1246 = load i32* %k, align 4
  %1247 = sub nsw i32 %1246, 1
  %1248 = sext i32 %1247 to i64
  %1249 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1248
  %1250 = getelementptr inbounds [5 x [5 x double]]* %1249, i32 0, i64 3
  %1251 = getelementptr inbounds [5 x double]* %1250, i32 0, i64 2
  %1252 = load double* %1251, align 8
  %1253 = fmul double %1245, %1252
  %1254 = load double* @tmp1, align 8
  %1255 = load i32* %k, align 4
  %1256 = sub nsw i32 %1255, 1
  %1257 = sext i32 %1256 to i64
  %1258 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1257
  %1259 = getelementptr inbounds [5 x [5 x double]]* %1258, i32 0, i64 3
  %1260 = getelementptr inbounds [5 x double]* %1259, i32 0, i64 2
  %1261 = load double* %1260, align 8
  %1262 = fmul double %1254, %1261
  %1263 = fsub double %1253, %1262
  %1264 = load i32* %k, align 4
  %1265 = sext i32 %1264 to i64
  %1266 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1265
  %1267 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1266, i32 0, i64 0
  %1268 = getelementptr inbounds [5 x [5 x double]]* %1267, i32 0, i64 3
  %1269 = getelementptr inbounds [5 x double]* %1268, i32 0, i64 2
  store double %1263, double* %1269, align 8
  %1270 = load double* @tmp2, align 8
  %1271 = fsub double -0.000000e+00, %1270
  %1272 = load i32* %k, align 4
  %1273 = sub nsw i32 %1272, 1
  %1274 = sext i32 %1273 to i64
  %1275 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1274
  %1276 = getelementptr inbounds [5 x [5 x double]]* %1275, i32 0, i64 4
  %1277 = getelementptr inbounds [5 x double]* %1276, i32 0, i64 2
  %1278 = load double* %1277, align 8
  %1279 = fmul double %1271, %1278
  %1280 = load double* @tmp1, align 8
  %1281 = load i32* %k, align 4
  %1282 = sub nsw i32 %1281, 1
  %1283 = sext i32 %1282 to i64
  %1284 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1283
  %1285 = getelementptr inbounds [5 x [5 x double]]* %1284, i32 0, i64 4
  %1286 = getelementptr inbounds [5 x double]* %1285, i32 0, i64 2
  %1287 = load double* %1286, align 8
  %1288 = fmul double %1280, %1287
  %1289 = fsub double %1279, %1288
  %1290 = load i32* %k, align 4
  %1291 = sext i32 %1290 to i64
  %1292 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1291
  %1293 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1292, i32 0, i64 0
  %1294 = getelementptr inbounds [5 x [5 x double]]* %1293, i32 0, i64 4
  %1295 = getelementptr inbounds [5 x double]* %1294, i32 0, i64 2
  store double %1289, double* %1295, align 8
  %1296 = load double* @tmp2, align 8
  %1297 = fsub double -0.000000e+00, %1296
  %1298 = load i32* %k, align 4
  %1299 = sub nsw i32 %1298, 1
  %1300 = sext i32 %1299 to i64
  %1301 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1300
  %1302 = getelementptr inbounds [5 x [5 x double]]* %1301, i32 0, i64 0
  %1303 = getelementptr inbounds [5 x double]* %1302, i32 0, i64 3
  %1304 = load double* %1303, align 8
  %1305 = fmul double %1297, %1304
  %1306 = load double* @tmp1, align 8
  %1307 = load i32* %k, align 4
  %1308 = sub nsw i32 %1307, 1
  %1309 = sext i32 %1308 to i64
  %1310 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1309
  %1311 = getelementptr inbounds [5 x [5 x double]]* %1310, i32 0, i64 0
  %1312 = getelementptr inbounds [5 x double]* %1311, i32 0, i64 3
  %1313 = load double* %1312, align 8
  %1314 = fmul double %1306, %1313
  %1315 = fsub double %1305, %1314
  %1316 = load i32* %k, align 4
  %1317 = sext i32 %1316 to i64
  %1318 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1317
  %1319 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1318, i32 0, i64 0
  %1320 = getelementptr inbounds [5 x [5 x double]]* %1319, i32 0, i64 0
  %1321 = getelementptr inbounds [5 x double]* %1320, i32 0, i64 3
  store double %1315, double* %1321, align 8
  %1322 = load double* @tmp2, align 8
  %1323 = fsub double -0.000000e+00, %1322
  %1324 = load i32* %k, align 4
  %1325 = sub nsw i32 %1324, 1
  %1326 = sext i32 %1325 to i64
  %1327 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1326
  %1328 = getelementptr inbounds [5 x [5 x double]]* %1327, i32 0, i64 1
  %1329 = getelementptr inbounds [5 x double]* %1328, i32 0, i64 3
  %1330 = load double* %1329, align 8
  %1331 = fmul double %1323, %1330
  %1332 = load double* @tmp1, align 8
  %1333 = load i32* %k, align 4
  %1334 = sub nsw i32 %1333, 1
  %1335 = sext i32 %1334 to i64
  %1336 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1335
  %1337 = getelementptr inbounds [5 x [5 x double]]* %1336, i32 0, i64 1
  %1338 = getelementptr inbounds [5 x double]* %1337, i32 0, i64 3
  %1339 = load double* %1338, align 8
  %1340 = fmul double %1332, %1339
  %1341 = fsub double %1331, %1340
  %1342 = load i32* %k, align 4
  %1343 = sext i32 %1342 to i64
  %1344 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1343
  %1345 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1344, i32 0, i64 0
  %1346 = getelementptr inbounds [5 x [5 x double]]* %1345, i32 0, i64 1
  %1347 = getelementptr inbounds [5 x double]* %1346, i32 0, i64 3
  store double %1341, double* %1347, align 8
  %1348 = load double* @tmp2, align 8
  %1349 = fsub double -0.000000e+00, %1348
  %1350 = load i32* %k, align 4
  %1351 = sub nsw i32 %1350, 1
  %1352 = sext i32 %1351 to i64
  %1353 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1352
  %1354 = getelementptr inbounds [5 x [5 x double]]* %1353, i32 0, i64 2
  %1355 = getelementptr inbounds [5 x double]* %1354, i32 0, i64 3
  %1356 = load double* %1355, align 8
  %1357 = fmul double %1349, %1356
  %1358 = load double* @tmp1, align 8
  %1359 = load i32* %k, align 4
  %1360 = sub nsw i32 %1359, 1
  %1361 = sext i32 %1360 to i64
  %1362 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1361
  %1363 = getelementptr inbounds [5 x [5 x double]]* %1362, i32 0, i64 2
  %1364 = getelementptr inbounds [5 x double]* %1363, i32 0, i64 3
  %1365 = load double* %1364, align 8
  %1366 = fmul double %1358, %1365
  %1367 = fsub double %1357, %1366
  %1368 = load i32* %k, align 4
  %1369 = sext i32 %1368 to i64
  %1370 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1369
  %1371 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1370, i32 0, i64 0
  %1372 = getelementptr inbounds [5 x [5 x double]]* %1371, i32 0, i64 2
  %1373 = getelementptr inbounds [5 x double]* %1372, i32 0, i64 3
  store double %1367, double* %1373, align 8
  %1374 = load double* @tmp2, align 8
  %1375 = fsub double -0.000000e+00, %1374
  %1376 = load i32* %k, align 4
  %1377 = sub nsw i32 %1376, 1
  %1378 = sext i32 %1377 to i64
  %1379 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1378
  %1380 = getelementptr inbounds [5 x [5 x double]]* %1379, i32 0, i64 3
  %1381 = getelementptr inbounds [5 x double]* %1380, i32 0, i64 3
  %1382 = load double* %1381, align 8
  %1383 = fmul double %1375, %1382
  %1384 = load double* @tmp1, align 8
  %1385 = load i32* %k, align 4
  %1386 = sub nsw i32 %1385, 1
  %1387 = sext i32 %1386 to i64
  %1388 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1387
  %1389 = getelementptr inbounds [5 x [5 x double]]* %1388, i32 0, i64 3
  %1390 = getelementptr inbounds [5 x double]* %1389, i32 0, i64 3
  %1391 = load double* %1390, align 8
  %1392 = fmul double %1384, %1391
  %1393 = fsub double %1383, %1392
  %1394 = load double* @tmp1, align 8
  %1395 = load double* @dz4, align 8
  %1396 = fmul double %1394, %1395
  %1397 = fsub double %1393, %1396
  %1398 = load i32* %k, align 4
  %1399 = sext i32 %1398 to i64
  %1400 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1399
  %1401 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1400, i32 0, i64 0
  %1402 = getelementptr inbounds [5 x [5 x double]]* %1401, i32 0, i64 3
  %1403 = getelementptr inbounds [5 x double]* %1402, i32 0, i64 3
  store double %1397, double* %1403, align 8
  %1404 = load double* @tmp2, align 8
  %1405 = fsub double -0.000000e+00, %1404
  %1406 = load i32* %k, align 4
  %1407 = sub nsw i32 %1406, 1
  %1408 = sext i32 %1407 to i64
  %1409 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1408
  %1410 = getelementptr inbounds [5 x [5 x double]]* %1409, i32 0, i64 4
  %1411 = getelementptr inbounds [5 x double]* %1410, i32 0, i64 3
  %1412 = load double* %1411, align 8
  %1413 = fmul double %1405, %1412
  %1414 = load double* @tmp1, align 8
  %1415 = load i32* %k, align 4
  %1416 = sub nsw i32 %1415, 1
  %1417 = sext i32 %1416 to i64
  %1418 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1417
  %1419 = getelementptr inbounds [5 x [5 x double]]* %1418, i32 0, i64 4
  %1420 = getelementptr inbounds [5 x double]* %1419, i32 0, i64 3
  %1421 = load double* %1420, align 8
  %1422 = fmul double %1414, %1421
  %1423 = fsub double %1413, %1422
  %1424 = load i32* %k, align 4
  %1425 = sext i32 %1424 to i64
  %1426 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1425
  %1427 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1426, i32 0, i64 0
  %1428 = getelementptr inbounds [5 x [5 x double]]* %1427, i32 0, i64 4
  %1429 = getelementptr inbounds [5 x double]* %1428, i32 0, i64 3
  store double %1423, double* %1429, align 8
  %1430 = load double* @tmp2, align 8
  %1431 = fsub double -0.000000e+00, %1430
  %1432 = load i32* %k, align 4
  %1433 = sub nsw i32 %1432, 1
  %1434 = sext i32 %1433 to i64
  %1435 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1434
  %1436 = getelementptr inbounds [5 x [5 x double]]* %1435, i32 0, i64 0
  %1437 = getelementptr inbounds [5 x double]* %1436, i32 0, i64 4
  %1438 = load double* %1437, align 8
  %1439 = fmul double %1431, %1438
  %1440 = load double* @tmp1, align 8
  %1441 = load i32* %k, align 4
  %1442 = sub nsw i32 %1441, 1
  %1443 = sext i32 %1442 to i64
  %1444 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1443
  %1445 = getelementptr inbounds [5 x [5 x double]]* %1444, i32 0, i64 0
  %1446 = getelementptr inbounds [5 x double]* %1445, i32 0, i64 4
  %1447 = load double* %1446, align 8
  %1448 = fmul double %1440, %1447
  %1449 = fsub double %1439, %1448
  %1450 = load i32* %k, align 4
  %1451 = sext i32 %1450 to i64
  %1452 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1451
  %1453 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1452, i32 0, i64 0
  %1454 = getelementptr inbounds [5 x [5 x double]]* %1453, i32 0, i64 0
  %1455 = getelementptr inbounds [5 x double]* %1454, i32 0, i64 4
  store double %1449, double* %1455, align 8
  %1456 = load double* @tmp2, align 8
  %1457 = fsub double -0.000000e+00, %1456
  %1458 = load i32* %k, align 4
  %1459 = sub nsw i32 %1458, 1
  %1460 = sext i32 %1459 to i64
  %1461 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1460
  %1462 = getelementptr inbounds [5 x [5 x double]]* %1461, i32 0, i64 1
  %1463 = getelementptr inbounds [5 x double]* %1462, i32 0, i64 4
  %1464 = load double* %1463, align 8
  %1465 = fmul double %1457, %1464
  %1466 = load double* @tmp1, align 8
  %1467 = load i32* %k, align 4
  %1468 = sub nsw i32 %1467, 1
  %1469 = sext i32 %1468 to i64
  %1470 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1469
  %1471 = getelementptr inbounds [5 x [5 x double]]* %1470, i32 0, i64 1
  %1472 = getelementptr inbounds [5 x double]* %1471, i32 0, i64 4
  %1473 = load double* %1472, align 8
  %1474 = fmul double %1466, %1473
  %1475 = fsub double %1465, %1474
  %1476 = load i32* %k, align 4
  %1477 = sext i32 %1476 to i64
  %1478 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1477
  %1479 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1478, i32 0, i64 0
  %1480 = getelementptr inbounds [5 x [5 x double]]* %1479, i32 0, i64 1
  %1481 = getelementptr inbounds [5 x double]* %1480, i32 0, i64 4
  store double %1475, double* %1481, align 8
  %1482 = load double* @tmp2, align 8
  %1483 = fsub double -0.000000e+00, %1482
  %1484 = load i32* %k, align 4
  %1485 = sub nsw i32 %1484, 1
  %1486 = sext i32 %1485 to i64
  %1487 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1486
  %1488 = getelementptr inbounds [5 x [5 x double]]* %1487, i32 0, i64 2
  %1489 = getelementptr inbounds [5 x double]* %1488, i32 0, i64 4
  %1490 = load double* %1489, align 8
  %1491 = fmul double %1483, %1490
  %1492 = load double* @tmp1, align 8
  %1493 = load i32* %k, align 4
  %1494 = sub nsw i32 %1493, 1
  %1495 = sext i32 %1494 to i64
  %1496 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1495
  %1497 = getelementptr inbounds [5 x [5 x double]]* %1496, i32 0, i64 2
  %1498 = getelementptr inbounds [5 x double]* %1497, i32 0, i64 4
  %1499 = load double* %1498, align 8
  %1500 = fmul double %1492, %1499
  %1501 = fsub double %1491, %1500
  %1502 = load i32* %k, align 4
  %1503 = sext i32 %1502 to i64
  %1504 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1503
  %1505 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1504, i32 0, i64 0
  %1506 = getelementptr inbounds [5 x [5 x double]]* %1505, i32 0, i64 2
  %1507 = getelementptr inbounds [5 x double]* %1506, i32 0, i64 4
  store double %1501, double* %1507, align 8
  %1508 = load double* @tmp2, align 8
  %1509 = fsub double -0.000000e+00, %1508
  %1510 = load i32* %k, align 4
  %1511 = sub nsw i32 %1510, 1
  %1512 = sext i32 %1511 to i64
  %1513 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1512
  %1514 = getelementptr inbounds [5 x [5 x double]]* %1513, i32 0, i64 3
  %1515 = getelementptr inbounds [5 x double]* %1514, i32 0, i64 4
  %1516 = load double* %1515, align 8
  %1517 = fmul double %1509, %1516
  %1518 = load double* @tmp1, align 8
  %1519 = load i32* %k, align 4
  %1520 = sub nsw i32 %1519, 1
  %1521 = sext i32 %1520 to i64
  %1522 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1521
  %1523 = getelementptr inbounds [5 x [5 x double]]* %1522, i32 0, i64 3
  %1524 = getelementptr inbounds [5 x double]* %1523, i32 0, i64 4
  %1525 = load double* %1524, align 8
  %1526 = fmul double %1518, %1525
  %1527 = fsub double %1517, %1526
  %1528 = load i32* %k, align 4
  %1529 = sext i32 %1528 to i64
  %1530 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1529
  %1531 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1530, i32 0, i64 0
  %1532 = getelementptr inbounds [5 x [5 x double]]* %1531, i32 0, i64 3
  %1533 = getelementptr inbounds [5 x double]* %1532, i32 0, i64 4
  store double %1527, double* %1533, align 8
  %1534 = load double* @tmp2, align 8
  %1535 = fsub double -0.000000e+00, %1534
  %1536 = load i32* %k, align 4
  %1537 = sub nsw i32 %1536, 1
  %1538 = sext i32 %1537 to i64
  %1539 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1538
  %1540 = getelementptr inbounds [5 x [5 x double]]* %1539, i32 0, i64 4
  %1541 = getelementptr inbounds [5 x double]* %1540, i32 0, i64 4
  %1542 = load double* %1541, align 8
  %1543 = fmul double %1535, %1542
  %1544 = load double* @tmp1, align 8
  %1545 = load i32* %k, align 4
  %1546 = sub nsw i32 %1545, 1
  %1547 = sext i32 %1546 to i64
  %1548 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1547
  %1549 = getelementptr inbounds [5 x [5 x double]]* %1548, i32 0, i64 4
  %1550 = getelementptr inbounds [5 x double]* %1549, i32 0, i64 4
  %1551 = load double* %1550, align 8
  %1552 = fmul double %1544, %1551
  %1553 = fsub double %1543, %1552
  %1554 = load double* @tmp1, align 8
  %1555 = load double* @dz5, align 8
  %1556 = fmul double %1554, %1555
  %1557 = fsub double %1553, %1556
  %1558 = load i32* %k, align 4
  %1559 = sext i32 %1558 to i64
  %1560 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1559
  %1561 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1560, i32 0, i64 0
  %1562 = getelementptr inbounds [5 x [5 x double]]* %1561, i32 0, i64 4
  %1563 = getelementptr inbounds [5 x double]* %1562, i32 0, i64 4
  store double %1557, double* %1563, align 8
  %1564 = load double* @tmp1, align 8
  %1565 = fmul double %1564, 2.000000e+00
  %1566 = load i32* %k, align 4
  %1567 = sext i32 %1566 to i64
  %1568 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1567
  %1569 = getelementptr inbounds [5 x [5 x double]]* %1568, i32 0, i64 0
  %1570 = getelementptr inbounds [5 x double]* %1569, i32 0, i64 0
  %1571 = load double* %1570, align 8
  %1572 = fmul double %1565, %1571
  %1573 = fadd double 1.000000e+00, %1572
  %1574 = load double* @tmp1, align 8
  %1575 = fmul double %1574, 2.000000e+00
  %1576 = load double* @dz1, align 8
  %1577 = fmul double %1575, %1576
  %1578 = fadd double %1573, %1577
  %1579 = load i32* %k, align 4
  %1580 = sext i32 %1579 to i64
  %1581 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1580
  %1582 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1581, i32 0, i64 1
  %1583 = getelementptr inbounds [5 x [5 x double]]* %1582, i32 0, i64 0
  %1584 = getelementptr inbounds [5 x double]* %1583, i32 0, i64 0
  store double %1578, double* %1584, align 8
  %1585 = load double* @tmp1, align 8
  %1586 = fmul double %1585, 2.000000e+00
  %1587 = load i32* %k, align 4
  %1588 = sext i32 %1587 to i64
  %1589 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1588
  %1590 = getelementptr inbounds [5 x [5 x double]]* %1589, i32 0, i64 1
  %1591 = getelementptr inbounds [5 x double]* %1590, i32 0, i64 0
  %1592 = load double* %1591, align 8
  %1593 = fmul double %1586, %1592
  %1594 = load i32* %k, align 4
  %1595 = sext i32 %1594 to i64
  %1596 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1595
  %1597 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1596, i32 0, i64 1
  %1598 = getelementptr inbounds [5 x [5 x double]]* %1597, i32 0, i64 1
  %1599 = getelementptr inbounds [5 x double]* %1598, i32 0, i64 0
  store double %1593, double* %1599, align 8
  %1600 = load double* @tmp1, align 8
  %1601 = fmul double %1600, 2.000000e+00
  %1602 = load i32* %k, align 4
  %1603 = sext i32 %1602 to i64
  %1604 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1603
  %1605 = getelementptr inbounds [5 x [5 x double]]* %1604, i32 0, i64 2
  %1606 = getelementptr inbounds [5 x double]* %1605, i32 0, i64 0
  %1607 = load double* %1606, align 8
  %1608 = fmul double %1601, %1607
  %1609 = load i32* %k, align 4
  %1610 = sext i32 %1609 to i64
  %1611 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1610
  %1612 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1611, i32 0, i64 1
  %1613 = getelementptr inbounds [5 x [5 x double]]* %1612, i32 0, i64 2
  %1614 = getelementptr inbounds [5 x double]* %1613, i32 0, i64 0
  store double %1608, double* %1614, align 8
  %1615 = load double* @tmp1, align 8
  %1616 = fmul double %1615, 2.000000e+00
  %1617 = load i32* %k, align 4
  %1618 = sext i32 %1617 to i64
  %1619 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1618
  %1620 = getelementptr inbounds [5 x [5 x double]]* %1619, i32 0, i64 3
  %1621 = getelementptr inbounds [5 x double]* %1620, i32 0, i64 0
  %1622 = load double* %1621, align 8
  %1623 = fmul double %1616, %1622
  %1624 = load i32* %k, align 4
  %1625 = sext i32 %1624 to i64
  %1626 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1625
  %1627 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1626, i32 0, i64 1
  %1628 = getelementptr inbounds [5 x [5 x double]]* %1627, i32 0, i64 3
  %1629 = getelementptr inbounds [5 x double]* %1628, i32 0, i64 0
  store double %1623, double* %1629, align 8
  %1630 = load double* @tmp1, align 8
  %1631 = fmul double %1630, 2.000000e+00
  %1632 = load i32* %k, align 4
  %1633 = sext i32 %1632 to i64
  %1634 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1633
  %1635 = getelementptr inbounds [5 x [5 x double]]* %1634, i32 0, i64 4
  %1636 = getelementptr inbounds [5 x double]* %1635, i32 0, i64 0
  %1637 = load double* %1636, align 8
  %1638 = fmul double %1631, %1637
  %1639 = load i32* %k, align 4
  %1640 = sext i32 %1639 to i64
  %1641 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1640
  %1642 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1641, i32 0, i64 1
  %1643 = getelementptr inbounds [5 x [5 x double]]* %1642, i32 0, i64 4
  %1644 = getelementptr inbounds [5 x double]* %1643, i32 0, i64 0
  store double %1638, double* %1644, align 8
  %1645 = load double* @tmp1, align 8
  %1646 = fmul double %1645, 2.000000e+00
  %1647 = load i32* %k, align 4
  %1648 = sext i32 %1647 to i64
  %1649 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1648
  %1650 = getelementptr inbounds [5 x [5 x double]]* %1649, i32 0, i64 0
  %1651 = getelementptr inbounds [5 x double]* %1650, i32 0, i64 1
  %1652 = load double* %1651, align 8
  %1653 = fmul double %1646, %1652
  %1654 = load i32* %k, align 4
  %1655 = sext i32 %1654 to i64
  %1656 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1655
  %1657 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1656, i32 0, i64 1
  %1658 = getelementptr inbounds [5 x [5 x double]]* %1657, i32 0, i64 0
  %1659 = getelementptr inbounds [5 x double]* %1658, i32 0, i64 1
  store double %1653, double* %1659, align 8
  %1660 = load double* @tmp1, align 8
  %1661 = fmul double %1660, 2.000000e+00
  %1662 = load i32* %k, align 4
  %1663 = sext i32 %1662 to i64
  %1664 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1663
  %1665 = getelementptr inbounds [5 x [5 x double]]* %1664, i32 0, i64 1
  %1666 = getelementptr inbounds [5 x double]* %1665, i32 0, i64 1
  %1667 = load double* %1666, align 8
  %1668 = fmul double %1661, %1667
  %1669 = fadd double 1.000000e+00, %1668
  %1670 = load double* @tmp1, align 8
  %1671 = fmul double %1670, 2.000000e+00
  %1672 = load double* @dz2, align 8
  %1673 = fmul double %1671, %1672
  %1674 = fadd double %1669, %1673
  %1675 = load i32* %k, align 4
  %1676 = sext i32 %1675 to i64
  %1677 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1676
  %1678 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1677, i32 0, i64 1
  %1679 = getelementptr inbounds [5 x [5 x double]]* %1678, i32 0, i64 1
  %1680 = getelementptr inbounds [5 x double]* %1679, i32 0, i64 1
  store double %1674, double* %1680, align 8
  %1681 = load double* @tmp1, align 8
  %1682 = fmul double %1681, 2.000000e+00
  %1683 = load i32* %k, align 4
  %1684 = sext i32 %1683 to i64
  %1685 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1684
  %1686 = getelementptr inbounds [5 x [5 x double]]* %1685, i32 0, i64 2
  %1687 = getelementptr inbounds [5 x double]* %1686, i32 0, i64 1
  %1688 = load double* %1687, align 8
  %1689 = fmul double %1682, %1688
  %1690 = load i32* %k, align 4
  %1691 = sext i32 %1690 to i64
  %1692 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1691
  %1693 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1692, i32 0, i64 1
  %1694 = getelementptr inbounds [5 x [5 x double]]* %1693, i32 0, i64 2
  %1695 = getelementptr inbounds [5 x double]* %1694, i32 0, i64 1
  store double %1689, double* %1695, align 8
  %1696 = load double* @tmp1, align 8
  %1697 = fmul double %1696, 2.000000e+00
  %1698 = load i32* %k, align 4
  %1699 = sext i32 %1698 to i64
  %1700 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1699
  %1701 = getelementptr inbounds [5 x [5 x double]]* %1700, i32 0, i64 3
  %1702 = getelementptr inbounds [5 x double]* %1701, i32 0, i64 1
  %1703 = load double* %1702, align 8
  %1704 = fmul double %1697, %1703
  %1705 = load i32* %k, align 4
  %1706 = sext i32 %1705 to i64
  %1707 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1706
  %1708 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1707, i32 0, i64 1
  %1709 = getelementptr inbounds [5 x [5 x double]]* %1708, i32 0, i64 3
  %1710 = getelementptr inbounds [5 x double]* %1709, i32 0, i64 1
  store double %1704, double* %1710, align 8
  %1711 = load double* @tmp1, align 8
  %1712 = fmul double %1711, 2.000000e+00
  %1713 = load i32* %k, align 4
  %1714 = sext i32 %1713 to i64
  %1715 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1714
  %1716 = getelementptr inbounds [5 x [5 x double]]* %1715, i32 0, i64 4
  %1717 = getelementptr inbounds [5 x double]* %1716, i32 0, i64 1
  %1718 = load double* %1717, align 8
  %1719 = fmul double %1712, %1718
  %1720 = load i32* %k, align 4
  %1721 = sext i32 %1720 to i64
  %1722 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1721
  %1723 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1722, i32 0, i64 1
  %1724 = getelementptr inbounds [5 x [5 x double]]* %1723, i32 0, i64 4
  %1725 = getelementptr inbounds [5 x double]* %1724, i32 0, i64 1
  store double %1719, double* %1725, align 8
  %1726 = load double* @tmp1, align 8
  %1727 = fmul double %1726, 2.000000e+00
  %1728 = load i32* %k, align 4
  %1729 = sext i32 %1728 to i64
  %1730 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1729
  %1731 = getelementptr inbounds [5 x [5 x double]]* %1730, i32 0, i64 0
  %1732 = getelementptr inbounds [5 x double]* %1731, i32 0, i64 2
  %1733 = load double* %1732, align 8
  %1734 = fmul double %1727, %1733
  %1735 = load i32* %k, align 4
  %1736 = sext i32 %1735 to i64
  %1737 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1736
  %1738 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1737, i32 0, i64 1
  %1739 = getelementptr inbounds [5 x [5 x double]]* %1738, i32 0, i64 0
  %1740 = getelementptr inbounds [5 x double]* %1739, i32 0, i64 2
  store double %1734, double* %1740, align 8
  %1741 = load double* @tmp1, align 8
  %1742 = fmul double %1741, 2.000000e+00
  %1743 = load i32* %k, align 4
  %1744 = sext i32 %1743 to i64
  %1745 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1744
  %1746 = getelementptr inbounds [5 x [5 x double]]* %1745, i32 0, i64 1
  %1747 = getelementptr inbounds [5 x double]* %1746, i32 0, i64 2
  %1748 = load double* %1747, align 8
  %1749 = fmul double %1742, %1748
  %1750 = load i32* %k, align 4
  %1751 = sext i32 %1750 to i64
  %1752 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1751
  %1753 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1752, i32 0, i64 1
  %1754 = getelementptr inbounds [5 x [5 x double]]* %1753, i32 0, i64 1
  %1755 = getelementptr inbounds [5 x double]* %1754, i32 0, i64 2
  store double %1749, double* %1755, align 8
  %1756 = load double* @tmp1, align 8
  %1757 = fmul double %1756, 2.000000e+00
  %1758 = load i32* %k, align 4
  %1759 = sext i32 %1758 to i64
  %1760 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1759
  %1761 = getelementptr inbounds [5 x [5 x double]]* %1760, i32 0, i64 2
  %1762 = getelementptr inbounds [5 x double]* %1761, i32 0, i64 2
  %1763 = load double* %1762, align 8
  %1764 = fmul double %1757, %1763
  %1765 = fadd double 1.000000e+00, %1764
  %1766 = load double* @tmp1, align 8
  %1767 = fmul double %1766, 2.000000e+00
  %1768 = load double* @dz3, align 8
  %1769 = fmul double %1767, %1768
  %1770 = fadd double %1765, %1769
  %1771 = load i32* %k, align 4
  %1772 = sext i32 %1771 to i64
  %1773 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1772
  %1774 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1773, i32 0, i64 1
  %1775 = getelementptr inbounds [5 x [5 x double]]* %1774, i32 0, i64 2
  %1776 = getelementptr inbounds [5 x double]* %1775, i32 0, i64 2
  store double %1770, double* %1776, align 8
  %1777 = load double* @tmp1, align 8
  %1778 = fmul double %1777, 2.000000e+00
  %1779 = load i32* %k, align 4
  %1780 = sext i32 %1779 to i64
  %1781 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1780
  %1782 = getelementptr inbounds [5 x [5 x double]]* %1781, i32 0, i64 3
  %1783 = getelementptr inbounds [5 x double]* %1782, i32 0, i64 2
  %1784 = load double* %1783, align 8
  %1785 = fmul double %1778, %1784
  %1786 = load i32* %k, align 4
  %1787 = sext i32 %1786 to i64
  %1788 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1787
  %1789 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1788, i32 0, i64 1
  %1790 = getelementptr inbounds [5 x [5 x double]]* %1789, i32 0, i64 3
  %1791 = getelementptr inbounds [5 x double]* %1790, i32 0, i64 2
  store double %1785, double* %1791, align 8
  %1792 = load double* @tmp1, align 8
  %1793 = fmul double %1792, 2.000000e+00
  %1794 = load i32* %k, align 4
  %1795 = sext i32 %1794 to i64
  %1796 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1795
  %1797 = getelementptr inbounds [5 x [5 x double]]* %1796, i32 0, i64 4
  %1798 = getelementptr inbounds [5 x double]* %1797, i32 0, i64 2
  %1799 = load double* %1798, align 8
  %1800 = fmul double %1793, %1799
  %1801 = load i32* %k, align 4
  %1802 = sext i32 %1801 to i64
  %1803 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1802
  %1804 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1803, i32 0, i64 1
  %1805 = getelementptr inbounds [5 x [5 x double]]* %1804, i32 0, i64 4
  %1806 = getelementptr inbounds [5 x double]* %1805, i32 0, i64 2
  store double %1800, double* %1806, align 8
  %1807 = load double* @tmp1, align 8
  %1808 = fmul double %1807, 2.000000e+00
  %1809 = load i32* %k, align 4
  %1810 = sext i32 %1809 to i64
  %1811 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1810
  %1812 = getelementptr inbounds [5 x [5 x double]]* %1811, i32 0, i64 0
  %1813 = getelementptr inbounds [5 x double]* %1812, i32 0, i64 3
  %1814 = load double* %1813, align 8
  %1815 = fmul double %1808, %1814
  %1816 = load i32* %k, align 4
  %1817 = sext i32 %1816 to i64
  %1818 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1817
  %1819 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1818, i32 0, i64 1
  %1820 = getelementptr inbounds [5 x [5 x double]]* %1819, i32 0, i64 0
  %1821 = getelementptr inbounds [5 x double]* %1820, i32 0, i64 3
  store double %1815, double* %1821, align 8
  %1822 = load double* @tmp1, align 8
  %1823 = fmul double %1822, 2.000000e+00
  %1824 = load i32* %k, align 4
  %1825 = sext i32 %1824 to i64
  %1826 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1825
  %1827 = getelementptr inbounds [5 x [5 x double]]* %1826, i32 0, i64 1
  %1828 = getelementptr inbounds [5 x double]* %1827, i32 0, i64 3
  %1829 = load double* %1828, align 8
  %1830 = fmul double %1823, %1829
  %1831 = load i32* %k, align 4
  %1832 = sext i32 %1831 to i64
  %1833 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1832
  %1834 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1833, i32 0, i64 1
  %1835 = getelementptr inbounds [5 x [5 x double]]* %1834, i32 0, i64 1
  %1836 = getelementptr inbounds [5 x double]* %1835, i32 0, i64 3
  store double %1830, double* %1836, align 8
  %1837 = load double* @tmp1, align 8
  %1838 = fmul double %1837, 2.000000e+00
  %1839 = load i32* %k, align 4
  %1840 = sext i32 %1839 to i64
  %1841 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1840
  %1842 = getelementptr inbounds [5 x [5 x double]]* %1841, i32 0, i64 2
  %1843 = getelementptr inbounds [5 x double]* %1842, i32 0, i64 3
  %1844 = load double* %1843, align 8
  %1845 = fmul double %1838, %1844
  %1846 = load i32* %k, align 4
  %1847 = sext i32 %1846 to i64
  %1848 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1847
  %1849 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1848, i32 0, i64 1
  %1850 = getelementptr inbounds [5 x [5 x double]]* %1849, i32 0, i64 2
  %1851 = getelementptr inbounds [5 x double]* %1850, i32 0, i64 3
  store double %1845, double* %1851, align 8
  %1852 = load double* @tmp1, align 8
  %1853 = fmul double %1852, 2.000000e+00
  %1854 = load i32* %k, align 4
  %1855 = sext i32 %1854 to i64
  %1856 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1855
  %1857 = getelementptr inbounds [5 x [5 x double]]* %1856, i32 0, i64 3
  %1858 = getelementptr inbounds [5 x double]* %1857, i32 0, i64 3
  %1859 = load double* %1858, align 8
  %1860 = fmul double %1853, %1859
  %1861 = fadd double 1.000000e+00, %1860
  %1862 = load double* @tmp1, align 8
  %1863 = fmul double %1862, 2.000000e+00
  %1864 = load double* @dz4, align 8
  %1865 = fmul double %1863, %1864
  %1866 = fadd double %1861, %1865
  %1867 = load i32* %k, align 4
  %1868 = sext i32 %1867 to i64
  %1869 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1868
  %1870 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1869, i32 0, i64 1
  %1871 = getelementptr inbounds [5 x [5 x double]]* %1870, i32 0, i64 3
  %1872 = getelementptr inbounds [5 x double]* %1871, i32 0, i64 3
  store double %1866, double* %1872, align 8
  %1873 = load double* @tmp1, align 8
  %1874 = fmul double %1873, 2.000000e+00
  %1875 = load i32* %k, align 4
  %1876 = sext i32 %1875 to i64
  %1877 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1876
  %1878 = getelementptr inbounds [5 x [5 x double]]* %1877, i32 0, i64 4
  %1879 = getelementptr inbounds [5 x double]* %1878, i32 0, i64 3
  %1880 = load double* %1879, align 8
  %1881 = fmul double %1874, %1880
  %1882 = load i32* %k, align 4
  %1883 = sext i32 %1882 to i64
  %1884 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1883
  %1885 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1884, i32 0, i64 1
  %1886 = getelementptr inbounds [5 x [5 x double]]* %1885, i32 0, i64 4
  %1887 = getelementptr inbounds [5 x double]* %1886, i32 0, i64 3
  store double %1881, double* %1887, align 8
  %1888 = load double* @tmp1, align 8
  %1889 = fmul double %1888, 2.000000e+00
  %1890 = load i32* %k, align 4
  %1891 = sext i32 %1890 to i64
  %1892 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1891
  %1893 = getelementptr inbounds [5 x [5 x double]]* %1892, i32 0, i64 0
  %1894 = getelementptr inbounds [5 x double]* %1893, i32 0, i64 4
  %1895 = load double* %1894, align 8
  %1896 = fmul double %1889, %1895
  %1897 = load i32* %k, align 4
  %1898 = sext i32 %1897 to i64
  %1899 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1898
  %1900 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1899, i32 0, i64 1
  %1901 = getelementptr inbounds [5 x [5 x double]]* %1900, i32 0, i64 0
  %1902 = getelementptr inbounds [5 x double]* %1901, i32 0, i64 4
  store double %1896, double* %1902, align 8
  %1903 = load double* @tmp1, align 8
  %1904 = fmul double %1903, 2.000000e+00
  %1905 = load i32* %k, align 4
  %1906 = sext i32 %1905 to i64
  %1907 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1906
  %1908 = getelementptr inbounds [5 x [5 x double]]* %1907, i32 0, i64 1
  %1909 = getelementptr inbounds [5 x double]* %1908, i32 0, i64 4
  %1910 = load double* %1909, align 8
  %1911 = fmul double %1904, %1910
  %1912 = load i32* %k, align 4
  %1913 = sext i32 %1912 to i64
  %1914 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1913
  %1915 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1914, i32 0, i64 1
  %1916 = getelementptr inbounds [5 x [5 x double]]* %1915, i32 0, i64 1
  %1917 = getelementptr inbounds [5 x double]* %1916, i32 0, i64 4
  store double %1911, double* %1917, align 8
  %1918 = load double* @tmp1, align 8
  %1919 = fmul double %1918, 2.000000e+00
  %1920 = load i32* %k, align 4
  %1921 = sext i32 %1920 to i64
  %1922 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1921
  %1923 = getelementptr inbounds [5 x [5 x double]]* %1922, i32 0, i64 2
  %1924 = getelementptr inbounds [5 x double]* %1923, i32 0, i64 4
  %1925 = load double* %1924, align 8
  %1926 = fmul double %1919, %1925
  %1927 = load i32* %k, align 4
  %1928 = sext i32 %1927 to i64
  %1929 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1928
  %1930 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1929, i32 0, i64 1
  %1931 = getelementptr inbounds [5 x [5 x double]]* %1930, i32 0, i64 2
  %1932 = getelementptr inbounds [5 x double]* %1931, i32 0, i64 4
  store double %1926, double* %1932, align 8
  %1933 = load double* @tmp1, align 8
  %1934 = fmul double %1933, 2.000000e+00
  %1935 = load i32* %k, align 4
  %1936 = sext i32 %1935 to i64
  %1937 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1936
  %1938 = getelementptr inbounds [5 x [5 x double]]* %1937, i32 0, i64 3
  %1939 = getelementptr inbounds [5 x double]* %1938, i32 0, i64 4
  %1940 = load double* %1939, align 8
  %1941 = fmul double %1934, %1940
  %1942 = load i32* %k, align 4
  %1943 = sext i32 %1942 to i64
  %1944 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1943
  %1945 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1944, i32 0, i64 1
  %1946 = getelementptr inbounds [5 x [5 x double]]* %1945, i32 0, i64 3
  %1947 = getelementptr inbounds [5 x double]* %1946, i32 0, i64 4
  store double %1941, double* %1947, align 8
  %1948 = load double* @tmp1, align 8
  %1949 = fmul double %1948, 2.000000e+00
  %1950 = load i32* %k, align 4
  %1951 = sext i32 %1950 to i64
  %1952 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1951
  %1953 = getelementptr inbounds [5 x [5 x double]]* %1952, i32 0, i64 4
  %1954 = getelementptr inbounds [5 x double]* %1953, i32 0, i64 4
  %1955 = load double* %1954, align 8
  %1956 = fmul double %1949, %1955
  %1957 = fadd double 1.000000e+00, %1956
  %1958 = load double* @tmp1, align 8
  %1959 = fmul double %1958, 2.000000e+00
  %1960 = load double* @dz5, align 8
  %1961 = fmul double %1959, %1960
  %1962 = fadd double %1957, %1961
  %1963 = load i32* %k, align 4
  %1964 = sext i32 %1963 to i64
  %1965 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1964
  %1966 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1965, i32 0, i64 1
  %1967 = getelementptr inbounds [5 x [5 x double]]* %1966, i32 0, i64 4
  %1968 = getelementptr inbounds [5 x double]* %1967, i32 0, i64 4
  store double %1962, double* %1968, align 8
  %1969 = load double* @tmp2, align 8
  %1970 = load i32* %k, align 4
  %1971 = add nsw i32 %1970, 1
  %1972 = sext i32 %1971 to i64
  %1973 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %1972
  %1974 = getelementptr inbounds [5 x [5 x double]]* %1973, i32 0, i64 0
  %1975 = getelementptr inbounds [5 x double]* %1974, i32 0, i64 0
  %1976 = load double* %1975, align 8
  %1977 = fmul double %1969, %1976
  %1978 = load double* @tmp1, align 8
  %1979 = load i32* %k, align 4
  %1980 = add nsw i32 %1979, 1
  %1981 = sext i32 %1980 to i64
  %1982 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %1981
  %1983 = getelementptr inbounds [5 x [5 x double]]* %1982, i32 0, i64 0
  %1984 = getelementptr inbounds [5 x double]* %1983, i32 0, i64 0
  %1985 = load double* %1984, align 8
  %1986 = fmul double %1978, %1985
  %1987 = fsub double %1977, %1986
  %1988 = load double* @tmp1, align 8
  %1989 = load double* @dz1, align 8
  %1990 = fmul double %1988, %1989
  %1991 = fsub double %1987, %1990
  %1992 = load i32* %k, align 4
  %1993 = sext i32 %1992 to i64
  %1994 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %1993
  %1995 = getelementptr inbounds [3 x [5 x [5 x double]]]* %1994, i32 0, i64 2
  %1996 = getelementptr inbounds [5 x [5 x double]]* %1995, i32 0, i64 0
  %1997 = getelementptr inbounds [5 x double]* %1996, i32 0, i64 0
  store double %1991, double* %1997, align 8
  %1998 = load double* @tmp2, align 8
  %1999 = load i32* %k, align 4
  %2000 = add nsw i32 %1999, 1
  %2001 = sext i32 %2000 to i64
  %2002 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2001
  %2003 = getelementptr inbounds [5 x [5 x double]]* %2002, i32 0, i64 1
  %2004 = getelementptr inbounds [5 x double]* %2003, i32 0, i64 0
  %2005 = load double* %2004, align 8
  %2006 = fmul double %1998, %2005
  %2007 = load double* @tmp1, align 8
  %2008 = load i32* %k, align 4
  %2009 = add nsw i32 %2008, 1
  %2010 = sext i32 %2009 to i64
  %2011 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2010
  %2012 = getelementptr inbounds [5 x [5 x double]]* %2011, i32 0, i64 1
  %2013 = getelementptr inbounds [5 x double]* %2012, i32 0, i64 0
  %2014 = load double* %2013, align 8
  %2015 = fmul double %2007, %2014
  %2016 = fsub double %2006, %2015
  %2017 = load i32* %k, align 4
  %2018 = sext i32 %2017 to i64
  %2019 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2018
  %2020 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2019, i32 0, i64 2
  %2021 = getelementptr inbounds [5 x [5 x double]]* %2020, i32 0, i64 1
  %2022 = getelementptr inbounds [5 x double]* %2021, i32 0, i64 0
  store double %2016, double* %2022, align 8
  %2023 = load double* @tmp2, align 8
  %2024 = load i32* %k, align 4
  %2025 = add nsw i32 %2024, 1
  %2026 = sext i32 %2025 to i64
  %2027 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2026
  %2028 = getelementptr inbounds [5 x [5 x double]]* %2027, i32 0, i64 2
  %2029 = getelementptr inbounds [5 x double]* %2028, i32 0, i64 0
  %2030 = load double* %2029, align 8
  %2031 = fmul double %2023, %2030
  %2032 = load double* @tmp1, align 8
  %2033 = load i32* %k, align 4
  %2034 = add nsw i32 %2033, 1
  %2035 = sext i32 %2034 to i64
  %2036 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2035
  %2037 = getelementptr inbounds [5 x [5 x double]]* %2036, i32 0, i64 2
  %2038 = getelementptr inbounds [5 x double]* %2037, i32 0, i64 0
  %2039 = load double* %2038, align 8
  %2040 = fmul double %2032, %2039
  %2041 = fsub double %2031, %2040
  %2042 = load i32* %k, align 4
  %2043 = sext i32 %2042 to i64
  %2044 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2043
  %2045 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2044, i32 0, i64 2
  %2046 = getelementptr inbounds [5 x [5 x double]]* %2045, i32 0, i64 2
  %2047 = getelementptr inbounds [5 x double]* %2046, i32 0, i64 0
  store double %2041, double* %2047, align 8
  %2048 = load double* @tmp2, align 8
  %2049 = load i32* %k, align 4
  %2050 = add nsw i32 %2049, 1
  %2051 = sext i32 %2050 to i64
  %2052 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2051
  %2053 = getelementptr inbounds [5 x [5 x double]]* %2052, i32 0, i64 3
  %2054 = getelementptr inbounds [5 x double]* %2053, i32 0, i64 0
  %2055 = load double* %2054, align 8
  %2056 = fmul double %2048, %2055
  %2057 = load double* @tmp1, align 8
  %2058 = load i32* %k, align 4
  %2059 = add nsw i32 %2058, 1
  %2060 = sext i32 %2059 to i64
  %2061 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2060
  %2062 = getelementptr inbounds [5 x [5 x double]]* %2061, i32 0, i64 3
  %2063 = getelementptr inbounds [5 x double]* %2062, i32 0, i64 0
  %2064 = load double* %2063, align 8
  %2065 = fmul double %2057, %2064
  %2066 = fsub double %2056, %2065
  %2067 = load i32* %k, align 4
  %2068 = sext i32 %2067 to i64
  %2069 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2068
  %2070 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2069, i32 0, i64 2
  %2071 = getelementptr inbounds [5 x [5 x double]]* %2070, i32 0, i64 3
  %2072 = getelementptr inbounds [5 x double]* %2071, i32 0, i64 0
  store double %2066, double* %2072, align 8
  %2073 = load double* @tmp2, align 8
  %2074 = load i32* %k, align 4
  %2075 = add nsw i32 %2074, 1
  %2076 = sext i32 %2075 to i64
  %2077 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2076
  %2078 = getelementptr inbounds [5 x [5 x double]]* %2077, i32 0, i64 4
  %2079 = getelementptr inbounds [5 x double]* %2078, i32 0, i64 0
  %2080 = load double* %2079, align 8
  %2081 = fmul double %2073, %2080
  %2082 = load double* @tmp1, align 8
  %2083 = load i32* %k, align 4
  %2084 = add nsw i32 %2083, 1
  %2085 = sext i32 %2084 to i64
  %2086 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2085
  %2087 = getelementptr inbounds [5 x [5 x double]]* %2086, i32 0, i64 4
  %2088 = getelementptr inbounds [5 x double]* %2087, i32 0, i64 0
  %2089 = load double* %2088, align 8
  %2090 = fmul double %2082, %2089
  %2091 = fsub double %2081, %2090
  %2092 = load i32* %k, align 4
  %2093 = sext i32 %2092 to i64
  %2094 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2093
  %2095 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2094, i32 0, i64 2
  %2096 = getelementptr inbounds [5 x [5 x double]]* %2095, i32 0, i64 4
  %2097 = getelementptr inbounds [5 x double]* %2096, i32 0, i64 0
  store double %2091, double* %2097, align 8
  %2098 = load double* @tmp2, align 8
  %2099 = load i32* %k, align 4
  %2100 = add nsw i32 %2099, 1
  %2101 = sext i32 %2100 to i64
  %2102 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2101
  %2103 = getelementptr inbounds [5 x [5 x double]]* %2102, i32 0, i64 0
  %2104 = getelementptr inbounds [5 x double]* %2103, i32 0, i64 1
  %2105 = load double* %2104, align 8
  %2106 = fmul double %2098, %2105
  %2107 = load double* @tmp1, align 8
  %2108 = load i32* %k, align 4
  %2109 = add nsw i32 %2108, 1
  %2110 = sext i32 %2109 to i64
  %2111 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2110
  %2112 = getelementptr inbounds [5 x [5 x double]]* %2111, i32 0, i64 0
  %2113 = getelementptr inbounds [5 x double]* %2112, i32 0, i64 1
  %2114 = load double* %2113, align 8
  %2115 = fmul double %2107, %2114
  %2116 = fsub double %2106, %2115
  %2117 = load i32* %k, align 4
  %2118 = sext i32 %2117 to i64
  %2119 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2118
  %2120 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2119, i32 0, i64 2
  %2121 = getelementptr inbounds [5 x [5 x double]]* %2120, i32 0, i64 0
  %2122 = getelementptr inbounds [5 x double]* %2121, i32 0, i64 1
  store double %2116, double* %2122, align 8
  %2123 = load double* @tmp2, align 8
  %2124 = load i32* %k, align 4
  %2125 = add nsw i32 %2124, 1
  %2126 = sext i32 %2125 to i64
  %2127 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2126
  %2128 = getelementptr inbounds [5 x [5 x double]]* %2127, i32 0, i64 1
  %2129 = getelementptr inbounds [5 x double]* %2128, i32 0, i64 1
  %2130 = load double* %2129, align 8
  %2131 = fmul double %2123, %2130
  %2132 = load double* @tmp1, align 8
  %2133 = load i32* %k, align 4
  %2134 = add nsw i32 %2133, 1
  %2135 = sext i32 %2134 to i64
  %2136 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2135
  %2137 = getelementptr inbounds [5 x [5 x double]]* %2136, i32 0, i64 1
  %2138 = getelementptr inbounds [5 x double]* %2137, i32 0, i64 1
  %2139 = load double* %2138, align 8
  %2140 = fmul double %2132, %2139
  %2141 = fsub double %2131, %2140
  %2142 = load double* @tmp1, align 8
  %2143 = load double* @dz2, align 8
  %2144 = fmul double %2142, %2143
  %2145 = fsub double %2141, %2144
  %2146 = load i32* %k, align 4
  %2147 = sext i32 %2146 to i64
  %2148 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2147
  %2149 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2148, i32 0, i64 2
  %2150 = getelementptr inbounds [5 x [5 x double]]* %2149, i32 0, i64 1
  %2151 = getelementptr inbounds [5 x double]* %2150, i32 0, i64 1
  store double %2145, double* %2151, align 8
  %2152 = load double* @tmp2, align 8
  %2153 = load i32* %k, align 4
  %2154 = add nsw i32 %2153, 1
  %2155 = sext i32 %2154 to i64
  %2156 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2155
  %2157 = getelementptr inbounds [5 x [5 x double]]* %2156, i32 0, i64 2
  %2158 = getelementptr inbounds [5 x double]* %2157, i32 0, i64 1
  %2159 = load double* %2158, align 8
  %2160 = fmul double %2152, %2159
  %2161 = load double* @tmp1, align 8
  %2162 = load i32* %k, align 4
  %2163 = add nsw i32 %2162, 1
  %2164 = sext i32 %2163 to i64
  %2165 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2164
  %2166 = getelementptr inbounds [5 x [5 x double]]* %2165, i32 0, i64 2
  %2167 = getelementptr inbounds [5 x double]* %2166, i32 0, i64 1
  %2168 = load double* %2167, align 8
  %2169 = fmul double %2161, %2168
  %2170 = fsub double %2160, %2169
  %2171 = load i32* %k, align 4
  %2172 = sext i32 %2171 to i64
  %2173 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2172
  %2174 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2173, i32 0, i64 2
  %2175 = getelementptr inbounds [5 x [5 x double]]* %2174, i32 0, i64 2
  %2176 = getelementptr inbounds [5 x double]* %2175, i32 0, i64 1
  store double %2170, double* %2176, align 8
  %2177 = load double* @tmp2, align 8
  %2178 = load i32* %k, align 4
  %2179 = add nsw i32 %2178, 1
  %2180 = sext i32 %2179 to i64
  %2181 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2180
  %2182 = getelementptr inbounds [5 x [5 x double]]* %2181, i32 0, i64 3
  %2183 = getelementptr inbounds [5 x double]* %2182, i32 0, i64 1
  %2184 = load double* %2183, align 8
  %2185 = fmul double %2177, %2184
  %2186 = load double* @tmp1, align 8
  %2187 = load i32* %k, align 4
  %2188 = add nsw i32 %2187, 1
  %2189 = sext i32 %2188 to i64
  %2190 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2189
  %2191 = getelementptr inbounds [5 x [5 x double]]* %2190, i32 0, i64 3
  %2192 = getelementptr inbounds [5 x double]* %2191, i32 0, i64 1
  %2193 = load double* %2192, align 8
  %2194 = fmul double %2186, %2193
  %2195 = fsub double %2185, %2194
  %2196 = load i32* %k, align 4
  %2197 = sext i32 %2196 to i64
  %2198 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2197
  %2199 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2198, i32 0, i64 2
  %2200 = getelementptr inbounds [5 x [5 x double]]* %2199, i32 0, i64 3
  %2201 = getelementptr inbounds [5 x double]* %2200, i32 0, i64 1
  store double %2195, double* %2201, align 8
  %2202 = load double* @tmp2, align 8
  %2203 = load i32* %k, align 4
  %2204 = add nsw i32 %2203, 1
  %2205 = sext i32 %2204 to i64
  %2206 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2205
  %2207 = getelementptr inbounds [5 x [5 x double]]* %2206, i32 0, i64 4
  %2208 = getelementptr inbounds [5 x double]* %2207, i32 0, i64 1
  %2209 = load double* %2208, align 8
  %2210 = fmul double %2202, %2209
  %2211 = load double* @tmp1, align 8
  %2212 = load i32* %k, align 4
  %2213 = add nsw i32 %2212, 1
  %2214 = sext i32 %2213 to i64
  %2215 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2214
  %2216 = getelementptr inbounds [5 x [5 x double]]* %2215, i32 0, i64 4
  %2217 = getelementptr inbounds [5 x double]* %2216, i32 0, i64 1
  %2218 = load double* %2217, align 8
  %2219 = fmul double %2211, %2218
  %2220 = fsub double %2210, %2219
  %2221 = load i32* %k, align 4
  %2222 = sext i32 %2221 to i64
  %2223 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2222
  %2224 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2223, i32 0, i64 2
  %2225 = getelementptr inbounds [5 x [5 x double]]* %2224, i32 0, i64 4
  %2226 = getelementptr inbounds [5 x double]* %2225, i32 0, i64 1
  store double %2220, double* %2226, align 8
  %2227 = load double* @tmp2, align 8
  %2228 = load i32* %k, align 4
  %2229 = add nsw i32 %2228, 1
  %2230 = sext i32 %2229 to i64
  %2231 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2230
  %2232 = getelementptr inbounds [5 x [5 x double]]* %2231, i32 0, i64 0
  %2233 = getelementptr inbounds [5 x double]* %2232, i32 0, i64 2
  %2234 = load double* %2233, align 8
  %2235 = fmul double %2227, %2234
  %2236 = load double* @tmp1, align 8
  %2237 = load i32* %k, align 4
  %2238 = add nsw i32 %2237, 1
  %2239 = sext i32 %2238 to i64
  %2240 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2239
  %2241 = getelementptr inbounds [5 x [5 x double]]* %2240, i32 0, i64 0
  %2242 = getelementptr inbounds [5 x double]* %2241, i32 0, i64 2
  %2243 = load double* %2242, align 8
  %2244 = fmul double %2236, %2243
  %2245 = fsub double %2235, %2244
  %2246 = load i32* %k, align 4
  %2247 = sext i32 %2246 to i64
  %2248 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2247
  %2249 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2248, i32 0, i64 2
  %2250 = getelementptr inbounds [5 x [5 x double]]* %2249, i32 0, i64 0
  %2251 = getelementptr inbounds [5 x double]* %2250, i32 0, i64 2
  store double %2245, double* %2251, align 8
  %2252 = load double* @tmp2, align 8
  %2253 = load i32* %k, align 4
  %2254 = add nsw i32 %2253, 1
  %2255 = sext i32 %2254 to i64
  %2256 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2255
  %2257 = getelementptr inbounds [5 x [5 x double]]* %2256, i32 0, i64 1
  %2258 = getelementptr inbounds [5 x double]* %2257, i32 0, i64 2
  %2259 = load double* %2258, align 8
  %2260 = fmul double %2252, %2259
  %2261 = load double* @tmp1, align 8
  %2262 = load i32* %k, align 4
  %2263 = add nsw i32 %2262, 1
  %2264 = sext i32 %2263 to i64
  %2265 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2264
  %2266 = getelementptr inbounds [5 x [5 x double]]* %2265, i32 0, i64 1
  %2267 = getelementptr inbounds [5 x double]* %2266, i32 0, i64 2
  %2268 = load double* %2267, align 8
  %2269 = fmul double %2261, %2268
  %2270 = fsub double %2260, %2269
  %2271 = load i32* %k, align 4
  %2272 = sext i32 %2271 to i64
  %2273 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2272
  %2274 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2273, i32 0, i64 2
  %2275 = getelementptr inbounds [5 x [5 x double]]* %2274, i32 0, i64 1
  %2276 = getelementptr inbounds [5 x double]* %2275, i32 0, i64 2
  store double %2270, double* %2276, align 8
  %2277 = load double* @tmp2, align 8
  %2278 = load i32* %k, align 4
  %2279 = add nsw i32 %2278, 1
  %2280 = sext i32 %2279 to i64
  %2281 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2280
  %2282 = getelementptr inbounds [5 x [5 x double]]* %2281, i32 0, i64 2
  %2283 = getelementptr inbounds [5 x double]* %2282, i32 0, i64 2
  %2284 = load double* %2283, align 8
  %2285 = fmul double %2277, %2284
  %2286 = load double* @tmp1, align 8
  %2287 = load i32* %k, align 4
  %2288 = add nsw i32 %2287, 1
  %2289 = sext i32 %2288 to i64
  %2290 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2289
  %2291 = getelementptr inbounds [5 x [5 x double]]* %2290, i32 0, i64 2
  %2292 = getelementptr inbounds [5 x double]* %2291, i32 0, i64 2
  %2293 = load double* %2292, align 8
  %2294 = fmul double %2286, %2293
  %2295 = fsub double %2285, %2294
  %2296 = load double* @tmp1, align 8
  %2297 = load double* @dz3, align 8
  %2298 = fmul double %2296, %2297
  %2299 = fsub double %2295, %2298
  %2300 = load i32* %k, align 4
  %2301 = sext i32 %2300 to i64
  %2302 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2301
  %2303 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2302, i32 0, i64 2
  %2304 = getelementptr inbounds [5 x [5 x double]]* %2303, i32 0, i64 2
  %2305 = getelementptr inbounds [5 x double]* %2304, i32 0, i64 2
  store double %2299, double* %2305, align 8
  %2306 = load double* @tmp2, align 8
  %2307 = load i32* %k, align 4
  %2308 = add nsw i32 %2307, 1
  %2309 = sext i32 %2308 to i64
  %2310 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2309
  %2311 = getelementptr inbounds [5 x [5 x double]]* %2310, i32 0, i64 3
  %2312 = getelementptr inbounds [5 x double]* %2311, i32 0, i64 2
  %2313 = load double* %2312, align 8
  %2314 = fmul double %2306, %2313
  %2315 = load double* @tmp1, align 8
  %2316 = load i32* %k, align 4
  %2317 = add nsw i32 %2316, 1
  %2318 = sext i32 %2317 to i64
  %2319 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2318
  %2320 = getelementptr inbounds [5 x [5 x double]]* %2319, i32 0, i64 3
  %2321 = getelementptr inbounds [5 x double]* %2320, i32 0, i64 2
  %2322 = load double* %2321, align 8
  %2323 = fmul double %2315, %2322
  %2324 = fsub double %2314, %2323
  %2325 = load i32* %k, align 4
  %2326 = sext i32 %2325 to i64
  %2327 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2326
  %2328 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2327, i32 0, i64 2
  %2329 = getelementptr inbounds [5 x [5 x double]]* %2328, i32 0, i64 3
  %2330 = getelementptr inbounds [5 x double]* %2329, i32 0, i64 2
  store double %2324, double* %2330, align 8
  %2331 = load double* @tmp2, align 8
  %2332 = load i32* %k, align 4
  %2333 = add nsw i32 %2332, 1
  %2334 = sext i32 %2333 to i64
  %2335 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2334
  %2336 = getelementptr inbounds [5 x [5 x double]]* %2335, i32 0, i64 4
  %2337 = getelementptr inbounds [5 x double]* %2336, i32 0, i64 2
  %2338 = load double* %2337, align 8
  %2339 = fmul double %2331, %2338
  %2340 = load double* @tmp1, align 8
  %2341 = load i32* %k, align 4
  %2342 = add nsw i32 %2341, 1
  %2343 = sext i32 %2342 to i64
  %2344 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2343
  %2345 = getelementptr inbounds [5 x [5 x double]]* %2344, i32 0, i64 4
  %2346 = getelementptr inbounds [5 x double]* %2345, i32 0, i64 2
  %2347 = load double* %2346, align 8
  %2348 = fmul double %2340, %2347
  %2349 = fsub double %2339, %2348
  %2350 = load i32* %k, align 4
  %2351 = sext i32 %2350 to i64
  %2352 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2351
  %2353 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2352, i32 0, i64 2
  %2354 = getelementptr inbounds [5 x [5 x double]]* %2353, i32 0, i64 4
  %2355 = getelementptr inbounds [5 x double]* %2354, i32 0, i64 2
  store double %2349, double* %2355, align 8
  %2356 = load double* @tmp2, align 8
  %2357 = load i32* %k, align 4
  %2358 = add nsw i32 %2357, 1
  %2359 = sext i32 %2358 to i64
  %2360 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2359
  %2361 = getelementptr inbounds [5 x [5 x double]]* %2360, i32 0, i64 0
  %2362 = getelementptr inbounds [5 x double]* %2361, i32 0, i64 3
  %2363 = load double* %2362, align 8
  %2364 = fmul double %2356, %2363
  %2365 = load double* @tmp1, align 8
  %2366 = load i32* %k, align 4
  %2367 = add nsw i32 %2366, 1
  %2368 = sext i32 %2367 to i64
  %2369 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2368
  %2370 = getelementptr inbounds [5 x [5 x double]]* %2369, i32 0, i64 0
  %2371 = getelementptr inbounds [5 x double]* %2370, i32 0, i64 3
  %2372 = load double* %2371, align 8
  %2373 = fmul double %2365, %2372
  %2374 = fsub double %2364, %2373
  %2375 = load i32* %k, align 4
  %2376 = sext i32 %2375 to i64
  %2377 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2376
  %2378 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2377, i32 0, i64 2
  %2379 = getelementptr inbounds [5 x [5 x double]]* %2378, i32 0, i64 0
  %2380 = getelementptr inbounds [5 x double]* %2379, i32 0, i64 3
  store double %2374, double* %2380, align 8
  %2381 = load double* @tmp2, align 8
  %2382 = load i32* %k, align 4
  %2383 = add nsw i32 %2382, 1
  %2384 = sext i32 %2383 to i64
  %2385 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2384
  %2386 = getelementptr inbounds [5 x [5 x double]]* %2385, i32 0, i64 1
  %2387 = getelementptr inbounds [5 x double]* %2386, i32 0, i64 3
  %2388 = load double* %2387, align 8
  %2389 = fmul double %2381, %2388
  %2390 = load double* @tmp1, align 8
  %2391 = load i32* %k, align 4
  %2392 = add nsw i32 %2391, 1
  %2393 = sext i32 %2392 to i64
  %2394 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2393
  %2395 = getelementptr inbounds [5 x [5 x double]]* %2394, i32 0, i64 1
  %2396 = getelementptr inbounds [5 x double]* %2395, i32 0, i64 3
  %2397 = load double* %2396, align 8
  %2398 = fmul double %2390, %2397
  %2399 = fsub double %2389, %2398
  %2400 = load i32* %k, align 4
  %2401 = sext i32 %2400 to i64
  %2402 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2401
  %2403 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2402, i32 0, i64 2
  %2404 = getelementptr inbounds [5 x [5 x double]]* %2403, i32 0, i64 1
  %2405 = getelementptr inbounds [5 x double]* %2404, i32 0, i64 3
  store double %2399, double* %2405, align 8
  %2406 = load double* @tmp2, align 8
  %2407 = load i32* %k, align 4
  %2408 = add nsw i32 %2407, 1
  %2409 = sext i32 %2408 to i64
  %2410 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2409
  %2411 = getelementptr inbounds [5 x [5 x double]]* %2410, i32 0, i64 2
  %2412 = getelementptr inbounds [5 x double]* %2411, i32 0, i64 3
  %2413 = load double* %2412, align 8
  %2414 = fmul double %2406, %2413
  %2415 = load double* @tmp1, align 8
  %2416 = load i32* %k, align 4
  %2417 = add nsw i32 %2416, 1
  %2418 = sext i32 %2417 to i64
  %2419 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2418
  %2420 = getelementptr inbounds [5 x [5 x double]]* %2419, i32 0, i64 2
  %2421 = getelementptr inbounds [5 x double]* %2420, i32 0, i64 3
  %2422 = load double* %2421, align 8
  %2423 = fmul double %2415, %2422
  %2424 = fsub double %2414, %2423
  %2425 = load i32* %k, align 4
  %2426 = sext i32 %2425 to i64
  %2427 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2426
  %2428 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2427, i32 0, i64 2
  %2429 = getelementptr inbounds [5 x [5 x double]]* %2428, i32 0, i64 2
  %2430 = getelementptr inbounds [5 x double]* %2429, i32 0, i64 3
  store double %2424, double* %2430, align 8
  %2431 = load double* @tmp2, align 8
  %2432 = load i32* %k, align 4
  %2433 = add nsw i32 %2432, 1
  %2434 = sext i32 %2433 to i64
  %2435 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2434
  %2436 = getelementptr inbounds [5 x [5 x double]]* %2435, i32 0, i64 3
  %2437 = getelementptr inbounds [5 x double]* %2436, i32 0, i64 3
  %2438 = load double* %2437, align 8
  %2439 = fmul double %2431, %2438
  %2440 = load double* @tmp1, align 8
  %2441 = load i32* %k, align 4
  %2442 = add nsw i32 %2441, 1
  %2443 = sext i32 %2442 to i64
  %2444 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2443
  %2445 = getelementptr inbounds [5 x [5 x double]]* %2444, i32 0, i64 3
  %2446 = getelementptr inbounds [5 x double]* %2445, i32 0, i64 3
  %2447 = load double* %2446, align 8
  %2448 = fmul double %2440, %2447
  %2449 = fsub double %2439, %2448
  %2450 = load double* @tmp1, align 8
  %2451 = load double* @dz4, align 8
  %2452 = fmul double %2450, %2451
  %2453 = fsub double %2449, %2452
  %2454 = load i32* %k, align 4
  %2455 = sext i32 %2454 to i64
  %2456 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2455
  %2457 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2456, i32 0, i64 2
  %2458 = getelementptr inbounds [5 x [5 x double]]* %2457, i32 0, i64 3
  %2459 = getelementptr inbounds [5 x double]* %2458, i32 0, i64 3
  store double %2453, double* %2459, align 8
  %2460 = load double* @tmp2, align 8
  %2461 = load i32* %k, align 4
  %2462 = add nsw i32 %2461, 1
  %2463 = sext i32 %2462 to i64
  %2464 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2463
  %2465 = getelementptr inbounds [5 x [5 x double]]* %2464, i32 0, i64 4
  %2466 = getelementptr inbounds [5 x double]* %2465, i32 0, i64 3
  %2467 = load double* %2466, align 8
  %2468 = fmul double %2460, %2467
  %2469 = load double* @tmp1, align 8
  %2470 = load i32* %k, align 4
  %2471 = add nsw i32 %2470, 1
  %2472 = sext i32 %2471 to i64
  %2473 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2472
  %2474 = getelementptr inbounds [5 x [5 x double]]* %2473, i32 0, i64 4
  %2475 = getelementptr inbounds [5 x double]* %2474, i32 0, i64 3
  %2476 = load double* %2475, align 8
  %2477 = fmul double %2469, %2476
  %2478 = fsub double %2468, %2477
  %2479 = load i32* %k, align 4
  %2480 = sext i32 %2479 to i64
  %2481 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2480
  %2482 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2481, i32 0, i64 2
  %2483 = getelementptr inbounds [5 x [5 x double]]* %2482, i32 0, i64 4
  %2484 = getelementptr inbounds [5 x double]* %2483, i32 0, i64 3
  store double %2478, double* %2484, align 8
  %2485 = load double* @tmp2, align 8
  %2486 = load i32* %k, align 4
  %2487 = add nsw i32 %2486, 1
  %2488 = sext i32 %2487 to i64
  %2489 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2488
  %2490 = getelementptr inbounds [5 x [5 x double]]* %2489, i32 0, i64 0
  %2491 = getelementptr inbounds [5 x double]* %2490, i32 0, i64 4
  %2492 = load double* %2491, align 8
  %2493 = fmul double %2485, %2492
  %2494 = load double* @tmp1, align 8
  %2495 = load i32* %k, align 4
  %2496 = add nsw i32 %2495, 1
  %2497 = sext i32 %2496 to i64
  %2498 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2497
  %2499 = getelementptr inbounds [5 x [5 x double]]* %2498, i32 0, i64 0
  %2500 = getelementptr inbounds [5 x double]* %2499, i32 0, i64 4
  %2501 = load double* %2500, align 8
  %2502 = fmul double %2494, %2501
  %2503 = fsub double %2493, %2502
  %2504 = load i32* %k, align 4
  %2505 = sext i32 %2504 to i64
  %2506 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2505
  %2507 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2506, i32 0, i64 2
  %2508 = getelementptr inbounds [5 x [5 x double]]* %2507, i32 0, i64 0
  %2509 = getelementptr inbounds [5 x double]* %2508, i32 0, i64 4
  store double %2503, double* %2509, align 8
  %2510 = load double* @tmp2, align 8
  %2511 = load i32* %k, align 4
  %2512 = add nsw i32 %2511, 1
  %2513 = sext i32 %2512 to i64
  %2514 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2513
  %2515 = getelementptr inbounds [5 x [5 x double]]* %2514, i32 0, i64 1
  %2516 = getelementptr inbounds [5 x double]* %2515, i32 0, i64 4
  %2517 = load double* %2516, align 8
  %2518 = fmul double %2510, %2517
  %2519 = load double* @tmp1, align 8
  %2520 = load i32* %k, align 4
  %2521 = add nsw i32 %2520, 1
  %2522 = sext i32 %2521 to i64
  %2523 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2522
  %2524 = getelementptr inbounds [5 x [5 x double]]* %2523, i32 0, i64 1
  %2525 = getelementptr inbounds [5 x double]* %2524, i32 0, i64 4
  %2526 = load double* %2525, align 8
  %2527 = fmul double %2519, %2526
  %2528 = fsub double %2518, %2527
  %2529 = load i32* %k, align 4
  %2530 = sext i32 %2529 to i64
  %2531 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2530
  %2532 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2531, i32 0, i64 2
  %2533 = getelementptr inbounds [5 x [5 x double]]* %2532, i32 0, i64 1
  %2534 = getelementptr inbounds [5 x double]* %2533, i32 0, i64 4
  store double %2528, double* %2534, align 8
  %2535 = load double* @tmp2, align 8
  %2536 = load i32* %k, align 4
  %2537 = add nsw i32 %2536, 1
  %2538 = sext i32 %2537 to i64
  %2539 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2538
  %2540 = getelementptr inbounds [5 x [5 x double]]* %2539, i32 0, i64 2
  %2541 = getelementptr inbounds [5 x double]* %2540, i32 0, i64 4
  %2542 = load double* %2541, align 8
  %2543 = fmul double %2535, %2542
  %2544 = load double* @tmp1, align 8
  %2545 = load i32* %k, align 4
  %2546 = add nsw i32 %2545, 1
  %2547 = sext i32 %2546 to i64
  %2548 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2547
  %2549 = getelementptr inbounds [5 x [5 x double]]* %2548, i32 0, i64 2
  %2550 = getelementptr inbounds [5 x double]* %2549, i32 0, i64 4
  %2551 = load double* %2550, align 8
  %2552 = fmul double %2544, %2551
  %2553 = fsub double %2543, %2552
  %2554 = load i32* %k, align 4
  %2555 = sext i32 %2554 to i64
  %2556 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2555
  %2557 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2556, i32 0, i64 2
  %2558 = getelementptr inbounds [5 x [5 x double]]* %2557, i32 0, i64 2
  %2559 = getelementptr inbounds [5 x double]* %2558, i32 0, i64 4
  store double %2553, double* %2559, align 8
  %2560 = load double* @tmp2, align 8
  %2561 = load i32* %k, align 4
  %2562 = add nsw i32 %2561, 1
  %2563 = sext i32 %2562 to i64
  %2564 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2563
  %2565 = getelementptr inbounds [5 x [5 x double]]* %2564, i32 0, i64 3
  %2566 = getelementptr inbounds [5 x double]* %2565, i32 0, i64 4
  %2567 = load double* %2566, align 8
  %2568 = fmul double %2560, %2567
  %2569 = load double* @tmp1, align 8
  %2570 = load i32* %k, align 4
  %2571 = add nsw i32 %2570, 1
  %2572 = sext i32 %2571 to i64
  %2573 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2572
  %2574 = getelementptr inbounds [5 x [5 x double]]* %2573, i32 0, i64 3
  %2575 = getelementptr inbounds [5 x double]* %2574, i32 0, i64 4
  %2576 = load double* %2575, align 8
  %2577 = fmul double %2569, %2576
  %2578 = fsub double %2568, %2577
  %2579 = load i32* %k, align 4
  %2580 = sext i32 %2579 to i64
  %2581 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2580
  %2582 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2581, i32 0, i64 2
  %2583 = getelementptr inbounds [5 x [5 x double]]* %2582, i32 0, i64 3
  %2584 = getelementptr inbounds [5 x double]* %2583, i32 0, i64 4
  store double %2578, double* %2584, align 8
  %2585 = load double* @tmp2, align 8
  %2586 = load i32* %k, align 4
  %2587 = add nsw i32 %2586, 1
  %2588 = sext i32 %2587 to i64
  %2589 = getelementptr inbounds [13 x [5 x [5 x double]]]* @fjac, i32 0, i64 %2588
  %2590 = getelementptr inbounds [5 x [5 x double]]* %2589, i32 0, i64 4
  %2591 = getelementptr inbounds [5 x double]* %2590, i32 0, i64 4
  %2592 = load double* %2591, align 8
  %2593 = fmul double %2585, %2592
  %2594 = load double* @tmp1, align 8
  %2595 = load i32* %k, align 4
  %2596 = add nsw i32 %2595, 1
  %2597 = sext i32 %2596 to i64
  %2598 = getelementptr inbounds [13 x [5 x [5 x double]]]* @njac, i32 0, i64 %2597
  %2599 = getelementptr inbounds [5 x [5 x double]]* %2598, i32 0, i64 4
  %2600 = getelementptr inbounds [5 x double]* %2599, i32 0, i64 4
  %2601 = load double* %2600, align 8
  %2602 = fmul double %2594, %2601
  %2603 = fsub double %2593, %2602
  %2604 = load double* @tmp1, align 8
  %2605 = load double* @dz5, align 8
  %2606 = fmul double %2604, %2605
  %2607 = fsub double %2603, %2606
  %2608 = load i32* %k, align 4
  %2609 = sext i32 %2608 to i64
  %2610 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2609
  %2611 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2610, i32 0, i64 2
  %2612 = getelementptr inbounds [5 x [5 x double]]* %2611, i32 0, i64 4
  %2613 = getelementptr inbounds [5 x double]* %2612, i32 0, i64 4
  store double %2607, double* %2613, align 8
  br label %2614

; <label>:2614                                    ; preds = %887
  %2615 = load i32* %k, align 4
  %2616 = add nsw i32 %2615, 1
  store i32 %2616, i32* %k, align 4
  br label %882

; <label>:2617                                    ; preds = %882
  %2618 = load i32* %i, align 4
  %2619 = sext i32 %2618 to i64
  %2620 = load i32* %j, align 4
  %2621 = sext i32 %2620 to i64
  %2622 = getelementptr inbounds [13 x [13 x [5 x double]]]* getelementptr inbounds ([12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 0), i32 0, i64 %2621
  %2623 = getelementptr inbounds [13 x [5 x double]]* %2622, i32 0, i64 %2619
  %2624 = getelementptr inbounds [5 x double]* %2623, i32 0, i32 0
  call void @binvcrhs([5 x double]* getelementptr inbounds ([13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 0, i64 1, i32 0), [5 x double]* getelementptr inbounds ([13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 0, i64 2, i32 0), double* %2624)
  store i32 1, i32* %k, align 4
  br label %2625

; <label>:2625                                    ; preds = %2693, %2617
  %2626 = load i32* %k, align 4
  %2627 = load i32* %ksize, align 4
  %2628 = sub nsw i32 %2627, 1
  %2629 = icmp sle i32 %2626, %2628
  br i1 %2629, label %2630, label %2696

; <label>:2630                                    ; preds = %2625
  %2631 = load i32* %k, align 4
  %2632 = sext i32 %2631 to i64
  %2633 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2632
  %2634 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2633, i32 0, i64 0
  %2635 = getelementptr inbounds [5 x [5 x double]]* %2634, i32 0, i32 0
  %2636 = load i32* %i, align 4
  %2637 = sext i32 %2636 to i64
  %2638 = load i32* %j, align 4
  %2639 = sext i32 %2638 to i64
  %2640 = load i32* %k, align 4
  %2641 = sub nsw i32 %2640, 1
  %2642 = sext i32 %2641 to i64
  %2643 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2642
  %2644 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2643, i32 0, i64 %2639
  %2645 = getelementptr inbounds [13 x [5 x double]]* %2644, i32 0, i64 %2637
  %2646 = getelementptr inbounds [5 x double]* %2645, i32 0, i32 0
  %2647 = load i32* %i, align 4
  %2648 = sext i32 %2647 to i64
  %2649 = load i32* %j, align 4
  %2650 = sext i32 %2649 to i64
  %2651 = load i32* %k, align 4
  %2652 = sext i32 %2651 to i64
  %2653 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2652
  %2654 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2653, i32 0, i64 %2650
  %2655 = getelementptr inbounds [13 x [5 x double]]* %2654, i32 0, i64 %2648
  %2656 = getelementptr inbounds [5 x double]* %2655, i32 0, i32 0
  call void @matvec_sub([5 x double]* %2635, double* %2646, double* %2656)
  %2657 = load i32* %k, align 4
  %2658 = sext i32 %2657 to i64
  %2659 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2658
  %2660 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2659, i32 0, i64 0
  %2661 = getelementptr inbounds [5 x [5 x double]]* %2660, i32 0, i32 0
  %2662 = load i32* %k, align 4
  %2663 = sub nsw i32 %2662, 1
  %2664 = sext i32 %2663 to i64
  %2665 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2664
  %2666 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2665, i32 0, i64 2
  %2667 = getelementptr inbounds [5 x [5 x double]]* %2666, i32 0, i32 0
  %2668 = load i32* %k, align 4
  %2669 = sext i32 %2668 to i64
  %2670 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2669
  %2671 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2670, i32 0, i64 1
  %2672 = getelementptr inbounds [5 x [5 x double]]* %2671, i32 0, i32 0
  call void @matmul_sub([5 x double]* %2661, [5 x double]* %2667, [5 x double]* %2672)
  %2673 = load i32* %k, align 4
  %2674 = sext i32 %2673 to i64
  %2675 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2674
  %2676 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2675, i32 0, i64 1
  %2677 = getelementptr inbounds [5 x [5 x double]]* %2676, i32 0, i32 0
  %2678 = load i32* %k, align 4
  %2679 = sext i32 %2678 to i64
  %2680 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2679
  %2681 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2680, i32 0, i64 2
  %2682 = getelementptr inbounds [5 x [5 x double]]* %2681, i32 0, i32 0
  %2683 = load i32* %i, align 4
  %2684 = sext i32 %2683 to i64
  %2685 = load i32* %j, align 4
  %2686 = sext i32 %2685 to i64
  %2687 = load i32* %k, align 4
  %2688 = sext i32 %2687 to i64
  %2689 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2688
  %2690 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2689, i32 0, i64 %2686
  %2691 = getelementptr inbounds [13 x [5 x double]]* %2690, i32 0, i64 %2684
  %2692 = getelementptr inbounds [5 x double]* %2691, i32 0, i32 0
  call void @binvcrhs([5 x double]* %2677, [5 x double]* %2682, double* %2692)
  br label %2693

; <label>:2693                                    ; preds = %2630
  %2694 = load i32* %k, align 4
  %2695 = add nsw i32 %2694, 1
  store i32 %2695, i32* %k, align 4
  br label %2625

; <label>:2696                                    ; preds = %2625
  %2697 = load i32* %ksize, align 4
  %2698 = sext i32 %2697 to i64
  %2699 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2698
  %2700 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2699, i32 0, i64 0
  %2701 = getelementptr inbounds [5 x [5 x double]]* %2700, i32 0, i32 0
  %2702 = load i32* %i, align 4
  %2703 = sext i32 %2702 to i64
  %2704 = load i32* %j, align 4
  %2705 = sext i32 %2704 to i64
  %2706 = load i32* %ksize, align 4
  %2707 = sub nsw i32 %2706, 1
  %2708 = sext i32 %2707 to i64
  %2709 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2708
  %2710 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2709, i32 0, i64 %2705
  %2711 = getelementptr inbounds [13 x [5 x double]]* %2710, i32 0, i64 %2703
  %2712 = getelementptr inbounds [5 x double]* %2711, i32 0, i32 0
  %2713 = load i32* %i, align 4
  %2714 = sext i32 %2713 to i64
  %2715 = load i32* %j, align 4
  %2716 = sext i32 %2715 to i64
  %2717 = load i32* %ksize, align 4
  %2718 = sext i32 %2717 to i64
  %2719 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2718
  %2720 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2719, i32 0, i64 %2716
  %2721 = getelementptr inbounds [13 x [5 x double]]* %2720, i32 0, i64 %2714
  %2722 = getelementptr inbounds [5 x double]* %2721, i32 0, i32 0
  call void @matvec_sub([5 x double]* %2701, double* %2712, double* %2722)
  %2723 = load i32* %ksize, align 4
  %2724 = sext i32 %2723 to i64
  %2725 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2724
  %2726 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2725, i32 0, i64 0
  %2727 = getelementptr inbounds [5 x [5 x double]]* %2726, i32 0, i32 0
  %2728 = load i32* %ksize, align 4
  %2729 = sub nsw i32 %2728, 1
  %2730 = sext i32 %2729 to i64
  %2731 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2730
  %2732 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2731, i32 0, i64 2
  %2733 = getelementptr inbounds [5 x [5 x double]]* %2732, i32 0, i32 0
  %2734 = load i32* %ksize, align 4
  %2735 = sext i32 %2734 to i64
  %2736 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2735
  %2737 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2736, i32 0, i64 1
  %2738 = getelementptr inbounds [5 x [5 x double]]* %2737, i32 0, i32 0
  call void @matmul_sub([5 x double]* %2727, [5 x double]* %2733, [5 x double]* %2738)
  %2739 = load i32* %ksize, align 4
  %2740 = sext i32 %2739 to i64
  %2741 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2740
  %2742 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2741, i32 0, i64 1
  %2743 = getelementptr inbounds [5 x [5 x double]]* %2742, i32 0, i32 0
  %2744 = load i32* %i, align 4
  %2745 = sext i32 %2744 to i64
  %2746 = load i32* %j, align 4
  %2747 = sext i32 %2746 to i64
  %2748 = load i32* %ksize, align 4
  %2749 = sext i32 %2748 to i64
  %2750 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2749
  %2751 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2750, i32 0, i64 %2747
  %2752 = getelementptr inbounds [13 x [5 x double]]* %2751, i32 0, i64 %2745
  %2753 = getelementptr inbounds [5 x double]* %2752, i32 0, i32 0
  call void @binvrhs([5 x double]* %2743, double* %2753)
  %2754 = load i32* %ksize, align 4
  %2755 = sub nsw i32 %2754, 1
  store i32 %2755, i32* %k, align 4
  br label %2756

; <label>:2756                                    ; preds = %2828, %2696
  %2757 = load i32* %k, align 4
  %2758 = icmp sge i32 %2757, 0
  br i1 %2758, label %2759, label %2831

; <label>:2759                                    ; preds = %2756
  store i32 0, i32* %m, align 4
  br label %2760

; <label>:2760                                    ; preds = %2824, %2759
  %2761 = load i32* %m, align 4
  %2762 = icmp slt i32 %2761, 5
  br i1 %2762, label %2763, label %2827

; <label>:2763                                    ; preds = %2760
  store i32 0, i32* %n, align 4
  br label %2764

; <label>:2764                                    ; preds = %2820, %2763
  %2765 = load i32* %n, align 4
  %2766 = icmp slt i32 %2765, 5
  br i1 %2766, label %2767, label %2823

; <label>:2767                                    ; preds = %2764
  %2768 = load i32* %m, align 4
  %2769 = sext i32 %2768 to i64
  %2770 = load i32* %i, align 4
  %2771 = sext i32 %2770 to i64
  %2772 = load i32* %j, align 4
  %2773 = sext i32 %2772 to i64
  %2774 = load i32* %k, align 4
  %2775 = sext i32 %2774 to i64
  %2776 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2775
  %2777 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2776, i32 0, i64 %2773
  %2778 = getelementptr inbounds [13 x [5 x double]]* %2777, i32 0, i64 %2771
  %2779 = getelementptr inbounds [5 x double]* %2778, i32 0, i64 %2769
  %2780 = load double* %2779, align 8
  %2781 = load i32* %m, align 4
  %2782 = sext i32 %2781 to i64
  %2783 = load i32* %n, align 4
  %2784 = sext i32 %2783 to i64
  %2785 = load i32* %k, align 4
  %2786 = sext i32 %2785 to i64
  %2787 = getelementptr inbounds [13 x [3 x [5 x [5 x double]]]]* @lhs, i32 0, i64 %2786
  %2788 = getelementptr inbounds [3 x [5 x [5 x double]]]* %2787, i32 0, i64 2
  %2789 = getelementptr inbounds [5 x [5 x double]]* %2788, i32 0, i64 %2784
  %2790 = getelementptr inbounds [5 x double]* %2789, i32 0, i64 %2782
  %2791 = load double* %2790, align 8
  %2792 = load i32* %n, align 4
  %2793 = sext i32 %2792 to i64
  %2794 = load i32* %i, align 4
  %2795 = sext i32 %2794 to i64
  %2796 = load i32* %j, align 4
  %2797 = sext i32 %2796 to i64
  %2798 = load i32* %k, align 4
  %2799 = add nsw i32 %2798, 1
  %2800 = sext i32 %2799 to i64
  %2801 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2800
  %2802 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2801, i32 0, i64 %2797
  %2803 = getelementptr inbounds [13 x [5 x double]]* %2802, i32 0, i64 %2795
  %2804 = getelementptr inbounds [5 x double]* %2803, i32 0, i64 %2793
  %2805 = load double* %2804, align 8
  %2806 = fmul double %2791, %2805
  %2807 = fsub double %2780, %2806
  %2808 = load i32* %m, align 4
  %2809 = sext i32 %2808 to i64
  %2810 = load i32* %i, align 4
  %2811 = sext i32 %2810 to i64
  %2812 = load i32* %j, align 4
  %2813 = sext i32 %2812 to i64
  %2814 = load i32* %k, align 4
  %2815 = sext i32 %2814 to i64
  %2816 = getelementptr inbounds [12 x [13 x [13 x [5 x double]]]]* @rhs, i32 0, i64 %2815
  %2817 = getelementptr inbounds [13 x [13 x [5 x double]]]* %2816, i32 0, i64 %2813
  %2818 = getelementptr inbounds [13 x [5 x double]]* %2817, i32 0, i64 %2811
  %2819 = getelementptr inbounds [5 x double]* %2818, i32 0, i64 %2809
  store double %2807, double* %2819, align 8
  br label %2820

; <label>:2820                                    ; preds = %2767
  %2821 = load i32* %n, align 4
  %2822 = add nsw i32 %2821, 1
  store i32 %2822, i32* %n, align 4
  br label %2764

; <label>:2823                                    ; preds = %2764
  br label %2824

; <label>:2824                                    ; preds = %2823
  %2825 = load i32* %m, align 4
  %2826 = add nsw i32 %2825, 1
  store i32 %2826, i32* %m, align 4
  br label %2760

; <label>:2827                                    ; preds = %2760
  br label %2828

; <label>:2828                                    ; preds = %2827
  %2829 = load i32* %k, align 4
  %2830 = add nsw i32 %2829, -1
  store i32 %2830, i32* %k, align 4
  br label %2756

; <label>:2831                                    ; preds = %2756
  br label %2832

; <label>:2832                                    ; preds = %2831
  %2833 = load i32* %i, align 4
  %2834 = add nsw i32 %2833, 1
  store i32 %2834, i32* %i, align 4
  br label %13

; <label>:2835                                    ; preds = %13
  br label %2836

; <label>:2836                                    ; preds = %2835
  %2837 = load i32* %j, align 4
  %2838 = add nsw i32 %2837, 1
  store i32 %2838, i32* %j, align 4
  br label %7

; <label>:2839                                    ; preds = %7
  %2840 = load i32* @timeron, align 4
  %2841 = icmp ne i32 %2840, 0
  br i1 %2841, label %2842, label %2843

; <label>:2842                                    ; preds = %2839
  call void @timer_stop(i32 8)
  br label %2843

; <label>:2843                                    ; preds = %2842, %2839
  ret void
}

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readnone }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}

!0 = metadata !{metadata !"clang version 3.4 (tags/RELEASE_34/final)"}
