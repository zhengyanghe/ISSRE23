; ModuleID = 'blts.ll'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.timeval = type { i64, i64 }
%struct.timezone = type { i32, i32 }

@.str = private unnamed_addr constant [27 x i8] c"\0A\0A %s Benchmark Completed\0A\00", align 1
@.str1 = private unnamed_addr constant [46 x i8] c" Class           =                        %c\0A\00", align 1
@.str2 = private unnamed_addr constant [38 x i8] c" Size            =             %12ld\0A\00", align 1
@.str3 = private unnamed_addr constant [44 x i8] c" Size            =             %4dx%4dx%4d\0A\00", align 1
@.str4 = private unnamed_addr constant [37 x i8] c" Iterations      =             %12d\0A\00", align 1
@.str5 = private unnamed_addr constant [25 x i8] c" Operation type  = %24s\0A\00", align 1
@.str6 = private unnamed_addr constant [45 x i8] c" Verification    =            NOT PERFORMED\0A\00", align 1
@.str7 = private unnamed_addr constant [45 x i8] c" Verification    =               SUCCESSFUL\0A\00", align 1
@.str8 = private unnamed_addr constant [45 x i8] c" Verification    =             UNSUCCESSFUL\0A\00", align 1
@.str9 = private unnamed_addr constant [37 x i8] c" Version         =             %12s\0A\00", align 1
@.str10 = private unnamed_addr constant [41 x i8] c"\0A--------------------------------------\0A\00", align 1
@.str11 = private unnamed_addr constant [39 x i8] c" Please send all errors/feedbacks to:\0A\00", align 1
@.str12 = private unnamed_addr constant [34 x i8] c" Center for Manycore Programming\0A\00", align 1
@.str13 = private unnamed_addr constant [21 x i8] c" cmp@aces.snu.ac.kr\0A\00", align 1
@.str14 = private unnamed_addr constant [24 x i8] c" http://aces.snu.ac.kr\0A\00", align 1
@.str15 = private unnamed_addr constant [40 x i8] c"--------------------------------------\0A\00", align 1
@elapsed = internal global [64 x double] zeroinitializer, align 16
@start = internal global [64 x double] zeroinitializer, align 16
@.str16 = private unnamed_addr constant [177 x i8] c"     SUBDOMAIN SIZE IS TOO SMALL - \0A     ADJUST PROBLEM SIZE OR NUMBER OF PROCESSORS\0A     SO THAT NX, NY AND NZ ARE GREATER THAN OR EQUAL\0A     TO 4 THEY ARE CURRENTLY%3d%3d%3d\0A\00", align 1
@.str117 = private unnamed_addr constant [217 x i8] c"     SUBDOMAIN SIZE IS TOO LARGE - \0A     ADJUST PROBLEM SIZE OR NUMBER OF PROCESSORS\0A     SO THAT NX, NY AND NZ ARE LESS THAN OR EQUAL TO \0A     ISIZ1, ISIZ2 AND ISIZ3 RESPECTIVELY.  THEY ARE\0A     CURRENTLYi%4d%4d%4d\0A\00", align 1
@.str20 = private unnamed_addr constant [11 x i8] c"timer.flag\00", align 1
@.str121 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@timeron = common global i32 0, align 4
@.str222 = private unnamed_addr constant [6 x i8] c"total\00", align 1
@.str323 = private unnamed_addr constant [5 x i8] c"rhsx\00", align 1
@.str424 = private unnamed_addr constant [5 x i8] c"rhsy\00", align 1
@.str525 = private unnamed_addr constant [5 x i8] c"rhsz\00", align 1
@.str626 = private unnamed_addr constant [4 x i8] c"rhs\00", align 1
@.str727 = private unnamed_addr constant [6 x i8] c"jacld\00", align 1
@.str828 = private unnamed_addr constant [5 x i8] c"blts\00", align 1
@.str929 = private unnamed_addr constant [5 x i8] c"jacu\00", align 1
@.str1030 = private unnamed_addr constant [5 x i8] c"buts\00", align 1
@.str1131 = private unnamed_addr constant [4 x i8] c"add\00", align 1
@.str1232 = private unnamed_addr constant [7 x i8] c"l2norm\00", align 1
@itmax = common global i32 0, align 4
@rsdnm = common global [5 x double] zeroinitializer, align 16
@errnm = common global [5 x double] zeroinitializer, align 16
@frc = common global double 0.000000e+00, align 8
@nx0 = common global i32 0, align 4
@ny0 = common global i32 0, align 4
@nz0 = common global i32 0, align 4
@maxtime = common global double 0.000000e+00, align 8
@.str1341 = private unnamed_addr constant [3 x i8] c"LU\00", align 1
@.str1442 = private unnamed_addr constant [25 x i8] c"          floating point\00", align 1
@.str1543 = private unnamed_addr constant [6 x i8] c"3.3.1\00", align 1
@.str1644 = private unnamed_addr constant [12 x i8] c"14 Feb 2018\00", align 1
@.str17 = private unnamed_addr constant [34 x i8] c"$(LLFI_BUILD_ROOT)/llvm/bin/clang\00", align 1
@.str18 = private unnamed_addr constant [6 x i8] c"$(CC)\00", align 1
@.str19 = private unnamed_addr constant [4 x i8] c"-lm\00", align 1
@.str2045 = private unnamed_addr constant [12 x i8] c"-I../common\00", align 1
@.str21 = private unnamed_addr constant [14 x i8] c"-g -Wall -O3 \00", align 1
@.str22 = private unnamed_addr constant [7 x i8] c"-O3 -v\00", align 1
@.str23 = private unnamed_addr constant [7 x i8] c"(none)\00", align 1
@.str24 = private unnamed_addr constant [27 x i8] c"  SECTION     Time (secs)\0A\00", align 1
@.str25 = private unnamed_addr constant [25 x i8] c"  %-8s:%9.3f  (%6.2f%%)\0A\00", align 1
@.str26 = private unnamed_addr constant [31 x i8] c"     --> %8s:%9.3f  (%6.2f%%)\0A\00", align 1
@.str27 = private unnamed_addr constant [8 x i8] c"sub-rhs\00", align 1
@.str28 = private unnamed_addr constant [9 x i8] c"rest-rhs\00", align 1
@dxi = common global double 0.000000e+00, align 8
@deta = common global double 0.000000e+00, align 8
@dzeta = common global double 0.000000e+00, align 8
@tx1 = common global double 0.000000e+00, align 8
@tx2 = common global double 0.000000e+00, align 8
@tx3 = common global double 0.000000e+00, align 8
@ty1 = common global double 0.000000e+00, align 8
@ty2 = common global double 0.000000e+00, align 8
@ty3 = common global double 0.000000e+00, align 8
@tz1 = common global double 0.000000e+00, align 8
@tz2 = common global double 0.000000e+00, align 8
@tz3 = common global double 0.000000e+00, align 8
@nx = common global i32 0, align 4
@ny = common global i32 0, align 4
@nz = common global i32 0, align 4
@ist = common global i32 0, align 4
@iend = common global i32 0, align 4
@jst = common global i32 0, align 4
@jend = common global i32 0, align 4
@ii1 = common global i32 0, align 4
@ii2 = common global i32 0, align 4
@ji1 = common global i32 0, align 4
@ji2 = common global i32 0, align 4
@ki1 = common global i32 0, align 4
@ki2 = common global i32 0, align 4
@dx1 = common global double 0.000000e+00, align 8
@dx2 = common global double 0.000000e+00, align 8
@dx3 = common global double 0.000000e+00, align 8
@dx4 = common global double 0.000000e+00, align 8
@dx5 = common global double 0.000000e+00, align 8
@dy1 = common global double 0.000000e+00, align 8
@dy2 = common global double 0.000000e+00, align 8
@dy3 = common global double 0.000000e+00, align 8
@dy4 = common global double 0.000000e+00, align 8
@dy5 = common global double 0.000000e+00, align 8
@dz1 = common global double 0.000000e+00, align 8
@dz2 = common global double 0.000000e+00, align 8
@dz3 = common global double 0.000000e+00, align 8
@dz4 = common global double 0.000000e+00, align 8
@dz5 = common global double 0.000000e+00, align 8
@dssp = common global double 0.000000e+00, align 8
@u = common global [22 x [23 x [23 x [5 x double]]]] zeroinitializer, align 16
@rsd = common global [22 x [23 x [23 x [5 x double]]]] zeroinitializer, align 16
@frct = common global [22 x [23 x [23 x [5 x double]]]] zeroinitializer, align 16
@flux = common global [22 x [5 x double]] zeroinitializer, align 16
@qs = common global [22 x [23 x [23 x double]]] zeroinitializer, align 16
@rho_i = common global [22 x [23 x [23 x double]]] zeroinitializer, align 16
@ipr = common global i32 0, align 4
@inorm = common global i32 0, align 4
@dt = common global double 0.000000e+00, align 8
@omega = common global double 0.000000e+00, align 8
@tolrsd = common global [5 x double] zeroinitializer, align 16
@ttotal = common global double 0.000000e+00, align 8
@invert = common global i32 0, align 4
@a = common global [22 x [23 x [5 x [5 x double]]]] zeroinitializer, align 16
@b = common global [22 x [23 x [5 x [5 x double]]]] zeroinitializer, align 16
@c = common global [22 x [23 x [5 x [5 x double]]]] zeroinitializer, align 16
@d = common global [22 x [23 x [5 x [5 x double]]]] zeroinitializer, align 16
@ce = common global [5 x [13 x double]] zeroinitializer, align 16
@.str148 = private unnamed_addr constant [28 x i8] c"\0A\0A %s Benchmark Completed.\0A\00", align 1
@.str1149 = private unnamed_addr constant [37 x i8] c" Class           =             %12c\0A\00", align 1
@.str2150 = private unnamed_addr constant [8 x i8] c"%15.0lf\00", align 1
@.str3151 = private unnamed_addr constant [34 x i8] c" Size            =          %15s\0A\00", align 1
@.str4152 = private unnamed_addr constant [37 x i8] c" Size            =             %12d\0A\00", align 1
@.str5153 = private unnamed_addr constant [42 x i8] c" Size            =           %4dx%4dx%4d\0A\00", align 1
@.str6154 = private unnamed_addr constant [37 x i8] c" Iterations      =             %12d\0A\00", align 1
@.str7155 = private unnamed_addr constant [25 x i8] c" Operation type  = %24s\0A\00", align 1
@.str8156 = private unnamed_addr constant [37 x i8] c" Verification    =             %12s\0A\00", align 1
@.str9157 = private unnamed_addr constant [11 x i8] c"SUCCESSFUL\00", align 1
@.str10158 = private unnamed_addr constant [13 x i8] c"UNSUCCESSFUL\00", align 1
@.str11159 = private unnamed_addr constant [37 x i8] c" Version         =             %12s\0A\00", align 1
@.str12160 = private unnamed_addr constant [195 x i8] c"\0A--------------------------------------\0A Please send all errors/feedbacks to:\0A Center for Manycore Programming\0A cmp@aces.snu.ac.kr\0A http://aces.snu.ac.kr\0A--------------------------------------\0A\0A\00", align 1
@.str163 = private unnamed_addr constant [59 x i8] c"\0A\0A NAS Parallel Benchmarks (NPB3.3-SER-C) - LU Benchmark\0A\0A\00", align 1
@.str1164 = private unnamed_addr constant [13 x i8] c"inputlu.data\00", align 1
@.str2165 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str3166 = private unnamed_addr constant [38 x i8] c"Reading from input file inputlu.data\0A\00", align 1
@.str4167 = private unnamed_addr constant [5 x i8] c"%d%d\00", align 1
@.str5168 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str6169 = private unnamed_addr constant [4 x i8] c"%lf\00", align 1
@.str7170 = private unnamed_addr constant [16 x i8] c"%lf%lf%lf%lf%lf\00", align 1
@.str8171 = private unnamed_addr constant [7 x i8] c"%d%d%d\00", align 1
@.str9172 = private unnamed_addr constant [86 x i8] c"     PROBLEM SIZE IS TOO SMALL - \0A     SET EACH OF NX, NY AND NZ AT LEAST EQUAL TO 5\0A\00", align 1
@.str10173 = private unnamed_addr constant [115 x i8] c"     PROBLEM SIZE IS TOO LARGE - \0A     NX, NY AND NZ SHOULD BE EQUAL TO \0A     ISIZ1, ISIZ2 AND ISIZ3 RESPECTIVELY\0A\00", align 1
@.str11174 = private unnamed_addr constant [20 x i8] c" Size: %4dx%4dx%4d\0A\00", align 1
@.str12175 = private unnamed_addr constant [18 x i8] c" Iterations: %4d\0A\00", align 1
@.str13176 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str185 = private unnamed_addr constant [16 x i8] c" Time step %4d\0A\00", align 1
@.str1186 = private unnamed_addr constant [57 x i8] c" \0A convergence was achieved after %4d pseudo-time steps\0A\00", align 1
@.str189 = private unnamed_addr constant [45 x i8] c"\0A Verification being performed for class %c\0A\00", align 1
@.str1190 = private unnamed_addr constant [41 x i8] c" Accuracy setting for epsilon = %20.13E\0A\00", align 1
@.str2191 = private unnamed_addr constant [50 x i8] c" DT does not match the reference value of %15.8E\0A\00", align 1
@.str3192 = private unnamed_addr constant [16 x i8] c" Unknown class\0A\00", align 1
@.str4193 = private unnamed_addr constant [38 x i8] c" Comparison of RMS-norms of residual\0A\00", align 1
@.str5194 = private unnamed_addr constant [24 x i8] c" RMS-norms of residual\0A\00", align 1
@.str6195 = private unnamed_addr constant [24 x i8] c"          %2d  %20.13E\0A\00", align 1
@.str7196 = private unnamed_addr constant [38 x i8] c"          %2d  %20.13E%20.13E%20.13E\0A\00", align 1
@.str8197 = private unnamed_addr constant [38 x i8] c" FAILURE: %2d  %20.13E%20.13E%20.13E\0A\00", align 1
@.str9198 = private unnamed_addr constant [44 x i8] c" Comparison of RMS-norms of solution error\0A\00", align 1
@.str10199 = private unnamed_addr constant [30 x i8] c" RMS-norms of solution error\0A\00", align 1
@.str11200 = private unnamed_addr constant [33 x i8] c" Comparison of surface integral\0A\00", align 1
@.str12201 = private unnamed_addr constant [19 x i8] c" Surface integral\0A\00", align 1
@.str13202 = private unnamed_addr constant [23 x i8] c"              %20.13E\0A\00", align 1
@.str14203 = private unnamed_addr constant [37 x i8] c"              %20.13E%20.13E%20.13E\0A\00", align 1
@.str15204 = private unnamed_addr constant [37 x i8] c" FAILURE:     %20.13E%20.13E%20.13E\0A\00", align 1
@.str16205 = private unnamed_addr constant [31 x i8] c" No reference values provided\0A\00", align 1
@.str17206 = private unnamed_addr constant [27 x i8] c"No verification performed\0A\00", align 1
@.str18207 = private unnamed_addr constant [26 x i8] c" Verification Successful\0A\00", align 1
@.str19208 = private unnamed_addr constant [22 x i8] c" Verification failed\0A\00", align 1
@wtime_.sec = internal global i32 -1, align 4

; Function Attrs: nounwind uwtable
define void @blts(i32 %ldmx, i32 %ldmy, i32 %ldmz, i32 %nx, i32 %ny, i32 %nz, i32 %k, double %omega, [5 x double]* %v, [5 x [5 x double]]* %ldz, [5 x [5 x double]]* %ldy, [5 x [5 x double]]* %ldx, [5 x [5 x double]]* %d, i32 %ist, i32 %iend, i32 %jst, i32 %jend, i32 %nx0, i32 %ny0) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca double, align 8
  %9 = alloca [5 x double]*, align 8
  %10 = alloca [5 x [5 x double]]*, align 8
  %11 = alloca [5 x [5 x double]]*, align 8
  %12 = alloca [5 x [5 x double]]*, align 8
  %13 = alloca [5 x [5 x double]]*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %m = alloca i32, align 4
  %tmp = alloca double, align 8
  %tmp1 = alloca double, align 8
  %tmat = alloca [5 x [5 x double]], align 16
  %tv = alloca [5 x double], align 16
  %vk = alloca [5 x double]*, align 8
  %vkm1 = alloca [5 x double]*, align 8
  store i32 %ldmx, i32* %1, align 4
  store i32 %ldmy, i32* %2, align 4
  store i32 %ldmz, i32* %3, align 4
  store i32 %nx, i32* %4, align 4
  store i32 %ny, i32* %5, align 4
  store i32 %nz, i32* %6, align 4
  store i32 %k, i32* %7, align 4
  store double %omega, double* %8, align 8
  store [5 x double]* %v, [5 x double]** %9, align 8
  store [5 x [5 x double]]* %ldz, [5 x [5 x double]]** %10, align 8
  store [5 x [5 x double]]* %ldy, [5 x [5 x double]]** %11, align 8
  store [5 x [5 x double]]* %ldx, [5 x [5 x double]]** %12, align 8
  store [5 x [5 x double]]* %d, [5 x [5 x double]]** %13, align 8
  store i32 %ist, i32* %14, align 4
  store i32 %iend, i32* %15, align 4
  store i32 %jst, i32* %16, align 4
  store i32 %jend, i32* %17, align 4
  store i32 %nx0, i32* %18, align 4
  store i32 %ny0, i32* %19, align 4
  %20 = load i32* %2, align 4
  %21 = sdiv i32 %20, 2
  %22 = mul nsw i32 %21, 2
  %23 = add nsw i32 %22, 1
  %24 = zext i32 %23 to i64
  %25 = load i32* %1, align 4
  %26 = sdiv i32 %25, 2
  %27 = mul nsw i32 %26, 2
  %28 = add nsw i32 %27, 1
  %29 = zext i32 %28 to i64
  %30 = load i32* %2, align 4
  %31 = zext i32 %30 to i64
  %32 = load i32* %1, align 4
  %33 = sdiv i32 %32, 2
  %34 = mul nsw i32 %33, 2
  %35 = add nsw i32 %34, 1
  %36 = zext i32 %35 to i64
  %37 = load i32* %2, align 4
  %38 = zext i32 %37 to i64
  %39 = load i32* %1, align 4
  %40 = sdiv i32 %39, 2
  %41 = mul nsw i32 %40, 2
  %42 = add nsw i32 %41, 1
  %43 = zext i32 %42 to i64
  %44 = load i32* %2, align 4
  %45 = zext i32 %44 to i64
  %46 = load i32* %1, align 4
  %47 = sdiv i32 %46, 2
  %48 = mul nsw i32 %47, 2
  %49 = add nsw i32 %48, 1
  %50 = zext i32 %49 to i64
  %51 = load i32* %2, align 4
  %52 = zext i32 %51 to i64
  %53 = load i32* %1, align 4
  %54 = sdiv i32 %53, 2
  %55 = mul nsw i32 %54, 2
  %56 = add nsw i32 %55, 1
  %57 = zext i32 %56 to i64
  %58 = load i32* %1, align 4
  %59 = sdiv i32 %58, 2
  %60 = mul nsw i32 %59, 2
  %61 = add nsw i32 %60, 1
  %62 = zext i32 %61 to i64
  %63 = load i32* %7, align 4
  %64 = sext i32 %63 to i64
  %65 = load [5 x double]** %9, align 8
  %66 = mul nuw i64 %24, %29
  %67 = mul nsw i64 %64, %66
  %68 = getelementptr inbounds [5 x double]* %65, i64 %67
  store [5 x double]* %68, [5 x double]** %vk, align 8
  %69 = load i32* %1, align 4
  %70 = sdiv i32 %69, 2
  %71 = mul nsw i32 %70, 2
  %72 = add nsw i32 %71, 1
  %73 = zext i32 %72 to i64
  %74 = load i32* %7, align 4
  %75 = sub nsw i32 %74, 1
  %76 = sext i32 %75 to i64
  %77 = load [5 x double]** %9, align 8
  %78 = mul nuw i64 %24, %29
  %79 = mul nsw i64 %76, %78
  %80 = getelementptr inbounds [5 x double]* %77, i64 %79
  store [5 x double]* %80, [5 x double]** %vkm1, align 8
  %81 = load i32* %16, align 4
  store i32 %81, i32* %j, align 4
  br label %82

; <label>:82                                      ; preds = %255, %0
  %83 = load i32* %j, align 4
  %84 = load i32* %17, align 4
  %85 = icmp slt i32 %83, %84
  br i1 %85, label %86, label %258

; <label>:86                                      ; preds = %82
  %87 = load i32* %14, align 4
  store i32 %87, i32* %i, align 4
  br label %88

; <label>:88                                      ; preds = %251, %86
  %89 = load i32* %i, align 4
  %90 = load i32* %15, align 4
  %91 = icmp slt i32 %89, %90
  br i1 %91, label %92, label %254

; <label>:92                                      ; preds = %88
  store i32 0, i32* %m, align 4
  br label %93

; <label>:93                                      ; preds = %247, %92
  %94 = load i32* %m, align 4
  %95 = icmp slt i32 %94, 5
  br i1 %95, label %96, label %250

; <label>:96                                      ; preds = %93
  %97 = load i32* %m, align 4
  %98 = sext i32 %97 to i64
  %99 = load i32* %i, align 4
  %100 = sext i32 %99 to i64
  %101 = load i32* %j, align 4
  %102 = sext i32 %101 to i64
  %103 = load [5 x double]** %vk, align 8
  %104 = mul nsw i64 %102, %62
  %105 = getelementptr inbounds [5 x double]* %103, i64 %104
  %106 = getelementptr inbounds [5 x double]* %105, i64 %100
  %107 = getelementptr inbounds [5 x double]* %106, i32 0, i64 %98
  %108 = load double* %107, align 8
  %109 = load double* %8, align 8
  %110 = load i32* %m, align 4
  %111 = sext i32 %110 to i64
  %112 = load i32* %i, align 4
  %113 = sext i32 %112 to i64
  %114 = load i32* %j, align 4
  %115 = sext i32 %114 to i64
  %116 = load [5 x [5 x double]]** %10, align 8
  %117 = mul nsw i64 %115, %36
  %118 = getelementptr inbounds [5 x [5 x double]]* %116, i64 %117
  %119 = getelementptr inbounds [5 x [5 x double]]* %118, i64 %113
  %120 = getelementptr inbounds [5 x [5 x double]]* %119, i32 0, i64 0
  %121 = getelementptr inbounds [5 x double]* %120, i32 0, i64 %111
  %122 = load double* %121, align 8
  %123 = load i32* %i, align 4
  %124 = sext i32 %123 to i64
  %125 = load i32* %j, align 4
  %126 = sext i32 %125 to i64
  %127 = load [5 x double]** %vkm1, align 8
  %128 = mul nsw i64 %126, %73
  %129 = getelementptr inbounds [5 x double]* %127, i64 %128
  %130 = getelementptr inbounds [5 x double]* %129, i64 %124
  %131 = getelementptr inbounds [5 x double]* %130, i32 0, i64 0
  %132 = load double* %131, align 8
  %133 = fmul double %122, %132
  %134 = load i32* %m, align 4
  %135 = sext i32 %134 to i64
  %136 = load i32* %i, align 4
  %137 = sext i32 %136 to i64
  %138 = load i32* %j, align 4
  %139 = sext i32 %138 to i64
  %140 = load [5 x [5 x double]]** %10, align 8
  %141 = mul nsw i64 %139, %36
  %142 = getelementptr inbounds [5 x [5 x double]]* %140, i64 %141
  %143 = getelementptr inbounds [5 x [5 x double]]* %142, i64 %137
  %144 = getelementptr inbounds [5 x [5 x double]]* %143, i32 0, i64 1
  %145 = getelementptr inbounds [5 x double]* %144, i32 0, i64 %135
  %146 = load double* %145, align 8
  %147 = load i32* %i, align 4
  %148 = sext i32 %147 to i64
  %149 = load i32* %j, align 4
  %150 = sext i32 %149 to i64
  %151 = load [5 x double]** %vkm1, align 8
  %152 = mul nsw i64 %150, %73
  %153 = getelementptr inbounds [5 x double]* %151, i64 %152
  %154 = getelementptr inbounds [5 x double]* %153, i64 %148
  %155 = getelementptr inbounds [5 x double]* %154, i32 0, i64 1
  %156 = load double* %155, align 8
  %157 = fmul double %146, %156
  %158 = fadd double %133, %157
  %159 = load i32* %m, align 4
  %160 = sext i32 %159 to i64
  %161 = load i32* %i, align 4
  %162 = sext i32 %161 to i64
  %163 = load i32* %j, align 4
  %164 = sext i32 %163 to i64
  %165 = load [5 x [5 x double]]** %10, align 8
  %166 = mul nsw i64 %164, %36
  %167 = getelementptr inbounds [5 x [5 x double]]* %165, i64 %166
  %168 = getelementptr inbounds [5 x [5 x double]]* %167, i64 %162
  %169 = getelementptr inbounds [5 x [5 x double]]* %168, i32 0, i64 2
  %170 = getelementptr inbounds [5 x double]* %169, i32 0, i64 %160
  %171 = load double* %170, align 8
  %172 = load i32* %i, align 4
  %173 = sext i32 %172 to i64
  %174 = load i32* %j, align 4
  %175 = sext i32 %174 to i64
  %176 = load [5 x double]** %vkm1, align 8
  %177 = mul nsw i64 %175, %73
  %178 = getelementptr inbounds [5 x double]* %176, i64 %177
  %179 = getelementptr inbounds [5 x double]* %178, i64 %173
  %180 = getelementptr inbounds [5 x double]* %179, i32 0, i64 2
  %181 = load double* %180, align 8
  %182 = fmul double %171, %181
  %183 = fadd double %158, %182
  %184 = load i32* %m, align 4
  %185 = sext i32 %184 to i64
  %186 = load i32* %i, align 4
  %187 = sext i32 %186 to i64
  %188 = load i32* %j, align 4
  %189 = sext i32 %188 to i64
  %190 = load [5 x [5 x double]]** %10, align 8
  %191 = mul nsw i64 %189, %36
  %192 = getelementptr inbounds [5 x [5 x double]]* %190, i64 %191
  %193 = getelementptr inbounds [5 x [5 x double]]* %192, i64 %187
  %194 = getelementptr inbounds [5 x [5 x double]]* %193, i32 0, i64 3
  %195 = getelementptr inbounds [5 x double]* %194, i32 0, i64 %185
  %196 = load double* %195, align 8
  %197 = load i32* %i, align 4
  %198 = sext i32 %197 to i64
  %199 = load i32* %j, align 4
  %200 = sext i32 %199 to i64
  %201 = load [5 x double]** %vkm1, align 8
  %202 = mul nsw i64 %200, %73
  %203 = getelementptr inbounds [5 x double]* %201, i64 %202
  %204 = getelementptr inbounds [5 x double]* %203, i64 %198
  %205 = getelementptr inbounds [5 x double]* %204, i32 0, i64 3
  %206 = load double* %205, align 8
  %207 = fmul double %196, %206
  %208 = fadd double %183, %207
  %209 = load i32* %m, align 4
  %210 = sext i32 %209 to i64
  %211 = load i32* %i, align 4
  %212 = sext i32 %211 to i64
  %213 = load i32* %j, align 4
  %214 = sext i32 %213 to i64
  %215 = load [5 x [5 x double]]** %10, align 8
  %216 = mul nsw i64 %214, %36
  %217 = getelementptr inbounds [5 x [5 x double]]* %215, i64 %216
  %218 = getelementptr inbounds [5 x [5 x double]]* %217, i64 %212
  %219 = getelementptr inbounds [5 x [5 x double]]* %218, i32 0, i64 4
  %220 = getelementptr inbounds [5 x double]* %219, i32 0, i64 %210
  %221 = load double* %220, align 8
  %222 = load i32* %i, align 4
  %223 = sext i32 %222 to i64
  %224 = load i32* %j, align 4
  %225 = sext i32 %224 to i64
  %226 = load [5 x double]** %vkm1, align 8
  %227 = mul nsw i64 %225, %73
  %228 = getelementptr inbounds [5 x double]* %226, i64 %227
  %229 = getelementptr inbounds [5 x double]* %228, i64 %223
  %230 = getelementptr inbounds [5 x double]* %229, i32 0, i64 4
  %231 = load double* %230, align 8
  %232 = fmul double %221, %231
  %233 = fadd double %208, %232
  %234 = fmul double %109, %233
  %235 = fsub double %108, %234
  %236 = load i32* %m, align 4
  %237 = sext i32 %236 to i64
  %238 = load i32* %i, align 4
  %239 = sext i32 %238 to i64
  %240 = load i32* %j, align 4
  %241 = sext i32 %240 to i64
  %242 = load [5 x double]** %vk, align 8
  %243 = mul nsw i64 %241, %62
  %244 = getelementptr inbounds [5 x double]* %242, i64 %243
  %245 = getelementptr inbounds [5 x double]* %244, i64 %239
  %246 = getelementptr inbounds [5 x double]* %245, i32 0, i64 %237
  store double %235, double* %246, align 8
  br label %247

; <label>:247                                     ; preds = %96
  %248 = load i32* %m, align 4
  %249 = add nsw i32 %248, 1
  store i32 %249, i32* %m, align 4
  br label %93

; <label>:250                                     ; preds = %93
  br label %251

; <label>:251                                     ; preds = %250
  %252 = load i32* %i, align 4
  %253 = add nsw i32 %252, 1
  store i32 %253, i32* %i, align 4
  br label %88

; <label>:254                                     ; preds = %88
  br label %255

; <label>:255                                     ; preds = %254
  %256 = load i32* %j, align 4
  %257 = add nsw i32 %256, 1
  store i32 %257, i32* %j, align 4
  br label %82

; <label>:258                                     ; preds = %82
  %259 = load i32* %16, align 4
  store i32 %259, i32* %j, align 4
  br label %260

; <label>:260                                     ; preds = %1366, %258
  %261 = load i32* %j, align 4
  %262 = load i32* %17, align 4
  %263 = icmp slt i32 %261, %262
  br i1 %263, label %264, label %1369

; <label>:264                                     ; preds = %260
  %265 = load i32* %14, align 4
  store i32 %265, i32* %i, align 4
  br label %266

; <label>:266                                     ; preds = %1362, %264
  %267 = load i32* %i, align 4
  %268 = load i32* %15, align 4
  %269 = icmp slt i32 %267, %268
  br i1 %269, label %270, label %1365

; <label>:270                                     ; preds = %266
  store i32 0, i32* %m, align 4
  br label %271

; <label>:271                                     ; preds = %552, %270
  %272 = load i32* %m, align 4
  %273 = icmp slt i32 %272, 5
  br i1 %273, label %274, label %555

; <label>:274                                     ; preds = %271
  %275 = load i32* %m, align 4
  %276 = sext i32 %275 to i64
  %277 = load i32* %i, align 4
  %278 = sext i32 %277 to i64
  %279 = load i32* %j, align 4
  %280 = sext i32 %279 to i64
  %281 = load [5 x double]** %vk, align 8
  %282 = mul nsw i64 %280, %62
  %283 = getelementptr inbounds [5 x double]* %281, i64 %282
  %284 = getelementptr inbounds [5 x double]* %283, i64 %278
  %285 = getelementptr inbounds [5 x double]* %284, i32 0, i64 %276
  %286 = load double* %285, align 8
  %287 = load double* %8, align 8
  %288 = load i32* %m, align 4
  %289 = sext i32 %288 to i64
  %290 = load i32* %i, align 4
  %291 = sext i32 %290 to i64
  %292 = load i32* %j, align 4
  %293 = sext i32 %292 to i64
  %294 = load [5 x [5 x double]]** %11, align 8
  %295 = mul nsw i64 %293, %43
  %296 = getelementptr inbounds [5 x [5 x double]]* %294, i64 %295
  %297 = getelementptr inbounds [5 x [5 x double]]* %296, i64 %291
  %298 = getelementptr inbounds [5 x [5 x double]]* %297, i32 0, i64 0
  %299 = getelementptr inbounds [5 x double]* %298, i32 0, i64 %289
  %300 = load double* %299, align 8
  %301 = load i32* %i, align 4
  %302 = sext i32 %301 to i64
  %303 = load i32* %j, align 4
  %304 = sub nsw i32 %303, 1
  %305 = sext i32 %304 to i64
  %306 = load [5 x double]** %vk, align 8
  %307 = mul nsw i64 %305, %62
  %308 = getelementptr inbounds [5 x double]* %306, i64 %307
  %309 = getelementptr inbounds [5 x double]* %308, i64 %302
  %310 = getelementptr inbounds [5 x double]* %309, i32 0, i64 0
  %311 = load double* %310, align 8
  %312 = fmul double %300, %311
  %313 = load i32* %m, align 4
  %314 = sext i32 %313 to i64
  %315 = load i32* %i, align 4
  %316 = sext i32 %315 to i64
  %317 = load i32* %j, align 4
  %318 = sext i32 %317 to i64
  %319 = load [5 x [5 x double]]** %12, align 8
  %320 = mul nsw i64 %318, %50
  %321 = getelementptr inbounds [5 x [5 x double]]* %319, i64 %320
  %322 = getelementptr inbounds [5 x [5 x double]]* %321, i64 %316
  %323 = getelementptr inbounds [5 x [5 x double]]* %322, i32 0, i64 0
  %324 = getelementptr inbounds [5 x double]* %323, i32 0, i64 %314
  %325 = load double* %324, align 8
  %326 = load i32* %i, align 4
  %327 = sub nsw i32 %326, 1
  %328 = sext i32 %327 to i64
  %329 = load i32* %j, align 4
  %330 = sext i32 %329 to i64
  %331 = load [5 x double]** %vk, align 8
  %332 = mul nsw i64 %330, %62
  %333 = getelementptr inbounds [5 x double]* %331, i64 %332
  %334 = getelementptr inbounds [5 x double]* %333, i64 %328
  %335 = getelementptr inbounds [5 x double]* %334, i32 0, i64 0
  %336 = load double* %335, align 8
  %337 = fmul double %325, %336
  %338 = fadd double %312, %337
  %339 = load i32* %m, align 4
  %340 = sext i32 %339 to i64
  %341 = load i32* %i, align 4
  %342 = sext i32 %341 to i64
  %343 = load i32* %j, align 4
  %344 = sext i32 %343 to i64
  %345 = load [5 x [5 x double]]** %11, align 8
  %346 = mul nsw i64 %344, %43
  %347 = getelementptr inbounds [5 x [5 x double]]* %345, i64 %346
  %348 = getelementptr inbounds [5 x [5 x double]]* %347, i64 %342
  %349 = getelementptr inbounds [5 x [5 x double]]* %348, i32 0, i64 1
  %350 = getelementptr inbounds [5 x double]* %349, i32 0, i64 %340
  %351 = load double* %350, align 8
  %352 = load i32* %i, align 4
  %353 = sext i32 %352 to i64
  %354 = load i32* %j, align 4
  %355 = sub nsw i32 %354, 1
  %356 = sext i32 %355 to i64
  %357 = load [5 x double]** %vk, align 8
  %358 = mul nsw i64 %356, %62
  %359 = getelementptr inbounds [5 x double]* %357, i64 %358
  %360 = getelementptr inbounds [5 x double]* %359, i64 %353
  %361 = getelementptr inbounds [5 x double]* %360, i32 0, i64 1
  %362 = load double* %361, align 8
  %363 = fmul double %351, %362
  %364 = fadd double %338, %363
  %365 = load i32* %m, align 4
  %366 = sext i32 %365 to i64
  %367 = load i32* %i, align 4
  %368 = sext i32 %367 to i64
  %369 = load i32* %j, align 4
  %370 = sext i32 %369 to i64
  %371 = load [5 x [5 x double]]** %12, align 8
  %372 = mul nsw i64 %370, %50
  %373 = getelementptr inbounds [5 x [5 x double]]* %371, i64 %372
  %374 = getelementptr inbounds [5 x [5 x double]]* %373, i64 %368
  %375 = getelementptr inbounds [5 x [5 x double]]* %374, i32 0, i64 1
  %376 = getelementptr inbounds [5 x double]* %375, i32 0, i64 %366
  %377 = load double* %376, align 8
  %378 = load i32* %i, align 4
  %379 = sub nsw i32 %378, 1
  %380 = sext i32 %379 to i64
  %381 = load i32* %j, align 4
  %382 = sext i32 %381 to i64
  %383 = load [5 x double]** %vk, align 8
  %384 = mul nsw i64 %382, %62
  %385 = getelementptr inbounds [5 x double]* %383, i64 %384
  %386 = getelementptr inbounds [5 x double]* %385, i64 %380
  %387 = getelementptr inbounds [5 x double]* %386, i32 0, i64 1
  %388 = load double* %387, align 8
  %389 = fmul double %377, %388
  %390 = fadd double %364, %389
  %391 = load i32* %m, align 4
  %392 = sext i32 %391 to i64
  %393 = load i32* %i, align 4
  %394 = sext i32 %393 to i64
  %395 = load i32* %j, align 4
  %396 = sext i32 %395 to i64
  %397 = load [5 x [5 x double]]** %11, align 8
  %398 = mul nsw i64 %396, %43
  %399 = getelementptr inbounds [5 x [5 x double]]* %397, i64 %398
  %400 = getelementptr inbounds [5 x [5 x double]]* %399, i64 %394
  %401 = getelementptr inbounds [5 x [5 x double]]* %400, i32 0, i64 2
  %402 = getelementptr inbounds [5 x double]* %401, i32 0, i64 %392
  %403 = load double* %402, align 8
  %404 = load i32* %i, align 4
  %405 = sext i32 %404 to i64
  %406 = load i32* %j, align 4
  %407 = sub nsw i32 %406, 1
  %408 = sext i32 %407 to i64
  %409 = load [5 x double]** %vk, align 8
  %410 = mul nsw i64 %408, %62
  %411 = getelementptr inbounds [5 x double]* %409, i64 %410
  %412 = getelementptr inbounds [5 x double]* %411, i64 %405
  %413 = getelementptr inbounds [5 x double]* %412, i32 0, i64 2
  %414 = load double* %413, align 8
  %415 = fmul double %403, %414
  %416 = fadd double %390, %415
  %417 = load i32* %m, align 4
  %418 = sext i32 %417 to i64
  %419 = load i32* %i, align 4
  %420 = sext i32 %419 to i64
  %421 = load i32* %j, align 4
  %422 = sext i32 %421 to i64
  %423 = load [5 x [5 x double]]** %12, align 8
  %424 = mul nsw i64 %422, %50
  %425 = getelementptr inbounds [5 x [5 x double]]* %423, i64 %424
  %426 = getelementptr inbounds [5 x [5 x double]]* %425, i64 %420
  %427 = getelementptr inbounds [5 x [5 x double]]* %426, i32 0, i64 2
  %428 = getelementptr inbounds [5 x double]* %427, i32 0, i64 %418
  %429 = load double* %428, align 8
  %430 = load i32* %i, align 4
  %431 = sub nsw i32 %430, 1
  %432 = sext i32 %431 to i64
  %433 = load i32* %j, align 4
  %434 = sext i32 %433 to i64
  %435 = load [5 x double]** %vk, align 8
  %436 = mul nsw i64 %434, %62
  %437 = getelementptr inbounds [5 x double]* %435, i64 %436
  %438 = getelementptr inbounds [5 x double]* %437, i64 %432
  %439 = getelementptr inbounds [5 x double]* %438, i32 0, i64 2
  %440 = load double* %439, align 8
  %441 = fmul double %429, %440
  %442 = fadd double %416, %441
  %443 = load i32* %m, align 4
  %444 = sext i32 %443 to i64
  %445 = load i32* %i, align 4
  %446 = sext i32 %445 to i64
  %447 = load i32* %j, align 4
  %448 = sext i32 %447 to i64
  %449 = load [5 x [5 x double]]** %11, align 8
  %450 = mul nsw i64 %448, %43
  %451 = getelementptr inbounds [5 x [5 x double]]* %449, i64 %450
  %452 = getelementptr inbounds [5 x [5 x double]]* %451, i64 %446
  %453 = getelementptr inbounds [5 x [5 x double]]* %452, i32 0, i64 3
  %454 = getelementptr inbounds [5 x double]* %453, i32 0, i64 %444
  %455 = load double* %454, align 8
  %456 = load i32* %i, align 4
  %457 = sext i32 %456 to i64
  %458 = load i32* %j, align 4
  %459 = sub nsw i32 %458, 1
  %460 = sext i32 %459 to i64
  %461 = load [5 x double]** %vk, align 8
  %462 = mul nsw i64 %460, %62
  %463 = getelementptr inbounds [5 x double]* %461, i64 %462
  %464 = getelementptr inbounds [5 x double]* %463, i64 %457
  %465 = getelementptr inbounds [5 x double]* %464, i32 0, i64 3
  %466 = load double* %465, align 8
  %467 = fmul double %455, %466
  %468 = fadd double %442, %467
  %469 = load i32* %m, align 4
  %470 = sext i32 %469 to i64
  %471 = load i32* %i, align 4
  %472 = sext i32 %471 to i64
  %473 = load i32* %j, align 4
  %474 = sext i32 %473 to i64
  %475 = load [5 x [5 x double]]** %12, align 8
  %476 = mul nsw i64 %474, %50
  %477 = getelementptr inbounds [5 x [5 x double]]* %475, i64 %476
  %478 = getelementptr inbounds [5 x [5 x double]]* %477, i64 %472
  %479 = getelementptr inbounds [5 x [5 x double]]* %478, i32 0, i64 3
  %480 = getelementptr inbounds [5 x double]* %479, i32 0, i64 %470
  %481 = load double* %480, align 8
  %482 = load i32* %i, align 4
  %483 = sub nsw i32 %482, 1
  %484 = sext i32 %483 to i64
  %485 = load i32* %j, align 4
  %486 = sext i32 %485 to i64
  %487 = load [5 x double]** %vk, align 8
  %488 = mul nsw i64 %486, %62
  %489 = getelementptr inbounds [5 x double]* %487, i64 %488
  %490 = getelementptr inbounds [5 x double]* %489, i64 %484
  %491 = getelementptr inbounds [5 x double]* %490, i32 0, i64 3
  %492 = load double* %491, align 8
  %493 = fmul double %481, %492
  %494 = fadd double %468, %493
  %495 = load i32* %m, align 4
  %496 = sext i32 %495 to i64
  %497 = load i32* %i, align 4
  %498 = sext i32 %497 to i64
  %499 = load i32* %j, align 4
  %500 = sext i32 %499 to i64
  %501 = load [5 x [5 x double]]** %11, align 8
  %502 = mul nsw i64 %500, %43
  %503 = getelementptr inbounds [5 x [5 x double]]* %501, i64 %502
  %504 = getelementptr inbounds [5 x [5 x double]]* %503, i64 %498
  %505 = getelementptr inbounds [5 x [5 x double]]* %504, i32 0, i64 4
  %506 = getelementptr inbounds [5 x double]* %505, i32 0, i64 %496
  %507 = load double* %506, align 8
  %508 = load i32* %i, align 4
  %509 = sext i32 %508 to i64
  %510 = load i32* %j, align 4
  %511 = sub nsw i32 %510, 1
  %512 = sext i32 %511 to i64
  %513 = load [5 x double]** %vk, align 8
  %514 = mul nsw i64 %512, %62
  %515 = getelementptr inbounds [5 x double]* %513, i64 %514
  %516 = getelementptr inbounds [5 x double]* %515, i64 %509
  %517 = getelementptr inbounds [5 x double]* %516, i32 0, i64 4
  %518 = load double* %517, align 8
  %519 = fmul double %507, %518
  %520 = fadd double %494, %519
  %521 = load i32* %m, align 4
  %522 = sext i32 %521 to i64
  %523 = load i32* %i, align 4
  %524 = sext i32 %523 to i64
  %525 = load i32* %j, align 4
  %526 = sext i32 %525 to i64
  %527 = load [5 x [5 x double]]** %12, align 8
  %528 = mul nsw i64 %526, %50
  %529 = getelementptr inbounds [5 x [5 x double]]* %527, i64 %528
  %530 = getelementptr inbounds [5 x [5 x double]]* %529, i64 %524
  %531 = getelementptr inbounds [5 x [5 x double]]* %530, i32 0, i64 4
  %532 = getelementptr inbounds [5 x double]* %531, i32 0, i64 %522
  %533 = load double* %532, align 8
  %534 = load i32* %i, align 4
  %535 = sub nsw i32 %534, 1
  %536 = sext i32 %535 to i64
  %537 = load i32* %j, align 4
  %538 = sext i32 %537 to i64
  %539 = load [5 x double]** %vk, align 8
  %540 = mul nsw i64 %538, %62
  %541 = getelementptr inbounds [5 x double]* %539, i64 %540
  %542 = getelementptr inbounds [5 x double]* %541, i64 %536
  %543 = getelementptr inbounds [5 x double]* %542, i32 0, i64 4
  %544 = load double* %543, align 8
  %545 = fmul double %533, %544
  %546 = fadd double %520, %545
  %547 = fmul double %287, %546
  %548 = fsub double %286, %547
  %549 = load i32* %m, align 4
  %550 = sext i32 %549 to i64
  %551 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 %550
  store double %548, double* %551, align 8
  br label %552

; <label>:552                                     ; preds = %274
  %553 = load i32* %m, align 4
  %554 = add nsw i32 %553, 1
  store i32 %554, i32* %m, align 4
  br label %271

; <label>:555                                     ; preds = %271
  store i32 0, i32* %m, align 4
  br label %556

; <label>:556                                     ; preds = %645, %555
  %557 = load i32* %m, align 4
  %558 = icmp slt i32 %557, 5
  br i1 %558, label %559, label %648

; <label>:559                                     ; preds = %556
  %560 = load i32* %m, align 4
  %561 = sext i32 %560 to i64
  %562 = load i32* %i, align 4
  %563 = sext i32 %562 to i64
  %564 = load i32* %j, align 4
  %565 = sext i32 %564 to i64
  %566 = load [5 x [5 x double]]** %13, align 8
  %567 = mul nsw i64 %565, %57
  %568 = getelementptr inbounds [5 x [5 x double]]* %566, i64 %567
  %569 = getelementptr inbounds [5 x [5 x double]]* %568, i64 %563
  %570 = getelementptr inbounds [5 x [5 x double]]* %569, i32 0, i64 0
  %571 = getelementptr inbounds [5 x double]* %570, i32 0, i64 %561
  %572 = load double* %571, align 8
  %573 = load i32* %m, align 4
  %574 = sext i32 %573 to i64
  %575 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 %574
  %576 = getelementptr inbounds [5 x double]* %575, i32 0, i64 0
  store double %572, double* %576, align 8
  %577 = load i32* %m, align 4
  %578 = sext i32 %577 to i64
  %579 = load i32* %i, align 4
  %580 = sext i32 %579 to i64
  %581 = load i32* %j, align 4
  %582 = sext i32 %581 to i64
  %583 = load [5 x [5 x double]]** %13, align 8
  %584 = mul nsw i64 %582, %57
  %585 = getelementptr inbounds [5 x [5 x double]]* %583, i64 %584
  %586 = getelementptr inbounds [5 x [5 x double]]* %585, i64 %580
  %587 = getelementptr inbounds [5 x [5 x double]]* %586, i32 0, i64 1
  %588 = getelementptr inbounds [5 x double]* %587, i32 0, i64 %578
  %589 = load double* %588, align 8
  %590 = load i32* %m, align 4
  %591 = sext i32 %590 to i64
  %592 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 %591
  %593 = getelementptr inbounds [5 x double]* %592, i32 0, i64 1
  store double %589, double* %593, align 8
  %594 = load i32* %m, align 4
  %595 = sext i32 %594 to i64
  %596 = load i32* %i, align 4
  %597 = sext i32 %596 to i64
  %598 = load i32* %j, align 4
  %599 = sext i32 %598 to i64
  %600 = load [5 x [5 x double]]** %13, align 8
  %601 = mul nsw i64 %599, %57
  %602 = getelementptr inbounds [5 x [5 x double]]* %600, i64 %601
  %603 = getelementptr inbounds [5 x [5 x double]]* %602, i64 %597
  %604 = getelementptr inbounds [5 x [5 x double]]* %603, i32 0, i64 2
  %605 = getelementptr inbounds [5 x double]* %604, i32 0, i64 %595
  %606 = load double* %605, align 8
  %607 = load i32* %m, align 4
  %608 = sext i32 %607 to i64
  %609 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 %608
  %610 = getelementptr inbounds [5 x double]* %609, i32 0, i64 2
  store double %606, double* %610, align 8
  %611 = load i32* %m, align 4
  %612 = sext i32 %611 to i64
  %613 = load i32* %i, align 4
  %614 = sext i32 %613 to i64
  %615 = load i32* %j, align 4
  %616 = sext i32 %615 to i64
  %617 = load [5 x [5 x double]]** %13, align 8
  %618 = mul nsw i64 %616, %57
  %619 = getelementptr inbounds [5 x [5 x double]]* %617, i64 %618
  %620 = getelementptr inbounds [5 x [5 x double]]* %619, i64 %614
  %621 = getelementptr inbounds [5 x [5 x double]]* %620, i32 0, i64 3
  %622 = getelementptr inbounds [5 x double]* %621, i32 0, i64 %612
  %623 = load double* %622, align 8
  %624 = load i32* %m, align 4
  %625 = sext i32 %624 to i64
  %626 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 %625
  %627 = getelementptr inbounds [5 x double]* %626, i32 0, i64 3
  store double %623, double* %627, align 8
  %628 = load i32* %m, align 4
  %629 = sext i32 %628 to i64
  %630 = load i32* %i, align 4
  %631 = sext i32 %630 to i64
  %632 = load i32* %j, align 4
  %633 = sext i32 %632 to i64
  %634 = load [5 x [5 x double]]** %13, align 8
  %635 = mul nsw i64 %633, %57
  %636 = getelementptr inbounds [5 x [5 x double]]* %634, i64 %635
  %637 = getelementptr inbounds [5 x [5 x double]]* %636, i64 %631
  %638 = getelementptr inbounds [5 x [5 x double]]* %637, i32 0, i64 4
  %639 = getelementptr inbounds [5 x double]* %638, i32 0, i64 %629
  %640 = load double* %639, align 8
  %641 = load i32* %m, align 4
  %642 = sext i32 %641 to i64
  %643 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 %642
  %644 = getelementptr inbounds [5 x double]* %643, i32 0, i64 4
  store double %640, double* %644, align 8
  br label %645

; <label>:645                                     ; preds = %559
  %646 = load i32* %m, align 4
  %647 = add nsw i32 %646, 1
  store i32 %647, i32* %m, align 4
  br label %556

; <label>:648                                     ; preds = %556
  %649 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %650 = getelementptr inbounds [5 x double]* %649, i32 0, i64 0
  %651 = load double* %650, align 8
  %652 = fdiv double 1.000000e+00, %651
  store double %652, double* %tmp1, align 8
  %653 = load double* %tmp1, align 8
  %654 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %655 = getelementptr inbounds [5 x double]* %654, i32 0, i64 0
  %656 = load double* %655, align 8
  %657 = fmul double %653, %656
  store double %657, double* %tmp, align 8
  %658 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %659 = getelementptr inbounds [5 x double]* %658, i32 0, i64 1
  %660 = load double* %659, align 8
  %661 = load double* %tmp, align 8
  %662 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %663 = getelementptr inbounds [5 x double]* %662, i32 0, i64 1
  %664 = load double* %663, align 8
  %665 = fmul double %661, %664
  %666 = fsub double %660, %665
  %667 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %668 = getelementptr inbounds [5 x double]* %667, i32 0, i64 1
  store double %666, double* %668, align 8
  %669 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %670 = getelementptr inbounds [5 x double]* %669, i32 0, i64 2
  %671 = load double* %670, align 8
  %672 = load double* %tmp, align 8
  %673 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %674 = getelementptr inbounds [5 x double]* %673, i32 0, i64 2
  %675 = load double* %674, align 8
  %676 = fmul double %672, %675
  %677 = fsub double %671, %676
  %678 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %679 = getelementptr inbounds [5 x double]* %678, i32 0, i64 2
  store double %677, double* %679, align 8
  %680 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %681 = getelementptr inbounds [5 x double]* %680, i32 0, i64 3
  %682 = load double* %681, align 8
  %683 = load double* %tmp, align 8
  %684 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %685 = getelementptr inbounds [5 x double]* %684, i32 0, i64 3
  %686 = load double* %685, align 8
  %687 = fmul double %683, %686
  %688 = fsub double %682, %687
  %689 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %690 = getelementptr inbounds [5 x double]* %689, i32 0, i64 3
  store double %688, double* %690, align 8
  %691 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %692 = getelementptr inbounds [5 x double]* %691, i32 0, i64 4
  %693 = load double* %692, align 8
  %694 = load double* %tmp, align 8
  %695 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %696 = getelementptr inbounds [5 x double]* %695, i32 0, i64 4
  %697 = load double* %696, align 8
  %698 = fmul double %694, %697
  %699 = fsub double %693, %698
  %700 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %701 = getelementptr inbounds [5 x double]* %700, i32 0, i64 4
  store double %699, double* %701, align 8
  %702 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 1
  %703 = load double* %702, align 8
  %704 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 0
  %705 = load double* %704, align 8
  %706 = load double* %tmp, align 8
  %707 = fmul double %705, %706
  %708 = fsub double %703, %707
  %709 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 1
  store double %708, double* %709, align 8
  %710 = load double* %tmp1, align 8
  %711 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %712 = getelementptr inbounds [5 x double]* %711, i32 0, i64 0
  %713 = load double* %712, align 8
  %714 = fmul double %710, %713
  store double %714, double* %tmp, align 8
  %715 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %716 = getelementptr inbounds [5 x double]* %715, i32 0, i64 1
  %717 = load double* %716, align 8
  %718 = load double* %tmp, align 8
  %719 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %720 = getelementptr inbounds [5 x double]* %719, i32 0, i64 1
  %721 = load double* %720, align 8
  %722 = fmul double %718, %721
  %723 = fsub double %717, %722
  %724 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %725 = getelementptr inbounds [5 x double]* %724, i32 0, i64 1
  store double %723, double* %725, align 8
  %726 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %727 = getelementptr inbounds [5 x double]* %726, i32 0, i64 2
  %728 = load double* %727, align 8
  %729 = load double* %tmp, align 8
  %730 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %731 = getelementptr inbounds [5 x double]* %730, i32 0, i64 2
  %732 = load double* %731, align 8
  %733 = fmul double %729, %732
  %734 = fsub double %728, %733
  %735 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %736 = getelementptr inbounds [5 x double]* %735, i32 0, i64 2
  store double %734, double* %736, align 8
  %737 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %738 = getelementptr inbounds [5 x double]* %737, i32 0, i64 3
  %739 = load double* %738, align 8
  %740 = load double* %tmp, align 8
  %741 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %742 = getelementptr inbounds [5 x double]* %741, i32 0, i64 3
  %743 = load double* %742, align 8
  %744 = fmul double %740, %743
  %745 = fsub double %739, %744
  %746 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %747 = getelementptr inbounds [5 x double]* %746, i32 0, i64 3
  store double %745, double* %747, align 8
  %748 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %749 = getelementptr inbounds [5 x double]* %748, i32 0, i64 4
  %750 = load double* %749, align 8
  %751 = load double* %tmp, align 8
  %752 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %753 = getelementptr inbounds [5 x double]* %752, i32 0, i64 4
  %754 = load double* %753, align 8
  %755 = fmul double %751, %754
  %756 = fsub double %750, %755
  %757 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %758 = getelementptr inbounds [5 x double]* %757, i32 0, i64 4
  store double %756, double* %758, align 8
  %759 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 2
  %760 = load double* %759, align 8
  %761 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 0
  %762 = load double* %761, align 8
  %763 = load double* %tmp, align 8
  %764 = fmul double %762, %763
  %765 = fsub double %760, %764
  %766 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 2
  store double %765, double* %766, align 8
  %767 = load double* %tmp1, align 8
  %768 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %769 = getelementptr inbounds [5 x double]* %768, i32 0, i64 0
  %770 = load double* %769, align 8
  %771 = fmul double %767, %770
  store double %771, double* %tmp, align 8
  %772 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %773 = getelementptr inbounds [5 x double]* %772, i32 0, i64 1
  %774 = load double* %773, align 8
  %775 = load double* %tmp, align 8
  %776 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %777 = getelementptr inbounds [5 x double]* %776, i32 0, i64 1
  %778 = load double* %777, align 8
  %779 = fmul double %775, %778
  %780 = fsub double %774, %779
  %781 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %782 = getelementptr inbounds [5 x double]* %781, i32 0, i64 1
  store double %780, double* %782, align 8
  %783 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %784 = getelementptr inbounds [5 x double]* %783, i32 0, i64 2
  %785 = load double* %784, align 8
  %786 = load double* %tmp, align 8
  %787 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %788 = getelementptr inbounds [5 x double]* %787, i32 0, i64 2
  %789 = load double* %788, align 8
  %790 = fmul double %786, %789
  %791 = fsub double %785, %790
  %792 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %793 = getelementptr inbounds [5 x double]* %792, i32 0, i64 2
  store double %791, double* %793, align 8
  %794 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %795 = getelementptr inbounds [5 x double]* %794, i32 0, i64 3
  %796 = load double* %795, align 8
  %797 = load double* %tmp, align 8
  %798 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %799 = getelementptr inbounds [5 x double]* %798, i32 0, i64 3
  %800 = load double* %799, align 8
  %801 = fmul double %797, %800
  %802 = fsub double %796, %801
  %803 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %804 = getelementptr inbounds [5 x double]* %803, i32 0, i64 3
  store double %802, double* %804, align 8
  %805 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %806 = getelementptr inbounds [5 x double]* %805, i32 0, i64 4
  %807 = load double* %806, align 8
  %808 = load double* %tmp, align 8
  %809 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %810 = getelementptr inbounds [5 x double]* %809, i32 0, i64 4
  %811 = load double* %810, align 8
  %812 = fmul double %808, %811
  %813 = fsub double %807, %812
  %814 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %815 = getelementptr inbounds [5 x double]* %814, i32 0, i64 4
  store double %813, double* %815, align 8
  %816 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 3
  %817 = load double* %816, align 8
  %818 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 0
  %819 = load double* %818, align 8
  %820 = load double* %tmp, align 8
  %821 = fmul double %819, %820
  %822 = fsub double %817, %821
  %823 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 3
  store double %822, double* %823, align 8
  %824 = load double* %tmp1, align 8
  %825 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %826 = getelementptr inbounds [5 x double]* %825, i32 0, i64 0
  %827 = load double* %826, align 8
  %828 = fmul double %824, %827
  store double %828, double* %tmp, align 8
  %829 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %830 = getelementptr inbounds [5 x double]* %829, i32 0, i64 1
  %831 = load double* %830, align 8
  %832 = load double* %tmp, align 8
  %833 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %834 = getelementptr inbounds [5 x double]* %833, i32 0, i64 1
  %835 = load double* %834, align 8
  %836 = fmul double %832, %835
  %837 = fsub double %831, %836
  %838 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %839 = getelementptr inbounds [5 x double]* %838, i32 0, i64 1
  store double %837, double* %839, align 8
  %840 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %841 = getelementptr inbounds [5 x double]* %840, i32 0, i64 2
  %842 = load double* %841, align 8
  %843 = load double* %tmp, align 8
  %844 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %845 = getelementptr inbounds [5 x double]* %844, i32 0, i64 2
  %846 = load double* %845, align 8
  %847 = fmul double %843, %846
  %848 = fsub double %842, %847
  %849 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %850 = getelementptr inbounds [5 x double]* %849, i32 0, i64 2
  store double %848, double* %850, align 8
  %851 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %852 = getelementptr inbounds [5 x double]* %851, i32 0, i64 3
  %853 = load double* %852, align 8
  %854 = load double* %tmp, align 8
  %855 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %856 = getelementptr inbounds [5 x double]* %855, i32 0, i64 3
  %857 = load double* %856, align 8
  %858 = fmul double %854, %857
  %859 = fsub double %853, %858
  %860 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %861 = getelementptr inbounds [5 x double]* %860, i32 0, i64 3
  store double %859, double* %861, align 8
  %862 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %863 = getelementptr inbounds [5 x double]* %862, i32 0, i64 4
  %864 = load double* %863, align 8
  %865 = load double* %tmp, align 8
  %866 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %867 = getelementptr inbounds [5 x double]* %866, i32 0, i64 4
  %868 = load double* %867, align 8
  %869 = fmul double %865, %868
  %870 = fsub double %864, %869
  %871 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %872 = getelementptr inbounds [5 x double]* %871, i32 0, i64 4
  store double %870, double* %872, align 8
  %873 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 4
  %874 = load double* %873, align 8
  %875 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 0
  %876 = load double* %875, align 8
  %877 = load double* %tmp, align 8
  %878 = fmul double %876, %877
  %879 = fsub double %874, %878
  %880 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 4
  store double %879, double* %880, align 8
  %881 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %882 = getelementptr inbounds [5 x double]* %881, i32 0, i64 1
  %883 = load double* %882, align 8
  %884 = fdiv double 1.000000e+00, %883
  store double %884, double* %tmp1, align 8
  %885 = load double* %tmp1, align 8
  %886 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %887 = getelementptr inbounds [5 x double]* %886, i32 0, i64 1
  %888 = load double* %887, align 8
  %889 = fmul double %885, %888
  store double %889, double* %tmp, align 8
  %890 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %891 = getelementptr inbounds [5 x double]* %890, i32 0, i64 2
  %892 = load double* %891, align 8
  %893 = load double* %tmp, align 8
  %894 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %895 = getelementptr inbounds [5 x double]* %894, i32 0, i64 2
  %896 = load double* %895, align 8
  %897 = fmul double %893, %896
  %898 = fsub double %892, %897
  %899 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %900 = getelementptr inbounds [5 x double]* %899, i32 0, i64 2
  store double %898, double* %900, align 8
  %901 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %902 = getelementptr inbounds [5 x double]* %901, i32 0, i64 3
  %903 = load double* %902, align 8
  %904 = load double* %tmp, align 8
  %905 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %906 = getelementptr inbounds [5 x double]* %905, i32 0, i64 3
  %907 = load double* %906, align 8
  %908 = fmul double %904, %907
  %909 = fsub double %903, %908
  %910 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %911 = getelementptr inbounds [5 x double]* %910, i32 0, i64 3
  store double %909, double* %911, align 8
  %912 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %913 = getelementptr inbounds [5 x double]* %912, i32 0, i64 4
  %914 = load double* %913, align 8
  %915 = load double* %tmp, align 8
  %916 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %917 = getelementptr inbounds [5 x double]* %916, i32 0, i64 4
  %918 = load double* %917, align 8
  %919 = fmul double %915, %918
  %920 = fsub double %914, %919
  %921 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %922 = getelementptr inbounds [5 x double]* %921, i32 0, i64 4
  store double %920, double* %922, align 8
  %923 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 2
  %924 = load double* %923, align 8
  %925 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 1
  %926 = load double* %925, align 8
  %927 = load double* %tmp, align 8
  %928 = fmul double %926, %927
  %929 = fsub double %924, %928
  %930 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 2
  store double %929, double* %930, align 8
  %931 = load double* %tmp1, align 8
  %932 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %933 = getelementptr inbounds [5 x double]* %932, i32 0, i64 1
  %934 = load double* %933, align 8
  %935 = fmul double %931, %934
  store double %935, double* %tmp, align 8
  %936 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %937 = getelementptr inbounds [5 x double]* %936, i32 0, i64 2
  %938 = load double* %937, align 8
  %939 = load double* %tmp, align 8
  %940 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %941 = getelementptr inbounds [5 x double]* %940, i32 0, i64 2
  %942 = load double* %941, align 8
  %943 = fmul double %939, %942
  %944 = fsub double %938, %943
  %945 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %946 = getelementptr inbounds [5 x double]* %945, i32 0, i64 2
  store double %944, double* %946, align 8
  %947 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %948 = getelementptr inbounds [5 x double]* %947, i32 0, i64 3
  %949 = load double* %948, align 8
  %950 = load double* %tmp, align 8
  %951 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %952 = getelementptr inbounds [5 x double]* %951, i32 0, i64 3
  %953 = load double* %952, align 8
  %954 = fmul double %950, %953
  %955 = fsub double %949, %954
  %956 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %957 = getelementptr inbounds [5 x double]* %956, i32 0, i64 3
  store double %955, double* %957, align 8
  %958 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %959 = getelementptr inbounds [5 x double]* %958, i32 0, i64 4
  %960 = load double* %959, align 8
  %961 = load double* %tmp, align 8
  %962 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %963 = getelementptr inbounds [5 x double]* %962, i32 0, i64 4
  %964 = load double* %963, align 8
  %965 = fmul double %961, %964
  %966 = fsub double %960, %965
  %967 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %968 = getelementptr inbounds [5 x double]* %967, i32 0, i64 4
  store double %966, double* %968, align 8
  %969 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 3
  %970 = load double* %969, align 8
  %971 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 1
  %972 = load double* %971, align 8
  %973 = load double* %tmp, align 8
  %974 = fmul double %972, %973
  %975 = fsub double %970, %974
  %976 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 3
  store double %975, double* %976, align 8
  %977 = load double* %tmp1, align 8
  %978 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %979 = getelementptr inbounds [5 x double]* %978, i32 0, i64 1
  %980 = load double* %979, align 8
  %981 = fmul double %977, %980
  store double %981, double* %tmp, align 8
  %982 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %983 = getelementptr inbounds [5 x double]* %982, i32 0, i64 2
  %984 = load double* %983, align 8
  %985 = load double* %tmp, align 8
  %986 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %987 = getelementptr inbounds [5 x double]* %986, i32 0, i64 2
  %988 = load double* %987, align 8
  %989 = fmul double %985, %988
  %990 = fsub double %984, %989
  %991 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %992 = getelementptr inbounds [5 x double]* %991, i32 0, i64 2
  store double %990, double* %992, align 8
  %993 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %994 = getelementptr inbounds [5 x double]* %993, i32 0, i64 3
  %995 = load double* %994, align 8
  %996 = load double* %tmp, align 8
  %997 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %998 = getelementptr inbounds [5 x double]* %997, i32 0, i64 3
  %999 = load double* %998, align 8
  %1000 = fmul double %996, %999
  %1001 = fsub double %995, %1000
  %1002 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %1003 = getelementptr inbounds [5 x double]* %1002, i32 0, i64 3
  store double %1001, double* %1003, align 8
  %1004 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %1005 = getelementptr inbounds [5 x double]* %1004, i32 0, i64 4
  %1006 = load double* %1005, align 8
  %1007 = load double* %tmp, align 8
  %1008 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %1009 = getelementptr inbounds [5 x double]* %1008, i32 0, i64 4
  %1010 = load double* %1009, align 8
  %1011 = fmul double %1007, %1010
  %1012 = fsub double %1006, %1011
  %1013 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %1014 = getelementptr inbounds [5 x double]* %1013, i32 0, i64 4
  store double %1012, double* %1014, align 8
  %1015 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 4
  %1016 = load double* %1015, align 8
  %1017 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 1
  %1018 = load double* %1017, align 8
  %1019 = load double* %tmp, align 8
  %1020 = fmul double %1018, %1019
  %1021 = fsub double %1016, %1020
  %1022 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 4
  store double %1021, double* %1022, align 8
  %1023 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %1024 = getelementptr inbounds [5 x double]* %1023, i32 0, i64 2
  %1025 = load double* %1024, align 8
  %1026 = fdiv double 1.000000e+00, %1025
  store double %1026, double* %tmp1, align 8
  %1027 = load double* %tmp1, align 8
  %1028 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %1029 = getelementptr inbounds [5 x double]* %1028, i32 0, i64 2
  %1030 = load double* %1029, align 8
  %1031 = fmul double %1027, %1030
  store double %1031, double* %tmp, align 8
  %1032 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %1033 = getelementptr inbounds [5 x double]* %1032, i32 0, i64 3
  %1034 = load double* %1033, align 8
  %1035 = load double* %tmp, align 8
  %1036 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %1037 = getelementptr inbounds [5 x double]* %1036, i32 0, i64 3
  %1038 = load double* %1037, align 8
  %1039 = fmul double %1035, %1038
  %1040 = fsub double %1034, %1039
  %1041 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %1042 = getelementptr inbounds [5 x double]* %1041, i32 0, i64 3
  store double %1040, double* %1042, align 8
  %1043 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %1044 = getelementptr inbounds [5 x double]* %1043, i32 0, i64 4
  %1045 = load double* %1044, align 8
  %1046 = load double* %tmp, align 8
  %1047 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %1048 = getelementptr inbounds [5 x double]* %1047, i32 0, i64 4
  %1049 = load double* %1048, align 8
  %1050 = fmul double %1046, %1049
  %1051 = fsub double %1045, %1050
  %1052 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %1053 = getelementptr inbounds [5 x double]* %1052, i32 0, i64 4
  store double %1051, double* %1053, align 8
  %1054 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 3
  %1055 = load double* %1054, align 8
  %1056 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 2
  %1057 = load double* %1056, align 8
  %1058 = load double* %tmp, align 8
  %1059 = fmul double %1057, %1058
  %1060 = fsub double %1055, %1059
  %1061 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 3
  store double %1060, double* %1061, align 8
  %1062 = load double* %tmp1, align 8
  %1063 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %1064 = getelementptr inbounds [5 x double]* %1063, i32 0, i64 2
  %1065 = load double* %1064, align 8
  %1066 = fmul double %1062, %1065
  store double %1066, double* %tmp, align 8
  %1067 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %1068 = getelementptr inbounds [5 x double]* %1067, i32 0, i64 3
  %1069 = load double* %1068, align 8
  %1070 = load double* %tmp, align 8
  %1071 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %1072 = getelementptr inbounds [5 x double]* %1071, i32 0, i64 3
  %1073 = load double* %1072, align 8
  %1074 = fmul double %1070, %1073
  %1075 = fsub double %1069, %1074
  %1076 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %1077 = getelementptr inbounds [5 x double]* %1076, i32 0, i64 3
  store double %1075, double* %1077, align 8
  %1078 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %1079 = getelementptr inbounds [5 x double]* %1078, i32 0, i64 4
  %1080 = load double* %1079, align 8
  %1081 = load double* %tmp, align 8
  %1082 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %1083 = getelementptr inbounds [5 x double]* %1082, i32 0, i64 4
  %1084 = load double* %1083, align 8
  %1085 = fmul double %1081, %1084
  %1086 = fsub double %1080, %1085
  %1087 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %1088 = getelementptr inbounds [5 x double]* %1087, i32 0, i64 4
  store double %1086, double* %1088, align 8
  %1089 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 4
  %1090 = load double* %1089, align 8
  %1091 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 2
  %1092 = load double* %1091, align 8
  %1093 = load double* %tmp, align 8
  %1094 = fmul double %1092, %1093
  %1095 = fsub double %1090, %1094
  %1096 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 4
  store double %1095, double* %1096, align 8
  %1097 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %1098 = getelementptr inbounds [5 x double]* %1097, i32 0, i64 3
  %1099 = load double* %1098, align 8
  %1100 = fdiv double 1.000000e+00, %1099
  store double %1100, double* %tmp1, align 8
  %1101 = load double* %tmp1, align 8
  %1102 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %1103 = getelementptr inbounds [5 x double]* %1102, i32 0, i64 3
  %1104 = load double* %1103, align 8
  %1105 = fmul double %1101, %1104
  store double %1105, double* %tmp, align 8
  %1106 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %1107 = getelementptr inbounds [5 x double]* %1106, i32 0, i64 4
  %1108 = load double* %1107, align 8
  %1109 = load double* %tmp, align 8
  %1110 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %1111 = getelementptr inbounds [5 x double]* %1110, i32 0, i64 4
  %1112 = load double* %1111, align 8
  %1113 = fmul double %1109, %1112
  %1114 = fsub double %1108, %1113
  %1115 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %1116 = getelementptr inbounds [5 x double]* %1115, i32 0, i64 4
  store double %1114, double* %1116, align 8
  %1117 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 4
  %1118 = load double* %1117, align 8
  %1119 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 3
  %1120 = load double* %1119, align 8
  %1121 = load double* %tmp, align 8
  %1122 = fmul double %1120, %1121
  %1123 = fsub double %1118, %1122
  %1124 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 4
  store double %1123, double* %1124, align 8
  %1125 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 4
  %1126 = load double* %1125, align 8
  %1127 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %1128 = getelementptr inbounds [5 x double]* %1127, i32 0, i64 4
  %1129 = load double* %1128, align 8
  %1130 = fdiv double %1126, %1129
  %1131 = load i32* %i, align 4
  %1132 = sext i32 %1131 to i64
  %1133 = load i32* %j, align 4
  %1134 = sext i32 %1133 to i64
  %1135 = load [5 x double]** %vk, align 8
  %1136 = mul nsw i64 %1134, %62
  %1137 = getelementptr inbounds [5 x double]* %1135, i64 %1136
  %1138 = getelementptr inbounds [5 x double]* %1137, i64 %1132
  %1139 = getelementptr inbounds [5 x double]* %1138, i32 0, i64 4
  store double %1130, double* %1139, align 8
  %1140 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 3
  %1141 = load double* %1140, align 8
  %1142 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %1143 = getelementptr inbounds [5 x double]* %1142, i32 0, i64 4
  %1144 = load double* %1143, align 8
  %1145 = load i32* %i, align 4
  %1146 = sext i32 %1145 to i64
  %1147 = load i32* %j, align 4
  %1148 = sext i32 %1147 to i64
  %1149 = load [5 x double]** %vk, align 8
  %1150 = mul nsw i64 %1148, %62
  %1151 = getelementptr inbounds [5 x double]* %1149, i64 %1150
  %1152 = getelementptr inbounds [5 x double]* %1151, i64 %1146
  %1153 = getelementptr inbounds [5 x double]* %1152, i32 0, i64 4
  %1154 = load double* %1153, align 8
  %1155 = fmul double %1144, %1154
  %1156 = fsub double %1141, %1155
  %1157 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 3
  store double %1156, double* %1157, align 8
  %1158 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 3
  %1159 = load double* %1158, align 8
  %1160 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %1161 = getelementptr inbounds [5 x double]* %1160, i32 0, i64 3
  %1162 = load double* %1161, align 8
  %1163 = fdiv double %1159, %1162
  %1164 = load i32* %i, align 4
  %1165 = sext i32 %1164 to i64
  %1166 = load i32* %j, align 4
  %1167 = sext i32 %1166 to i64
  %1168 = load [5 x double]** %vk, align 8
  %1169 = mul nsw i64 %1167, %62
  %1170 = getelementptr inbounds [5 x double]* %1168, i64 %1169
  %1171 = getelementptr inbounds [5 x double]* %1170, i64 %1165
  %1172 = getelementptr inbounds [5 x double]* %1171, i32 0, i64 3
  store double %1163, double* %1172, align 8
  %1173 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 2
  %1174 = load double* %1173, align 8
  %1175 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %1176 = getelementptr inbounds [5 x double]* %1175, i32 0, i64 3
  %1177 = load double* %1176, align 8
  %1178 = load i32* %i, align 4
  %1179 = sext i32 %1178 to i64
  %1180 = load i32* %j, align 4
  %1181 = sext i32 %1180 to i64
  %1182 = load [5 x double]** %vk, align 8
  %1183 = mul nsw i64 %1181, %62
  %1184 = getelementptr inbounds [5 x double]* %1182, i64 %1183
  %1185 = getelementptr inbounds [5 x double]* %1184, i64 %1179
  %1186 = getelementptr inbounds [5 x double]* %1185, i32 0, i64 3
  %1187 = load double* %1186, align 8
  %1188 = fmul double %1177, %1187
  %1189 = fsub double %1174, %1188
  %1190 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %1191 = getelementptr inbounds [5 x double]* %1190, i32 0, i64 4
  %1192 = load double* %1191, align 8
  %1193 = load i32* %i, align 4
  %1194 = sext i32 %1193 to i64
  %1195 = load i32* %j, align 4
  %1196 = sext i32 %1195 to i64
  %1197 = load [5 x double]** %vk, align 8
  %1198 = mul nsw i64 %1196, %62
  %1199 = getelementptr inbounds [5 x double]* %1197, i64 %1198
  %1200 = getelementptr inbounds [5 x double]* %1199, i64 %1194
  %1201 = getelementptr inbounds [5 x double]* %1200, i32 0, i64 4
  %1202 = load double* %1201, align 8
  %1203 = fmul double %1192, %1202
  %1204 = fsub double %1189, %1203
  %1205 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 2
  store double %1204, double* %1205, align 8
  %1206 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 2
  %1207 = load double* %1206, align 8
  %1208 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %1209 = getelementptr inbounds [5 x double]* %1208, i32 0, i64 2
  %1210 = load double* %1209, align 8
  %1211 = fdiv double %1207, %1210
  %1212 = load i32* %i, align 4
  %1213 = sext i32 %1212 to i64
  %1214 = load i32* %j, align 4
  %1215 = sext i32 %1214 to i64
  %1216 = load [5 x double]** %vk, align 8
  %1217 = mul nsw i64 %1215, %62
  %1218 = getelementptr inbounds [5 x double]* %1216, i64 %1217
  %1219 = getelementptr inbounds [5 x double]* %1218, i64 %1213
  %1220 = getelementptr inbounds [5 x double]* %1219, i32 0, i64 2
  store double %1211, double* %1220, align 8
  %1221 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 1
  %1222 = load double* %1221, align 8
  %1223 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %1224 = getelementptr inbounds [5 x double]* %1223, i32 0, i64 2
  %1225 = load double* %1224, align 8
  %1226 = load i32* %i, align 4
  %1227 = sext i32 %1226 to i64
  %1228 = load i32* %j, align 4
  %1229 = sext i32 %1228 to i64
  %1230 = load [5 x double]** %vk, align 8
  %1231 = mul nsw i64 %1229, %62
  %1232 = getelementptr inbounds [5 x double]* %1230, i64 %1231
  %1233 = getelementptr inbounds [5 x double]* %1232, i64 %1227
  %1234 = getelementptr inbounds [5 x double]* %1233, i32 0, i64 2
  %1235 = load double* %1234, align 8
  %1236 = fmul double %1225, %1235
  %1237 = fsub double %1222, %1236
  %1238 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %1239 = getelementptr inbounds [5 x double]* %1238, i32 0, i64 3
  %1240 = load double* %1239, align 8
  %1241 = load i32* %i, align 4
  %1242 = sext i32 %1241 to i64
  %1243 = load i32* %j, align 4
  %1244 = sext i32 %1243 to i64
  %1245 = load [5 x double]** %vk, align 8
  %1246 = mul nsw i64 %1244, %62
  %1247 = getelementptr inbounds [5 x double]* %1245, i64 %1246
  %1248 = getelementptr inbounds [5 x double]* %1247, i64 %1242
  %1249 = getelementptr inbounds [5 x double]* %1248, i32 0, i64 3
  %1250 = load double* %1249, align 8
  %1251 = fmul double %1240, %1250
  %1252 = fsub double %1237, %1251
  %1253 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %1254 = getelementptr inbounds [5 x double]* %1253, i32 0, i64 4
  %1255 = load double* %1254, align 8
  %1256 = load i32* %i, align 4
  %1257 = sext i32 %1256 to i64
  %1258 = load i32* %j, align 4
  %1259 = sext i32 %1258 to i64
  %1260 = load [5 x double]** %vk, align 8
  %1261 = mul nsw i64 %1259, %62
  %1262 = getelementptr inbounds [5 x double]* %1260, i64 %1261
  %1263 = getelementptr inbounds [5 x double]* %1262, i64 %1257
  %1264 = getelementptr inbounds [5 x double]* %1263, i32 0, i64 4
  %1265 = load double* %1264, align 8
  %1266 = fmul double %1255, %1265
  %1267 = fsub double %1252, %1266
  %1268 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 1
  store double %1267, double* %1268, align 8
  %1269 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 1
  %1270 = load double* %1269, align 8
  %1271 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %1272 = getelementptr inbounds [5 x double]* %1271, i32 0, i64 1
  %1273 = load double* %1272, align 8
  %1274 = fdiv double %1270, %1273
  %1275 = load i32* %i, align 4
  %1276 = sext i32 %1275 to i64
  %1277 = load i32* %j, align 4
  %1278 = sext i32 %1277 to i64
  %1279 = load [5 x double]** %vk, align 8
  %1280 = mul nsw i64 %1278, %62
  %1281 = getelementptr inbounds [5 x double]* %1279, i64 %1280
  %1282 = getelementptr inbounds [5 x double]* %1281, i64 %1276
  %1283 = getelementptr inbounds [5 x double]* %1282, i32 0, i64 1
  store double %1274, double* %1283, align 8
  %1284 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 0
  %1285 = load double* %1284, align 8
  %1286 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %1287 = getelementptr inbounds [5 x double]* %1286, i32 0, i64 1
  %1288 = load double* %1287, align 8
  %1289 = load i32* %i, align 4
  %1290 = sext i32 %1289 to i64
  %1291 = load i32* %j, align 4
  %1292 = sext i32 %1291 to i64
  %1293 = load [5 x double]** %vk, align 8
  %1294 = mul nsw i64 %1292, %62
  %1295 = getelementptr inbounds [5 x double]* %1293, i64 %1294
  %1296 = getelementptr inbounds [5 x double]* %1295, i64 %1290
  %1297 = getelementptr inbounds [5 x double]* %1296, i32 0, i64 1
  %1298 = load double* %1297, align 8
  %1299 = fmul double %1288, %1298
  %1300 = fsub double %1285, %1299
  %1301 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %1302 = getelementptr inbounds [5 x double]* %1301, i32 0, i64 2
  %1303 = load double* %1302, align 8
  %1304 = load i32* %i, align 4
  %1305 = sext i32 %1304 to i64
  %1306 = load i32* %j, align 4
  %1307 = sext i32 %1306 to i64
  %1308 = load [5 x double]** %vk, align 8
  %1309 = mul nsw i64 %1307, %62
  %1310 = getelementptr inbounds [5 x double]* %1308, i64 %1309
  %1311 = getelementptr inbounds [5 x double]* %1310, i64 %1305
  %1312 = getelementptr inbounds [5 x double]* %1311, i32 0, i64 2
  %1313 = load double* %1312, align 8
  %1314 = fmul double %1303, %1313
  %1315 = fsub double %1300, %1314
  %1316 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %1317 = getelementptr inbounds [5 x double]* %1316, i32 0, i64 3
  %1318 = load double* %1317, align 8
  %1319 = load i32* %i, align 4
  %1320 = sext i32 %1319 to i64
  %1321 = load i32* %j, align 4
  %1322 = sext i32 %1321 to i64
  %1323 = load [5 x double]** %vk, align 8
  %1324 = mul nsw i64 %1322, %62
  %1325 = getelementptr inbounds [5 x double]* %1323, i64 %1324
  %1326 = getelementptr inbounds [5 x double]* %1325, i64 %1320
  %1327 = getelementptr inbounds [5 x double]* %1326, i32 0, i64 3
  %1328 = load double* %1327, align 8
  %1329 = fmul double %1318, %1328
  %1330 = fsub double %1315, %1329
  %1331 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %1332 = getelementptr inbounds [5 x double]* %1331, i32 0, i64 4
  %1333 = load double* %1332, align 8
  %1334 = load i32* %i, align 4
  %1335 = sext i32 %1334 to i64
  %1336 = load i32* %j, align 4
  %1337 = sext i32 %1336 to i64
  %1338 = load [5 x double]** %vk, align 8
  %1339 = mul nsw i64 %1337, %62
  %1340 = getelementptr inbounds [5 x double]* %1338, i64 %1339
  %1341 = getelementptr inbounds [5 x double]* %1340, i64 %1335
  %1342 = getelementptr inbounds [5 x double]* %1341, i32 0, i64 4
  %1343 = load double* %1342, align 8
  %1344 = fmul double %1333, %1343
  %1345 = fsub double %1330, %1344
  %1346 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 0
  store double %1345, double* %1346, align 8
  %1347 = getelementptr inbounds [5 x double]* %tv, i32 0, i64 0
  %1348 = load double* %1347, align 8
  %1349 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %1350 = getelementptr inbounds [5 x double]* %1349, i32 0, i64 0
  %1351 = load double* %1350, align 8
  %1352 = fdiv double %1348, %1351
  %1353 = load i32* %i, align 4
  %1354 = sext i32 %1353 to i64
  %1355 = load i32* %j, align 4
  %1356 = sext i32 %1355 to i64
  %1357 = load [5 x double]** %vk, align 8
  %1358 = mul nsw i64 %1356, %62
  %1359 = getelementptr inbounds [5 x double]* %1357, i64 %1358
  %1360 = getelementptr inbounds [5 x double]* %1359, i64 %1354
  %1361 = getelementptr inbounds [5 x double]* %1360, i32 0, i64 0
  store double %1352, double* %1361, align 8
  br label %1362

; <label>:1362                                    ; preds = %648
  %1363 = load i32* %i, align 4
  %1364 = add nsw i32 %1363, 1
  store i32 %1364, i32* %i, align 4
  br label %266

; <label>:1365                                    ; preds = %266
  br label %1366

; <label>:1366                                    ; preds = %1365
  %1367 = load i32* %j, align 4
  %1368 = add nsw i32 %1367, 1
  store i32 %1368, i32* %j, align 4
  br label %260

; <label>:1369                                    ; preds = %260
  ret void
}

; Function Attrs: nounwind uwtable
define void @buts(i32 %ldmx, i32 %ldmy, i32 %ldmz, i32 %nx, i32 %ny, i32 %nz, i32 %k, double %omega, [5 x double]* %v, [5 x double]* %tv, [5 x [5 x double]]* %d, [5 x [5 x double]]* %udx, [5 x [5 x double]]* %udy, [5 x [5 x double]]* %udz, i32 %ist, i32 %iend, i32 %jst, i32 %jend, i32 %nx0, i32 %ny0) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca double, align 8
  %9 = alloca [5 x double]*, align 8
  %10 = alloca [5 x double]*, align 8
  %11 = alloca [5 x [5 x double]]*, align 8
  %12 = alloca [5 x [5 x double]]*, align 8
  %13 = alloca [5 x [5 x double]]*, align 8
  %14 = alloca [5 x [5 x double]]*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %m = alloca i32, align 4
  %tmp = alloca double, align 8
  %tmp1 = alloca double, align 8
  %tmat = alloca [5 x [5 x double]], align 16
  store i32 %ldmx, i32* %1, align 4
  store i32 %ldmy, i32* %2, align 4
  store i32 %ldmz, i32* %3, align 4
  store i32 %nx, i32* %4, align 4
  store i32 %ny, i32* %5, align 4
  store i32 %nz, i32* %6, align 4
  store i32 %k, i32* %7, align 4
  store double %omega, double* %8, align 8
  store [5 x double]* %v, [5 x double]** %9, align 8
  store [5 x double]* %tv, [5 x double]** %10, align 8
  store [5 x [5 x double]]* %d, [5 x [5 x double]]** %11, align 8
  store [5 x [5 x double]]* %udx, [5 x [5 x double]]** %12, align 8
  store [5 x [5 x double]]* %udy, [5 x [5 x double]]** %13, align 8
  store [5 x [5 x double]]* %udz, [5 x [5 x double]]** %14, align 8
  store i32 %ist, i32* %15, align 4
  store i32 %iend, i32* %16, align 4
  store i32 %jst, i32* %17, align 4
  store i32 %jend, i32* %18, align 4
  store i32 %nx0, i32* %19, align 4
  store i32 %ny0, i32* %20, align 4
  %21 = load i32* %2, align 4
  %22 = sdiv i32 %21, 2
  %23 = mul nsw i32 %22, 2
  %24 = add nsw i32 %23, 1
  %25 = zext i32 %24 to i64
  %26 = load i32* %1, align 4
  %27 = sdiv i32 %26, 2
  %28 = mul nsw i32 %27, 2
  %29 = add nsw i32 %28, 1
  %30 = zext i32 %29 to i64
  %31 = load i32* %2, align 4
  %32 = zext i32 %31 to i64
  %33 = load i32* %1, align 4
  %34 = sdiv i32 %33, 2
  %35 = mul nsw i32 %34, 2
  %36 = add nsw i32 %35, 1
  %37 = zext i32 %36 to i64
  %38 = load i32* %2, align 4
  %39 = zext i32 %38 to i64
  %40 = load i32* %1, align 4
  %41 = sdiv i32 %40, 2
  %42 = mul nsw i32 %41, 2
  %43 = add nsw i32 %42, 1
  %44 = zext i32 %43 to i64
  %45 = load i32* %2, align 4
  %46 = zext i32 %45 to i64
  %47 = load i32* %1, align 4
  %48 = sdiv i32 %47, 2
  %49 = mul nsw i32 %48, 2
  %50 = add nsw i32 %49, 1
  %51 = zext i32 %50 to i64
  %52 = load i32* %2, align 4
  %53 = zext i32 %52 to i64
  %54 = load i32* %1, align 4
  %55 = sdiv i32 %54, 2
  %56 = mul nsw i32 %55, 2
  %57 = add nsw i32 %56, 1
  %58 = zext i32 %57 to i64
  %59 = load i32* %2, align 4
  %60 = zext i32 %59 to i64
  %61 = load i32* %1, align 4
  %62 = sdiv i32 %61, 2
  %63 = mul nsw i32 %62, 2
  %64 = add nsw i32 %63, 1
  %65 = zext i32 %64 to i64
  %66 = load i32* %18, align 4
  %67 = sub nsw i32 %66, 1
  store i32 %67, i32* %j, align 4
  br label %68

; <label>:68                                      ; preds = %259, %0
  %69 = load i32* %j, align 4
  %70 = load i32* %17, align 4
  %71 = icmp sge i32 %69, %70
  br i1 %71, label %72, label %262

; <label>:72                                      ; preds = %68
  %73 = load i32* %16, align 4
  %74 = sub nsw i32 %73, 1
  store i32 %74, i32* %i, align 4
  br label %75

; <label>:75                                      ; preds = %255, %72
  %76 = load i32* %i, align 4
  %77 = load i32* %15, align 4
  %78 = icmp sge i32 %76, %77
  br i1 %78, label %79, label %258

; <label>:79                                      ; preds = %75
  store i32 0, i32* %m, align 4
  br label %80

; <label>:80                                      ; preds = %251, %79
  %81 = load i32* %m, align 4
  %82 = icmp slt i32 %81, 5
  br i1 %82, label %83, label %254

; <label>:83                                      ; preds = %80
  %84 = load double* %8, align 8
  %85 = load i32* %m, align 4
  %86 = sext i32 %85 to i64
  %87 = load i32* %i, align 4
  %88 = sext i32 %87 to i64
  %89 = load i32* %j, align 4
  %90 = sext i32 %89 to i64
  %91 = load [5 x [5 x double]]** %14, align 8
  %92 = mul nsw i64 %90, %65
  %93 = getelementptr inbounds [5 x [5 x double]]* %91, i64 %92
  %94 = getelementptr inbounds [5 x [5 x double]]* %93, i64 %88
  %95 = getelementptr inbounds [5 x [5 x double]]* %94, i32 0, i64 0
  %96 = getelementptr inbounds [5 x double]* %95, i32 0, i64 %86
  %97 = load double* %96, align 8
  %98 = load i32* %i, align 4
  %99 = sext i32 %98 to i64
  %100 = load i32* %j, align 4
  %101 = sext i32 %100 to i64
  %102 = load i32* %7, align 4
  %103 = add nsw i32 %102, 1
  %104 = sext i32 %103 to i64
  %105 = load [5 x double]** %9, align 8
  %106 = mul nuw i64 %25, %30
  %107 = mul nsw i64 %104, %106
  %108 = getelementptr inbounds [5 x double]* %105, i64 %107
  %109 = mul nsw i64 %101, %30
  %110 = getelementptr inbounds [5 x double]* %108, i64 %109
  %111 = getelementptr inbounds [5 x double]* %110, i64 %99
  %112 = getelementptr inbounds [5 x double]* %111, i32 0, i64 0
  %113 = load double* %112, align 8
  %114 = fmul double %97, %113
  %115 = load i32* %m, align 4
  %116 = sext i32 %115 to i64
  %117 = load i32* %i, align 4
  %118 = sext i32 %117 to i64
  %119 = load i32* %j, align 4
  %120 = sext i32 %119 to i64
  %121 = load [5 x [5 x double]]** %14, align 8
  %122 = mul nsw i64 %120, %65
  %123 = getelementptr inbounds [5 x [5 x double]]* %121, i64 %122
  %124 = getelementptr inbounds [5 x [5 x double]]* %123, i64 %118
  %125 = getelementptr inbounds [5 x [5 x double]]* %124, i32 0, i64 1
  %126 = getelementptr inbounds [5 x double]* %125, i32 0, i64 %116
  %127 = load double* %126, align 8
  %128 = load i32* %i, align 4
  %129 = sext i32 %128 to i64
  %130 = load i32* %j, align 4
  %131 = sext i32 %130 to i64
  %132 = load i32* %7, align 4
  %133 = add nsw i32 %132, 1
  %134 = sext i32 %133 to i64
  %135 = load [5 x double]** %9, align 8
  %136 = mul nuw i64 %25, %30
  %137 = mul nsw i64 %134, %136
  %138 = getelementptr inbounds [5 x double]* %135, i64 %137
  %139 = mul nsw i64 %131, %30
  %140 = getelementptr inbounds [5 x double]* %138, i64 %139
  %141 = getelementptr inbounds [5 x double]* %140, i64 %129
  %142 = getelementptr inbounds [5 x double]* %141, i32 0, i64 1
  %143 = load double* %142, align 8
  %144 = fmul double %127, %143
  %145 = fadd double %114, %144
  %146 = load i32* %m, align 4
  %147 = sext i32 %146 to i64
  %148 = load i32* %i, align 4
  %149 = sext i32 %148 to i64
  %150 = load i32* %j, align 4
  %151 = sext i32 %150 to i64
  %152 = load [5 x [5 x double]]** %14, align 8
  %153 = mul nsw i64 %151, %65
  %154 = getelementptr inbounds [5 x [5 x double]]* %152, i64 %153
  %155 = getelementptr inbounds [5 x [5 x double]]* %154, i64 %149
  %156 = getelementptr inbounds [5 x [5 x double]]* %155, i32 0, i64 2
  %157 = getelementptr inbounds [5 x double]* %156, i32 0, i64 %147
  %158 = load double* %157, align 8
  %159 = load i32* %i, align 4
  %160 = sext i32 %159 to i64
  %161 = load i32* %j, align 4
  %162 = sext i32 %161 to i64
  %163 = load i32* %7, align 4
  %164 = add nsw i32 %163, 1
  %165 = sext i32 %164 to i64
  %166 = load [5 x double]** %9, align 8
  %167 = mul nuw i64 %25, %30
  %168 = mul nsw i64 %165, %167
  %169 = getelementptr inbounds [5 x double]* %166, i64 %168
  %170 = mul nsw i64 %162, %30
  %171 = getelementptr inbounds [5 x double]* %169, i64 %170
  %172 = getelementptr inbounds [5 x double]* %171, i64 %160
  %173 = getelementptr inbounds [5 x double]* %172, i32 0, i64 2
  %174 = load double* %173, align 8
  %175 = fmul double %158, %174
  %176 = fadd double %145, %175
  %177 = load i32* %m, align 4
  %178 = sext i32 %177 to i64
  %179 = load i32* %i, align 4
  %180 = sext i32 %179 to i64
  %181 = load i32* %j, align 4
  %182 = sext i32 %181 to i64
  %183 = load [5 x [5 x double]]** %14, align 8
  %184 = mul nsw i64 %182, %65
  %185 = getelementptr inbounds [5 x [5 x double]]* %183, i64 %184
  %186 = getelementptr inbounds [5 x [5 x double]]* %185, i64 %180
  %187 = getelementptr inbounds [5 x [5 x double]]* %186, i32 0, i64 3
  %188 = getelementptr inbounds [5 x double]* %187, i32 0, i64 %178
  %189 = load double* %188, align 8
  %190 = load i32* %i, align 4
  %191 = sext i32 %190 to i64
  %192 = load i32* %j, align 4
  %193 = sext i32 %192 to i64
  %194 = load i32* %7, align 4
  %195 = add nsw i32 %194, 1
  %196 = sext i32 %195 to i64
  %197 = load [5 x double]** %9, align 8
  %198 = mul nuw i64 %25, %30
  %199 = mul nsw i64 %196, %198
  %200 = getelementptr inbounds [5 x double]* %197, i64 %199
  %201 = mul nsw i64 %193, %30
  %202 = getelementptr inbounds [5 x double]* %200, i64 %201
  %203 = getelementptr inbounds [5 x double]* %202, i64 %191
  %204 = getelementptr inbounds [5 x double]* %203, i32 0, i64 3
  %205 = load double* %204, align 8
  %206 = fmul double %189, %205
  %207 = fadd double %176, %206
  %208 = load i32* %m, align 4
  %209 = sext i32 %208 to i64
  %210 = load i32* %i, align 4
  %211 = sext i32 %210 to i64
  %212 = load i32* %j, align 4
  %213 = sext i32 %212 to i64
  %214 = load [5 x [5 x double]]** %14, align 8
  %215 = mul nsw i64 %213, %65
  %216 = getelementptr inbounds [5 x [5 x double]]* %214, i64 %215
  %217 = getelementptr inbounds [5 x [5 x double]]* %216, i64 %211
  %218 = getelementptr inbounds [5 x [5 x double]]* %217, i32 0, i64 4
  %219 = getelementptr inbounds [5 x double]* %218, i32 0, i64 %209
  %220 = load double* %219, align 8
  %221 = load i32* %i, align 4
  %222 = sext i32 %221 to i64
  %223 = load i32* %j, align 4
  %224 = sext i32 %223 to i64
  %225 = load i32* %7, align 4
  %226 = add nsw i32 %225, 1
  %227 = sext i32 %226 to i64
  %228 = load [5 x double]** %9, align 8
  %229 = mul nuw i64 %25, %30
  %230 = mul nsw i64 %227, %229
  %231 = getelementptr inbounds [5 x double]* %228, i64 %230
  %232 = mul nsw i64 %224, %30
  %233 = getelementptr inbounds [5 x double]* %231, i64 %232
  %234 = getelementptr inbounds [5 x double]* %233, i64 %222
  %235 = getelementptr inbounds [5 x double]* %234, i32 0, i64 4
  %236 = load double* %235, align 8
  %237 = fmul double %220, %236
  %238 = fadd double %207, %237
  %239 = fmul double %84, %238
  %240 = load i32* %m, align 4
  %241 = sext i32 %240 to i64
  %242 = load i32* %i, align 4
  %243 = sext i32 %242 to i64
  %244 = load i32* %j, align 4
  %245 = sext i32 %244 to i64
  %246 = load [5 x double]** %10, align 8
  %247 = mul nsw i64 %245, %37
  %248 = getelementptr inbounds [5 x double]* %246, i64 %247
  %249 = getelementptr inbounds [5 x double]* %248, i64 %243
  %250 = getelementptr inbounds [5 x double]* %249, i32 0, i64 %241
  store double %239, double* %250, align 8
  br label %251

; <label>:251                                     ; preds = %83
  %252 = load i32* %m, align 4
  %253 = add nsw i32 %252, 1
  store i32 %253, i32* %m, align 4
  br label %80

; <label>:254                                     ; preds = %80
  br label %255

; <label>:255                                     ; preds = %254
  %256 = load i32* %i, align 4
  %257 = add nsw i32 %256, -1
  store i32 %257, i32* %i, align 4
  br label %75

; <label>:258                                     ; preds = %75
  br label %259

; <label>:259                                     ; preds = %258
  %260 = load i32* %j, align 4
  %261 = add nsw i32 %260, -1
  store i32 %261, i32* %j, align 4
  br label %68

; <label>:262                                     ; preds = %68
  %263 = load i32* %18, align 4
  %264 = sub nsw i32 %263, 1
  store i32 %264, i32* %j, align 4
  br label %265

; <label>:265                                     ; preds = %1974, %262
  %266 = load i32* %j, align 4
  %267 = load i32* %17, align 4
  %268 = icmp sge i32 %266, %267
  br i1 %268, label %269, label %1977

; <label>:269                                     ; preds = %265
  %270 = load i32* %16, align 4
  %271 = sub nsw i32 %270, 1
  store i32 %271, i32* %i, align 4
  br label %272

; <label>:272                                     ; preds = %1970, %269
  %273 = load i32* %i, align 4
  %274 = load i32* %15, align 4
  %275 = icmp sge i32 %273, %274
  br i1 %275, label %276, label %1973

; <label>:276                                     ; preds = %272
  store i32 0, i32* %m, align 4
  br label %277

; <label>:277                                     ; preds = %616, %276
  %278 = load i32* %m, align 4
  %279 = icmp slt i32 %278, 5
  br i1 %279, label %280, label %619

; <label>:280                                     ; preds = %277
  %281 = load i32* %m, align 4
  %282 = sext i32 %281 to i64
  %283 = load i32* %i, align 4
  %284 = sext i32 %283 to i64
  %285 = load i32* %j, align 4
  %286 = sext i32 %285 to i64
  %287 = load [5 x double]** %10, align 8
  %288 = mul nsw i64 %286, %37
  %289 = getelementptr inbounds [5 x double]* %287, i64 %288
  %290 = getelementptr inbounds [5 x double]* %289, i64 %284
  %291 = getelementptr inbounds [5 x double]* %290, i32 0, i64 %282
  %292 = load double* %291, align 8
  %293 = load double* %8, align 8
  %294 = load i32* %m, align 4
  %295 = sext i32 %294 to i64
  %296 = load i32* %i, align 4
  %297 = sext i32 %296 to i64
  %298 = load i32* %j, align 4
  %299 = sext i32 %298 to i64
  %300 = load [5 x [5 x double]]** %13, align 8
  %301 = mul nsw i64 %299, %58
  %302 = getelementptr inbounds [5 x [5 x double]]* %300, i64 %301
  %303 = getelementptr inbounds [5 x [5 x double]]* %302, i64 %297
  %304 = getelementptr inbounds [5 x [5 x double]]* %303, i32 0, i64 0
  %305 = getelementptr inbounds [5 x double]* %304, i32 0, i64 %295
  %306 = load double* %305, align 8
  %307 = load i32* %i, align 4
  %308 = sext i32 %307 to i64
  %309 = load i32* %j, align 4
  %310 = add nsw i32 %309, 1
  %311 = sext i32 %310 to i64
  %312 = load i32* %7, align 4
  %313 = sext i32 %312 to i64
  %314 = load [5 x double]** %9, align 8
  %315 = mul nuw i64 %25, %30
  %316 = mul nsw i64 %313, %315
  %317 = getelementptr inbounds [5 x double]* %314, i64 %316
  %318 = mul nsw i64 %311, %30
  %319 = getelementptr inbounds [5 x double]* %317, i64 %318
  %320 = getelementptr inbounds [5 x double]* %319, i64 %308
  %321 = getelementptr inbounds [5 x double]* %320, i32 0, i64 0
  %322 = load double* %321, align 8
  %323 = fmul double %306, %322
  %324 = load i32* %m, align 4
  %325 = sext i32 %324 to i64
  %326 = load i32* %i, align 4
  %327 = sext i32 %326 to i64
  %328 = load i32* %j, align 4
  %329 = sext i32 %328 to i64
  %330 = load [5 x [5 x double]]** %12, align 8
  %331 = mul nsw i64 %329, %51
  %332 = getelementptr inbounds [5 x [5 x double]]* %330, i64 %331
  %333 = getelementptr inbounds [5 x [5 x double]]* %332, i64 %327
  %334 = getelementptr inbounds [5 x [5 x double]]* %333, i32 0, i64 0
  %335 = getelementptr inbounds [5 x double]* %334, i32 0, i64 %325
  %336 = load double* %335, align 8
  %337 = load i32* %i, align 4
  %338 = add nsw i32 %337, 1
  %339 = sext i32 %338 to i64
  %340 = load i32* %j, align 4
  %341 = sext i32 %340 to i64
  %342 = load i32* %7, align 4
  %343 = sext i32 %342 to i64
  %344 = load [5 x double]** %9, align 8
  %345 = mul nuw i64 %25, %30
  %346 = mul nsw i64 %343, %345
  %347 = getelementptr inbounds [5 x double]* %344, i64 %346
  %348 = mul nsw i64 %341, %30
  %349 = getelementptr inbounds [5 x double]* %347, i64 %348
  %350 = getelementptr inbounds [5 x double]* %349, i64 %339
  %351 = getelementptr inbounds [5 x double]* %350, i32 0, i64 0
  %352 = load double* %351, align 8
  %353 = fmul double %336, %352
  %354 = fadd double %323, %353
  %355 = load i32* %m, align 4
  %356 = sext i32 %355 to i64
  %357 = load i32* %i, align 4
  %358 = sext i32 %357 to i64
  %359 = load i32* %j, align 4
  %360 = sext i32 %359 to i64
  %361 = load [5 x [5 x double]]** %13, align 8
  %362 = mul nsw i64 %360, %58
  %363 = getelementptr inbounds [5 x [5 x double]]* %361, i64 %362
  %364 = getelementptr inbounds [5 x [5 x double]]* %363, i64 %358
  %365 = getelementptr inbounds [5 x [5 x double]]* %364, i32 0, i64 1
  %366 = getelementptr inbounds [5 x double]* %365, i32 0, i64 %356
  %367 = load double* %366, align 8
  %368 = load i32* %i, align 4
  %369 = sext i32 %368 to i64
  %370 = load i32* %j, align 4
  %371 = add nsw i32 %370, 1
  %372 = sext i32 %371 to i64
  %373 = load i32* %7, align 4
  %374 = sext i32 %373 to i64
  %375 = load [5 x double]** %9, align 8
  %376 = mul nuw i64 %25, %30
  %377 = mul nsw i64 %374, %376
  %378 = getelementptr inbounds [5 x double]* %375, i64 %377
  %379 = mul nsw i64 %372, %30
  %380 = getelementptr inbounds [5 x double]* %378, i64 %379
  %381 = getelementptr inbounds [5 x double]* %380, i64 %369
  %382 = getelementptr inbounds [5 x double]* %381, i32 0, i64 1
  %383 = load double* %382, align 8
  %384 = fmul double %367, %383
  %385 = fadd double %354, %384
  %386 = load i32* %m, align 4
  %387 = sext i32 %386 to i64
  %388 = load i32* %i, align 4
  %389 = sext i32 %388 to i64
  %390 = load i32* %j, align 4
  %391 = sext i32 %390 to i64
  %392 = load [5 x [5 x double]]** %12, align 8
  %393 = mul nsw i64 %391, %51
  %394 = getelementptr inbounds [5 x [5 x double]]* %392, i64 %393
  %395 = getelementptr inbounds [5 x [5 x double]]* %394, i64 %389
  %396 = getelementptr inbounds [5 x [5 x double]]* %395, i32 0, i64 1
  %397 = getelementptr inbounds [5 x double]* %396, i32 0, i64 %387
  %398 = load double* %397, align 8
  %399 = load i32* %i, align 4
  %400 = add nsw i32 %399, 1
  %401 = sext i32 %400 to i64
  %402 = load i32* %j, align 4
  %403 = sext i32 %402 to i64
  %404 = load i32* %7, align 4
  %405 = sext i32 %404 to i64
  %406 = load [5 x double]** %9, align 8
  %407 = mul nuw i64 %25, %30
  %408 = mul nsw i64 %405, %407
  %409 = getelementptr inbounds [5 x double]* %406, i64 %408
  %410 = mul nsw i64 %403, %30
  %411 = getelementptr inbounds [5 x double]* %409, i64 %410
  %412 = getelementptr inbounds [5 x double]* %411, i64 %401
  %413 = getelementptr inbounds [5 x double]* %412, i32 0, i64 1
  %414 = load double* %413, align 8
  %415 = fmul double %398, %414
  %416 = fadd double %385, %415
  %417 = load i32* %m, align 4
  %418 = sext i32 %417 to i64
  %419 = load i32* %i, align 4
  %420 = sext i32 %419 to i64
  %421 = load i32* %j, align 4
  %422 = sext i32 %421 to i64
  %423 = load [5 x [5 x double]]** %13, align 8
  %424 = mul nsw i64 %422, %58
  %425 = getelementptr inbounds [5 x [5 x double]]* %423, i64 %424
  %426 = getelementptr inbounds [5 x [5 x double]]* %425, i64 %420
  %427 = getelementptr inbounds [5 x [5 x double]]* %426, i32 0, i64 2
  %428 = getelementptr inbounds [5 x double]* %427, i32 0, i64 %418
  %429 = load double* %428, align 8
  %430 = load i32* %i, align 4
  %431 = sext i32 %430 to i64
  %432 = load i32* %j, align 4
  %433 = add nsw i32 %432, 1
  %434 = sext i32 %433 to i64
  %435 = load i32* %7, align 4
  %436 = sext i32 %435 to i64
  %437 = load [5 x double]** %9, align 8
  %438 = mul nuw i64 %25, %30
  %439 = mul nsw i64 %436, %438
  %440 = getelementptr inbounds [5 x double]* %437, i64 %439
  %441 = mul nsw i64 %434, %30
  %442 = getelementptr inbounds [5 x double]* %440, i64 %441
  %443 = getelementptr inbounds [5 x double]* %442, i64 %431
  %444 = getelementptr inbounds [5 x double]* %443, i32 0, i64 2
  %445 = load double* %444, align 8
  %446 = fmul double %429, %445
  %447 = fadd double %416, %446
  %448 = load i32* %m, align 4
  %449 = sext i32 %448 to i64
  %450 = load i32* %i, align 4
  %451 = sext i32 %450 to i64
  %452 = load i32* %j, align 4
  %453 = sext i32 %452 to i64
  %454 = load [5 x [5 x double]]** %12, align 8
  %455 = mul nsw i64 %453, %51
  %456 = getelementptr inbounds [5 x [5 x double]]* %454, i64 %455
  %457 = getelementptr inbounds [5 x [5 x double]]* %456, i64 %451
  %458 = getelementptr inbounds [5 x [5 x double]]* %457, i32 0, i64 2
  %459 = getelementptr inbounds [5 x double]* %458, i32 0, i64 %449
  %460 = load double* %459, align 8
  %461 = load i32* %i, align 4
  %462 = add nsw i32 %461, 1
  %463 = sext i32 %462 to i64
  %464 = load i32* %j, align 4
  %465 = sext i32 %464 to i64
  %466 = load i32* %7, align 4
  %467 = sext i32 %466 to i64
  %468 = load [5 x double]** %9, align 8
  %469 = mul nuw i64 %25, %30
  %470 = mul nsw i64 %467, %469
  %471 = getelementptr inbounds [5 x double]* %468, i64 %470
  %472 = mul nsw i64 %465, %30
  %473 = getelementptr inbounds [5 x double]* %471, i64 %472
  %474 = getelementptr inbounds [5 x double]* %473, i64 %463
  %475 = getelementptr inbounds [5 x double]* %474, i32 0, i64 2
  %476 = load double* %475, align 8
  %477 = fmul double %460, %476
  %478 = fadd double %447, %477
  %479 = load i32* %m, align 4
  %480 = sext i32 %479 to i64
  %481 = load i32* %i, align 4
  %482 = sext i32 %481 to i64
  %483 = load i32* %j, align 4
  %484 = sext i32 %483 to i64
  %485 = load [5 x [5 x double]]** %13, align 8
  %486 = mul nsw i64 %484, %58
  %487 = getelementptr inbounds [5 x [5 x double]]* %485, i64 %486
  %488 = getelementptr inbounds [5 x [5 x double]]* %487, i64 %482
  %489 = getelementptr inbounds [5 x [5 x double]]* %488, i32 0, i64 3
  %490 = getelementptr inbounds [5 x double]* %489, i32 0, i64 %480
  %491 = load double* %490, align 8
  %492 = load i32* %i, align 4
  %493 = sext i32 %492 to i64
  %494 = load i32* %j, align 4
  %495 = add nsw i32 %494, 1
  %496 = sext i32 %495 to i64
  %497 = load i32* %7, align 4
  %498 = sext i32 %497 to i64
  %499 = load [5 x double]** %9, align 8
  %500 = mul nuw i64 %25, %30
  %501 = mul nsw i64 %498, %500
  %502 = getelementptr inbounds [5 x double]* %499, i64 %501
  %503 = mul nsw i64 %496, %30
  %504 = getelementptr inbounds [5 x double]* %502, i64 %503
  %505 = getelementptr inbounds [5 x double]* %504, i64 %493
  %506 = getelementptr inbounds [5 x double]* %505, i32 0, i64 3
  %507 = load double* %506, align 8
  %508 = fmul double %491, %507
  %509 = fadd double %478, %508
  %510 = load i32* %m, align 4
  %511 = sext i32 %510 to i64
  %512 = load i32* %i, align 4
  %513 = sext i32 %512 to i64
  %514 = load i32* %j, align 4
  %515 = sext i32 %514 to i64
  %516 = load [5 x [5 x double]]** %12, align 8
  %517 = mul nsw i64 %515, %51
  %518 = getelementptr inbounds [5 x [5 x double]]* %516, i64 %517
  %519 = getelementptr inbounds [5 x [5 x double]]* %518, i64 %513
  %520 = getelementptr inbounds [5 x [5 x double]]* %519, i32 0, i64 3
  %521 = getelementptr inbounds [5 x double]* %520, i32 0, i64 %511
  %522 = load double* %521, align 8
  %523 = load i32* %i, align 4
  %524 = add nsw i32 %523, 1
  %525 = sext i32 %524 to i64
  %526 = load i32* %j, align 4
  %527 = sext i32 %526 to i64
  %528 = load i32* %7, align 4
  %529 = sext i32 %528 to i64
  %530 = load [5 x double]** %9, align 8
  %531 = mul nuw i64 %25, %30
  %532 = mul nsw i64 %529, %531
  %533 = getelementptr inbounds [5 x double]* %530, i64 %532
  %534 = mul nsw i64 %527, %30
  %535 = getelementptr inbounds [5 x double]* %533, i64 %534
  %536 = getelementptr inbounds [5 x double]* %535, i64 %525
  %537 = getelementptr inbounds [5 x double]* %536, i32 0, i64 3
  %538 = load double* %537, align 8
  %539 = fmul double %522, %538
  %540 = fadd double %509, %539
  %541 = load i32* %m, align 4
  %542 = sext i32 %541 to i64
  %543 = load i32* %i, align 4
  %544 = sext i32 %543 to i64
  %545 = load i32* %j, align 4
  %546 = sext i32 %545 to i64
  %547 = load [5 x [5 x double]]** %13, align 8
  %548 = mul nsw i64 %546, %58
  %549 = getelementptr inbounds [5 x [5 x double]]* %547, i64 %548
  %550 = getelementptr inbounds [5 x [5 x double]]* %549, i64 %544
  %551 = getelementptr inbounds [5 x [5 x double]]* %550, i32 0, i64 4
  %552 = getelementptr inbounds [5 x double]* %551, i32 0, i64 %542
  %553 = load double* %552, align 8
  %554 = load i32* %i, align 4
  %555 = sext i32 %554 to i64
  %556 = load i32* %j, align 4
  %557 = add nsw i32 %556, 1
  %558 = sext i32 %557 to i64
  %559 = load i32* %7, align 4
  %560 = sext i32 %559 to i64
  %561 = load [5 x double]** %9, align 8
  %562 = mul nuw i64 %25, %30
  %563 = mul nsw i64 %560, %562
  %564 = getelementptr inbounds [5 x double]* %561, i64 %563
  %565 = mul nsw i64 %558, %30
  %566 = getelementptr inbounds [5 x double]* %564, i64 %565
  %567 = getelementptr inbounds [5 x double]* %566, i64 %555
  %568 = getelementptr inbounds [5 x double]* %567, i32 0, i64 4
  %569 = load double* %568, align 8
  %570 = fmul double %553, %569
  %571 = fadd double %540, %570
  %572 = load i32* %m, align 4
  %573 = sext i32 %572 to i64
  %574 = load i32* %i, align 4
  %575 = sext i32 %574 to i64
  %576 = load i32* %j, align 4
  %577 = sext i32 %576 to i64
  %578 = load [5 x [5 x double]]** %12, align 8
  %579 = mul nsw i64 %577, %51
  %580 = getelementptr inbounds [5 x [5 x double]]* %578, i64 %579
  %581 = getelementptr inbounds [5 x [5 x double]]* %580, i64 %575
  %582 = getelementptr inbounds [5 x [5 x double]]* %581, i32 0, i64 4
  %583 = getelementptr inbounds [5 x double]* %582, i32 0, i64 %573
  %584 = load double* %583, align 8
  %585 = load i32* %i, align 4
  %586 = add nsw i32 %585, 1
  %587 = sext i32 %586 to i64
  %588 = load i32* %j, align 4
  %589 = sext i32 %588 to i64
  %590 = load i32* %7, align 4
  %591 = sext i32 %590 to i64
  %592 = load [5 x double]** %9, align 8
  %593 = mul nuw i64 %25, %30
  %594 = mul nsw i64 %591, %593
  %595 = getelementptr inbounds [5 x double]* %592, i64 %594
  %596 = mul nsw i64 %589, %30
  %597 = getelementptr inbounds [5 x double]* %595, i64 %596
  %598 = getelementptr inbounds [5 x double]* %597, i64 %587
  %599 = getelementptr inbounds [5 x double]* %598, i32 0, i64 4
  %600 = load double* %599, align 8
  %601 = fmul double %584, %600
  %602 = fadd double %571, %601
  %603 = fmul double %293, %602
  %604 = fadd double %292, %603
  %605 = load i32* %m, align 4
  %606 = sext i32 %605 to i64
  %607 = load i32* %i, align 4
  %608 = sext i32 %607 to i64
  %609 = load i32* %j, align 4
  %610 = sext i32 %609 to i64
  %611 = load [5 x double]** %10, align 8
  %612 = mul nsw i64 %610, %37
  %613 = getelementptr inbounds [5 x double]* %611, i64 %612
  %614 = getelementptr inbounds [5 x double]* %613, i64 %608
  %615 = getelementptr inbounds [5 x double]* %614, i32 0, i64 %606
  store double %604, double* %615, align 8
  br label %616

; <label>:616                                     ; preds = %280
  %617 = load i32* %m, align 4
  %618 = add nsw i32 %617, 1
  store i32 %618, i32* %m, align 4
  br label %277

; <label>:619                                     ; preds = %277
  store i32 0, i32* %m, align 4
  br label %620

; <label>:620                                     ; preds = %709, %619
  %621 = load i32* %m, align 4
  %622 = icmp slt i32 %621, 5
  br i1 %622, label %623, label %712

; <label>:623                                     ; preds = %620
  %624 = load i32* %m, align 4
  %625 = sext i32 %624 to i64
  %626 = load i32* %i, align 4
  %627 = sext i32 %626 to i64
  %628 = load i32* %j, align 4
  %629 = sext i32 %628 to i64
  %630 = load [5 x [5 x double]]** %11, align 8
  %631 = mul nsw i64 %629, %44
  %632 = getelementptr inbounds [5 x [5 x double]]* %630, i64 %631
  %633 = getelementptr inbounds [5 x [5 x double]]* %632, i64 %627
  %634 = getelementptr inbounds [5 x [5 x double]]* %633, i32 0, i64 0
  %635 = getelementptr inbounds [5 x double]* %634, i32 0, i64 %625
  %636 = load double* %635, align 8
  %637 = load i32* %m, align 4
  %638 = sext i32 %637 to i64
  %639 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 %638
  %640 = getelementptr inbounds [5 x double]* %639, i32 0, i64 0
  store double %636, double* %640, align 8
  %641 = load i32* %m, align 4
  %642 = sext i32 %641 to i64
  %643 = load i32* %i, align 4
  %644 = sext i32 %643 to i64
  %645 = load i32* %j, align 4
  %646 = sext i32 %645 to i64
  %647 = load [5 x [5 x double]]** %11, align 8
  %648 = mul nsw i64 %646, %44
  %649 = getelementptr inbounds [5 x [5 x double]]* %647, i64 %648
  %650 = getelementptr inbounds [5 x [5 x double]]* %649, i64 %644
  %651 = getelementptr inbounds [5 x [5 x double]]* %650, i32 0, i64 1
  %652 = getelementptr inbounds [5 x double]* %651, i32 0, i64 %642
  %653 = load double* %652, align 8
  %654 = load i32* %m, align 4
  %655 = sext i32 %654 to i64
  %656 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 %655
  %657 = getelementptr inbounds [5 x double]* %656, i32 0, i64 1
  store double %653, double* %657, align 8
  %658 = load i32* %m, align 4
  %659 = sext i32 %658 to i64
  %660 = load i32* %i, align 4
  %661 = sext i32 %660 to i64
  %662 = load i32* %j, align 4
  %663 = sext i32 %662 to i64
  %664 = load [5 x [5 x double]]** %11, align 8
  %665 = mul nsw i64 %663, %44
  %666 = getelementptr inbounds [5 x [5 x double]]* %664, i64 %665
  %667 = getelementptr inbounds [5 x [5 x double]]* %666, i64 %661
  %668 = getelementptr inbounds [5 x [5 x double]]* %667, i32 0, i64 2
  %669 = getelementptr inbounds [5 x double]* %668, i32 0, i64 %659
  %670 = load double* %669, align 8
  %671 = load i32* %m, align 4
  %672 = sext i32 %671 to i64
  %673 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 %672
  %674 = getelementptr inbounds [5 x double]* %673, i32 0, i64 2
  store double %670, double* %674, align 8
  %675 = load i32* %m, align 4
  %676 = sext i32 %675 to i64
  %677 = load i32* %i, align 4
  %678 = sext i32 %677 to i64
  %679 = load i32* %j, align 4
  %680 = sext i32 %679 to i64
  %681 = load [5 x [5 x double]]** %11, align 8
  %682 = mul nsw i64 %680, %44
  %683 = getelementptr inbounds [5 x [5 x double]]* %681, i64 %682
  %684 = getelementptr inbounds [5 x [5 x double]]* %683, i64 %678
  %685 = getelementptr inbounds [5 x [5 x double]]* %684, i32 0, i64 3
  %686 = getelementptr inbounds [5 x double]* %685, i32 0, i64 %676
  %687 = load double* %686, align 8
  %688 = load i32* %m, align 4
  %689 = sext i32 %688 to i64
  %690 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 %689
  %691 = getelementptr inbounds [5 x double]* %690, i32 0, i64 3
  store double %687, double* %691, align 8
  %692 = load i32* %m, align 4
  %693 = sext i32 %692 to i64
  %694 = load i32* %i, align 4
  %695 = sext i32 %694 to i64
  %696 = load i32* %j, align 4
  %697 = sext i32 %696 to i64
  %698 = load [5 x [5 x double]]** %11, align 8
  %699 = mul nsw i64 %697, %44
  %700 = getelementptr inbounds [5 x [5 x double]]* %698, i64 %699
  %701 = getelementptr inbounds [5 x [5 x double]]* %700, i64 %695
  %702 = getelementptr inbounds [5 x [5 x double]]* %701, i32 0, i64 4
  %703 = getelementptr inbounds [5 x double]* %702, i32 0, i64 %693
  %704 = load double* %703, align 8
  %705 = load i32* %m, align 4
  %706 = sext i32 %705 to i64
  %707 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 %706
  %708 = getelementptr inbounds [5 x double]* %707, i32 0, i64 4
  store double %704, double* %708, align 8
  br label %709

; <label>:709                                     ; preds = %623
  %710 = load i32* %m, align 4
  %711 = add nsw i32 %710, 1
  store i32 %711, i32* %m, align 4
  br label %620

; <label>:712                                     ; preds = %620
  %713 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %714 = getelementptr inbounds [5 x double]* %713, i32 0, i64 0
  %715 = load double* %714, align 8
  %716 = fdiv double 1.000000e+00, %715
  store double %716, double* %tmp1, align 8
  %717 = load double* %tmp1, align 8
  %718 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %719 = getelementptr inbounds [5 x double]* %718, i32 0, i64 0
  %720 = load double* %719, align 8
  %721 = fmul double %717, %720
  store double %721, double* %tmp, align 8
  %722 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %723 = getelementptr inbounds [5 x double]* %722, i32 0, i64 1
  %724 = load double* %723, align 8
  %725 = load double* %tmp, align 8
  %726 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %727 = getelementptr inbounds [5 x double]* %726, i32 0, i64 1
  %728 = load double* %727, align 8
  %729 = fmul double %725, %728
  %730 = fsub double %724, %729
  %731 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %732 = getelementptr inbounds [5 x double]* %731, i32 0, i64 1
  store double %730, double* %732, align 8
  %733 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %734 = getelementptr inbounds [5 x double]* %733, i32 0, i64 2
  %735 = load double* %734, align 8
  %736 = load double* %tmp, align 8
  %737 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %738 = getelementptr inbounds [5 x double]* %737, i32 0, i64 2
  %739 = load double* %738, align 8
  %740 = fmul double %736, %739
  %741 = fsub double %735, %740
  %742 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %743 = getelementptr inbounds [5 x double]* %742, i32 0, i64 2
  store double %741, double* %743, align 8
  %744 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %745 = getelementptr inbounds [5 x double]* %744, i32 0, i64 3
  %746 = load double* %745, align 8
  %747 = load double* %tmp, align 8
  %748 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %749 = getelementptr inbounds [5 x double]* %748, i32 0, i64 3
  %750 = load double* %749, align 8
  %751 = fmul double %747, %750
  %752 = fsub double %746, %751
  %753 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %754 = getelementptr inbounds [5 x double]* %753, i32 0, i64 3
  store double %752, double* %754, align 8
  %755 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %756 = getelementptr inbounds [5 x double]* %755, i32 0, i64 4
  %757 = load double* %756, align 8
  %758 = load double* %tmp, align 8
  %759 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %760 = getelementptr inbounds [5 x double]* %759, i32 0, i64 4
  %761 = load double* %760, align 8
  %762 = fmul double %758, %761
  %763 = fsub double %757, %762
  %764 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %765 = getelementptr inbounds [5 x double]* %764, i32 0, i64 4
  store double %763, double* %765, align 8
  %766 = load i32* %i, align 4
  %767 = sext i32 %766 to i64
  %768 = load i32* %j, align 4
  %769 = sext i32 %768 to i64
  %770 = load [5 x double]** %10, align 8
  %771 = mul nsw i64 %769, %37
  %772 = getelementptr inbounds [5 x double]* %770, i64 %771
  %773 = getelementptr inbounds [5 x double]* %772, i64 %767
  %774 = getelementptr inbounds [5 x double]* %773, i32 0, i64 1
  %775 = load double* %774, align 8
  %776 = load i32* %i, align 4
  %777 = sext i32 %776 to i64
  %778 = load i32* %j, align 4
  %779 = sext i32 %778 to i64
  %780 = load [5 x double]** %10, align 8
  %781 = mul nsw i64 %779, %37
  %782 = getelementptr inbounds [5 x double]* %780, i64 %781
  %783 = getelementptr inbounds [5 x double]* %782, i64 %777
  %784 = getelementptr inbounds [5 x double]* %783, i32 0, i64 0
  %785 = load double* %784, align 8
  %786 = load double* %tmp, align 8
  %787 = fmul double %785, %786
  %788 = fsub double %775, %787
  %789 = load i32* %i, align 4
  %790 = sext i32 %789 to i64
  %791 = load i32* %j, align 4
  %792 = sext i32 %791 to i64
  %793 = load [5 x double]** %10, align 8
  %794 = mul nsw i64 %792, %37
  %795 = getelementptr inbounds [5 x double]* %793, i64 %794
  %796 = getelementptr inbounds [5 x double]* %795, i64 %790
  %797 = getelementptr inbounds [5 x double]* %796, i32 0, i64 1
  store double %788, double* %797, align 8
  %798 = load double* %tmp1, align 8
  %799 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %800 = getelementptr inbounds [5 x double]* %799, i32 0, i64 0
  %801 = load double* %800, align 8
  %802 = fmul double %798, %801
  store double %802, double* %tmp, align 8
  %803 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %804 = getelementptr inbounds [5 x double]* %803, i32 0, i64 1
  %805 = load double* %804, align 8
  %806 = load double* %tmp, align 8
  %807 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %808 = getelementptr inbounds [5 x double]* %807, i32 0, i64 1
  %809 = load double* %808, align 8
  %810 = fmul double %806, %809
  %811 = fsub double %805, %810
  %812 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %813 = getelementptr inbounds [5 x double]* %812, i32 0, i64 1
  store double %811, double* %813, align 8
  %814 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %815 = getelementptr inbounds [5 x double]* %814, i32 0, i64 2
  %816 = load double* %815, align 8
  %817 = load double* %tmp, align 8
  %818 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %819 = getelementptr inbounds [5 x double]* %818, i32 0, i64 2
  %820 = load double* %819, align 8
  %821 = fmul double %817, %820
  %822 = fsub double %816, %821
  %823 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %824 = getelementptr inbounds [5 x double]* %823, i32 0, i64 2
  store double %822, double* %824, align 8
  %825 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %826 = getelementptr inbounds [5 x double]* %825, i32 0, i64 3
  %827 = load double* %826, align 8
  %828 = load double* %tmp, align 8
  %829 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %830 = getelementptr inbounds [5 x double]* %829, i32 0, i64 3
  %831 = load double* %830, align 8
  %832 = fmul double %828, %831
  %833 = fsub double %827, %832
  %834 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %835 = getelementptr inbounds [5 x double]* %834, i32 0, i64 3
  store double %833, double* %835, align 8
  %836 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %837 = getelementptr inbounds [5 x double]* %836, i32 0, i64 4
  %838 = load double* %837, align 8
  %839 = load double* %tmp, align 8
  %840 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %841 = getelementptr inbounds [5 x double]* %840, i32 0, i64 4
  %842 = load double* %841, align 8
  %843 = fmul double %839, %842
  %844 = fsub double %838, %843
  %845 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %846 = getelementptr inbounds [5 x double]* %845, i32 0, i64 4
  store double %844, double* %846, align 8
  %847 = load i32* %i, align 4
  %848 = sext i32 %847 to i64
  %849 = load i32* %j, align 4
  %850 = sext i32 %849 to i64
  %851 = load [5 x double]** %10, align 8
  %852 = mul nsw i64 %850, %37
  %853 = getelementptr inbounds [5 x double]* %851, i64 %852
  %854 = getelementptr inbounds [5 x double]* %853, i64 %848
  %855 = getelementptr inbounds [5 x double]* %854, i32 0, i64 2
  %856 = load double* %855, align 8
  %857 = load i32* %i, align 4
  %858 = sext i32 %857 to i64
  %859 = load i32* %j, align 4
  %860 = sext i32 %859 to i64
  %861 = load [5 x double]** %10, align 8
  %862 = mul nsw i64 %860, %37
  %863 = getelementptr inbounds [5 x double]* %861, i64 %862
  %864 = getelementptr inbounds [5 x double]* %863, i64 %858
  %865 = getelementptr inbounds [5 x double]* %864, i32 0, i64 0
  %866 = load double* %865, align 8
  %867 = load double* %tmp, align 8
  %868 = fmul double %866, %867
  %869 = fsub double %856, %868
  %870 = load i32* %i, align 4
  %871 = sext i32 %870 to i64
  %872 = load i32* %j, align 4
  %873 = sext i32 %872 to i64
  %874 = load [5 x double]** %10, align 8
  %875 = mul nsw i64 %873, %37
  %876 = getelementptr inbounds [5 x double]* %874, i64 %875
  %877 = getelementptr inbounds [5 x double]* %876, i64 %871
  %878 = getelementptr inbounds [5 x double]* %877, i32 0, i64 2
  store double %869, double* %878, align 8
  %879 = load double* %tmp1, align 8
  %880 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %881 = getelementptr inbounds [5 x double]* %880, i32 0, i64 0
  %882 = load double* %881, align 8
  %883 = fmul double %879, %882
  store double %883, double* %tmp, align 8
  %884 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %885 = getelementptr inbounds [5 x double]* %884, i32 0, i64 1
  %886 = load double* %885, align 8
  %887 = load double* %tmp, align 8
  %888 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %889 = getelementptr inbounds [5 x double]* %888, i32 0, i64 1
  %890 = load double* %889, align 8
  %891 = fmul double %887, %890
  %892 = fsub double %886, %891
  %893 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %894 = getelementptr inbounds [5 x double]* %893, i32 0, i64 1
  store double %892, double* %894, align 8
  %895 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %896 = getelementptr inbounds [5 x double]* %895, i32 0, i64 2
  %897 = load double* %896, align 8
  %898 = load double* %tmp, align 8
  %899 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %900 = getelementptr inbounds [5 x double]* %899, i32 0, i64 2
  %901 = load double* %900, align 8
  %902 = fmul double %898, %901
  %903 = fsub double %897, %902
  %904 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %905 = getelementptr inbounds [5 x double]* %904, i32 0, i64 2
  store double %903, double* %905, align 8
  %906 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %907 = getelementptr inbounds [5 x double]* %906, i32 0, i64 3
  %908 = load double* %907, align 8
  %909 = load double* %tmp, align 8
  %910 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %911 = getelementptr inbounds [5 x double]* %910, i32 0, i64 3
  %912 = load double* %911, align 8
  %913 = fmul double %909, %912
  %914 = fsub double %908, %913
  %915 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %916 = getelementptr inbounds [5 x double]* %915, i32 0, i64 3
  store double %914, double* %916, align 8
  %917 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %918 = getelementptr inbounds [5 x double]* %917, i32 0, i64 4
  %919 = load double* %918, align 8
  %920 = load double* %tmp, align 8
  %921 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %922 = getelementptr inbounds [5 x double]* %921, i32 0, i64 4
  %923 = load double* %922, align 8
  %924 = fmul double %920, %923
  %925 = fsub double %919, %924
  %926 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %927 = getelementptr inbounds [5 x double]* %926, i32 0, i64 4
  store double %925, double* %927, align 8
  %928 = load i32* %i, align 4
  %929 = sext i32 %928 to i64
  %930 = load i32* %j, align 4
  %931 = sext i32 %930 to i64
  %932 = load [5 x double]** %10, align 8
  %933 = mul nsw i64 %931, %37
  %934 = getelementptr inbounds [5 x double]* %932, i64 %933
  %935 = getelementptr inbounds [5 x double]* %934, i64 %929
  %936 = getelementptr inbounds [5 x double]* %935, i32 0, i64 3
  %937 = load double* %936, align 8
  %938 = load i32* %i, align 4
  %939 = sext i32 %938 to i64
  %940 = load i32* %j, align 4
  %941 = sext i32 %940 to i64
  %942 = load [5 x double]** %10, align 8
  %943 = mul nsw i64 %941, %37
  %944 = getelementptr inbounds [5 x double]* %942, i64 %943
  %945 = getelementptr inbounds [5 x double]* %944, i64 %939
  %946 = getelementptr inbounds [5 x double]* %945, i32 0, i64 0
  %947 = load double* %946, align 8
  %948 = load double* %tmp, align 8
  %949 = fmul double %947, %948
  %950 = fsub double %937, %949
  %951 = load i32* %i, align 4
  %952 = sext i32 %951 to i64
  %953 = load i32* %j, align 4
  %954 = sext i32 %953 to i64
  %955 = load [5 x double]** %10, align 8
  %956 = mul nsw i64 %954, %37
  %957 = getelementptr inbounds [5 x double]* %955, i64 %956
  %958 = getelementptr inbounds [5 x double]* %957, i64 %952
  %959 = getelementptr inbounds [5 x double]* %958, i32 0, i64 3
  store double %950, double* %959, align 8
  %960 = load double* %tmp1, align 8
  %961 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %962 = getelementptr inbounds [5 x double]* %961, i32 0, i64 0
  %963 = load double* %962, align 8
  %964 = fmul double %960, %963
  store double %964, double* %tmp, align 8
  %965 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %966 = getelementptr inbounds [5 x double]* %965, i32 0, i64 1
  %967 = load double* %966, align 8
  %968 = load double* %tmp, align 8
  %969 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %970 = getelementptr inbounds [5 x double]* %969, i32 0, i64 1
  %971 = load double* %970, align 8
  %972 = fmul double %968, %971
  %973 = fsub double %967, %972
  %974 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %975 = getelementptr inbounds [5 x double]* %974, i32 0, i64 1
  store double %973, double* %975, align 8
  %976 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %977 = getelementptr inbounds [5 x double]* %976, i32 0, i64 2
  %978 = load double* %977, align 8
  %979 = load double* %tmp, align 8
  %980 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %981 = getelementptr inbounds [5 x double]* %980, i32 0, i64 2
  %982 = load double* %981, align 8
  %983 = fmul double %979, %982
  %984 = fsub double %978, %983
  %985 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %986 = getelementptr inbounds [5 x double]* %985, i32 0, i64 2
  store double %984, double* %986, align 8
  %987 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %988 = getelementptr inbounds [5 x double]* %987, i32 0, i64 3
  %989 = load double* %988, align 8
  %990 = load double* %tmp, align 8
  %991 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %992 = getelementptr inbounds [5 x double]* %991, i32 0, i64 3
  %993 = load double* %992, align 8
  %994 = fmul double %990, %993
  %995 = fsub double %989, %994
  %996 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %997 = getelementptr inbounds [5 x double]* %996, i32 0, i64 3
  store double %995, double* %997, align 8
  %998 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %999 = getelementptr inbounds [5 x double]* %998, i32 0, i64 4
  %1000 = load double* %999, align 8
  %1001 = load double* %tmp, align 8
  %1002 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %1003 = getelementptr inbounds [5 x double]* %1002, i32 0, i64 4
  %1004 = load double* %1003, align 8
  %1005 = fmul double %1001, %1004
  %1006 = fsub double %1000, %1005
  %1007 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %1008 = getelementptr inbounds [5 x double]* %1007, i32 0, i64 4
  store double %1006, double* %1008, align 8
  %1009 = load i32* %i, align 4
  %1010 = sext i32 %1009 to i64
  %1011 = load i32* %j, align 4
  %1012 = sext i32 %1011 to i64
  %1013 = load [5 x double]** %10, align 8
  %1014 = mul nsw i64 %1012, %37
  %1015 = getelementptr inbounds [5 x double]* %1013, i64 %1014
  %1016 = getelementptr inbounds [5 x double]* %1015, i64 %1010
  %1017 = getelementptr inbounds [5 x double]* %1016, i32 0, i64 4
  %1018 = load double* %1017, align 8
  %1019 = load i32* %i, align 4
  %1020 = sext i32 %1019 to i64
  %1021 = load i32* %j, align 4
  %1022 = sext i32 %1021 to i64
  %1023 = load [5 x double]** %10, align 8
  %1024 = mul nsw i64 %1022, %37
  %1025 = getelementptr inbounds [5 x double]* %1023, i64 %1024
  %1026 = getelementptr inbounds [5 x double]* %1025, i64 %1020
  %1027 = getelementptr inbounds [5 x double]* %1026, i32 0, i64 0
  %1028 = load double* %1027, align 8
  %1029 = load double* %tmp, align 8
  %1030 = fmul double %1028, %1029
  %1031 = fsub double %1018, %1030
  %1032 = load i32* %i, align 4
  %1033 = sext i32 %1032 to i64
  %1034 = load i32* %j, align 4
  %1035 = sext i32 %1034 to i64
  %1036 = load [5 x double]** %10, align 8
  %1037 = mul nsw i64 %1035, %37
  %1038 = getelementptr inbounds [5 x double]* %1036, i64 %1037
  %1039 = getelementptr inbounds [5 x double]* %1038, i64 %1033
  %1040 = getelementptr inbounds [5 x double]* %1039, i32 0, i64 4
  store double %1031, double* %1040, align 8
  %1041 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %1042 = getelementptr inbounds [5 x double]* %1041, i32 0, i64 1
  %1043 = load double* %1042, align 8
  %1044 = fdiv double 1.000000e+00, %1043
  store double %1044, double* %tmp1, align 8
  %1045 = load double* %tmp1, align 8
  %1046 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %1047 = getelementptr inbounds [5 x double]* %1046, i32 0, i64 1
  %1048 = load double* %1047, align 8
  %1049 = fmul double %1045, %1048
  store double %1049, double* %tmp, align 8
  %1050 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %1051 = getelementptr inbounds [5 x double]* %1050, i32 0, i64 2
  %1052 = load double* %1051, align 8
  %1053 = load double* %tmp, align 8
  %1054 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %1055 = getelementptr inbounds [5 x double]* %1054, i32 0, i64 2
  %1056 = load double* %1055, align 8
  %1057 = fmul double %1053, %1056
  %1058 = fsub double %1052, %1057
  %1059 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %1060 = getelementptr inbounds [5 x double]* %1059, i32 0, i64 2
  store double %1058, double* %1060, align 8
  %1061 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %1062 = getelementptr inbounds [5 x double]* %1061, i32 0, i64 3
  %1063 = load double* %1062, align 8
  %1064 = load double* %tmp, align 8
  %1065 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %1066 = getelementptr inbounds [5 x double]* %1065, i32 0, i64 3
  %1067 = load double* %1066, align 8
  %1068 = fmul double %1064, %1067
  %1069 = fsub double %1063, %1068
  %1070 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %1071 = getelementptr inbounds [5 x double]* %1070, i32 0, i64 3
  store double %1069, double* %1071, align 8
  %1072 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %1073 = getelementptr inbounds [5 x double]* %1072, i32 0, i64 4
  %1074 = load double* %1073, align 8
  %1075 = load double* %tmp, align 8
  %1076 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %1077 = getelementptr inbounds [5 x double]* %1076, i32 0, i64 4
  %1078 = load double* %1077, align 8
  %1079 = fmul double %1075, %1078
  %1080 = fsub double %1074, %1079
  %1081 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %1082 = getelementptr inbounds [5 x double]* %1081, i32 0, i64 4
  store double %1080, double* %1082, align 8
  %1083 = load i32* %i, align 4
  %1084 = sext i32 %1083 to i64
  %1085 = load i32* %j, align 4
  %1086 = sext i32 %1085 to i64
  %1087 = load [5 x double]** %10, align 8
  %1088 = mul nsw i64 %1086, %37
  %1089 = getelementptr inbounds [5 x double]* %1087, i64 %1088
  %1090 = getelementptr inbounds [5 x double]* %1089, i64 %1084
  %1091 = getelementptr inbounds [5 x double]* %1090, i32 0, i64 2
  %1092 = load double* %1091, align 8
  %1093 = load i32* %i, align 4
  %1094 = sext i32 %1093 to i64
  %1095 = load i32* %j, align 4
  %1096 = sext i32 %1095 to i64
  %1097 = load [5 x double]** %10, align 8
  %1098 = mul nsw i64 %1096, %37
  %1099 = getelementptr inbounds [5 x double]* %1097, i64 %1098
  %1100 = getelementptr inbounds [5 x double]* %1099, i64 %1094
  %1101 = getelementptr inbounds [5 x double]* %1100, i32 0, i64 1
  %1102 = load double* %1101, align 8
  %1103 = load double* %tmp, align 8
  %1104 = fmul double %1102, %1103
  %1105 = fsub double %1092, %1104
  %1106 = load i32* %i, align 4
  %1107 = sext i32 %1106 to i64
  %1108 = load i32* %j, align 4
  %1109 = sext i32 %1108 to i64
  %1110 = load [5 x double]** %10, align 8
  %1111 = mul nsw i64 %1109, %37
  %1112 = getelementptr inbounds [5 x double]* %1110, i64 %1111
  %1113 = getelementptr inbounds [5 x double]* %1112, i64 %1107
  %1114 = getelementptr inbounds [5 x double]* %1113, i32 0, i64 2
  store double %1105, double* %1114, align 8
  %1115 = load double* %tmp1, align 8
  %1116 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %1117 = getelementptr inbounds [5 x double]* %1116, i32 0, i64 1
  %1118 = load double* %1117, align 8
  %1119 = fmul double %1115, %1118
  store double %1119, double* %tmp, align 8
  %1120 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %1121 = getelementptr inbounds [5 x double]* %1120, i32 0, i64 2
  %1122 = load double* %1121, align 8
  %1123 = load double* %tmp, align 8
  %1124 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %1125 = getelementptr inbounds [5 x double]* %1124, i32 0, i64 2
  %1126 = load double* %1125, align 8
  %1127 = fmul double %1123, %1126
  %1128 = fsub double %1122, %1127
  %1129 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %1130 = getelementptr inbounds [5 x double]* %1129, i32 0, i64 2
  store double %1128, double* %1130, align 8
  %1131 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %1132 = getelementptr inbounds [5 x double]* %1131, i32 0, i64 3
  %1133 = load double* %1132, align 8
  %1134 = load double* %tmp, align 8
  %1135 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %1136 = getelementptr inbounds [5 x double]* %1135, i32 0, i64 3
  %1137 = load double* %1136, align 8
  %1138 = fmul double %1134, %1137
  %1139 = fsub double %1133, %1138
  %1140 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %1141 = getelementptr inbounds [5 x double]* %1140, i32 0, i64 3
  store double %1139, double* %1141, align 8
  %1142 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %1143 = getelementptr inbounds [5 x double]* %1142, i32 0, i64 4
  %1144 = load double* %1143, align 8
  %1145 = load double* %tmp, align 8
  %1146 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %1147 = getelementptr inbounds [5 x double]* %1146, i32 0, i64 4
  %1148 = load double* %1147, align 8
  %1149 = fmul double %1145, %1148
  %1150 = fsub double %1144, %1149
  %1151 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %1152 = getelementptr inbounds [5 x double]* %1151, i32 0, i64 4
  store double %1150, double* %1152, align 8
  %1153 = load i32* %i, align 4
  %1154 = sext i32 %1153 to i64
  %1155 = load i32* %j, align 4
  %1156 = sext i32 %1155 to i64
  %1157 = load [5 x double]** %10, align 8
  %1158 = mul nsw i64 %1156, %37
  %1159 = getelementptr inbounds [5 x double]* %1157, i64 %1158
  %1160 = getelementptr inbounds [5 x double]* %1159, i64 %1154
  %1161 = getelementptr inbounds [5 x double]* %1160, i32 0, i64 3
  %1162 = load double* %1161, align 8
  %1163 = load i32* %i, align 4
  %1164 = sext i32 %1163 to i64
  %1165 = load i32* %j, align 4
  %1166 = sext i32 %1165 to i64
  %1167 = load [5 x double]** %10, align 8
  %1168 = mul nsw i64 %1166, %37
  %1169 = getelementptr inbounds [5 x double]* %1167, i64 %1168
  %1170 = getelementptr inbounds [5 x double]* %1169, i64 %1164
  %1171 = getelementptr inbounds [5 x double]* %1170, i32 0, i64 1
  %1172 = load double* %1171, align 8
  %1173 = load double* %tmp, align 8
  %1174 = fmul double %1172, %1173
  %1175 = fsub double %1162, %1174
  %1176 = load i32* %i, align 4
  %1177 = sext i32 %1176 to i64
  %1178 = load i32* %j, align 4
  %1179 = sext i32 %1178 to i64
  %1180 = load [5 x double]** %10, align 8
  %1181 = mul nsw i64 %1179, %37
  %1182 = getelementptr inbounds [5 x double]* %1180, i64 %1181
  %1183 = getelementptr inbounds [5 x double]* %1182, i64 %1177
  %1184 = getelementptr inbounds [5 x double]* %1183, i32 0, i64 3
  store double %1175, double* %1184, align 8
  %1185 = load double* %tmp1, align 8
  %1186 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %1187 = getelementptr inbounds [5 x double]* %1186, i32 0, i64 1
  %1188 = load double* %1187, align 8
  %1189 = fmul double %1185, %1188
  store double %1189, double* %tmp, align 8
  %1190 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %1191 = getelementptr inbounds [5 x double]* %1190, i32 0, i64 2
  %1192 = load double* %1191, align 8
  %1193 = load double* %tmp, align 8
  %1194 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %1195 = getelementptr inbounds [5 x double]* %1194, i32 0, i64 2
  %1196 = load double* %1195, align 8
  %1197 = fmul double %1193, %1196
  %1198 = fsub double %1192, %1197
  %1199 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %1200 = getelementptr inbounds [5 x double]* %1199, i32 0, i64 2
  store double %1198, double* %1200, align 8
  %1201 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %1202 = getelementptr inbounds [5 x double]* %1201, i32 0, i64 3
  %1203 = load double* %1202, align 8
  %1204 = load double* %tmp, align 8
  %1205 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %1206 = getelementptr inbounds [5 x double]* %1205, i32 0, i64 3
  %1207 = load double* %1206, align 8
  %1208 = fmul double %1204, %1207
  %1209 = fsub double %1203, %1208
  %1210 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %1211 = getelementptr inbounds [5 x double]* %1210, i32 0, i64 3
  store double %1209, double* %1211, align 8
  %1212 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %1213 = getelementptr inbounds [5 x double]* %1212, i32 0, i64 4
  %1214 = load double* %1213, align 8
  %1215 = load double* %tmp, align 8
  %1216 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %1217 = getelementptr inbounds [5 x double]* %1216, i32 0, i64 4
  %1218 = load double* %1217, align 8
  %1219 = fmul double %1215, %1218
  %1220 = fsub double %1214, %1219
  %1221 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %1222 = getelementptr inbounds [5 x double]* %1221, i32 0, i64 4
  store double %1220, double* %1222, align 8
  %1223 = load i32* %i, align 4
  %1224 = sext i32 %1223 to i64
  %1225 = load i32* %j, align 4
  %1226 = sext i32 %1225 to i64
  %1227 = load [5 x double]** %10, align 8
  %1228 = mul nsw i64 %1226, %37
  %1229 = getelementptr inbounds [5 x double]* %1227, i64 %1228
  %1230 = getelementptr inbounds [5 x double]* %1229, i64 %1224
  %1231 = getelementptr inbounds [5 x double]* %1230, i32 0, i64 4
  %1232 = load double* %1231, align 8
  %1233 = load i32* %i, align 4
  %1234 = sext i32 %1233 to i64
  %1235 = load i32* %j, align 4
  %1236 = sext i32 %1235 to i64
  %1237 = load [5 x double]** %10, align 8
  %1238 = mul nsw i64 %1236, %37
  %1239 = getelementptr inbounds [5 x double]* %1237, i64 %1238
  %1240 = getelementptr inbounds [5 x double]* %1239, i64 %1234
  %1241 = getelementptr inbounds [5 x double]* %1240, i32 0, i64 1
  %1242 = load double* %1241, align 8
  %1243 = load double* %tmp, align 8
  %1244 = fmul double %1242, %1243
  %1245 = fsub double %1232, %1244
  %1246 = load i32* %i, align 4
  %1247 = sext i32 %1246 to i64
  %1248 = load i32* %j, align 4
  %1249 = sext i32 %1248 to i64
  %1250 = load [5 x double]** %10, align 8
  %1251 = mul nsw i64 %1249, %37
  %1252 = getelementptr inbounds [5 x double]* %1250, i64 %1251
  %1253 = getelementptr inbounds [5 x double]* %1252, i64 %1247
  %1254 = getelementptr inbounds [5 x double]* %1253, i32 0, i64 4
  store double %1245, double* %1254, align 8
  %1255 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %1256 = getelementptr inbounds [5 x double]* %1255, i32 0, i64 2
  %1257 = load double* %1256, align 8
  %1258 = fdiv double 1.000000e+00, %1257
  store double %1258, double* %tmp1, align 8
  %1259 = load double* %tmp1, align 8
  %1260 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %1261 = getelementptr inbounds [5 x double]* %1260, i32 0, i64 2
  %1262 = load double* %1261, align 8
  %1263 = fmul double %1259, %1262
  store double %1263, double* %tmp, align 8
  %1264 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %1265 = getelementptr inbounds [5 x double]* %1264, i32 0, i64 3
  %1266 = load double* %1265, align 8
  %1267 = load double* %tmp, align 8
  %1268 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %1269 = getelementptr inbounds [5 x double]* %1268, i32 0, i64 3
  %1270 = load double* %1269, align 8
  %1271 = fmul double %1267, %1270
  %1272 = fsub double %1266, %1271
  %1273 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %1274 = getelementptr inbounds [5 x double]* %1273, i32 0, i64 3
  store double %1272, double* %1274, align 8
  %1275 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %1276 = getelementptr inbounds [5 x double]* %1275, i32 0, i64 4
  %1277 = load double* %1276, align 8
  %1278 = load double* %tmp, align 8
  %1279 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %1280 = getelementptr inbounds [5 x double]* %1279, i32 0, i64 4
  %1281 = load double* %1280, align 8
  %1282 = fmul double %1278, %1281
  %1283 = fsub double %1277, %1282
  %1284 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %1285 = getelementptr inbounds [5 x double]* %1284, i32 0, i64 4
  store double %1283, double* %1285, align 8
  %1286 = load i32* %i, align 4
  %1287 = sext i32 %1286 to i64
  %1288 = load i32* %j, align 4
  %1289 = sext i32 %1288 to i64
  %1290 = load [5 x double]** %10, align 8
  %1291 = mul nsw i64 %1289, %37
  %1292 = getelementptr inbounds [5 x double]* %1290, i64 %1291
  %1293 = getelementptr inbounds [5 x double]* %1292, i64 %1287
  %1294 = getelementptr inbounds [5 x double]* %1293, i32 0, i64 3
  %1295 = load double* %1294, align 8
  %1296 = load i32* %i, align 4
  %1297 = sext i32 %1296 to i64
  %1298 = load i32* %j, align 4
  %1299 = sext i32 %1298 to i64
  %1300 = load [5 x double]** %10, align 8
  %1301 = mul nsw i64 %1299, %37
  %1302 = getelementptr inbounds [5 x double]* %1300, i64 %1301
  %1303 = getelementptr inbounds [5 x double]* %1302, i64 %1297
  %1304 = getelementptr inbounds [5 x double]* %1303, i32 0, i64 2
  %1305 = load double* %1304, align 8
  %1306 = load double* %tmp, align 8
  %1307 = fmul double %1305, %1306
  %1308 = fsub double %1295, %1307
  %1309 = load i32* %i, align 4
  %1310 = sext i32 %1309 to i64
  %1311 = load i32* %j, align 4
  %1312 = sext i32 %1311 to i64
  %1313 = load [5 x double]** %10, align 8
  %1314 = mul nsw i64 %1312, %37
  %1315 = getelementptr inbounds [5 x double]* %1313, i64 %1314
  %1316 = getelementptr inbounds [5 x double]* %1315, i64 %1310
  %1317 = getelementptr inbounds [5 x double]* %1316, i32 0, i64 3
  store double %1308, double* %1317, align 8
  %1318 = load double* %tmp1, align 8
  %1319 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %1320 = getelementptr inbounds [5 x double]* %1319, i32 0, i64 2
  %1321 = load double* %1320, align 8
  %1322 = fmul double %1318, %1321
  store double %1322, double* %tmp, align 8
  %1323 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %1324 = getelementptr inbounds [5 x double]* %1323, i32 0, i64 3
  %1325 = load double* %1324, align 8
  %1326 = load double* %tmp, align 8
  %1327 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %1328 = getelementptr inbounds [5 x double]* %1327, i32 0, i64 3
  %1329 = load double* %1328, align 8
  %1330 = fmul double %1326, %1329
  %1331 = fsub double %1325, %1330
  %1332 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %1333 = getelementptr inbounds [5 x double]* %1332, i32 0, i64 3
  store double %1331, double* %1333, align 8
  %1334 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %1335 = getelementptr inbounds [5 x double]* %1334, i32 0, i64 4
  %1336 = load double* %1335, align 8
  %1337 = load double* %tmp, align 8
  %1338 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %1339 = getelementptr inbounds [5 x double]* %1338, i32 0, i64 4
  %1340 = load double* %1339, align 8
  %1341 = fmul double %1337, %1340
  %1342 = fsub double %1336, %1341
  %1343 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %1344 = getelementptr inbounds [5 x double]* %1343, i32 0, i64 4
  store double %1342, double* %1344, align 8
  %1345 = load i32* %i, align 4
  %1346 = sext i32 %1345 to i64
  %1347 = load i32* %j, align 4
  %1348 = sext i32 %1347 to i64
  %1349 = load [5 x double]** %10, align 8
  %1350 = mul nsw i64 %1348, %37
  %1351 = getelementptr inbounds [5 x double]* %1349, i64 %1350
  %1352 = getelementptr inbounds [5 x double]* %1351, i64 %1346
  %1353 = getelementptr inbounds [5 x double]* %1352, i32 0, i64 4
  %1354 = load double* %1353, align 8
  %1355 = load i32* %i, align 4
  %1356 = sext i32 %1355 to i64
  %1357 = load i32* %j, align 4
  %1358 = sext i32 %1357 to i64
  %1359 = load [5 x double]** %10, align 8
  %1360 = mul nsw i64 %1358, %37
  %1361 = getelementptr inbounds [5 x double]* %1359, i64 %1360
  %1362 = getelementptr inbounds [5 x double]* %1361, i64 %1356
  %1363 = getelementptr inbounds [5 x double]* %1362, i32 0, i64 2
  %1364 = load double* %1363, align 8
  %1365 = load double* %tmp, align 8
  %1366 = fmul double %1364, %1365
  %1367 = fsub double %1354, %1366
  %1368 = load i32* %i, align 4
  %1369 = sext i32 %1368 to i64
  %1370 = load i32* %j, align 4
  %1371 = sext i32 %1370 to i64
  %1372 = load [5 x double]** %10, align 8
  %1373 = mul nsw i64 %1371, %37
  %1374 = getelementptr inbounds [5 x double]* %1372, i64 %1373
  %1375 = getelementptr inbounds [5 x double]* %1374, i64 %1369
  %1376 = getelementptr inbounds [5 x double]* %1375, i32 0, i64 4
  store double %1367, double* %1376, align 8
  %1377 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %1378 = getelementptr inbounds [5 x double]* %1377, i32 0, i64 3
  %1379 = load double* %1378, align 8
  %1380 = fdiv double 1.000000e+00, %1379
  store double %1380, double* %tmp1, align 8
  %1381 = load double* %tmp1, align 8
  %1382 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %1383 = getelementptr inbounds [5 x double]* %1382, i32 0, i64 3
  %1384 = load double* %1383, align 8
  %1385 = fmul double %1381, %1384
  store double %1385, double* %tmp, align 8
  %1386 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %1387 = getelementptr inbounds [5 x double]* %1386, i32 0, i64 4
  %1388 = load double* %1387, align 8
  %1389 = load double* %tmp, align 8
  %1390 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %1391 = getelementptr inbounds [5 x double]* %1390, i32 0, i64 4
  %1392 = load double* %1391, align 8
  %1393 = fmul double %1389, %1392
  %1394 = fsub double %1388, %1393
  %1395 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %1396 = getelementptr inbounds [5 x double]* %1395, i32 0, i64 4
  store double %1394, double* %1396, align 8
  %1397 = load i32* %i, align 4
  %1398 = sext i32 %1397 to i64
  %1399 = load i32* %j, align 4
  %1400 = sext i32 %1399 to i64
  %1401 = load [5 x double]** %10, align 8
  %1402 = mul nsw i64 %1400, %37
  %1403 = getelementptr inbounds [5 x double]* %1401, i64 %1402
  %1404 = getelementptr inbounds [5 x double]* %1403, i64 %1398
  %1405 = getelementptr inbounds [5 x double]* %1404, i32 0, i64 4
  %1406 = load double* %1405, align 8
  %1407 = load i32* %i, align 4
  %1408 = sext i32 %1407 to i64
  %1409 = load i32* %j, align 4
  %1410 = sext i32 %1409 to i64
  %1411 = load [5 x double]** %10, align 8
  %1412 = mul nsw i64 %1410, %37
  %1413 = getelementptr inbounds [5 x double]* %1411, i64 %1412
  %1414 = getelementptr inbounds [5 x double]* %1413, i64 %1408
  %1415 = getelementptr inbounds [5 x double]* %1414, i32 0, i64 3
  %1416 = load double* %1415, align 8
  %1417 = load double* %tmp, align 8
  %1418 = fmul double %1416, %1417
  %1419 = fsub double %1406, %1418
  %1420 = load i32* %i, align 4
  %1421 = sext i32 %1420 to i64
  %1422 = load i32* %j, align 4
  %1423 = sext i32 %1422 to i64
  %1424 = load [5 x double]** %10, align 8
  %1425 = mul nsw i64 %1423, %37
  %1426 = getelementptr inbounds [5 x double]* %1424, i64 %1425
  %1427 = getelementptr inbounds [5 x double]* %1426, i64 %1421
  %1428 = getelementptr inbounds [5 x double]* %1427, i32 0, i64 4
  store double %1419, double* %1428, align 8
  %1429 = load i32* %i, align 4
  %1430 = sext i32 %1429 to i64
  %1431 = load i32* %j, align 4
  %1432 = sext i32 %1431 to i64
  %1433 = load [5 x double]** %10, align 8
  %1434 = mul nsw i64 %1432, %37
  %1435 = getelementptr inbounds [5 x double]* %1433, i64 %1434
  %1436 = getelementptr inbounds [5 x double]* %1435, i64 %1430
  %1437 = getelementptr inbounds [5 x double]* %1436, i32 0, i64 4
  %1438 = load double* %1437, align 8
  %1439 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 4
  %1440 = getelementptr inbounds [5 x double]* %1439, i32 0, i64 4
  %1441 = load double* %1440, align 8
  %1442 = fdiv double %1438, %1441
  %1443 = load i32* %i, align 4
  %1444 = sext i32 %1443 to i64
  %1445 = load i32* %j, align 4
  %1446 = sext i32 %1445 to i64
  %1447 = load [5 x double]** %10, align 8
  %1448 = mul nsw i64 %1446, %37
  %1449 = getelementptr inbounds [5 x double]* %1447, i64 %1448
  %1450 = getelementptr inbounds [5 x double]* %1449, i64 %1444
  %1451 = getelementptr inbounds [5 x double]* %1450, i32 0, i64 4
  store double %1442, double* %1451, align 8
  %1452 = load i32* %i, align 4
  %1453 = sext i32 %1452 to i64
  %1454 = load i32* %j, align 4
  %1455 = sext i32 %1454 to i64
  %1456 = load [5 x double]** %10, align 8
  %1457 = mul nsw i64 %1455, %37
  %1458 = getelementptr inbounds [5 x double]* %1456, i64 %1457
  %1459 = getelementptr inbounds [5 x double]* %1458, i64 %1453
  %1460 = getelementptr inbounds [5 x double]* %1459, i32 0, i64 3
  %1461 = load double* %1460, align 8
  %1462 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %1463 = getelementptr inbounds [5 x double]* %1462, i32 0, i64 4
  %1464 = load double* %1463, align 8
  %1465 = load i32* %i, align 4
  %1466 = sext i32 %1465 to i64
  %1467 = load i32* %j, align 4
  %1468 = sext i32 %1467 to i64
  %1469 = load [5 x double]** %10, align 8
  %1470 = mul nsw i64 %1468, %37
  %1471 = getelementptr inbounds [5 x double]* %1469, i64 %1470
  %1472 = getelementptr inbounds [5 x double]* %1471, i64 %1466
  %1473 = getelementptr inbounds [5 x double]* %1472, i32 0, i64 4
  %1474 = load double* %1473, align 8
  %1475 = fmul double %1464, %1474
  %1476 = fsub double %1461, %1475
  %1477 = load i32* %i, align 4
  %1478 = sext i32 %1477 to i64
  %1479 = load i32* %j, align 4
  %1480 = sext i32 %1479 to i64
  %1481 = load [5 x double]** %10, align 8
  %1482 = mul nsw i64 %1480, %37
  %1483 = getelementptr inbounds [5 x double]* %1481, i64 %1482
  %1484 = getelementptr inbounds [5 x double]* %1483, i64 %1478
  %1485 = getelementptr inbounds [5 x double]* %1484, i32 0, i64 3
  store double %1476, double* %1485, align 8
  %1486 = load i32* %i, align 4
  %1487 = sext i32 %1486 to i64
  %1488 = load i32* %j, align 4
  %1489 = sext i32 %1488 to i64
  %1490 = load [5 x double]** %10, align 8
  %1491 = mul nsw i64 %1489, %37
  %1492 = getelementptr inbounds [5 x double]* %1490, i64 %1491
  %1493 = getelementptr inbounds [5 x double]* %1492, i64 %1487
  %1494 = getelementptr inbounds [5 x double]* %1493, i32 0, i64 3
  %1495 = load double* %1494, align 8
  %1496 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 3
  %1497 = getelementptr inbounds [5 x double]* %1496, i32 0, i64 3
  %1498 = load double* %1497, align 8
  %1499 = fdiv double %1495, %1498
  %1500 = load i32* %i, align 4
  %1501 = sext i32 %1500 to i64
  %1502 = load i32* %j, align 4
  %1503 = sext i32 %1502 to i64
  %1504 = load [5 x double]** %10, align 8
  %1505 = mul nsw i64 %1503, %37
  %1506 = getelementptr inbounds [5 x double]* %1504, i64 %1505
  %1507 = getelementptr inbounds [5 x double]* %1506, i64 %1501
  %1508 = getelementptr inbounds [5 x double]* %1507, i32 0, i64 3
  store double %1499, double* %1508, align 8
  %1509 = load i32* %i, align 4
  %1510 = sext i32 %1509 to i64
  %1511 = load i32* %j, align 4
  %1512 = sext i32 %1511 to i64
  %1513 = load [5 x double]** %10, align 8
  %1514 = mul nsw i64 %1512, %37
  %1515 = getelementptr inbounds [5 x double]* %1513, i64 %1514
  %1516 = getelementptr inbounds [5 x double]* %1515, i64 %1510
  %1517 = getelementptr inbounds [5 x double]* %1516, i32 0, i64 2
  %1518 = load double* %1517, align 8
  %1519 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %1520 = getelementptr inbounds [5 x double]* %1519, i32 0, i64 3
  %1521 = load double* %1520, align 8
  %1522 = load i32* %i, align 4
  %1523 = sext i32 %1522 to i64
  %1524 = load i32* %j, align 4
  %1525 = sext i32 %1524 to i64
  %1526 = load [5 x double]** %10, align 8
  %1527 = mul nsw i64 %1525, %37
  %1528 = getelementptr inbounds [5 x double]* %1526, i64 %1527
  %1529 = getelementptr inbounds [5 x double]* %1528, i64 %1523
  %1530 = getelementptr inbounds [5 x double]* %1529, i32 0, i64 3
  %1531 = load double* %1530, align 8
  %1532 = fmul double %1521, %1531
  %1533 = fsub double %1518, %1532
  %1534 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %1535 = getelementptr inbounds [5 x double]* %1534, i32 0, i64 4
  %1536 = load double* %1535, align 8
  %1537 = load i32* %i, align 4
  %1538 = sext i32 %1537 to i64
  %1539 = load i32* %j, align 4
  %1540 = sext i32 %1539 to i64
  %1541 = load [5 x double]** %10, align 8
  %1542 = mul nsw i64 %1540, %37
  %1543 = getelementptr inbounds [5 x double]* %1541, i64 %1542
  %1544 = getelementptr inbounds [5 x double]* %1543, i64 %1538
  %1545 = getelementptr inbounds [5 x double]* %1544, i32 0, i64 4
  %1546 = load double* %1545, align 8
  %1547 = fmul double %1536, %1546
  %1548 = fsub double %1533, %1547
  %1549 = load i32* %i, align 4
  %1550 = sext i32 %1549 to i64
  %1551 = load i32* %j, align 4
  %1552 = sext i32 %1551 to i64
  %1553 = load [5 x double]** %10, align 8
  %1554 = mul nsw i64 %1552, %37
  %1555 = getelementptr inbounds [5 x double]* %1553, i64 %1554
  %1556 = getelementptr inbounds [5 x double]* %1555, i64 %1550
  %1557 = getelementptr inbounds [5 x double]* %1556, i32 0, i64 2
  store double %1548, double* %1557, align 8
  %1558 = load i32* %i, align 4
  %1559 = sext i32 %1558 to i64
  %1560 = load i32* %j, align 4
  %1561 = sext i32 %1560 to i64
  %1562 = load [5 x double]** %10, align 8
  %1563 = mul nsw i64 %1561, %37
  %1564 = getelementptr inbounds [5 x double]* %1562, i64 %1563
  %1565 = getelementptr inbounds [5 x double]* %1564, i64 %1559
  %1566 = getelementptr inbounds [5 x double]* %1565, i32 0, i64 2
  %1567 = load double* %1566, align 8
  %1568 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 2
  %1569 = getelementptr inbounds [5 x double]* %1568, i32 0, i64 2
  %1570 = load double* %1569, align 8
  %1571 = fdiv double %1567, %1570
  %1572 = load i32* %i, align 4
  %1573 = sext i32 %1572 to i64
  %1574 = load i32* %j, align 4
  %1575 = sext i32 %1574 to i64
  %1576 = load [5 x double]** %10, align 8
  %1577 = mul nsw i64 %1575, %37
  %1578 = getelementptr inbounds [5 x double]* %1576, i64 %1577
  %1579 = getelementptr inbounds [5 x double]* %1578, i64 %1573
  %1580 = getelementptr inbounds [5 x double]* %1579, i32 0, i64 2
  store double %1571, double* %1580, align 8
  %1581 = load i32* %i, align 4
  %1582 = sext i32 %1581 to i64
  %1583 = load i32* %j, align 4
  %1584 = sext i32 %1583 to i64
  %1585 = load [5 x double]** %10, align 8
  %1586 = mul nsw i64 %1584, %37
  %1587 = getelementptr inbounds [5 x double]* %1585, i64 %1586
  %1588 = getelementptr inbounds [5 x double]* %1587, i64 %1582
  %1589 = getelementptr inbounds [5 x double]* %1588, i32 0, i64 1
  %1590 = load double* %1589, align 8
  %1591 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %1592 = getelementptr inbounds [5 x double]* %1591, i32 0, i64 2
  %1593 = load double* %1592, align 8
  %1594 = load i32* %i, align 4
  %1595 = sext i32 %1594 to i64
  %1596 = load i32* %j, align 4
  %1597 = sext i32 %1596 to i64
  %1598 = load [5 x double]** %10, align 8
  %1599 = mul nsw i64 %1597, %37
  %1600 = getelementptr inbounds [5 x double]* %1598, i64 %1599
  %1601 = getelementptr inbounds [5 x double]* %1600, i64 %1595
  %1602 = getelementptr inbounds [5 x double]* %1601, i32 0, i64 2
  %1603 = load double* %1602, align 8
  %1604 = fmul double %1593, %1603
  %1605 = fsub double %1590, %1604
  %1606 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %1607 = getelementptr inbounds [5 x double]* %1606, i32 0, i64 3
  %1608 = load double* %1607, align 8
  %1609 = load i32* %i, align 4
  %1610 = sext i32 %1609 to i64
  %1611 = load i32* %j, align 4
  %1612 = sext i32 %1611 to i64
  %1613 = load [5 x double]** %10, align 8
  %1614 = mul nsw i64 %1612, %37
  %1615 = getelementptr inbounds [5 x double]* %1613, i64 %1614
  %1616 = getelementptr inbounds [5 x double]* %1615, i64 %1610
  %1617 = getelementptr inbounds [5 x double]* %1616, i32 0, i64 3
  %1618 = load double* %1617, align 8
  %1619 = fmul double %1608, %1618
  %1620 = fsub double %1605, %1619
  %1621 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %1622 = getelementptr inbounds [5 x double]* %1621, i32 0, i64 4
  %1623 = load double* %1622, align 8
  %1624 = load i32* %i, align 4
  %1625 = sext i32 %1624 to i64
  %1626 = load i32* %j, align 4
  %1627 = sext i32 %1626 to i64
  %1628 = load [5 x double]** %10, align 8
  %1629 = mul nsw i64 %1627, %37
  %1630 = getelementptr inbounds [5 x double]* %1628, i64 %1629
  %1631 = getelementptr inbounds [5 x double]* %1630, i64 %1625
  %1632 = getelementptr inbounds [5 x double]* %1631, i32 0, i64 4
  %1633 = load double* %1632, align 8
  %1634 = fmul double %1623, %1633
  %1635 = fsub double %1620, %1634
  %1636 = load i32* %i, align 4
  %1637 = sext i32 %1636 to i64
  %1638 = load i32* %j, align 4
  %1639 = sext i32 %1638 to i64
  %1640 = load [5 x double]** %10, align 8
  %1641 = mul nsw i64 %1639, %37
  %1642 = getelementptr inbounds [5 x double]* %1640, i64 %1641
  %1643 = getelementptr inbounds [5 x double]* %1642, i64 %1637
  %1644 = getelementptr inbounds [5 x double]* %1643, i32 0, i64 1
  store double %1635, double* %1644, align 8
  %1645 = load i32* %i, align 4
  %1646 = sext i32 %1645 to i64
  %1647 = load i32* %j, align 4
  %1648 = sext i32 %1647 to i64
  %1649 = load [5 x double]** %10, align 8
  %1650 = mul nsw i64 %1648, %37
  %1651 = getelementptr inbounds [5 x double]* %1649, i64 %1650
  %1652 = getelementptr inbounds [5 x double]* %1651, i64 %1646
  %1653 = getelementptr inbounds [5 x double]* %1652, i32 0, i64 1
  %1654 = load double* %1653, align 8
  %1655 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 1
  %1656 = getelementptr inbounds [5 x double]* %1655, i32 0, i64 1
  %1657 = load double* %1656, align 8
  %1658 = fdiv double %1654, %1657
  %1659 = load i32* %i, align 4
  %1660 = sext i32 %1659 to i64
  %1661 = load i32* %j, align 4
  %1662 = sext i32 %1661 to i64
  %1663 = load [5 x double]** %10, align 8
  %1664 = mul nsw i64 %1662, %37
  %1665 = getelementptr inbounds [5 x double]* %1663, i64 %1664
  %1666 = getelementptr inbounds [5 x double]* %1665, i64 %1660
  %1667 = getelementptr inbounds [5 x double]* %1666, i32 0, i64 1
  store double %1658, double* %1667, align 8
  %1668 = load i32* %i, align 4
  %1669 = sext i32 %1668 to i64
  %1670 = load i32* %j, align 4
  %1671 = sext i32 %1670 to i64
  %1672 = load [5 x double]** %10, align 8
  %1673 = mul nsw i64 %1671, %37
  %1674 = getelementptr inbounds [5 x double]* %1672, i64 %1673
  %1675 = getelementptr inbounds [5 x double]* %1674, i64 %1669
  %1676 = getelementptr inbounds [5 x double]* %1675, i32 0, i64 0
  %1677 = load double* %1676, align 8
  %1678 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %1679 = getelementptr inbounds [5 x double]* %1678, i32 0, i64 1
  %1680 = load double* %1679, align 8
  %1681 = load i32* %i, align 4
  %1682 = sext i32 %1681 to i64
  %1683 = load i32* %j, align 4
  %1684 = sext i32 %1683 to i64
  %1685 = load [5 x double]** %10, align 8
  %1686 = mul nsw i64 %1684, %37
  %1687 = getelementptr inbounds [5 x double]* %1685, i64 %1686
  %1688 = getelementptr inbounds [5 x double]* %1687, i64 %1682
  %1689 = getelementptr inbounds [5 x double]* %1688, i32 0, i64 1
  %1690 = load double* %1689, align 8
  %1691 = fmul double %1680, %1690
  %1692 = fsub double %1677, %1691
  %1693 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %1694 = getelementptr inbounds [5 x double]* %1693, i32 0, i64 2
  %1695 = load double* %1694, align 8
  %1696 = load i32* %i, align 4
  %1697 = sext i32 %1696 to i64
  %1698 = load i32* %j, align 4
  %1699 = sext i32 %1698 to i64
  %1700 = load [5 x double]** %10, align 8
  %1701 = mul nsw i64 %1699, %37
  %1702 = getelementptr inbounds [5 x double]* %1700, i64 %1701
  %1703 = getelementptr inbounds [5 x double]* %1702, i64 %1697
  %1704 = getelementptr inbounds [5 x double]* %1703, i32 0, i64 2
  %1705 = load double* %1704, align 8
  %1706 = fmul double %1695, %1705
  %1707 = fsub double %1692, %1706
  %1708 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %1709 = getelementptr inbounds [5 x double]* %1708, i32 0, i64 3
  %1710 = load double* %1709, align 8
  %1711 = load i32* %i, align 4
  %1712 = sext i32 %1711 to i64
  %1713 = load i32* %j, align 4
  %1714 = sext i32 %1713 to i64
  %1715 = load [5 x double]** %10, align 8
  %1716 = mul nsw i64 %1714, %37
  %1717 = getelementptr inbounds [5 x double]* %1715, i64 %1716
  %1718 = getelementptr inbounds [5 x double]* %1717, i64 %1712
  %1719 = getelementptr inbounds [5 x double]* %1718, i32 0, i64 3
  %1720 = load double* %1719, align 8
  %1721 = fmul double %1710, %1720
  %1722 = fsub double %1707, %1721
  %1723 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %1724 = getelementptr inbounds [5 x double]* %1723, i32 0, i64 4
  %1725 = load double* %1724, align 8
  %1726 = load i32* %i, align 4
  %1727 = sext i32 %1726 to i64
  %1728 = load i32* %j, align 4
  %1729 = sext i32 %1728 to i64
  %1730 = load [5 x double]** %10, align 8
  %1731 = mul nsw i64 %1729, %37
  %1732 = getelementptr inbounds [5 x double]* %1730, i64 %1731
  %1733 = getelementptr inbounds [5 x double]* %1732, i64 %1727
  %1734 = getelementptr inbounds [5 x double]* %1733, i32 0, i64 4
  %1735 = load double* %1734, align 8
  %1736 = fmul double %1725, %1735
  %1737 = fsub double %1722, %1736
  %1738 = load i32* %i, align 4
  %1739 = sext i32 %1738 to i64
  %1740 = load i32* %j, align 4
  %1741 = sext i32 %1740 to i64
  %1742 = load [5 x double]** %10, align 8
  %1743 = mul nsw i64 %1741, %37
  %1744 = getelementptr inbounds [5 x double]* %1742, i64 %1743
  %1745 = getelementptr inbounds [5 x double]* %1744, i64 %1739
  %1746 = getelementptr inbounds [5 x double]* %1745, i32 0, i64 0
  store double %1737, double* %1746, align 8
  %1747 = load i32* %i, align 4
  %1748 = sext i32 %1747 to i64
  %1749 = load i32* %j, align 4
  %1750 = sext i32 %1749 to i64
  %1751 = load [5 x double]** %10, align 8
  %1752 = mul nsw i64 %1750, %37
  %1753 = getelementptr inbounds [5 x double]* %1751, i64 %1752
  %1754 = getelementptr inbounds [5 x double]* %1753, i64 %1748
  %1755 = getelementptr inbounds [5 x double]* %1754, i32 0, i64 0
  %1756 = load double* %1755, align 8
  %1757 = getelementptr inbounds [5 x [5 x double]]* %tmat, i32 0, i64 0
  %1758 = getelementptr inbounds [5 x double]* %1757, i32 0, i64 0
  %1759 = load double* %1758, align 8
  %1760 = fdiv double %1756, %1759
  %1761 = load i32* %i, align 4
  %1762 = sext i32 %1761 to i64
  %1763 = load i32* %j, align 4
  %1764 = sext i32 %1763 to i64
  %1765 = load [5 x double]** %10, align 8
  %1766 = mul nsw i64 %1764, %37
  %1767 = getelementptr inbounds [5 x double]* %1765, i64 %1766
  %1768 = getelementptr inbounds [5 x double]* %1767, i64 %1762
  %1769 = getelementptr inbounds [5 x double]* %1768, i32 0, i64 0
  store double %1760, double* %1769, align 8
  %1770 = load i32* %i, align 4
  %1771 = sext i32 %1770 to i64
  %1772 = load i32* %j, align 4
  %1773 = sext i32 %1772 to i64
  %1774 = load i32* %7, align 4
  %1775 = sext i32 %1774 to i64
  %1776 = load [5 x double]** %9, align 8
  %1777 = mul nuw i64 %25, %30
  %1778 = mul nsw i64 %1775, %1777
  %1779 = getelementptr inbounds [5 x double]* %1776, i64 %1778
  %1780 = mul nsw i64 %1773, %30
  %1781 = getelementptr inbounds [5 x double]* %1779, i64 %1780
  %1782 = getelementptr inbounds [5 x double]* %1781, i64 %1771
  %1783 = getelementptr inbounds [5 x double]* %1782, i32 0, i64 0
  %1784 = load double* %1783, align 8
  %1785 = load i32* %i, align 4
  %1786 = sext i32 %1785 to i64
  %1787 = load i32* %j, align 4
  %1788 = sext i32 %1787 to i64
  %1789 = load [5 x double]** %10, align 8
  %1790 = mul nsw i64 %1788, %37
  %1791 = getelementptr inbounds [5 x double]* %1789, i64 %1790
  %1792 = getelementptr inbounds [5 x double]* %1791, i64 %1786
  %1793 = getelementptr inbounds [5 x double]* %1792, i32 0, i64 0
  %1794 = load double* %1793, align 8
  %1795 = fsub double %1784, %1794
  %1796 = load i32* %i, align 4
  %1797 = sext i32 %1796 to i64
  %1798 = load i32* %j, align 4
  %1799 = sext i32 %1798 to i64
  %1800 = load i32* %7, align 4
  %1801 = sext i32 %1800 to i64
  %1802 = load [5 x double]** %9, align 8
  %1803 = mul nuw i64 %25, %30
  %1804 = mul nsw i64 %1801, %1803
  %1805 = getelementptr inbounds [5 x double]* %1802, i64 %1804
  %1806 = mul nsw i64 %1799, %30
  %1807 = getelementptr inbounds [5 x double]* %1805, i64 %1806
  %1808 = getelementptr inbounds [5 x double]* %1807, i64 %1797
  %1809 = getelementptr inbounds [5 x double]* %1808, i32 0, i64 0
  store double %1795, double* %1809, align 8
  %1810 = load i32* %i, align 4
  %1811 = sext i32 %1810 to i64
  %1812 = load i32* %j, align 4
  %1813 = sext i32 %1812 to i64
  %1814 = load i32* %7, align 4
  %1815 = sext i32 %1814 to i64
  %1816 = load [5 x double]** %9, align 8
  %1817 = mul nuw i64 %25, %30
  %1818 = mul nsw i64 %1815, %1817
  %1819 = getelementptr inbounds [5 x double]* %1816, i64 %1818
  %1820 = mul nsw i64 %1813, %30
  %1821 = getelementptr inbounds [5 x double]* %1819, i64 %1820
  %1822 = getelementptr inbounds [5 x double]* %1821, i64 %1811
  %1823 = getelementptr inbounds [5 x double]* %1822, i32 0, i64 1
  %1824 = load double* %1823, align 8
  %1825 = load i32* %i, align 4
  %1826 = sext i32 %1825 to i64
  %1827 = load i32* %j, align 4
  %1828 = sext i32 %1827 to i64
  %1829 = load [5 x double]** %10, align 8
  %1830 = mul nsw i64 %1828, %37
  %1831 = getelementptr inbounds [5 x double]* %1829, i64 %1830
  %1832 = getelementptr inbounds [5 x double]* %1831, i64 %1826
  %1833 = getelementptr inbounds [5 x double]* %1832, i32 0, i64 1
  %1834 = load double* %1833, align 8
  %1835 = fsub double %1824, %1834
  %1836 = load i32* %i, align 4
  %1837 = sext i32 %1836 to i64
  %1838 = load i32* %j, align 4
  %1839 = sext i32 %1838 to i64
  %1840 = load i32* %7, align 4
  %1841 = sext i32 %1840 to i64
  %1842 = load [5 x double]** %9, align 8
  %1843 = mul nuw i64 %25, %30
  %1844 = mul nsw i64 %1841, %1843
  %1845 = getelementptr inbounds [5 x double]* %1842, i64 %1844
  %1846 = mul nsw i64 %1839, %30
  %1847 = getelementptr inbounds [5 x double]* %1845, i64 %1846
  %1848 = getelementptr inbounds [5 x double]* %1847, i64 %1837
  %1849 = getelementptr inbounds [5 x double]* %1848, i32 0, i64 1
  store double %1835, double* %1849, align 8
  %1850 = load i32* %i, align 4
  %1851 = sext i32 %1850 to i64
  %1852 = load i32* %j, align 4
  %1853 = sext i32 %1852 to i64
  %1854 = load i32* %7, align 4
  %1855 = sext i32 %1854 to i64
  %1856 = load [5 x double]** %9, align 8
  %1857 = mul nuw i64 %25, %30
  %1858 = mul nsw i64 %1855, %1857
  %1859 = getelementptr inbounds [5 x double]* %1856, i64 %1858
  %1860 = mul nsw i64 %1853, %30
  %1861 = getelementptr inbounds [5 x double]* %1859, i64 %1860
  %1862 = getelementptr inbounds [5 x double]* %1861, i64 %1851
  %1863 = getelementptr inbounds [5 x double]* %1862, i32 0, i64 2
  %1864 = load double* %1863, align 8
  %1865 = load i32* %i, align 4
  %1866 = sext i32 %1865 to i64
  %1867 = load i32* %j, align 4
  %1868 = sext i32 %1867 to i64
  %1869 = load [5 x double]** %10, align 8
  %1870 = mul nsw i64 %1868, %37
  %1871 = getelementptr inbounds [5 x double]* %1869, i64 %1870
  %1872 = getelementptr inbounds [5 x double]* %1871, i64 %1866
  %1873 = getelementptr inbounds [5 x double]* %1872, i32 0, i64 2
  %1874 = load double* %1873, align 8
  %1875 = fsub double %1864, %1874
  %1876 = load i32* %i, align 4
  %1877 = sext i32 %1876 to i64
  %1878 = load i32* %j, align 4
  %1879 = sext i32 %1878 to i64
  %1880 = load i32* %7, align 4
  %1881 = sext i32 %1880 to i64
  %1882 = load [5 x double]** %9, align 8
  %1883 = mul nuw i64 %25, %30
  %1884 = mul nsw i64 %1881, %1883
  %1885 = getelementptr inbounds [5 x double]* %1882, i64 %1884
  %1886 = mul nsw i64 %1879, %30
  %1887 = getelementptr inbounds [5 x double]* %1885, i64 %1886
  %1888 = getelementptr inbounds [5 x double]* %1887, i64 %1877
  %1889 = getelementptr inbounds [5 x double]* %1888, i32 0, i64 2
  store double %1875, double* %1889, align 8
  %1890 = load i32* %i, align 4
  %1891 = sext i32 %1890 to i64
  %1892 = load i32* %j, align 4
  %1893 = sext i32 %1892 to i64
  %1894 = load i32* %7, align 4
  %1895 = sext i32 %1894 to i64
  %1896 = load [5 x double]** %9, align 8
  %1897 = mul nuw i64 %25, %30
  %1898 = mul nsw i64 %1895, %1897
  %1899 = getelementptr inbounds [5 x double]* %1896, i64 %1898
  %1900 = mul nsw i64 %1893, %30
  %1901 = getelementptr inbounds [5 x double]* %1899, i64 %1900
  %1902 = getelementptr inbounds [5 x double]* %1901, i64 %1891
  %1903 = getelementptr inbounds [5 x double]* %1902, i32 0, i64 3
  %1904 = load double* %1903, align 8
  %1905 = load i32* %i, align 4
  %1906 = sext i32 %1905 to i64
  %1907 = load i32* %j, align 4
  %1908 = sext i32 %1907 to i64
  %1909 = load [5 x double]** %10, align 8
  %1910 = mul nsw i64 %1908, %37
  %1911 = getelementptr inbounds [5 x double]* %1909, i64 %1910
  %1912 = getelementptr inbounds [5 x double]* %1911, i64 %1906
  %1913 = getelementptr inbounds [5 x double]* %1912, i32 0, i64 3
  %1914 = load double* %1913, align 8
  %1915 = fsub double %1904, %1914
  %1916 = load i32* %i, align 4
  %1917 = sext i32 %1916 to i64
  %1918 = load i32* %j, align 4
  %1919 = sext i32 %1918 to i64
  %1920 = load i32* %7, align 4
  %1921 = sext i32 %1920 to i64
  %1922 = load [5 x double]** %9, align 8
  %1923 = mul nuw i64 %25, %30
  %1924 = mul nsw i64 %1921, %1923
  %1925 = getelementptr inbounds [5 x double]* %1922, i64 %1924
  %1926 = mul nsw i64 %1919, %30
  %1927 = getelementptr inbounds [5 x double]* %1925, i64 %1926
  %1928 = getelementptr inbounds [5 x double]* %1927, i64 %1917
  %1929 = getelementptr inbounds [5 x double]* %1928, i32 0, i64 3
  store double %1915, double* %1929, align 8
  %1930 = load i32* %i, align 4
  %1931 = sext i32 %1930 to i64
  %1932 = load i32* %j, align 4
  %1933 = sext i32 %1932 to i64
  %1934 = load i32* %7, align 4
  %1935 = sext i32 %1934 to i64
  %1936 = load [5 x double]** %9, align 8
  %1937 = mul nuw i64 %25, %30
  %1938 = mul nsw i64 %1935, %1937
  %1939 = getelementptr inbounds [5 x double]* %1936, i64 %1938
  %1940 = mul nsw i64 %1933, %30
  %1941 = getelementptr inbounds [5 x double]* %1939, i64 %1940
  %1942 = getelementptr inbounds [5 x double]* %1941, i64 %1931
  %1943 = getelementptr inbounds [5 x double]* %1942, i32 0, i64 4
  %1944 = load double* %1943, align 8
  %1945 = load i32* %i, align 4
  %1946 = sext i32 %1945 to i64
  %1947 = load i32* %j, align 4
  %1948 = sext i32 %1947 to i64
  %1949 = load [5 x double]** %10, align 8
  %1950 = mul nsw i64 %1948, %37
  %1951 = getelementptr inbounds [5 x double]* %1949, i64 %1950
  %1952 = getelementptr inbounds [5 x double]* %1951, i64 %1946
  %1953 = getelementptr inbounds [5 x double]* %1952, i32 0, i64 4
  %1954 = load double* %1953, align 8
  %1955 = fsub double %1944, %1954
  %1956 = load i32* %i, align 4
  %1957 = sext i32 %1956 to i64
  %1958 = load i32* %j, align 4
  %1959 = sext i32 %1958 to i64
  %1960 = load i32* %7, align 4
  %1961 = sext i32 %1960 to i64
  %1962 = load [5 x double]** %9, align 8
  %1963 = mul nuw i64 %25, %30
  %1964 = mul nsw i64 %1961, %1963
  %1965 = getelementptr inbounds [5 x double]* %1962, i64 %1964
  %1966 = mul nsw i64 %1959, %30
  %1967 = getelementptr inbounds [5 x double]* %1965, i64 %1966
  %1968 = getelementptr inbounds [5 x double]* %1967, i64 %1957
  %1969 = getelementptr inbounds [5 x double]* %1968, i32 0, i64 4
  store double %1955, double* %1969, align 8
  br label %1970

; <label>:1970                                    ; preds = %712
  %1971 = load i32* %i, align 4
  %1972 = add nsw i32 %1971, -1
  store i32 %1972, i32* %i, align 4
  br label %272

; <label>:1973                                    ; preds = %272
  br label %1974

; <label>:1974                                    ; preds = %1973
  %1975 = load i32* %j, align 4
  %1976 = add nsw i32 %1975, -1
  store i32 %1976, i32* %j, align 4
  br label %265

; <label>:1977                                    ; preds = %265
  ret void
}

; Function Attrs: nounwind uwtable
define void @c_print_results(i8* %name, i8 signext %class, i32 %n1, i32 %n2, i32 %n3, i32 %niter, double %t, double %mops, i8* %optype, i32 %passed_verification, i8* %npbversion, i8* %compiletime, i8* %cc, i8* %clink, i8* %c_lib, i8* %c_inc, i8* %cflags, i8* %clinkflags) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i8, align 1
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %nn = alloca i64, align 8
  store i8* %name, i8** %1, align 8
  store i8 %class, i8* %2, align 1
  store i32 %n1, i32* %3, align 4
  store i32 %n2, i32* %4, align 4
  store i32 %n3, i32* %5, align 4
  store i32 %niter, i32* %6, align 4
  store double %t, double* %7, align 8
  store double %mops, double* %8, align 8
  store i8* %optype, i8** %9, align 8
  store i32 %passed_verification, i32* %10, align 4
  store i8* %npbversion, i8** %11, align 8
  store i8* %compiletime, i8** %12, align 8
  store i8* %cc, i8** %13, align 8
  store i8* %clink, i8** %14, align 8
  store i8* %c_lib, i8** %15, align 8
  store i8* %c_inc, i8** %16, align 8
  store i8* %cflags, i8** %17, align 8
  store i8* %clinkflags, i8** %18, align 8
  %19 = load i8** %1, align 8
  %20 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([27 x i8]* @.str, i32 0, i32 0), i8* %19)
  %21 = load i8* %2, align 1
  %22 = sext i8 %21 to i32
  %23 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([46 x i8]* @.str1, i32 0, i32 0), i32 %22)
  %24 = load i32* %5, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %39

; <label>:26                                      ; preds = %0
  %27 = load i32* %3, align 4
  %28 = sext i32 %27 to i64
  store i64 %28, i64* %nn, align 8
  %29 = load i32* %4, align 4
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %31, label %36

; <label>:31                                      ; preds = %26
  %32 = load i32* %4, align 4
  %33 = sext i32 %32 to i64
  %34 = load i64* %nn, align 8
  %35 = mul nsw i64 %34, %33
  store i64 %35, i64* %nn, align 8
  br label %36

; <label>:36                                      ; preds = %31, %26
  %37 = load i64* %nn, align 8
  %38 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str2, i32 0, i32 0), i64 %37)
  br label %44

; <label>:39                                      ; preds = %0
  %40 = load i32* %3, align 4
  %41 = load i32* %4, align 4
  %42 = load i32* %5, align 4
  %43 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([44 x i8]* @.str3, i32 0, i32 0), i32 %40, i32 %41, i32 %42)
  br label %44

; <label>:44                                      ; preds = %39, %36
  %45 = load i32* %6, align 4
  %46 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str4, i32 0, i32 0), i32 %45)
  %47 = load i8** %9, align 8
  %48 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([25 x i8]* @.str5, i32 0, i32 0), i8* %47)
  %49 = load i32* %10, align 4
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %51, label %53

; <label>:51                                      ; preds = %44
  %52 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([45 x i8]* @.str6, i32 0, i32 0))
  br label %61

; <label>:53                                      ; preds = %44
  %54 = load i32* %10, align 4
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %56, label %58

; <label>:56                                      ; preds = %53
  %57 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([45 x i8]* @.str7, i32 0, i32 0))
  br label %60

; <label>:58                                      ; preds = %53
  %59 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([45 x i8]* @.str8, i32 0, i32 0))
  br label %60

; <label>:60                                      ; preds = %58, %56
  br label %61

; <label>:61                                      ; preds = %60, %51
  %62 = load i8** %11, align 8
  %63 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str9, i32 0, i32 0), i8* %62)
  %64 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([41 x i8]* @.str10, i32 0, i32 0))
  %65 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([39 x i8]* @.str11, i32 0, i32 0))
  %66 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([34 x i8]* @.str12, i32 0, i32 0))
  %67 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([21 x i8]* @.str13, i32 0, i32 0))
  %68 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str14, i32 0, i32 0))
  %69 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([40 x i8]* @.str15, i32 0, i32 0))
  ret void
}

declare i32 @printf(i8*, ...) #1

; Function Attrs: nounwind uwtable
define void @timer_clear(i32 %n) #0 {
  %1 = alloca i32, align 4
  store i32 %n, i32* %1, align 4
  %2 = load i32* %1, align 4
  %3 = sext i32 %2 to i64
  %4 = getelementptr inbounds [64 x double]* @elapsed, i32 0, i64 %3
  store double 0.000000e+00, double* %4, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @timer_start(i32 %n) #0 {
  %1 = alloca i32, align 4
  store i32 %n, i32* %1, align 4
  %2 = call double @elapsed_time()
  %3 = load i32* %1, align 4
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds [64 x double]* @start, i32 0, i64 %4
  store double %2, double* %5, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @timer_stop(i32 %n) #0 {
  %1 = alloca i32, align 4
  %t = alloca double, align 8
  %now = alloca double, align 8
  store i32 %n, i32* %1, align 4
  %2 = call double @elapsed_time()
  store double %2, double* %now, align 8
  %3 = load double* %now, align 8
  %4 = load i32* %1, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds [64 x double]* @start, i32 0, i64 %5
  %7 = load double* %6, align 8
  %8 = fsub double %3, %7
  store double %8, double* %t, align 8
  %9 = load double* %t, align 8
  %10 = load i32* %1, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [64 x double]* @elapsed, i32 0, i64 %11
  %13 = load double* %12, align 8
  %14 = fadd double %13, %9
  store double %14, double* %12, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define double @timer_read(i32 %n) #0 {
  %1 = alloca i32, align 4
  store i32 %n, i32* %1, align 4
  %2 = load i32* %1, align 4
  %3 = sext i32 %2 to i64
  %4 = getelementptr inbounds [64 x double]* @elapsed, i32 0, i64 %3
  %5 = load double* %4, align 8
  ret double %5
}

; Function Attrs: nounwind uwtable
define internal double @elapsed_time() #0 {
  %t = alloca double, align 8
  call void @wtime_(double* %t)
  %1 = load double* %t, align 8
  ret double %1
}

; Function Attrs: nounwind uwtable
define void @domain() #0 {
  %1 = load i32* @nx0, align 4
  store i32 %1, i32* @nx, align 4
  %2 = load i32* @ny0, align 4
  store i32 %2, i32* @ny, align 4
  %3 = load i32* @nz0, align 4
  store i32 %3, i32* @nz, align 4
  %4 = load i32* @nx, align 4
  %5 = icmp slt i32 %4, 4
  br i1 %5, label %12, label %6

; <label>:6                                       ; preds = %0
  %7 = load i32* @ny, align 4
  %8 = icmp slt i32 %7, 4
  br i1 %8, label %12, label %9

; <label>:9                                       ; preds = %6
  %10 = load i32* @nz, align 4
  %11 = icmp slt i32 %10, 4
  br i1 %11, label %12, label %17

; <label>:12                                      ; preds = %9, %6, %0
  %13 = load i32* @nx, align 4
  %14 = load i32* @ny, align 4
  %15 = load i32* @nz, align 4
  %16 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([177 x i8]* @.str16, i32 0, i32 0), i32 %13, i32 %14, i32 %15)
  call void @exit(i32 1) #5
  unreachable

; <label>:17                                      ; preds = %9
  %18 = load i32* @nx, align 4
  %19 = icmp sgt i32 %18, 22
  br i1 %19, label %26, label %20

; <label>:20                                      ; preds = %17
  %21 = load i32* @ny, align 4
  %22 = icmp sgt i32 %21, 22
  br i1 %22, label %26, label %23

; <label>:23                                      ; preds = %20
  %24 = load i32* @nz, align 4
  %25 = icmp sgt i32 %24, 22
  br i1 %25, label %26, label %31

; <label>:26                                      ; preds = %23, %20, %17
  %27 = load i32* @nx, align 4
  %28 = load i32* @ny, align 4
  %29 = load i32* @nz, align 4
  %30 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([217 x i8]* @.str117, i32 0, i32 0), i32 %27, i32 %28, i32 %29)
  call void @exit(i32 1) #5
  unreachable

; <label>:31                                      ; preds = %23
  store i32 1, i32* @ist, align 4
  %32 = load i32* @nx, align 4
  %33 = sub nsw i32 %32, 1
  store i32 %33, i32* @iend, align 4
  store i32 1, i32* @jst, align 4
  %34 = load i32* @ny, align 4
  %35 = sub nsw i32 %34, 1
  store i32 %35, i32* @jend, align 4
  store i32 1, i32* @ii1, align 4
  %36 = load i32* @nx0, align 4
  %37 = sub nsw i32 %36, 1
  store i32 %37, i32* @ii2, align 4
  store i32 1, i32* @ji1, align 4
  %38 = load i32* @ny0, align 4
  %39 = sub nsw i32 %38, 2
  store i32 %39, i32* @ji2, align 4
  store i32 2, i32* @ki1, align 4
  %40 = load i32* @nz0, align 4
  %41 = sub nsw i32 %40, 1
  store i32 %41, i32* @ki2, align 4
  ret void
}

; Function Attrs: noreturn nounwind
declare void @exit(i32) #2

; Function Attrs: nounwind uwtable
define void @erhs() #0 {
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %m = alloca i32, align 4
  %xi = alloca double, align 8
  %eta = alloca double, align 8
  %zeta = alloca double, align 8
  %q = alloca double, align 8
  %u21 = alloca double, align 8
  %u31 = alloca double, align 8
  %u41 = alloca double, align 8
  %tmp = alloca double, align 8
  %u21i = alloca double, align 8
  %u31i = alloca double, align 8
  %u41i = alloca double, align 8
  %u51i = alloca double, align 8
  %u21j = alloca double, align 8
  %u31j = alloca double, align 8
  %u41j = alloca double, align 8
  %u51j = alloca double, align 8
  %u21k = alloca double, align 8
  %u31k = alloca double, align 8
  %u41k = alloca double, align 8
  %u51k = alloca double, align 8
  %u21im1 = alloca double, align 8
  %u31im1 = alloca double, align 8
  %u41im1 = alloca double, align 8
  %u51im1 = alloca double, align 8
  %u21jm1 = alloca double, align 8
  %u31jm1 = alloca double, align 8
  %u41jm1 = alloca double, align 8
  %u51jm1 = alloca double, align 8
  %u21km1 = alloca double, align 8
  %u31km1 = alloca double, align 8
  %u41km1 = alloca double, align 8
  %u51km1 = alloca double, align 8
  store i32 0, i32* %k, align 4
  br label %1

; <label>:1                                       ; preds = %44, %0
  %2 = load i32* %k, align 4
  %3 = load i32* @nz, align 4
  %4 = icmp slt i32 %2, %3
  br i1 %4, label %5, label %47

; <label>:5                                       ; preds = %1
  store i32 0, i32* %j, align 4
  br label %6

; <label>:6                                       ; preds = %40, %5
  %7 = load i32* %j, align 4
  %8 = load i32* @ny, align 4
  %9 = icmp slt i32 %7, %8
  br i1 %9, label %10, label %43

; <label>:10                                      ; preds = %6
  store i32 0, i32* %i, align 4
  br label %11

; <label>:11                                      ; preds = %36, %10
  %12 = load i32* %i, align 4
  %13 = load i32* @nx, align 4
  %14 = icmp slt i32 %12, %13
  br i1 %14, label %15, label %39

; <label>:15                                      ; preds = %11
  store i32 0, i32* %m, align 4
  br label %16

; <label>:16                                      ; preds = %32, %15
  %17 = load i32* %m, align 4
  %18 = icmp slt i32 %17, 5
  br i1 %18, label %19, label %35

; <label>:19                                      ; preds = %16
  %20 = load i32* %m, align 4
  %21 = sext i32 %20 to i64
  %22 = load i32* %i, align 4
  %23 = sext i32 %22 to i64
  %24 = load i32* %j, align 4
  %25 = sext i32 %24 to i64
  %26 = load i32* %k, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %27
  %29 = getelementptr inbounds [23 x [23 x [5 x double]]]* %28, i32 0, i64 %25
  %30 = getelementptr inbounds [23 x [5 x double]]* %29, i32 0, i64 %23
  %31 = getelementptr inbounds [5 x double]* %30, i32 0, i64 %21
  store double 0.000000e+00, double* %31, align 8
  br label %32

; <label>:32                                      ; preds = %19
  %33 = load i32* %m, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %m, align 4
  br label %16

; <label>:35                                      ; preds = %16
  br label %36

; <label>:36                                      ; preds = %35
  %37 = load i32* %i, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %i, align 4
  br label %11

; <label>:39                                      ; preds = %11
  br label %40

; <label>:40                                      ; preds = %39
  %41 = load i32* %j, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %j, align 4
  br label %6

; <label>:43                                      ; preds = %6
  br label %44

; <label>:44                                      ; preds = %43
  %45 = load i32* %k, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %k, align 4
  br label %1

; <label>:47                                      ; preds = %1
  store i32 0, i32* %k, align 4
  br label %48

; <label>:48                                      ; preds = %210, %47
  %49 = load i32* %k, align 4
  %50 = load i32* @nz, align 4
  %51 = icmp slt i32 %49, %50
  br i1 %51, label %52, label %213

; <label>:52                                      ; preds = %48
  %53 = load i32* %k, align 4
  %54 = sitofp i32 %53 to double
  %55 = load i32* @nz, align 4
  %56 = sub nsw i32 %55, 1
  %57 = sitofp i32 %56 to double
  %58 = fdiv double %54, %57
  store double %58, double* %zeta, align 8
  store i32 0, i32* %j, align 4
  br label %59

; <label>:59                                      ; preds = %206, %52
  %60 = load i32* %j, align 4
  %61 = load i32* @ny, align 4
  %62 = icmp slt i32 %60, %61
  br i1 %62, label %63, label %209

; <label>:63                                      ; preds = %59
  %64 = load i32* %j, align 4
  %65 = sitofp i32 %64 to double
  %66 = load i32* @ny0, align 4
  %67 = sub nsw i32 %66, 1
  %68 = sitofp i32 %67 to double
  %69 = fdiv double %65, %68
  store double %69, double* %eta, align 8
  store i32 0, i32* %i, align 4
  br label %70

; <label>:70                                      ; preds = %202, %63
  %71 = load i32* %i, align 4
  %72 = load i32* @nx, align 4
  %73 = icmp slt i32 %71, %72
  br i1 %73, label %74, label %205

; <label>:74                                      ; preds = %70
  %75 = load i32* %i, align 4
  %76 = sitofp i32 %75 to double
  %77 = load i32* @nx0, align 4
  %78 = sub nsw i32 %77, 1
  %79 = sitofp i32 %78 to double
  %80 = fdiv double %76, %79
  store double %80, double* %xi, align 8
  store i32 0, i32* %m, align 4
  br label %81

; <label>:81                                      ; preds = %198, %74
  %82 = load i32* %m, align 4
  %83 = icmp slt i32 %82, 5
  br i1 %83, label %84, label %201

; <label>:84                                      ; preds = %81
  %85 = load i32* %m, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %86
  %88 = getelementptr inbounds [13 x double]* %87, i32 0, i64 0
  %89 = load double* %88, align 8
  %90 = load i32* %m, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %91
  %93 = getelementptr inbounds [13 x double]* %92, i32 0, i64 1
  %94 = load double* %93, align 8
  %95 = load i32* %m, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %96
  %98 = getelementptr inbounds [13 x double]* %97, i32 0, i64 4
  %99 = load double* %98, align 8
  %100 = load i32* %m, align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %101
  %103 = getelementptr inbounds [13 x double]* %102, i32 0, i64 7
  %104 = load double* %103, align 8
  %105 = load i32* %m, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %106
  %108 = getelementptr inbounds [13 x double]* %107, i32 0, i64 10
  %109 = load double* %108, align 8
  %110 = load double* %xi, align 8
  %111 = fmul double %109, %110
  %112 = fadd double %104, %111
  %113 = load double* %xi, align 8
  %114 = fmul double %112, %113
  %115 = fadd double %99, %114
  %116 = load double* %xi, align 8
  %117 = fmul double %115, %116
  %118 = fadd double %94, %117
  %119 = load double* %xi, align 8
  %120 = fmul double %118, %119
  %121 = fadd double %89, %120
  %122 = load i32* %m, align 4
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %123
  %125 = getelementptr inbounds [13 x double]* %124, i32 0, i64 2
  %126 = load double* %125, align 8
  %127 = load i32* %m, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %128
  %130 = getelementptr inbounds [13 x double]* %129, i32 0, i64 5
  %131 = load double* %130, align 8
  %132 = load i32* %m, align 4
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %133
  %135 = getelementptr inbounds [13 x double]* %134, i32 0, i64 8
  %136 = load double* %135, align 8
  %137 = load i32* %m, align 4
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %138
  %140 = getelementptr inbounds [13 x double]* %139, i32 0, i64 11
  %141 = load double* %140, align 8
  %142 = load double* %eta, align 8
  %143 = fmul double %141, %142
  %144 = fadd double %136, %143
  %145 = load double* %eta, align 8
  %146 = fmul double %144, %145
  %147 = fadd double %131, %146
  %148 = load double* %eta, align 8
  %149 = fmul double %147, %148
  %150 = fadd double %126, %149
  %151 = load double* %eta, align 8
  %152 = fmul double %150, %151
  %153 = fadd double %121, %152
  %154 = load i32* %m, align 4
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %155
  %157 = getelementptr inbounds [13 x double]* %156, i32 0, i64 3
  %158 = load double* %157, align 8
  %159 = load i32* %m, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %160
  %162 = getelementptr inbounds [13 x double]* %161, i32 0, i64 6
  %163 = load double* %162, align 8
  %164 = load i32* %m, align 4
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %165
  %167 = getelementptr inbounds [13 x double]* %166, i32 0, i64 9
  %168 = load double* %167, align 8
  %169 = load i32* %m, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %170
  %172 = getelementptr inbounds [13 x double]* %171, i32 0, i64 12
  %173 = load double* %172, align 8
  %174 = load double* %zeta, align 8
  %175 = fmul double %173, %174
  %176 = fadd double %168, %175
  %177 = load double* %zeta, align 8
  %178 = fmul double %176, %177
  %179 = fadd double %163, %178
  %180 = load double* %zeta, align 8
  %181 = fmul double %179, %180
  %182 = fadd double %158, %181
  %183 = load double* %zeta, align 8
  %184 = fmul double %182, %183
  %185 = fadd double %153, %184
  %186 = load i32* %m, align 4
  %187 = sext i32 %186 to i64
  %188 = load i32* %i, align 4
  %189 = sext i32 %188 to i64
  %190 = load i32* %j, align 4
  %191 = sext i32 %190 to i64
  %192 = load i32* %k, align 4
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %193
  %195 = getelementptr inbounds [23 x [23 x [5 x double]]]* %194, i32 0, i64 %191
  %196 = getelementptr inbounds [23 x [5 x double]]* %195, i32 0, i64 %189
  %197 = getelementptr inbounds [5 x double]* %196, i32 0, i64 %187
  store double %185, double* %197, align 8
  br label %198

; <label>:198                                     ; preds = %84
  %199 = load i32* %m, align 4
  %200 = add nsw i32 %199, 1
  store i32 %200, i32* %m, align 4
  br label %81

; <label>:201                                     ; preds = %81
  br label %202

; <label>:202                                     ; preds = %201
  %203 = load i32* %i, align 4
  %204 = add nsw i32 %203, 1
  store i32 %204, i32* %i, align 4
  br label %70

; <label>:205                                     ; preds = %70
  br label %206

; <label>:206                                     ; preds = %205
  %207 = load i32* %j, align 4
  %208 = add nsw i32 %207, 1
  store i32 %208, i32* %j, align 4
  br label %59

; <label>:209                                     ; preds = %59
  br label %210

; <label>:210                                     ; preds = %209
  %211 = load i32* %k, align 4
  %212 = add nsw i32 %211, 1
  store i32 %212, i32* %k, align 4
  br label %48

; <label>:213                                     ; preds = %48
  store i32 1, i32* %k, align 4
  br label %214

; <label>:214                                     ; preds = %1569, %213
  %215 = load i32* %k, align 4
  %216 = load i32* @nz, align 4
  %217 = sub nsw i32 %216, 1
  %218 = icmp slt i32 %215, %217
  br i1 %218, label %219, label %1572

; <label>:219                                     ; preds = %214
  %220 = load i32* @jst, align 4
  store i32 %220, i32* %j, align 4
  br label %221

; <label>:221                                     ; preds = %1565, %219
  %222 = load i32* %j, align 4
  %223 = load i32* @jend, align 4
  %224 = icmp slt i32 %222, %223
  br i1 %224, label %225, label %1568

; <label>:225                                     ; preds = %221
  store i32 0, i32* %i, align 4
  br label %226

; <label>:226                                     ; preds = %440, %225
  %227 = load i32* %i, align 4
  %228 = load i32* @nx, align 4
  %229 = icmp slt i32 %227, %228
  br i1 %229, label %230, label %443

; <label>:230                                     ; preds = %226
  %231 = load i32* %i, align 4
  %232 = sext i32 %231 to i64
  %233 = load i32* %j, align 4
  %234 = sext i32 %233 to i64
  %235 = load i32* %k, align 4
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %236
  %238 = getelementptr inbounds [23 x [23 x [5 x double]]]* %237, i32 0, i64 %234
  %239 = getelementptr inbounds [23 x [5 x double]]* %238, i32 0, i64 %232
  %240 = getelementptr inbounds [5 x double]* %239, i32 0, i64 1
  %241 = load double* %240, align 8
  %242 = load i32* %i, align 4
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %243
  %245 = getelementptr inbounds [5 x double]* %244, i32 0, i64 0
  store double %241, double* %245, align 8
  %246 = load i32* %i, align 4
  %247 = sext i32 %246 to i64
  %248 = load i32* %j, align 4
  %249 = sext i32 %248 to i64
  %250 = load i32* %k, align 4
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %251
  %253 = getelementptr inbounds [23 x [23 x [5 x double]]]* %252, i32 0, i64 %249
  %254 = getelementptr inbounds [23 x [5 x double]]* %253, i32 0, i64 %247
  %255 = getelementptr inbounds [5 x double]* %254, i32 0, i64 1
  %256 = load double* %255, align 8
  %257 = load i32* %i, align 4
  %258 = sext i32 %257 to i64
  %259 = load i32* %j, align 4
  %260 = sext i32 %259 to i64
  %261 = load i32* %k, align 4
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %262
  %264 = getelementptr inbounds [23 x [23 x [5 x double]]]* %263, i32 0, i64 %260
  %265 = getelementptr inbounds [23 x [5 x double]]* %264, i32 0, i64 %258
  %266 = getelementptr inbounds [5 x double]* %265, i32 0, i64 0
  %267 = load double* %266, align 8
  %268 = fdiv double %256, %267
  store double %268, double* %u21, align 8
  %269 = load i32* %i, align 4
  %270 = sext i32 %269 to i64
  %271 = load i32* %j, align 4
  %272 = sext i32 %271 to i64
  %273 = load i32* %k, align 4
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %274
  %276 = getelementptr inbounds [23 x [23 x [5 x double]]]* %275, i32 0, i64 %272
  %277 = getelementptr inbounds [23 x [5 x double]]* %276, i32 0, i64 %270
  %278 = getelementptr inbounds [5 x double]* %277, i32 0, i64 1
  %279 = load double* %278, align 8
  %280 = load i32* %i, align 4
  %281 = sext i32 %280 to i64
  %282 = load i32* %j, align 4
  %283 = sext i32 %282 to i64
  %284 = load i32* %k, align 4
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %285
  %287 = getelementptr inbounds [23 x [23 x [5 x double]]]* %286, i32 0, i64 %283
  %288 = getelementptr inbounds [23 x [5 x double]]* %287, i32 0, i64 %281
  %289 = getelementptr inbounds [5 x double]* %288, i32 0, i64 1
  %290 = load double* %289, align 8
  %291 = fmul double %279, %290
  %292 = load i32* %i, align 4
  %293 = sext i32 %292 to i64
  %294 = load i32* %j, align 4
  %295 = sext i32 %294 to i64
  %296 = load i32* %k, align 4
  %297 = sext i32 %296 to i64
  %298 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %297
  %299 = getelementptr inbounds [23 x [23 x [5 x double]]]* %298, i32 0, i64 %295
  %300 = getelementptr inbounds [23 x [5 x double]]* %299, i32 0, i64 %293
  %301 = getelementptr inbounds [5 x double]* %300, i32 0, i64 2
  %302 = load double* %301, align 8
  %303 = load i32* %i, align 4
  %304 = sext i32 %303 to i64
  %305 = load i32* %j, align 4
  %306 = sext i32 %305 to i64
  %307 = load i32* %k, align 4
  %308 = sext i32 %307 to i64
  %309 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %308
  %310 = getelementptr inbounds [23 x [23 x [5 x double]]]* %309, i32 0, i64 %306
  %311 = getelementptr inbounds [23 x [5 x double]]* %310, i32 0, i64 %304
  %312 = getelementptr inbounds [5 x double]* %311, i32 0, i64 2
  %313 = load double* %312, align 8
  %314 = fmul double %302, %313
  %315 = fadd double %291, %314
  %316 = load i32* %i, align 4
  %317 = sext i32 %316 to i64
  %318 = load i32* %j, align 4
  %319 = sext i32 %318 to i64
  %320 = load i32* %k, align 4
  %321 = sext i32 %320 to i64
  %322 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %321
  %323 = getelementptr inbounds [23 x [23 x [5 x double]]]* %322, i32 0, i64 %319
  %324 = getelementptr inbounds [23 x [5 x double]]* %323, i32 0, i64 %317
  %325 = getelementptr inbounds [5 x double]* %324, i32 0, i64 3
  %326 = load double* %325, align 8
  %327 = load i32* %i, align 4
  %328 = sext i32 %327 to i64
  %329 = load i32* %j, align 4
  %330 = sext i32 %329 to i64
  %331 = load i32* %k, align 4
  %332 = sext i32 %331 to i64
  %333 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %332
  %334 = getelementptr inbounds [23 x [23 x [5 x double]]]* %333, i32 0, i64 %330
  %335 = getelementptr inbounds [23 x [5 x double]]* %334, i32 0, i64 %328
  %336 = getelementptr inbounds [5 x double]* %335, i32 0, i64 3
  %337 = load double* %336, align 8
  %338 = fmul double %326, %337
  %339 = fadd double %315, %338
  %340 = fmul double 5.000000e-01, %339
  %341 = load i32* %i, align 4
  %342 = sext i32 %341 to i64
  %343 = load i32* %j, align 4
  %344 = sext i32 %343 to i64
  %345 = load i32* %k, align 4
  %346 = sext i32 %345 to i64
  %347 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %346
  %348 = getelementptr inbounds [23 x [23 x [5 x double]]]* %347, i32 0, i64 %344
  %349 = getelementptr inbounds [23 x [5 x double]]* %348, i32 0, i64 %342
  %350 = getelementptr inbounds [5 x double]* %349, i32 0, i64 0
  %351 = load double* %350, align 8
  %352 = fdiv double %340, %351
  store double %352, double* %q, align 8
  %353 = load i32* %i, align 4
  %354 = sext i32 %353 to i64
  %355 = load i32* %j, align 4
  %356 = sext i32 %355 to i64
  %357 = load i32* %k, align 4
  %358 = sext i32 %357 to i64
  %359 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %358
  %360 = getelementptr inbounds [23 x [23 x [5 x double]]]* %359, i32 0, i64 %356
  %361 = getelementptr inbounds [23 x [5 x double]]* %360, i32 0, i64 %354
  %362 = getelementptr inbounds [5 x double]* %361, i32 0, i64 1
  %363 = load double* %362, align 8
  %364 = load double* %u21, align 8
  %365 = fmul double %363, %364
  %366 = load i32* %i, align 4
  %367 = sext i32 %366 to i64
  %368 = load i32* %j, align 4
  %369 = sext i32 %368 to i64
  %370 = load i32* %k, align 4
  %371 = sext i32 %370 to i64
  %372 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %371
  %373 = getelementptr inbounds [23 x [23 x [5 x double]]]* %372, i32 0, i64 %369
  %374 = getelementptr inbounds [23 x [5 x double]]* %373, i32 0, i64 %367
  %375 = getelementptr inbounds [5 x double]* %374, i32 0, i64 4
  %376 = load double* %375, align 8
  %377 = load double* %q, align 8
  %378 = fsub double %376, %377
  %379 = fmul double 4.000000e-01, %378
  %380 = fadd double %365, %379
  %381 = load i32* %i, align 4
  %382 = sext i32 %381 to i64
  %383 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %382
  %384 = getelementptr inbounds [5 x double]* %383, i32 0, i64 1
  store double %380, double* %384, align 8
  %385 = load i32* %i, align 4
  %386 = sext i32 %385 to i64
  %387 = load i32* %j, align 4
  %388 = sext i32 %387 to i64
  %389 = load i32* %k, align 4
  %390 = sext i32 %389 to i64
  %391 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %390
  %392 = getelementptr inbounds [23 x [23 x [5 x double]]]* %391, i32 0, i64 %388
  %393 = getelementptr inbounds [23 x [5 x double]]* %392, i32 0, i64 %386
  %394 = getelementptr inbounds [5 x double]* %393, i32 0, i64 2
  %395 = load double* %394, align 8
  %396 = load double* %u21, align 8
  %397 = fmul double %395, %396
  %398 = load i32* %i, align 4
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %399
  %401 = getelementptr inbounds [5 x double]* %400, i32 0, i64 2
  store double %397, double* %401, align 8
  %402 = load i32* %i, align 4
  %403 = sext i32 %402 to i64
  %404 = load i32* %j, align 4
  %405 = sext i32 %404 to i64
  %406 = load i32* %k, align 4
  %407 = sext i32 %406 to i64
  %408 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %407
  %409 = getelementptr inbounds [23 x [23 x [5 x double]]]* %408, i32 0, i64 %405
  %410 = getelementptr inbounds [23 x [5 x double]]* %409, i32 0, i64 %403
  %411 = getelementptr inbounds [5 x double]* %410, i32 0, i64 3
  %412 = load double* %411, align 8
  %413 = load double* %u21, align 8
  %414 = fmul double %412, %413
  %415 = load i32* %i, align 4
  %416 = sext i32 %415 to i64
  %417 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %416
  %418 = getelementptr inbounds [5 x double]* %417, i32 0, i64 3
  store double %414, double* %418, align 8
  %419 = load i32* %i, align 4
  %420 = sext i32 %419 to i64
  %421 = load i32* %j, align 4
  %422 = sext i32 %421 to i64
  %423 = load i32* %k, align 4
  %424 = sext i32 %423 to i64
  %425 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %424
  %426 = getelementptr inbounds [23 x [23 x [5 x double]]]* %425, i32 0, i64 %422
  %427 = getelementptr inbounds [23 x [5 x double]]* %426, i32 0, i64 %420
  %428 = getelementptr inbounds [5 x double]* %427, i32 0, i64 4
  %429 = load double* %428, align 8
  %430 = fmul double 1.400000e+00, %429
  %431 = load double* %q, align 8
  %432 = fmul double 4.000000e-01, %431
  %433 = fsub double %430, %432
  %434 = load double* %u21, align 8
  %435 = fmul double %433, %434
  %436 = load i32* %i, align 4
  %437 = sext i32 %436 to i64
  %438 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %437
  %439 = getelementptr inbounds [5 x double]* %438, i32 0, i64 4
  store double %435, double* %439, align 8
  br label %440

; <label>:440                                     ; preds = %230
  %441 = load i32* %i, align 4
  %442 = add nsw i32 %441, 1
  store i32 %442, i32* %i, align 4
  br label %226

; <label>:443                                     ; preds = %226
  %444 = load i32* @ist, align 4
  store i32 %444, i32* %i, align 4
  br label %445

; <label>:445                                     ; preds = %503, %443
  %446 = load i32* %i, align 4
  %447 = load i32* @iend, align 4
  %448 = icmp slt i32 %446, %447
  br i1 %448, label %449, label %506

; <label>:449                                     ; preds = %445
  store i32 0, i32* %m, align 4
  br label %450

; <label>:450                                     ; preds = %499, %449
  %451 = load i32* %m, align 4
  %452 = icmp slt i32 %451, 5
  br i1 %452, label %453, label %502

; <label>:453                                     ; preds = %450
  %454 = load i32* %m, align 4
  %455 = sext i32 %454 to i64
  %456 = load i32* %i, align 4
  %457 = sext i32 %456 to i64
  %458 = load i32* %j, align 4
  %459 = sext i32 %458 to i64
  %460 = load i32* %k, align 4
  %461 = sext i32 %460 to i64
  %462 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %461
  %463 = getelementptr inbounds [23 x [23 x [5 x double]]]* %462, i32 0, i64 %459
  %464 = getelementptr inbounds [23 x [5 x double]]* %463, i32 0, i64 %457
  %465 = getelementptr inbounds [5 x double]* %464, i32 0, i64 %455
  %466 = load double* %465, align 8
  %467 = load double* @tx2, align 8
  %468 = load i32* %m, align 4
  %469 = sext i32 %468 to i64
  %470 = load i32* %i, align 4
  %471 = add nsw i32 %470, 1
  %472 = sext i32 %471 to i64
  %473 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %472
  %474 = getelementptr inbounds [5 x double]* %473, i32 0, i64 %469
  %475 = load double* %474, align 8
  %476 = load i32* %m, align 4
  %477 = sext i32 %476 to i64
  %478 = load i32* %i, align 4
  %479 = sub nsw i32 %478, 1
  %480 = sext i32 %479 to i64
  %481 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %480
  %482 = getelementptr inbounds [5 x double]* %481, i32 0, i64 %477
  %483 = load double* %482, align 8
  %484 = fsub double %475, %483
  %485 = fmul double %467, %484
  %486 = fsub double %466, %485
  %487 = load i32* %m, align 4
  %488 = sext i32 %487 to i64
  %489 = load i32* %i, align 4
  %490 = sext i32 %489 to i64
  %491 = load i32* %j, align 4
  %492 = sext i32 %491 to i64
  %493 = load i32* %k, align 4
  %494 = sext i32 %493 to i64
  %495 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %494
  %496 = getelementptr inbounds [23 x [23 x [5 x double]]]* %495, i32 0, i64 %492
  %497 = getelementptr inbounds [23 x [5 x double]]* %496, i32 0, i64 %490
  %498 = getelementptr inbounds [5 x double]* %497, i32 0, i64 %488
  store double %486, double* %498, align 8
  br label %499

; <label>:499                                     ; preds = %453
  %500 = load i32* %m, align 4
  %501 = add nsw i32 %500, 1
  store i32 %501, i32* %m, align 4
  br label %450

; <label>:502                                     ; preds = %450
  br label %503

; <label>:503                                     ; preds = %502
  %504 = load i32* %i, align 4
  %505 = add nsw i32 %504, 1
  store i32 %505, i32* %i, align 4
  br label %445

; <label>:506                                     ; preds = %445
  %507 = load i32* @ist, align 4
  store i32 %507, i32* %i, align 4
  br label %508

; <label>:508                                     ; preds = %722, %506
  %509 = load i32* %i, align 4
  %510 = load i32* @nx, align 4
  %511 = icmp slt i32 %509, %510
  br i1 %511, label %512, label %725

; <label>:512                                     ; preds = %508
  %513 = load i32* %i, align 4
  %514 = sext i32 %513 to i64
  %515 = load i32* %j, align 4
  %516 = sext i32 %515 to i64
  %517 = load i32* %k, align 4
  %518 = sext i32 %517 to i64
  %519 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %518
  %520 = getelementptr inbounds [23 x [23 x [5 x double]]]* %519, i32 0, i64 %516
  %521 = getelementptr inbounds [23 x [5 x double]]* %520, i32 0, i64 %514
  %522 = getelementptr inbounds [5 x double]* %521, i32 0, i64 0
  %523 = load double* %522, align 8
  %524 = fdiv double 1.000000e+00, %523
  store double %524, double* %tmp, align 8
  %525 = load double* %tmp, align 8
  %526 = load i32* %i, align 4
  %527 = sext i32 %526 to i64
  %528 = load i32* %j, align 4
  %529 = sext i32 %528 to i64
  %530 = load i32* %k, align 4
  %531 = sext i32 %530 to i64
  %532 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %531
  %533 = getelementptr inbounds [23 x [23 x [5 x double]]]* %532, i32 0, i64 %529
  %534 = getelementptr inbounds [23 x [5 x double]]* %533, i32 0, i64 %527
  %535 = getelementptr inbounds [5 x double]* %534, i32 0, i64 1
  %536 = load double* %535, align 8
  %537 = fmul double %525, %536
  store double %537, double* %u21i, align 8
  %538 = load double* %tmp, align 8
  %539 = load i32* %i, align 4
  %540 = sext i32 %539 to i64
  %541 = load i32* %j, align 4
  %542 = sext i32 %541 to i64
  %543 = load i32* %k, align 4
  %544 = sext i32 %543 to i64
  %545 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %544
  %546 = getelementptr inbounds [23 x [23 x [5 x double]]]* %545, i32 0, i64 %542
  %547 = getelementptr inbounds [23 x [5 x double]]* %546, i32 0, i64 %540
  %548 = getelementptr inbounds [5 x double]* %547, i32 0, i64 2
  %549 = load double* %548, align 8
  %550 = fmul double %538, %549
  store double %550, double* %u31i, align 8
  %551 = load double* %tmp, align 8
  %552 = load i32* %i, align 4
  %553 = sext i32 %552 to i64
  %554 = load i32* %j, align 4
  %555 = sext i32 %554 to i64
  %556 = load i32* %k, align 4
  %557 = sext i32 %556 to i64
  %558 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %557
  %559 = getelementptr inbounds [23 x [23 x [5 x double]]]* %558, i32 0, i64 %555
  %560 = getelementptr inbounds [23 x [5 x double]]* %559, i32 0, i64 %553
  %561 = getelementptr inbounds [5 x double]* %560, i32 0, i64 3
  %562 = load double* %561, align 8
  %563 = fmul double %551, %562
  store double %563, double* %u41i, align 8
  %564 = load double* %tmp, align 8
  %565 = load i32* %i, align 4
  %566 = sext i32 %565 to i64
  %567 = load i32* %j, align 4
  %568 = sext i32 %567 to i64
  %569 = load i32* %k, align 4
  %570 = sext i32 %569 to i64
  %571 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %570
  %572 = getelementptr inbounds [23 x [23 x [5 x double]]]* %571, i32 0, i64 %568
  %573 = getelementptr inbounds [23 x [5 x double]]* %572, i32 0, i64 %566
  %574 = getelementptr inbounds [5 x double]* %573, i32 0, i64 4
  %575 = load double* %574, align 8
  %576 = fmul double %564, %575
  store double %576, double* %u51i, align 8
  %577 = load i32* %i, align 4
  %578 = sub nsw i32 %577, 1
  %579 = sext i32 %578 to i64
  %580 = load i32* %j, align 4
  %581 = sext i32 %580 to i64
  %582 = load i32* %k, align 4
  %583 = sext i32 %582 to i64
  %584 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %583
  %585 = getelementptr inbounds [23 x [23 x [5 x double]]]* %584, i32 0, i64 %581
  %586 = getelementptr inbounds [23 x [5 x double]]* %585, i32 0, i64 %579
  %587 = getelementptr inbounds [5 x double]* %586, i32 0, i64 0
  %588 = load double* %587, align 8
  %589 = fdiv double 1.000000e+00, %588
  store double %589, double* %tmp, align 8
  %590 = load double* %tmp, align 8
  %591 = load i32* %i, align 4
  %592 = sub nsw i32 %591, 1
  %593 = sext i32 %592 to i64
  %594 = load i32* %j, align 4
  %595 = sext i32 %594 to i64
  %596 = load i32* %k, align 4
  %597 = sext i32 %596 to i64
  %598 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %597
  %599 = getelementptr inbounds [23 x [23 x [5 x double]]]* %598, i32 0, i64 %595
  %600 = getelementptr inbounds [23 x [5 x double]]* %599, i32 0, i64 %593
  %601 = getelementptr inbounds [5 x double]* %600, i32 0, i64 1
  %602 = load double* %601, align 8
  %603 = fmul double %590, %602
  store double %603, double* %u21im1, align 8
  %604 = load double* %tmp, align 8
  %605 = load i32* %i, align 4
  %606 = sub nsw i32 %605, 1
  %607 = sext i32 %606 to i64
  %608 = load i32* %j, align 4
  %609 = sext i32 %608 to i64
  %610 = load i32* %k, align 4
  %611 = sext i32 %610 to i64
  %612 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %611
  %613 = getelementptr inbounds [23 x [23 x [5 x double]]]* %612, i32 0, i64 %609
  %614 = getelementptr inbounds [23 x [5 x double]]* %613, i32 0, i64 %607
  %615 = getelementptr inbounds [5 x double]* %614, i32 0, i64 2
  %616 = load double* %615, align 8
  %617 = fmul double %604, %616
  store double %617, double* %u31im1, align 8
  %618 = load double* %tmp, align 8
  %619 = load i32* %i, align 4
  %620 = sub nsw i32 %619, 1
  %621 = sext i32 %620 to i64
  %622 = load i32* %j, align 4
  %623 = sext i32 %622 to i64
  %624 = load i32* %k, align 4
  %625 = sext i32 %624 to i64
  %626 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %625
  %627 = getelementptr inbounds [23 x [23 x [5 x double]]]* %626, i32 0, i64 %623
  %628 = getelementptr inbounds [23 x [5 x double]]* %627, i32 0, i64 %621
  %629 = getelementptr inbounds [5 x double]* %628, i32 0, i64 3
  %630 = load double* %629, align 8
  %631 = fmul double %618, %630
  store double %631, double* %u41im1, align 8
  %632 = load double* %tmp, align 8
  %633 = load i32* %i, align 4
  %634 = sub nsw i32 %633, 1
  %635 = sext i32 %634 to i64
  %636 = load i32* %j, align 4
  %637 = sext i32 %636 to i64
  %638 = load i32* %k, align 4
  %639 = sext i32 %638 to i64
  %640 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %639
  %641 = getelementptr inbounds [23 x [23 x [5 x double]]]* %640, i32 0, i64 %637
  %642 = getelementptr inbounds [23 x [5 x double]]* %641, i32 0, i64 %635
  %643 = getelementptr inbounds [5 x double]* %642, i32 0, i64 4
  %644 = load double* %643, align 8
  %645 = fmul double %632, %644
  store double %645, double* %u51im1, align 8
  %646 = load double* @tx3, align 8
  %647 = fmul double 0x3FF5555555555555, %646
  %648 = load double* %u21i, align 8
  %649 = load double* %u21im1, align 8
  %650 = fsub double %648, %649
  %651 = fmul double %647, %650
  %652 = load i32* %i, align 4
  %653 = sext i32 %652 to i64
  %654 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %653
  %655 = getelementptr inbounds [5 x double]* %654, i32 0, i64 1
  store double %651, double* %655, align 8
  %656 = load double* @tx3, align 8
  %657 = load double* %u31i, align 8
  %658 = load double* %u31im1, align 8
  %659 = fsub double %657, %658
  %660 = fmul double %656, %659
  %661 = load i32* %i, align 4
  %662 = sext i32 %661 to i64
  %663 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %662
  %664 = getelementptr inbounds [5 x double]* %663, i32 0, i64 2
  store double %660, double* %664, align 8
  %665 = load double* @tx3, align 8
  %666 = load double* %u41i, align 8
  %667 = load double* %u41im1, align 8
  %668 = fsub double %666, %667
  %669 = fmul double %665, %668
  %670 = load i32* %i, align 4
  %671 = sext i32 %670 to i64
  %672 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %671
  %673 = getelementptr inbounds [5 x double]* %672, i32 0, i64 3
  store double %669, double* %673, align 8
  %674 = load double* @tx3, align 8
  %675 = fmul double 0xBFDEB851EB851EB6, %674
  %676 = load double* %u21i, align 8
  %677 = load double* %u21i, align 8
  %678 = fmul double %676, %677
  %679 = load double* %u31i, align 8
  %680 = load double* %u31i, align 8
  %681 = fmul double %679, %680
  %682 = fadd double %678, %681
  %683 = load double* %u41i, align 8
  %684 = load double* %u41i, align 8
  %685 = fmul double %683, %684
  %686 = fadd double %682, %685
  %687 = load double* %u21im1, align 8
  %688 = load double* %u21im1, align 8
  %689 = fmul double %687, %688
  %690 = load double* %u31im1, align 8
  %691 = load double* %u31im1, align 8
  %692 = fmul double %690, %691
  %693 = fadd double %689, %692
  %694 = load double* %u41im1, align 8
  %695 = load double* %u41im1, align 8
  %696 = fmul double %694, %695
  %697 = fadd double %693, %696
  %698 = fsub double %686, %697
  %699 = fmul double %675, %698
  %700 = load double* @tx3, align 8
  %701 = fmul double 0x3FC5555555555555, %700
  %702 = load double* %u21i, align 8
  %703 = load double* %u21i, align 8
  %704 = fmul double %702, %703
  %705 = load double* %u21im1, align 8
  %706 = load double* %u21im1, align 8
  %707 = fmul double %705, %706
  %708 = fsub double %704, %707
  %709 = fmul double %701, %708
  %710 = fadd double %699, %709
  %711 = load double* @tx3, align 8
  %712 = fmul double 0x3FFF5C28F5C28F5B, %711
  %713 = load double* %u51i, align 8
  %714 = load double* %u51im1, align 8
  %715 = fsub double %713, %714
  %716 = fmul double %712, %715
  %717 = fadd double %710, %716
  %718 = load i32* %i, align 4
  %719 = sext i32 %718 to i64
  %720 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %719
  %721 = getelementptr inbounds [5 x double]* %720, i32 0, i64 4
  store double %717, double* %721, align 8
  br label %722

; <label>:722                                     ; preds = %512
  %723 = load i32* %i, align 4
  %724 = add nsw i32 %723, 1
  store i32 %724, i32* %i, align 4
  br label %508

; <label>:725                                     ; preds = %508
  %726 = load i32* @ist, align 4
  store i32 %726, i32* %i, align 4
  br label %727

; <label>:727                                     ; preds = %1120, %725
  %728 = load i32* %i, align 4
  %729 = load i32* @iend, align 4
  %730 = icmp slt i32 %728, %729
  br i1 %730, label %731, label %1123

; <label>:731                                     ; preds = %727
  %732 = load i32* %i, align 4
  %733 = sext i32 %732 to i64
  %734 = load i32* %j, align 4
  %735 = sext i32 %734 to i64
  %736 = load i32* %k, align 4
  %737 = sext i32 %736 to i64
  %738 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %737
  %739 = getelementptr inbounds [23 x [23 x [5 x double]]]* %738, i32 0, i64 %735
  %740 = getelementptr inbounds [23 x [5 x double]]* %739, i32 0, i64 %733
  %741 = getelementptr inbounds [5 x double]* %740, i32 0, i64 0
  %742 = load double* %741, align 8
  %743 = load double* @dx1, align 8
  %744 = load double* @tx1, align 8
  %745 = fmul double %743, %744
  %746 = load i32* %i, align 4
  %747 = sub nsw i32 %746, 1
  %748 = sext i32 %747 to i64
  %749 = load i32* %j, align 4
  %750 = sext i32 %749 to i64
  %751 = load i32* %k, align 4
  %752 = sext i32 %751 to i64
  %753 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %752
  %754 = getelementptr inbounds [23 x [23 x [5 x double]]]* %753, i32 0, i64 %750
  %755 = getelementptr inbounds [23 x [5 x double]]* %754, i32 0, i64 %748
  %756 = getelementptr inbounds [5 x double]* %755, i32 0, i64 0
  %757 = load double* %756, align 8
  %758 = load i32* %i, align 4
  %759 = sext i32 %758 to i64
  %760 = load i32* %j, align 4
  %761 = sext i32 %760 to i64
  %762 = load i32* %k, align 4
  %763 = sext i32 %762 to i64
  %764 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %763
  %765 = getelementptr inbounds [23 x [23 x [5 x double]]]* %764, i32 0, i64 %761
  %766 = getelementptr inbounds [23 x [5 x double]]* %765, i32 0, i64 %759
  %767 = getelementptr inbounds [5 x double]* %766, i32 0, i64 0
  %768 = load double* %767, align 8
  %769 = fmul double 2.000000e+00, %768
  %770 = fsub double %757, %769
  %771 = load i32* %i, align 4
  %772 = add nsw i32 %771, 1
  %773 = sext i32 %772 to i64
  %774 = load i32* %j, align 4
  %775 = sext i32 %774 to i64
  %776 = load i32* %k, align 4
  %777 = sext i32 %776 to i64
  %778 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %777
  %779 = getelementptr inbounds [23 x [23 x [5 x double]]]* %778, i32 0, i64 %775
  %780 = getelementptr inbounds [23 x [5 x double]]* %779, i32 0, i64 %773
  %781 = getelementptr inbounds [5 x double]* %780, i32 0, i64 0
  %782 = load double* %781, align 8
  %783 = fadd double %770, %782
  %784 = fmul double %745, %783
  %785 = fadd double %742, %784
  %786 = load i32* %i, align 4
  %787 = sext i32 %786 to i64
  %788 = load i32* %j, align 4
  %789 = sext i32 %788 to i64
  %790 = load i32* %k, align 4
  %791 = sext i32 %790 to i64
  %792 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %791
  %793 = getelementptr inbounds [23 x [23 x [5 x double]]]* %792, i32 0, i64 %789
  %794 = getelementptr inbounds [23 x [5 x double]]* %793, i32 0, i64 %787
  %795 = getelementptr inbounds [5 x double]* %794, i32 0, i64 0
  store double %785, double* %795, align 8
  %796 = load i32* %i, align 4
  %797 = sext i32 %796 to i64
  %798 = load i32* %j, align 4
  %799 = sext i32 %798 to i64
  %800 = load i32* %k, align 4
  %801 = sext i32 %800 to i64
  %802 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %801
  %803 = getelementptr inbounds [23 x [23 x [5 x double]]]* %802, i32 0, i64 %799
  %804 = getelementptr inbounds [23 x [5 x double]]* %803, i32 0, i64 %797
  %805 = getelementptr inbounds [5 x double]* %804, i32 0, i64 1
  %806 = load double* %805, align 8
  %807 = load double* @tx3, align 8
  %808 = fmul double %807, 1.000000e-01
  %809 = fmul double %808, 1.000000e+00
  %810 = load i32* %i, align 4
  %811 = add nsw i32 %810, 1
  %812 = sext i32 %811 to i64
  %813 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %812
  %814 = getelementptr inbounds [5 x double]* %813, i32 0, i64 1
  %815 = load double* %814, align 8
  %816 = load i32* %i, align 4
  %817 = sext i32 %816 to i64
  %818 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %817
  %819 = getelementptr inbounds [5 x double]* %818, i32 0, i64 1
  %820 = load double* %819, align 8
  %821 = fsub double %815, %820
  %822 = fmul double %809, %821
  %823 = fadd double %806, %822
  %824 = load double* @dx2, align 8
  %825 = load double* @tx1, align 8
  %826 = fmul double %824, %825
  %827 = load i32* %i, align 4
  %828 = sub nsw i32 %827, 1
  %829 = sext i32 %828 to i64
  %830 = load i32* %j, align 4
  %831 = sext i32 %830 to i64
  %832 = load i32* %k, align 4
  %833 = sext i32 %832 to i64
  %834 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %833
  %835 = getelementptr inbounds [23 x [23 x [5 x double]]]* %834, i32 0, i64 %831
  %836 = getelementptr inbounds [23 x [5 x double]]* %835, i32 0, i64 %829
  %837 = getelementptr inbounds [5 x double]* %836, i32 0, i64 1
  %838 = load double* %837, align 8
  %839 = load i32* %i, align 4
  %840 = sext i32 %839 to i64
  %841 = load i32* %j, align 4
  %842 = sext i32 %841 to i64
  %843 = load i32* %k, align 4
  %844 = sext i32 %843 to i64
  %845 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %844
  %846 = getelementptr inbounds [23 x [23 x [5 x double]]]* %845, i32 0, i64 %842
  %847 = getelementptr inbounds [23 x [5 x double]]* %846, i32 0, i64 %840
  %848 = getelementptr inbounds [5 x double]* %847, i32 0, i64 1
  %849 = load double* %848, align 8
  %850 = fmul double 2.000000e+00, %849
  %851 = fsub double %838, %850
  %852 = load i32* %i, align 4
  %853 = add nsw i32 %852, 1
  %854 = sext i32 %853 to i64
  %855 = load i32* %j, align 4
  %856 = sext i32 %855 to i64
  %857 = load i32* %k, align 4
  %858 = sext i32 %857 to i64
  %859 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %858
  %860 = getelementptr inbounds [23 x [23 x [5 x double]]]* %859, i32 0, i64 %856
  %861 = getelementptr inbounds [23 x [5 x double]]* %860, i32 0, i64 %854
  %862 = getelementptr inbounds [5 x double]* %861, i32 0, i64 1
  %863 = load double* %862, align 8
  %864 = fadd double %851, %863
  %865 = fmul double %826, %864
  %866 = fadd double %823, %865
  %867 = load i32* %i, align 4
  %868 = sext i32 %867 to i64
  %869 = load i32* %j, align 4
  %870 = sext i32 %869 to i64
  %871 = load i32* %k, align 4
  %872 = sext i32 %871 to i64
  %873 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %872
  %874 = getelementptr inbounds [23 x [23 x [5 x double]]]* %873, i32 0, i64 %870
  %875 = getelementptr inbounds [23 x [5 x double]]* %874, i32 0, i64 %868
  %876 = getelementptr inbounds [5 x double]* %875, i32 0, i64 1
  store double %866, double* %876, align 8
  %877 = load i32* %i, align 4
  %878 = sext i32 %877 to i64
  %879 = load i32* %j, align 4
  %880 = sext i32 %879 to i64
  %881 = load i32* %k, align 4
  %882 = sext i32 %881 to i64
  %883 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %882
  %884 = getelementptr inbounds [23 x [23 x [5 x double]]]* %883, i32 0, i64 %880
  %885 = getelementptr inbounds [23 x [5 x double]]* %884, i32 0, i64 %878
  %886 = getelementptr inbounds [5 x double]* %885, i32 0, i64 2
  %887 = load double* %886, align 8
  %888 = load double* @tx3, align 8
  %889 = fmul double %888, 1.000000e-01
  %890 = fmul double %889, 1.000000e+00
  %891 = load i32* %i, align 4
  %892 = add nsw i32 %891, 1
  %893 = sext i32 %892 to i64
  %894 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %893
  %895 = getelementptr inbounds [5 x double]* %894, i32 0, i64 2
  %896 = load double* %895, align 8
  %897 = load i32* %i, align 4
  %898 = sext i32 %897 to i64
  %899 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %898
  %900 = getelementptr inbounds [5 x double]* %899, i32 0, i64 2
  %901 = load double* %900, align 8
  %902 = fsub double %896, %901
  %903 = fmul double %890, %902
  %904 = fadd double %887, %903
  %905 = load double* @dx3, align 8
  %906 = load double* @tx1, align 8
  %907 = fmul double %905, %906
  %908 = load i32* %i, align 4
  %909 = sub nsw i32 %908, 1
  %910 = sext i32 %909 to i64
  %911 = load i32* %j, align 4
  %912 = sext i32 %911 to i64
  %913 = load i32* %k, align 4
  %914 = sext i32 %913 to i64
  %915 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %914
  %916 = getelementptr inbounds [23 x [23 x [5 x double]]]* %915, i32 0, i64 %912
  %917 = getelementptr inbounds [23 x [5 x double]]* %916, i32 0, i64 %910
  %918 = getelementptr inbounds [5 x double]* %917, i32 0, i64 2
  %919 = load double* %918, align 8
  %920 = load i32* %i, align 4
  %921 = sext i32 %920 to i64
  %922 = load i32* %j, align 4
  %923 = sext i32 %922 to i64
  %924 = load i32* %k, align 4
  %925 = sext i32 %924 to i64
  %926 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %925
  %927 = getelementptr inbounds [23 x [23 x [5 x double]]]* %926, i32 0, i64 %923
  %928 = getelementptr inbounds [23 x [5 x double]]* %927, i32 0, i64 %921
  %929 = getelementptr inbounds [5 x double]* %928, i32 0, i64 2
  %930 = load double* %929, align 8
  %931 = fmul double 2.000000e+00, %930
  %932 = fsub double %919, %931
  %933 = load i32* %i, align 4
  %934 = add nsw i32 %933, 1
  %935 = sext i32 %934 to i64
  %936 = load i32* %j, align 4
  %937 = sext i32 %936 to i64
  %938 = load i32* %k, align 4
  %939 = sext i32 %938 to i64
  %940 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %939
  %941 = getelementptr inbounds [23 x [23 x [5 x double]]]* %940, i32 0, i64 %937
  %942 = getelementptr inbounds [23 x [5 x double]]* %941, i32 0, i64 %935
  %943 = getelementptr inbounds [5 x double]* %942, i32 0, i64 2
  %944 = load double* %943, align 8
  %945 = fadd double %932, %944
  %946 = fmul double %907, %945
  %947 = fadd double %904, %946
  %948 = load i32* %i, align 4
  %949 = sext i32 %948 to i64
  %950 = load i32* %j, align 4
  %951 = sext i32 %950 to i64
  %952 = load i32* %k, align 4
  %953 = sext i32 %952 to i64
  %954 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %953
  %955 = getelementptr inbounds [23 x [23 x [5 x double]]]* %954, i32 0, i64 %951
  %956 = getelementptr inbounds [23 x [5 x double]]* %955, i32 0, i64 %949
  %957 = getelementptr inbounds [5 x double]* %956, i32 0, i64 2
  store double %947, double* %957, align 8
  %958 = load i32* %i, align 4
  %959 = sext i32 %958 to i64
  %960 = load i32* %j, align 4
  %961 = sext i32 %960 to i64
  %962 = load i32* %k, align 4
  %963 = sext i32 %962 to i64
  %964 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %963
  %965 = getelementptr inbounds [23 x [23 x [5 x double]]]* %964, i32 0, i64 %961
  %966 = getelementptr inbounds [23 x [5 x double]]* %965, i32 0, i64 %959
  %967 = getelementptr inbounds [5 x double]* %966, i32 0, i64 3
  %968 = load double* %967, align 8
  %969 = load double* @tx3, align 8
  %970 = fmul double %969, 1.000000e-01
  %971 = fmul double %970, 1.000000e+00
  %972 = load i32* %i, align 4
  %973 = add nsw i32 %972, 1
  %974 = sext i32 %973 to i64
  %975 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %974
  %976 = getelementptr inbounds [5 x double]* %975, i32 0, i64 3
  %977 = load double* %976, align 8
  %978 = load i32* %i, align 4
  %979 = sext i32 %978 to i64
  %980 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %979
  %981 = getelementptr inbounds [5 x double]* %980, i32 0, i64 3
  %982 = load double* %981, align 8
  %983 = fsub double %977, %982
  %984 = fmul double %971, %983
  %985 = fadd double %968, %984
  %986 = load double* @dx4, align 8
  %987 = load double* @tx1, align 8
  %988 = fmul double %986, %987
  %989 = load i32* %i, align 4
  %990 = sub nsw i32 %989, 1
  %991 = sext i32 %990 to i64
  %992 = load i32* %j, align 4
  %993 = sext i32 %992 to i64
  %994 = load i32* %k, align 4
  %995 = sext i32 %994 to i64
  %996 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %995
  %997 = getelementptr inbounds [23 x [23 x [5 x double]]]* %996, i32 0, i64 %993
  %998 = getelementptr inbounds [23 x [5 x double]]* %997, i32 0, i64 %991
  %999 = getelementptr inbounds [5 x double]* %998, i32 0, i64 3
  %1000 = load double* %999, align 8
  %1001 = load i32* %i, align 4
  %1002 = sext i32 %1001 to i64
  %1003 = load i32* %j, align 4
  %1004 = sext i32 %1003 to i64
  %1005 = load i32* %k, align 4
  %1006 = sext i32 %1005 to i64
  %1007 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1006
  %1008 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1007, i32 0, i64 %1004
  %1009 = getelementptr inbounds [23 x [5 x double]]* %1008, i32 0, i64 %1002
  %1010 = getelementptr inbounds [5 x double]* %1009, i32 0, i64 3
  %1011 = load double* %1010, align 8
  %1012 = fmul double 2.000000e+00, %1011
  %1013 = fsub double %1000, %1012
  %1014 = load i32* %i, align 4
  %1015 = add nsw i32 %1014, 1
  %1016 = sext i32 %1015 to i64
  %1017 = load i32* %j, align 4
  %1018 = sext i32 %1017 to i64
  %1019 = load i32* %k, align 4
  %1020 = sext i32 %1019 to i64
  %1021 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1020
  %1022 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1021, i32 0, i64 %1018
  %1023 = getelementptr inbounds [23 x [5 x double]]* %1022, i32 0, i64 %1016
  %1024 = getelementptr inbounds [5 x double]* %1023, i32 0, i64 3
  %1025 = load double* %1024, align 8
  %1026 = fadd double %1013, %1025
  %1027 = fmul double %988, %1026
  %1028 = fadd double %985, %1027
  %1029 = load i32* %i, align 4
  %1030 = sext i32 %1029 to i64
  %1031 = load i32* %j, align 4
  %1032 = sext i32 %1031 to i64
  %1033 = load i32* %k, align 4
  %1034 = sext i32 %1033 to i64
  %1035 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %1034
  %1036 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1035, i32 0, i64 %1032
  %1037 = getelementptr inbounds [23 x [5 x double]]* %1036, i32 0, i64 %1030
  %1038 = getelementptr inbounds [5 x double]* %1037, i32 0, i64 3
  store double %1028, double* %1038, align 8
  %1039 = load i32* %i, align 4
  %1040 = sext i32 %1039 to i64
  %1041 = load i32* %j, align 4
  %1042 = sext i32 %1041 to i64
  %1043 = load i32* %k, align 4
  %1044 = sext i32 %1043 to i64
  %1045 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %1044
  %1046 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1045, i32 0, i64 %1042
  %1047 = getelementptr inbounds [23 x [5 x double]]* %1046, i32 0, i64 %1040
  %1048 = getelementptr inbounds [5 x double]* %1047, i32 0, i64 4
  %1049 = load double* %1048, align 8
  %1050 = load double* @tx3, align 8
  %1051 = fmul double %1050, 1.000000e-01
  %1052 = fmul double %1051, 1.000000e+00
  %1053 = load i32* %i, align 4
  %1054 = add nsw i32 %1053, 1
  %1055 = sext i32 %1054 to i64
  %1056 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %1055
  %1057 = getelementptr inbounds [5 x double]* %1056, i32 0, i64 4
  %1058 = load double* %1057, align 8
  %1059 = load i32* %i, align 4
  %1060 = sext i32 %1059 to i64
  %1061 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %1060
  %1062 = getelementptr inbounds [5 x double]* %1061, i32 0, i64 4
  %1063 = load double* %1062, align 8
  %1064 = fsub double %1058, %1063
  %1065 = fmul double %1052, %1064
  %1066 = fadd double %1049, %1065
  %1067 = load double* @dx5, align 8
  %1068 = load double* @tx1, align 8
  %1069 = fmul double %1067, %1068
  %1070 = load i32* %i, align 4
  %1071 = sub nsw i32 %1070, 1
  %1072 = sext i32 %1071 to i64
  %1073 = load i32* %j, align 4
  %1074 = sext i32 %1073 to i64
  %1075 = load i32* %k, align 4
  %1076 = sext i32 %1075 to i64
  %1077 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1076
  %1078 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1077, i32 0, i64 %1074
  %1079 = getelementptr inbounds [23 x [5 x double]]* %1078, i32 0, i64 %1072
  %1080 = getelementptr inbounds [5 x double]* %1079, i32 0, i64 4
  %1081 = load double* %1080, align 8
  %1082 = load i32* %i, align 4
  %1083 = sext i32 %1082 to i64
  %1084 = load i32* %j, align 4
  %1085 = sext i32 %1084 to i64
  %1086 = load i32* %k, align 4
  %1087 = sext i32 %1086 to i64
  %1088 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1087
  %1089 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1088, i32 0, i64 %1085
  %1090 = getelementptr inbounds [23 x [5 x double]]* %1089, i32 0, i64 %1083
  %1091 = getelementptr inbounds [5 x double]* %1090, i32 0, i64 4
  %1092 = load double* %1091, align 8
  %1093 = fmul double 2.000000e+00, %1092
  %1094 = fsub double %1081, %1093
  %1095 = load i32* %i, align 4
  %1096 = add nsw i32 %1095, 1
  %1097 = sext i32 %1096 to i64
  %1098 = load i32* %j, align 4
  %1099 = sext i32 %1098 to i64
  %1100 = load i32* %k, align 4
  %1101 = sext i32 %1100 to i64
  %1102 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1101
  %1103 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1102, i32 0, i64 %1099
  %1104 = getelementptr inbounds [23 x [5 x double]]* %1103, i32 0, i64 %1097
  %1105 = getelementptr inbounds [5 x double]* %1104, i32 0, i64 4
  %1106 = load double* %1105, align 8
  %1107 = fadd double %1094, %1106
  %1108 = fmul double %1069, %1107
  %1109 = fadd double %1066, %1108
  %1110 = load i32* %i, align 4
  %1111 = sext i32 %1110 to i64
  %1112 = load i32* %j, align 4
  %1113 = sext i32 %1112 to i64
  %1114 = load i32* %k, align 4
  %1115 = sext i32 %1114 to i64
  %1116 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %1115
  %1117 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1116, i32 0, i64 %1113
  %1118 = getelementptr inbounds [23 x [5 x double]]* %1117, i32 0, i64 %1111
  %1119 = getelementptr inbounds [5 x double]* %1118, i32 0, i64 4
  store double %1109, double* %1119, align 8
  br label %1120

; <label>:1120                                    ; preds = %731
  %1121 = load i32* %i, align 4
  %1122 = add nsw i32 %1121, 1
  store i32 %1122, i32* %i, align 4
  br label %727

; <label>:1123                                    ; preds = %727
  store i32 0, i32* %m, align 4
  br label %1124

; <label>:1124                                    ; preds = %1263, %1123
  %1125 = load i32* %m, align 4
  %1126 = icmp slt i32 %1125, 5
  br i1 %1126, label %1127, label %1266

; <label>:1127                                    ; preds = %1124
  %1128 = load i32* %m, align 4
  %1129 = sext i32 %1128 to i64
  %1130 = load i32* %j, align 4
  %1131 = sext i32 %1130 to i64
  %1132 = load i32* %k, align 4
  %1133 = sext i32 %1132 to i64
  %1134 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %1133
  %1135 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1134, i32 0, i64 %1131
  %1136 = getelementptr inbounds [23 x [5 x double]]* %1135, i32 0, i64 1
  %1137 = getelementptr inbounds [5 x double]* %1136, i32 0, i64 %1129
  %1138 = load double* %1137, align 8
  %1139 = load double* @dssp, align 8
  %1140 = load i32* %m, align 4
  %1141 = sext i32 %1140 to i64
  %1142 = load i32* %j, align 4
  %1143 = sext i32 %1142 to i64
  %1144 = load i32* %k, align 4
  %1145 = sext i32 %1144 to i64
  %1146 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1145
  %1147 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1146, i32 0, i64 %1143
  %1148 = getelementptr inbounds [23 x [5 x double]]* %1147, i32 0, i64 1
  %1149 = getelementptr inbounds [5 x double]* %1148, i32 0, i64 %1141
  %1150 = load double* %1149, align 8
  %1151 = fmul double 5.000000e+00, %1150
  %1152 = load i32* %m, align 4
  %1153 = sext i32 %1152 to i64
  %1154 = load i32* %j, align 4
  %1155 = sext i32 %1154 to i64
  %1156 = load i32* %k, align 4
  %1157 = sext i32 %1156 to i64
  %1158 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1157
  %1159 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1158, i32 0, i64 %1155
  %1160 = getelementptr inbounds [23 x [5 x double]]* %1159, i32 0, i64 2
  %1161 = getelementptr inbounds [5 x double]* %1160, i32 0, i64 %1153
  %1162 = load double* %1161, align 8
  %1163 = fmul double 4.000000e+00, %1162
  %1164 = fsub double %1151, %1163
  %1165 = load i32* %m, align 4
  %1166 = sext i32 %1165 to i64
  %1167 = load i32* %j, align 4
  %1168 = sext i32 %1167 to i64
  %1169 = load i32* %k, align 4
  %1170 = sext i32 %1169 to i64
  %1171 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1170
  %1172 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1171, i32 0, i64 %1168
  %1173 = getelementptr inbounds [23 x [5 x double]]* %1172, i32 0, i64 3
  %1174 = getelementptr inbounds [5 x double]* %1173, i32 0, i64 %1166
  %1175 = load double* %1174, align 8
  %1176 = fadd double %1164, %1175
  %1177 = fmul double %1139, %1176
  %1178 = fsub double %1138, %1177
  %1179 = load i32* %m, align 4
  %1180 = sext i32 %1179 to i64
  %1181 = load i32* %j, align 4
  %1182 = sext i32 %1181 to i64
  %1183 = load i32* %k, align 4
  %1184 = sext i32 %1183 to i64
  %1185 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %1184
  %1186 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1185, i32 0, i64 %1182
  %1187 = getelementptr inbounds [23 x [5 x double]]* %1186, i32 0, i64 1
  %1188 = getelementptr inbounds [5 x double]* %1187, i32 0, i64 %1180
  store double %1178, double* %1188, align 8
  %1189 = load i32* %m, align 4
  %1190 = sext i32 %1189 to i64
  %1191 = load i32* %j, align 4
  %1192 = sext i32 %1191 to i64
  %1193 = load i32* %k, align 4
  %1194 = sext i32 %1193 to i64
  %1195 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %1194
  %1196 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1195, i32 0, i64 %1192
  %1197 = getelementptr inbounds [23 x [5 x double]]* %1196, i32 0, i64 2
  %1198 = getelementptr inbounds [5 x double]* %1197, i32 0, i64 %1190
  %1199 = load double* %1198, align 8
  %1200 = load double* @dssp, align 8
  %1201 = load i32* %m, align 4
  %1202 = sext i32 %1201 to i64
  %1203 = load i32* %j, align 4
  %1204 = sext i32 %1203 to i64
  %1205 = load i32* %k, align 4
  %1206 = sext i32 %1205 to i64
  %1207 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1206
  %1208 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1207, i32 0, i64 %1204
  %1209 = getelementptr inbounds [23 x [5 x double]]* %1208, i32 0, i64 1
  %1210 = getelementptr inbounds [5 x double]* %1209, i32 0, i64 %1202
  %1211 = load double* %1210, align 8
  %1212 = fmul double -4.000000e+00, %1211
  %1213 = load i32* %m, align 4
  %1214 = sext i32 %1213 to i64
  %1215 = load i32* %j, align 4
  %1216 = sext i32 %1215 to i64
  %1217 = load i32* %k, align 4
  %1218 = sext i32 %1217 to i64
  %1219 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1218
  %1220 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1219, i32 0, i64 %1216
  %1221 = getelementptr inbounds [23 x [5 x double]]* %1220, i32 0, i64 2
  %1222 = getelementptr inbounds [5 x double]* %1221, i32 0, i64 %1214
  %1223 = load double* %1222, align 8
  %1224 = fmul double 6.000000e+00, %1223
  %1225 = fadd double %1212, %1224
  %1226 = load i32* %m, align 4
  %1227 = sext i32 %1226 to i64
  %1228 = load i32* %j, align 4
  %1229 = sext i32 %1228 to i64
  %1230 = load i32* %k, align 4
  %1231 = sext i32 %1230 to i64
  %1232 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1231
  %1233 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1232, i32 0, i64 %1229
  %1234 = getelementptr inbounds [23 x [5 x double]]* %1233, i32 0, i64 3
  %1235 = getelementptr inbounds [5 x double]* %1234, i32 0, i64 %1227
  %1236 = load double* %1235, align 8
  %1237 = fmul double 4.000000e+00, %1236
  %1238 = fsub double %1225, %1237
  %1239 = load i32* %m, align 4
  %1240 = sext i32 %1239 to i64
  %1241 = load i32* %j, align 4
  %1242 = sext i32 %1241 to i64
  %1243 = load i32* %k, align 4
  %1244 = sext i32 %1243 to i64
  %1245 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1244
  %1246 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1245, i32 0, i64 %1242
  %1247 = getelementptr inbounds [23 x [5 x double]]* %1246, i32 0, i64 4
  %1248 = getelementptr inbounds [5 x double]* %1247, i32 0, i64 %1240
  %1249 = load double* %1248, align 8
  %1250 = fadd double %1238, %1249
  %1251 = fmul double %1200, %1250
  %1252 = fsub double %1199, %1251
  %1253 = load i32* %m, align 4
  %1254 = sext i32 %1253 to i64
  %1255 = load i32* %j, align 4
  %1256 = sext i32 %1255 to i64
  %1257 = load i32* %k, align 4
  %1258 = sext i32 %1257 to i64
  %1259 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %1258
  %1260 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1259, i32 0, i64 %1256
  %1261 = getelementptr inbounds [23 x [5 x double]]* %1260, i32 0, i64 2
  %1262 = getelementptr inbounds [5 x double]* %1261, i32 0, i64 %1254
  store double %1252, double* %1262, align 8
  br label %1263

; <label>:1263                                    ; preds = %1127
  %1264 = load i32* %m, align 4
  %1265 = add nsw i32 %1264, 1
  store i32 %1265, i32* %m, align 4
  br label %1124

; <label>:1266                                    ; preds = %1124
  store i32 3, i32* %i, align 4
  br label %1267

; <label>:1267                                    ; preds = %1385, %1266
  %1268 = load i32* %i, align 4
  %1269 = load i32* @nx, align 4
  %1270 = sub nsw i32 %1269, 3
  %1271 = icmp slt i32 %1268, %1270
  br i1 %1271, label %1272, label %1388

; <label>:1272                                    ; preds = %1267
  store i32 0, i32* %m, align 4
  br label %1273

; <label>:1273                                    ; preds = %1381, %1272
  %1274 = load i32* %m, align 4
  %1275 = icmp slt i32 %1274, 5
  br i1 %1275, label %1276, label %1384

; <label>:1276                                    ; preds = %1273
  %1277 = load i32* %m, align 4
  %1278 = sext i32 %1277 to i64
  %1279 = load i32* %i, align 4
  %1280 = sext i32 %1279 to i64
  %1281 = load i32* %j, align 4
  %1282 = sext i32 %1281 to i64
  %1283 = load i32* %k, align 4
  %1284 = sext i32 %1283 to i64
  %1285 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %1284
  %1286 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1285, i32 0, i64 %1282
  %1287 = getelementptr inbounds [23 x [5 x double]]* %1286, i32 0, i64 %1280
  %1288 = getelementptr inbounds [5 x double]* %1287, i32 0, i64 %1278
  %1289 = load double* %1288, align 8
  %1290 = load double* @dssp, align 8
  %1291 = load i32* %m, align 4
  %1292 = sext i32 %1291 to i64
  %1293 = load i32* %i, align 4
  %1294 = sub nsw i32 %1293, 2
  %1295 = sext i32 %1294 to i64
  %1296 = load i32* %j, align 4
  %1297 = sext i32 %1296 to i64
  %1298 = load i32* %k, align 4
  %1299 = sext i32 %1298 to i64
  %1300 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1299
  %1301 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1300, i32 0, i64 %1297
  %1302 = getelementptr inbounds [23 x [5 x double]]* %1301, i32 0, i64 %1295
  %1303 = getelementptr inbounds [5 x double]* %1302, i32 0, i64 %1292
  %1304 = load double* %1303, align 8
  %1305 = load i32* %m, align 4
  %1306 = sext i32 %1305 to i64
  %1307 = load i32* %i, align 4
  %1308 = sub nsw i32 %1307, 1
  %1309 = sext i32 %1308 to i64
  %1310 = load i32* %j, align 4
  %1311 = sext i32 %1310 to i64
  %1312 = load i32* %k, align 4
  %1313 = sext i32 %1312 to i64
  %1314 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1313
  %1315 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1314, i32 0, i64 %1311
  %1316 = getelementptr inbounds [23 x [5 x double]]* %1315, i32 0, i64 %1309
  %1317 = getelementptr inbounds [5 x double]* %1316, i32 0, i64 %1306
  %1318 = load double* %1317, align 8
  %1319 = fmul double 4.000000e+00, %1318
  %1320 = fsub double %1304, %1319
  %1321 = load i32* %m, align 4
  %1322 = sext i32 %1321 to i64
  %1323 = load i32* %i, align 4
  %1324 = sext i32 %1323 to i64
  %1325 = load i32* %j, align 4
  %1326 = sext i32 %1325 to i64
  %1327 = load i32* %k, align 4
  %1328 = sext i32 %1327 to i64
  %1329 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1328
  %1330 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1329, i32 0, i64 %1326
  %1331 = getelementptr inbounds [23 x [5 x double]]* %1330, i32 0, i64 %1324
  %1332 = getelementptr inbounds [5 x double]* %1331, i32 0, i64 %1322
  %1333 = load double* %1332, align 8
  %1334 = fmul double 6.000000e+00, %1333
  %1335 = fadd double %1320, %1334
  %1336 = load i32* %m, align 4
  %1337 = sext i32 %1336 to i64
  %1338 = load i32* %i, align 4
  %1339 = add nsw i32 %1338, 1
  %1340 = sext i32 %1339 to i64
  %1341 = load i32* %j, align 4
  %1342 = sext i32 %1341 to i64
  %1343 = load i32* %k, align 4
  %1344 = sext i32 %1343 to i64
  %1345 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1344
  %1346 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1345, i32 0, i64 %1342
  %1347 = getelementptr inbounds [23 x [5 x double]]* %1346, i32 0, i64 %1340
  %1348 = getelementptr inbounds [5 x double]* %1347, i32 0, i64 %1337
  %1349 = load double* %1348, align 8
  %1350 = fmul double 4.000000e+00, %1349
  %1351 = fsub double %1335, %1350
  %1352 = load i32* %m, align 4
  %1353 = sext i32 %1352 to i64
  %1354 = load i32* %i, align 4
  %1355 = add nsw i32 %1354, 2
  %1356 = sext i32 %1355 to i64
  %1357 = load i32* %j, align 4
  %1358 = sext i32 %1357 to i64
  %1359 = load i32* %k, align 4
  %1360 = sext i32 %1359 to i64
  %1361 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1360
  %1362 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1361, i32 0, i64 %1358
  %1363 = getelementptr inbounds [23 x [5 x double]]* %1362, i32 0, i64 %1356
  %1364 = getelementptr inbounds [5 x double]* %1363, i32 0, i64 %1353
  %1365 = load double* %1364, align 8
  %1366 = fadd double %1351, %1365
  %1367 = fmul double %1290, %1366
  %1368 = fsub double %1289, %1367
  %1369 = load i32* %m, align 4
  %1370 = sext i32 %1369 to i64
  %1371 = load i32* %i, align 4
  %1372 = sext i32 %1371 to i64
  %1373 = load i32* %j, align 4
  %1374 = sext i32 %1373 to i64
  %1375 = load i32* %k, align 4
  %1376 = sext i32 %1375 to i64
  %1377 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %1376
  %1378 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1377, i32 0, i64 %1374
  %1379 = getelementptr inbounds [23 x [5 x double]]* %1378, i32 0, i64 %1372
  %1380 = getelementptr inbounds [5 x double]* %1379, i32 0, i64 %1370
  store double %1368, double* %1380, align 8
  br label %1381

; <label>:1381                                    ; preds = %1276
  %1382 = load i32* %m, align 4
  %1383 = add nsw i32 %1382, 1
  store i32 %1383, i32* %m, align 4
  br label %1273

; <label>:1384                                    ; preds = %1273
  br label %1385

; <label>:1385                                    ; preds = %1384
  %1386 = load i32* %i, align 4
  %1387 = add nsw i32 %1386, 1
  store i32 %1387, i32* %i, align 4
  br label %1267

; <label>:1388                                    ; preds = %1267
  store i32 0, i32* %m, align 4
  br label %1389

; <label>:1389                                    ; preds = %1561, %1388
  %1390 = load i32* %m, align 4
  %1391 = icmp slt i32 %1390, 5
  br i1 %1391, label %1392, label %1564

; <label>:1392                                    ; preds = %1389
  %1393 = load i32* %m, align 4
  %1394 = sext i32 %1393 to i64
  %1395 = load i32* @nx, align 4
  %1396 = sub nsw i32 %1395, 3
  %1397 = sext i32 %1396 to i64
  %1398 = load i32* %j, align 4
  %1399 = sext i32 %1398 to i64
  %1400 = load i32* %k, align 4
  %1401 = sext i32 %1400 to i64
  %1402 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %1401
  %1403 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1402, i32 0, i64 %1399
  %1404 = getelementptr inbounds [23 x [5 x double]]* %1403, i32 0, i64 %1397
  %1405 = getelementptr inbounds [5 x double]* %1404, i32 0, i64 %1394
  %1406 = load double* %1405, align 8
  %1407 = load double* @dssp, align 8
  %1408 = load i32* %m, align 4
  %1409 = sext i32 %1408 to i64
  %1410 = load i32* @nx, align 4
  %1411 = sub nsw i32 %1410, 5
  %1412 = sext i32 %1411 to i64
  %1413 = load i32* %j, align 4
  %1414 = sext i32 %1413 to i64
  %1415 = load i32* %k, align 4
  %1416 = sext i32 %1415 to i64
  %1417 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1416
  %1418 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1417, i32 0, i64 %1414
  %1419 = getelementptr inbounds [23 x [5 x double]]* %1418, i32 0, i64 %1412
  %1420 = getelementptr inbounds [5 x double]* %1419, i32 0, i64 %1409
  %1421 = load double* %1420, align 8
  %1422 = load i32* %m, align 4
  %1423 = sext i32 %1422 to i64
  %1424 = load i32* @nx, align 4
  %1425 = sub nsw i32 %1424, 4
  %1426 = sext i32 %1425 to i64
  %1427 = load i32* %j, align 4
  %1428 = sext i32 %1427 to i64
  %1429 = load i32* %k, align 4
  %1430 = sext i32 %1429 to i64
  %1431 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1430
  %1432 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1431, i32 0, i64 %1428
  %1433 = getelementptr inbounds [23 x [5 x double]]* %1432, i32 0, i64 %1426
  %1434 = getelementptr inbounds [5 x double]* %1433, i32 0, i64 %1423
  %1435 = load double* %1434, align 8
  %1436 = fmul double 4.000000e+00, %1435
  %1437 = fsub double %1421, %1436
  %1438 = load i32* %m, align 4
  %1439 = sext i32 %1438 to i64
  %1440 = load i32* @nx, align 4
  %1441 = sub nsw i32 %1440, 3
  %1442 = sext i32 %1441 to i64
  %1443 = load i32* %j, align 4
  %1444 = sext i32 %1443 to i64
  %1445 = load i32* %k, align 4
  %1446 = sext i32 %1445 to i64
  %1447 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1446
  %1448 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1447, i32 0, i64 %1444
  %1449 = getelementptr inbounds [23 x [5 x double]]* %1448, i32 0, i64 %1442
  %1450 = getelementptr inbounds [5 x double]* %1449, i32 0, i64 %1439
  %1451 = load double* %1450, align 8
  %1452 = fmul double 6.000000e+00, %1451
  %1453 = fadd double %1437, %1452
  %1454 = load i32* %m, align 4
  %1455 = sext i32 %1454 to i64
  %1456 = load i32* @nx, align 4
  %1457 = sub nsw i32 %1456, 2
  %1458 = sext i32 %1457 to i64
  %1459 = load i32* %j, align 4
  %1460 = sext i32 %1459 to i64
  %1461 = load i32* %k, align 4
  %1462 = sext i32 %1461 to i64
  %1463 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1462
  %1464 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1463, i32 0, i64 %1460
  %1465 = getelementptr inbounds [23 x [5 x double]]* %1464, i32 0, i64 %1458
  %1466 = getelementptr inbounds [5 x double]* %1465, i32 0, i64 %1455
  %1467 = load double* %1466, align 8
  %1468 = fmul double 4.000000e+00, %1467
  %1469 = fsub double %1453, %1468
  %1470 = fmul double %1407, %1469
  %1471 = fsub double %1406, %1470
  %1472 = load i32* %m, align 4
  %1473 = sext i32 %1472 to i64
  %1474 = load i32* @nx, align 4
  %1475 = sub nsw i32 %1474, 3
  %1476 = sext i32 %1475 to i64
  %1477 = load i32* %j, align 4
  %1478 = sext i32 %1477 to i64
  %1479 = load i32* %k, align 4
  %1480 = sext i32 %1479 to i64
  %1481 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %1480
  %1482 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1481, i32 0, i64 %1478
  %1483 = getelementptr inbounds [23 x [5 x double]]* %1482, i32 0, i64 %1476
  %1484 = getelementptr inbounds [5 x double]* %1483, i32 0, i64 %1473
  store double %1471, double* %1484, align 8
  %1485 = load i32* %m, align 4
  %1486 = sext i32 %1485 to i64
  %1487 = load i32* @nx, align 4
  %1488 = sub nsw i32 %1487, 2
  %1489 = sext i32 %1488 to i64
  %1490 = load i32* %j, align 4
  %1491 = sext i32 %1490 to i64
  %1492 = load i32* %k, align 4
  %1493 = sext i32 %1492 to i64
  %1494 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %1493
  %1495 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1494, i32 0, i64 %1491
  %1496 = getelementptr inbounds [23 x [5 x double]]* %1495, i32 0, i64 %1489
  %1497 = getelementptr inbounds [5 x double]* %1496, i32 0, i64 %1486
  %1498 = load double* %1497, align 8
  %1499 = load double* @dssp, align 8
  %1500 = load i32* %m, align 4
  %1501 = sext i32 %1500 to i64
  %1502 = load i32* @nx, align 4
  %1503 = sub nsw i32 %1502, 4
  %1504 = sext i32 %1503 to i64
  %1505 = load i32* %j, align 4
  %1506 = sext i32 %1505 to i64
  %1507 = load i32* %k, align 4
  %1508 = sext i32 %1507 to i64
  %1509 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1508
  %1510 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1509, i32 0, i64 %1506
  %1511 = getelementptr inbounds [23 x [5 x double]]* %1510, i32 0, i64 %1504
  %1512 = getelementptr inbounds [5 x double]* %1511, i32 0, i64 %1501
  %1513 = load double* %1512, align 8
  %1514 = load i32* %m, align 4
  %1515 = sext i32 %1514 to i64
  %1516 = load i32* @nx, align 4
  %1517 = sub nsw i32 %1516, 3
  %1518 = sext i32 %1517 to i64
  %1519 = load i32* %j, align 4
  %1520 = sext i32 %1519 to i64
  %1521 = load i32* %k, align 4
  %1522 = sext i32 %1521 to i64
  %1523 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1522
  %1524 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1523, i32 0, i64 %1520
  %1525 = getelementptr inbounds [23 x [5 x double]]* %1524, i32 0, i64 %1518
  %1526 = getelementptr inbounds [5 x double]* %1525, i32 0, i64 %1515
  %1527 = load double* %1526, align 8
  %1528 = fmul double 4.000000e+00, %1527
  %1529 = fsub double %1513, %1528
  %1530 = load i32* %m, align 4
  %1531 = sext i32 %1530 to i64
  %1532 = load i32* @nx, align 4
  %1533 = sub nsw i32 %1532, 2
  %1534 = sext i32 %1533 to i64
  %1535 = load i32* %j, align 4
  %1536 = sext i32 %1535 to i64
  %1537 = load i32* %k, align 4
  %1538 = sext i32 %1537 to i64
  %1539 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1538
  %1540 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1539, i32 0, i64 %1536
  %1541 = getelementptr inbounds [23 x [5 x double]]* %1540, i32 0, i64 %1534
  %1542 = getelementptr inbounds [5 x double]* %1541, i32 0, i64 %1531
  %1543 = load double* %1542, align 8
  %1544 = fmul double 5.000000e+00, %1543
  %1545 = fadd double %1529, %1544
  %1546 = fmul double %1499, %1545
  %1547 = fsub double %1498, %1546
  %1548 = load i32* %m, align 4
  %1549 = sext i32 %1548 to i64
  %1550 = load i32* @nx, align 4
  %1551 = sub nsw i32 %1550, 2
  %1552 = sext i32 %1551 to i64
  %1553 = load i32* %j, align 4
  %1554 = sext i32 %1553 to i64
  %1555 = load i32* %k, align 4
  %1556 = sext i32 %1555 to i64
  %1557 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %1556
  %1558 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1557, i32 0, i64 %1554
  %1559 = getelementptr inbounds [23 x [5 x double]]* %1558, i32 0, i64 %1552
  %1560 = getelementptr inbounds [5 x double]* %1559, i32 0, i64 %1549
  store double %1547, double* %1560, align 8
  br label %1561

; <label>:1561                                    ; preds = %1392
  %1562 = load i32* %m, align 4
  %1563 = add nsw i32 %1562, 1
  store i32 %1563, i32* %m, align 4
  br label %1389

; <label>:1564                                    ; preds = %1389
  br label %1565

; <label>:1565                                    ; preds = %1564
  %1566 = load i32* %j, align 4
  %1567 = add nsw i32 %1566, 1
  store i32 %1567, i32* %j, align 4
  br label %221

; <label>:1568                                    ; preds = %221
  br label %1569

; <label>:1569                                    ; preds = %1568
  %1570 = load i32* %k, align 4
  %1571 = add nsw i32 %1570, 1
  store i32 %1571, i32* %k, align 4
  br label %214

; <label>:1572                                    ; preds = %214
  store i32 1, i32* %k, align 4
  br label %1573

; <label>:1573                                    ; preds = %2928, %1572
  %1574 = load i32* %k, align 4
  %1575 = load i32* @nz, align 4
  %1576 = sub nsw i32 %1575, 1
  %1577 = icmp slt i32 %1574, %1576
  br i1 %1577, label %1578, label %2931

; <label>:1578                                    ; preds = %1573
  %1579 = load i32* @ist, align 4
  store i32 %1579, i32* %i, align 4
  br label %1580

; <label>:1580                                    ; preds = %2924, %1578
  %1581 = load i32* %i, align 4
  %1582 = load i32* @iend, align 4
  %1583 = icmp slt i32 %1581, %1582
  br i1 %1583, label %1584, label %2927

; <label>:1584                                    ; preds = %1580
  store i32 0, i32* %j, align 4
  br label %1585

; <label>:1585                                    ; preds = %1799, %1584
  %1586 = load i32* %j, align 4
  %1587 = load i32* @ny, align 4
  %1588 = icmp slt i32 %1586, %1587
  br i1 %1588, label %1589, label %1802

; <label>:1589                                    ; preds = %1585
  %1590 = load i32* %i, align 4
  %1591 = sext i32 %1590 to i64
  %1592 = load i32* %j, align 4
  %1593 = sext i32 %1592 to i64
  %1594 = load i32* %k, align 4
  %1595 = sext i32 %1594 to i64
  %1596 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1595
  %1597 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1596, i32 0, i64 %1593
  %1598 = getelementptr inbounds [23 x [5 x double]]* %1597, i32 0, i64 %1591
  %1599 = getelementptr inbounds [5 x double]* %1598, i32 0, i64 2
  %1600 = load double* %1599, align 8
  %1601 = load i32* %j, align 4
  %1602 = sext i32 %1601 to i64
  %1603 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %1602
  %1604 = getelementptr inbounds [5 x double]* %1603, i32 0, i64 0
  store double %1600, double* %1604, align 8
  %1605 = load i32* %i, align 4
  %1606 = sext i32 %1605 to i64
  %1607 = load i32* %j, align 4
  %1608 = sext i32 %1607 to i64
  %1609 = load i32* %k, align 4
  %1610 = sext i32 %1609 to i64
  %1611 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1610
  %1612 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1611, i32 0, i64 %1608
  %1613 = getelementptr inbounds [23 x [5 x double]]* %1612, i32 0, i64 %1606
  %1614 = getelementptr inbounds [5 x double]* %1613, i32 0, i64 2
  %1615 = load double* %1614, align 8
  %1616 = load i32* %i, align 4
  %1617 = sext i32 %1616 to i64
  %1618 = load i32* %j, align 4
  %1619 = sext i32 %1618 to i64
  %1620 = load i32* %k, align 4
  %1621 = sext i32 %1620 to i64
  %1622 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1621
  %1623 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1622, i32 0, i64 %1619
  %1624 = getelementptr inbounds [23 x [5 x double]]* %1623, i32 0, i64 %1617
  %1625 = getelementptr inbounds [5 x double]* %1624, i32 0, i64 0
  %1626 = load double* %1625, align 8
  %1627 = fdiv double %1615, %1626
  store double %1627, double* %u31, align 8
  %1628 = load i32* %i, align 4
  %1629 = sext i32 %1628 to i64
  %1630 = load i32* %j, align 4
  %1631 = sext i32 %1630 to i64
  %1632 = load i32* %k, align 4
  %1633 = sext i32 %1632 to i64
  %1634 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1633
  %1635 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1634, i32 0, i64 %1631
  %1636 = getelementptr inbounds [23 x [5 x double]]* %1635, i32 0, i64 %1629
  %1637 = getelementptr inbounds [5 x double]* %1636, i32 0, i64 1
  %1638 = load double* %1637, align 8
  %1639 = load i32* %i, align 4
  %1640 = sext i32 %1639 to i64
  %1641 = load i32* %j, align 4
  %1642 = sext i32 %1641 to i64
  %1643 = load i32* %k, align 4
  %1644 = sext i32 %1643 to i64
  %1645 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1644
  %1646 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1645, i32 0, i64 %1642
  %1647 = getelementptr inbounds [23 x [5 x double]]* %1646, i32 0, i64 %1640
  %1648 = getelementptr inbounds [5 x double]* %1647, i32 0, i64 1
  %1649 = load double* %1648, align 8
  %1650 = fmul double %1638, %1649
  %1651 = load i32* %i, align 4
  %1652 = sext i32 %1651 to i64
  %1653 = load i32* %j, align 4
  %1654 = sext i32 %1653 to i64
  %1655 = load i32* %k, align 4
  %1656 = sext i32 %1655 to i64
  %1657 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1656
  %1658 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1657, i32 0, i64 %1654
  %1659 = getelementptr inbounds [23 x [5 x double]]* %1658, i32 0, i64 %1652
  %1660 = getelementptr inbounds [5 x double]* %1659, i32 0, i64 2
  %1661 = load double* %1660, align 8
  %1662 = load i32* %i, align 4
  %1663 = sext i32 %1662 to i64
  %1664 = load i32* %j, align 4
  %1665 = sext i32 %1664 to i64
  %1666 = load i32* %k, align 4
  %1667 = sext i32 %1666 to i64
  %1668 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1667
  %1669 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1668, i32 0, i64 %1665
  %1670 = getelementptr inbounds [23 x [5 x double]]* %1669, i32 0, i64 %1663
  %1671 = getelementptr inbounds [5 x double]* %1670, i32 0, i64 2
  %1672 = load double* %1671, align 8
  %1673 = fmul double %1661, %1672
  %1674 = fadd double %1650, %1673
  %1675 = load i32* %i, align 4
  %1676 = sext i32 %1675 to i64
  %1677 = load i32* %j, align 4
  %1678 = sext i32 %1677 to i64
  %1679 = load i32* %k, align 4
  %1680 = sext i32 %1679 to i64
  %1681 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1680
  %1682 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1681, i32 0, i64 %1678
  %1683 = getelementptr inbounds [23 x [5 x double]]* %1682, i32 0, i64 %1676
  %1684 = getelementptr inbounds [5 x double]* %1683, i32 0, i64 3
  %1685 = load double* %1684, align 8
  %1686 = load i32* %i, align 4
  %1687 = sext i32 %1686 to i64
  %1688 = load i32* %j, align 4
  %1689 = sext i32 %1688 to i64
  %1690 = load i32* %k, align 4
  %1691 = sext i32 %1690 to i64
  %1692 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1691
  %1693 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1692, i32 0, i64 %1689
  %1694 = getelementptr inbounds [23 x [5 x double]]* %1693, i32 0, i64 %1687
  %1695 = getelementptr inbounds [5 x double]* %1694, i32 0, i64 3
  %1696 = load double* %1695, align 8
  %1697 = fmul double %1685, %1696
  %1698 = fadd double %1674, %1697
  %1699 = fmul double 5.000000e-01, %1698
  %1700 = load i32* %i, align 4
  %1701 = sext i32 %1700 to i64
  %1702 = load i32* %j, align 4
  %1703 = sext i32 %1702 to i64
  %1704 = load i32* %k, align 4
  %1705 = sext i32 %1704 to i64
  %1706 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1705
  %1707 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1706, i32 0, i64 %1703
  %1708 = getelementptr inbounds [23 x [5 x double]]* %1707, i32 0, i64 %1701
  %1709 = getelementptr inbounds [5 x double]* %1708, i32 0, i64 0
  %1710 = load double* %1709, align 8
  %1711 = fdiv double %1699, %1710
  store double %1711, double* %q, align 8
  %1712 = load i32* %i, align 4
  %1713 = sext i32 %1712 to i64
  %1714 = load i32* %j, align 4
  %1715 = sext i32 %1714 to i64
  %1716 = load i32* %k, align 4
  %1717 = sext i32 %1716 to i64
  %1718 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1717
  %1719 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1718, i32 0, i64 %1715
  %1720 = getelementptr inbounds [23 x [5 x double]]* %1719, i32 0, i64 %1713
  %1721 = getelementptr inbounds [5 x double]* %1720, i32 0, i64 1
  %1722 = load double* %1721, align 8
  %1723 = load double* %u31, align 8
  %1724 = fmul double %1722, %1723
  %1725 = load i32* %j, align 4
  %1726 = sext i32 %1725 to i64
  %1727 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %1726
  %1728 = getelementptr inbounds [5 x double]* %1727, i32 0, i64 1
  store double %1724, double* %1728, align 8
  %1729 = load i32* %i, align 4
  %1730 = sext i32 %1729 to i64
  %1731 = load i32* %j, align 4
  %1732 = sext i32 %1731 to i64
  %1733 = load i32* %k, align 4
  %1734 = sext i32 %1733 to i64
  %1735 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1734
  %1736 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1735, i32 0, i64 %1732
  %1737 = getelementptr inbounds [23 x [5 x double]]* %1736, i32 0, i64 %1730
  %1738 = getelementptr inbounds [5 x double]* %1737, i32 0, i64 2
  %1739 = load double* %1738, align 8
  %1740 = load double* %u31, align 8
  %1741 = fmul double %1739, %1740
  %1742 = load i32* %i, align 4
  %1743 = sext i32 %1742 to i64
  %1744 = load i32* %j, align 4
  %1745 = sext i32 %1744 to i64
  %1746 = load i32* %k, align 4
  %1747 = sext i32 %1746 to i64
  %1748 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1747
  %1749 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1748, i32 0, i64 %1745
  %1750 = getelementptr inbounds [23 x [5 x double]]* %1749, i32 0, i64 %1743
  %1751 = getelementptr inbounds [5 x double]* %1750, i32 0, i64 4
  %1752 = load double* %1751, align 8
  %1753 = load double* %q, align 8
  %1754 = fsub double %1752, %1753
  %1755 = fmul double 4.000000e-01, %1754
  %1756 = fadd double %1741, %1755
  %1757 = load i32* %j, align 4
  %1758 = sext i32 %1757 to i64
  %1759 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %1758
  %1760 = getelementptr inbounds [5 x double]* %1759, i32 0, i64 2
  store double %1756, double* %1760, align 8
  %1761 = load i32* %i, align 4
  %1762 = sext i32 %1761 to i64
  %1763 = load i32* %j, align 4
  %1764 = sext i32 %1763 to i64
  %1765 = load i32* %k, align 4
  %1766 = sext i32 %1765 to i64
  %1767 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1766
  %1768 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1767, i32 0, i64 %1764
  %1769 = getelementptr inbounds [23 x [5 x double]]* %1768, i32 0, i64 %1762
  %1770 = getelementptr inbounds [5 x double]* %1769, i32 0, i64 3
  %1771 = load double* %1770, align 8
  %1772 = load double* %u31, align 8
  %1773 = fmul double %1771, %1772
  %1774 = load i32* %j, align 4
  %1775 = sext i32 %1774 to i64
  %1776 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %1775
  %1777 = getelementptr inbounds [5 x double]* %1776, i32 0, i64 3
  store double %1773, double* %1777, align 8
  %1778 = load i32* %i, align 4
  %1779 = sext i32 %1778 to i64
  %1780 = load i32* %j, align 4
  %1781 = sext i32 %1780 to i64
  %1782 = load i32* %k, align 4
  %1783 = sext i32 %1782 to i64
  %1784 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1783
  %1785 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1784, i32 0, i64 %1781
  %1786 = getelementptr inbounds [23 x [5 x double]]* %1785, i32 0, i64 %1779
  %1787 = getelementptr inbounds [5 x double]* %1786, i32 0, i64 4
  %1788 = load double* %1787, align 8
  %1789 = fmul double 1.400000e+00, %1788
  %1790 = load double* %q, align 8
  %1791 = fmul double 4.000000e-01, %1790
  %1792 = fsub double %1789, %1791
  %1793 = load double* %u31, align 8
  %1794 = fmul double %1792, %1793
  %1795 = load i32* %j, align 4
  %1796 = sext i32 %1795 to i64
  %1797 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %1796
  %1798 = getelementptr inbounds [5 x double]* %1797, i32 0, i64 4
  store double %1794, double* %1798, align 8
  br label %1799

; <label>:1799                                    ; preds = %1589
  %1800 = load i32* %j, align 4
  %1801 = add nsw i32 %1800, 1
  store i32 %1801, i32* %j, align 4
  br label %1585

; <label>:1802                                    ; preds = %1585
  %1803 = load i32* @jst, align 4
  store i32 %1803, i32* %j, align 4
  br label %1804

; <label>:1804                                    ; preds = %1862, %1802
  %1805 = load i32* %j, align 4
  %1806 = load i32* @jend, align 4
  %1807 = icmp slt i32 %1805, %1806
  br i1 %1807, label %1808, label %1865

; <label>:1808                                    ; preds = %1804
  store i32 0, i32* %m, align 4
  br label %1809

; <label>:1809                                    ; preds = %1858, %1808
  %1810 = load i32* %m, align 4
  %1811 = icmp slt i32 %1810, 5
  br i1 %1811, label %1812, label %1861

; <label>:1812                                    ; preds = %1809
  %1813 = load i32* %m, align 4
  %1814 = sext i32 %1813 to i64
  %1815 = load i32* %i, align 4
  %1816 = sext i32 %1815 to i64
  %1817 = load i32* %j, align 4
  %1818 = sext i32 %1817 to i64
  %1819 = load i32* %k, align 4
  %1820 = sext i32 %1819 to i64
  %1821 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %1820
  %1822 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1821, i32 0, i64 %1818
  %1823 = getelementptr inbounds [23 x [5 x double]]* %1822, i32 0, i64 %1816
  %1824 = getelementptr inbounds [5 x double]* %1823, i32 0, i64 %1814
  %1825 = load double* %1824, align 8
  %1826 = load double* @ty2, align 8
  %1827 = load i32* %m, align 4
  %1828 = sext i32 %1827 to i64
  %1829 = load i32* %j, align 4
  %1830 = add nsw i32 %1829, 1
  %1831 = sext i32 %1830 to i64
  %1832 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %1831
  %1833 = getelementptr inbounds [5 x double]* %1832, i32 0, i64 %1828
  %1834 = load double* %1833, align 8
  %1835 = load i32* %m, align 4
  %1836 = sext i32 %1835 to i64
  %1837 = load i32* %j, align 4
  %1838 = sub nsw i32 %1837, 1
  %1839 = sext i32 %1838 to i64
  %1840 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %1839
  %1841 = getelementptr inbounds [5 x double]* %1840, i32 0, i64 %1836
  %1842 = load double* %1841, align 8
  %1843 = fsub double %1834, %1842
  %1844 = fmul double %1826, %1843
  %1845 = fsub double %1825, %1844
  %1846 = load i32* %m, align 4
  %1847 = sext i32 %1846 to i64
  %1848 = load i32* %i, align 4
  %1849 = sext i32 %1848 to i64
  %1850 = load i32* %j, align 4
  %1851 = sext i32 %1850 to i64
  %1852 = load i32* %k, align 4
  %1853 = sext i32 %1852 to i64
  %1854 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %1853
  %1855 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1854, i32 0, i64 %1851
  %1856 = getelementptr inbounds [23 x [5 x double]]* %1855, i32 0, i64 %1849
  %1857 = getelementptr inbounds [5 x double]* %1856, i32 0, i64 %1847
  store double %1845, double* %1857, align 8
  br label %1858

; <label>:1858                                    ; preds = %1812
  %1859 = load i32* %m, align 4
  %1860 = add nsw i32 %1859, 1
  store i32 %1860, i32* %m, align 4
  br label %1809

; <label>:1861                                    ; preds = %1809
  br label %1862

; <label>:1862                                    ; preds = %1861
  %1863 = load i32* %j, align 4
  %1864 = add nsw i32 %1863, 1
  store i32 %1864, i32* %j, align 4
  br label %1804

; <label>:1865                                    ; preds = %1804
  %1866 = load i32* @jst, align 4
  store i32 %1866, i32* %j, align 4
  br label %1867

; <label>:1867                                    ; preds = %2081, %1865
  %1868 = load i32* %j, align 4
  %1869 = load i32* @ny, align 4
  %1870 = icmp slt i32 %1868, %1869
  br i1 %1870, label %1871, label %2084

; <label>:1871                                    ; preds = %1867
  %1872 = load i32* %i, align 4
  %1873 = sext i32 %1872 to i64
  %1874 = load i32* %j, align 4
  %1875 = sext i32 %1874 to i64
  %1876 = load i32* %k, align 4
  %1877 = sext i32 %1876 to i64
  %1878 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1877
  %1879 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1878, i32 0, i64 %1875
  %1880 = getelementptr inbounds [23 x [5 x double]]* %1879, i32 0, i64 %1873
  %1881 = getelementptr inbounds [5 x double]* %1880, i32 0, i64 0
  %1882 = load double* %1881, align 8
  %1883 = fdiv double 1.000000e+00, %1882
  store double %1883, double* %tmp, align 8
  %1884 = load double* %tmp, align 8
  %1885 = load i32* %i, align 4
  %1886 = sext i32 %1885 to i64
  %1887 = load i32* %j, align 4
  %1888 = sext i32 %1887 to i64
  %1889 = load i32* %k, align 4
  %1890 = sext i32 %1889 to i64
  %1891 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1890
  %1892 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1891, i32 0, i64 %1888
  %1893 = getelementptr inbounds [23 x [5 x double]]* %1892, i32 0, i64 %1886
  %1894 = getelementptr inbounds [5 x double]* %1893, i32 0, i64 1
  %1895 = load double* %1894, align 8
  %1896 = fmul double %1884, %1895
  store double %1896, double* %u21j, align 8
  %1897 = load double* %tmp, align 8
  %1898 = load i32* %i, align 4
  %1899 = sext i32 %1898 to i64
  %1900 = load i32* %j, align 4
  %1901 = sext i32 %1900 to i64
  %1902 = load i32* %k, align 4
  %1903 = sext i32 %1902 to i64
  %1904 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1903
  %1905 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1904, i32 0, i64 %1901
  %1906 = getelementptr inbounds [23 x [5 x double]]* %1905, i32 0, i64 %1899
  %1907 = getelementptr inbounds [5 x double]* %1906, i32 0, i64 2
  %1908 = load double* %1907, align 8
  %1909 = fmul double %1897, %1908
  store double %1909, double* %u31j, align 8
  %1910 = load double* %tmp, align 8
  %1911 = load i32* %i, align 4
  %1912 = sext i32 %1911 to i64
  %1913 = load i32* %j, align 4
  %1914 = sext i32 %1913 to i64
  %1915 = load i32* %k, align 4
  %1916 = sext i32 %1915 to i64
  %1917 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1916
  %1918 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1917, i32 0, i64 %1914
  %1919 = getelementptr inbounds [23 x [5 x double]]* %1918, i32 0, i64 %1912
  %1920 = getelementptr inbounds [5 x double]* %1919, i32 0, i64 3
  %1921 = load double* %1920, align 8
  %1922 = fmul double %1910, %1921
  store double %1922, double* %u41j, align 8
  %1923 = load double* %tmp, align 8
  %1924 = load i32* %i, align 4
  %1925 = sext i32 %1924 to i64
  %1926 = load i32* %j, align 4
  %1927 = sext i32 %1926 to i64
  %1928 = load i32* %k, align 4
  %1929 = sext i32 %1928 to i64
  %1930 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1929
  %1931 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1930, i32 0, i64 %1927
  %1932 = getelementptr inbounds [23 x [5 x double]]* %1931, i32 0, i64 %1925
  %1933 = getelementptr inbounds [5 x double]* %1932, i32 0, i64 4
  %1934 = load double* %1933, align 8
  %1935 = fmul double %1923, %1934
  store double %1935, double* %u51j, align 8
  %1936 = load i32* %i, align 4
  %1937 = sext i32 %1936 to i64
  %1938 = load i32* %j, align 4
  %1939 = sub nsw i32 %1938, 1
  %1940 = sext i32 %1939 to i64
  %1941 = load i32* %k, align 4
  %1942 = sext i32 %1941 to i64
  %1943 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1942
  %1944 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1943, i32 0, i64 %1940
  %1945 = getelementptr inbounds [23 x [5 x double]]* %1944, i32 0, i64 %1937
  %1946 = getelementptr inbounds [5 x double]* %1945, i32 0, i64 0
  %1947 = load double* %1946, align 8
  %1948 = fdiv double 1.000000e+00, %1947
  store double %1948, double* %tmp, align 8
  %1949 = load double* %tmp, align 8
  %1950 = load i32* %i, align 4
  %1951 = sext i32 %1950 to i64
  %1952 = load i32* %j, align 4
  %1953 = sub nsw i32 %1952, 1
  %1954 = sext i32 %1953 to i64
  %1955 = load i32* %k, align 4
  %1956 = sext i32 %1955 to i64
  %1957 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1956
  %1958 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1957, i32 0, i64 %1954
  %1959 = getelementptr inbounds [23 x [5 x double]]* %1958, i32 0, i64 %1951
  %1960 = getelementptr inbounds [5 x double]* %1959, i32 0, i64 1
  %1961 = load double* %1960, align 8
  %1962 = fmul double %1949, %1961
  store double %1962, double* %u21jm1, align 8
  %1963 = load double* %tmp, align 8
  %1964 = load i32* %i, align 4
  %1965 = sext i32 %1964 to i64
  %1966 = load i32* %j, align 4
  %1967 = sub nsw i32 %1966, 1
  %1968 = sext i32 %1967 to i64
  %1969 = load i32* %k, align 4
  %1970 = sext i32 %1969 to i64
  %1971 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1970
  %1972 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1971, i32 0, i64 %1968
  %1973 = getelementptr inbounds [23 x [5 x double]]* %1972, i32 0, i64 %1965
  %1974 = getelementptr inbounds [5 x double]* %1973, i32 0, i64 2
  %1975 = load double* %1974, align 8
  %1976 = fmul double %1963, %1975
  store double %1976, double* %u31jm1, align 8
  %1977 = load double* %tmp, align 8
  %1978 = load i32* %i, align 4
  %1979 = sext i32 %1978 to i64
  %1980 = load i32* %j, align 4
  %1981 = sub nsw i32 %1980, 1
  %1982 = sext i32 %1981 to i64
  %1983 = load i32* %k, align 4
  %1984 = sext i32 %1983 to i64
  %1985 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1984
  %1986 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1985, i32 0, i64 %1982
  %1987 = getelementptr inbounds [23 x [5 x double]]* %1986, i32 0, i64 %1979
  %1988 = getelementptr inbounds [5 x double]* %1987, i32 0, i64 3
  %1989 = load double* %1988, align 8
  %1990 = fmul double %1977, %1989
  store double %1990, double* %u41jm1, align 8
  %1991 = load double* %tmp, align 8
  %1992 = load i32* %i, align 4
  %1993 = sext i32 %1992 to i64
  %1994 = load i32* %j, align 4
  %1995 = sub nsw i32 %1994, 1
  %1996 = sext i32 %1995 to i64
  %1997 = load i32* %k, align 4
  %1998 = sext i32 %1997 to i64
  %1999 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1998
  %2000 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1999, i32 0, i64 %1996
  %2001 = getelementptr inbounds [23 x [5 x double]]* %2000, i32 0, i64 %1993
  %2002 = getelementptr inbounds [5 x double]* %2001, i32 0, i64 4
  %2003 = load double* %2002, align 8
  %2004 = fmul double %1991, %2003
  store double %2004, double* %u51jm1, align 8
  %2005 = load double* @ty3, align 8
  %2006 = load double* %u21j, align 8
  %2007 = load double* %u21jm1, align 8
  %2008 = fsub double %2006, %2007
  %2009 = fmul double %2005, %2008
  %2010 = load i32* %j, align 4
  %2011 = sext i32 %2010 to i64
  %2012 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %2011
  %2013 = getelementptr inbounds [5 x double]* %2012, i32 0, i64 1
  store double %2009, double* %2013, align 8
  %2014 = load double* @ty3, align 8
  %2015 = fmul double 0x3FF5555555555555, %2014
  %2016 = load double* %u31j, align 8
  %2017 = load double* %u31jm1, align 8
  %2018 = fsub double %2016, %2017
  %2019 = fmul double %2015, %2018
  %2020 = load i32* %j, align 4
  %2021 = sext i32 %2020 to i64
  %2022 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %2021
  %2023 = getelementptr inbounds [5 x double]* %2022, i32 0, i64 2
  store double %2019, double* %2023, align 8
  %2024 = load double* @ty3, align 8
  %2025 = load double* %u41j, align 8
  %2026 = load double* %u41jm1, align 8
  %2027 = fsub double %2025, %2026
  %2028 = fmul double %2024, %2027
  %2029 = load i32* %j, align 4
  %2030 = sext i32 %2029 to i64
  %2031 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %2030
  %2032 = getelementptr inbounds [5 x double]* %2031, i32 0, i64 3
  store double %2028, double* %2032, align 8
  %2033 = load double* @ty3, align 8
  %2034 = fmul double 0xBFDEB851EB851EB6, %2033
  %2035 = load double* %u21j, align 8
  %2036 = load double* %u21j, align 8
  %2037 = fmul double %2035, %2036
  %2038 = load double* %u31j, align 8
  %2039 = load double* %u31j, align 8
  %2040 = fmul double %2038, %2039
  %2041 = fadd double %2037, %2040
  %2042 = load double* %u41j, align 8
  %2043 = load double* %u41j, align 8
  %2044 = fmul double %2042, %2043
  %2045 = fadd double %2041, %2044
  %2046 = load double* %u21jm1, align 8
  %2047 = load double* %u21jm1, align 8
  %2048 = fmul double %2046, %2047
  %2049 = load double* %u31jm1, align 8
  %2050 = load double* %u31jm1, align 8
  %2051 = fmul double %2049, %2050
  %2052 = fadd double %2048, %2051
  %2053 = load double* %u41jm1, align 8
  %2054 = load double* %u41jm1, align 8
  %2055 = fmul double %2053, %2054
  %2056 = fadd double %2052, %2055
  %2057 = fsub double %2045, %2056
  %2058 = fmul double %2034, %2057
  %2059 = load double* @ty3, align 8
  %2060 = fmul double 0x3FC5555555555555, %2059
  %2061 = load double* %u31j, align 8
  %2062 = load double* %u31j, align 8
  %2063 = fmul double %2061, %2062
  %2064 = load double* %u31jm1, align 8
  %2065 = load double* %u31jm1, align 8
  %2066 = fmul double %2064, %2065
  %2067 = fsub double %2063, %2066
  %2068 = fmul double %2060, %2067
  %2069 = fadd double %2058, %2068
  %2070 = load double* @ty3, align 8
  %2071 = fmul double 0x3FFF5C28F5C28F5B, %2070
  %2072 = load double* %u51j, align 8
  %2073 = load double* %u51jm1, align 8
  %2074 = fsub double %2072, %2073
  %2075 = fmul double %2071, %2074
  %2076 = fadd double %2069, %2075
  %2077 = load i32* %j, align 4
  %2078 = sext i32 %2077 to i64
  %2079 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %2078
  %2080 = getelementptr inbounds [5 x double]* %2079, i32 0, i64 4
  store double %2076, double* %2080, align 8
  br label %2081

; <label>:2081                                    ; preds = %1871
  %2082 = load i32* %j, align 4
  %2083 = add nsw i32 %2082, 1
  store i32 %2083, i32* %j, align 4
  br label %1867

; <label>:2084                                    ; preds = %1867
  %2085 = load i32* @jst, align 4
  store i32 %2085, i32* %j, align 4
  br label %2086

; <label>:2086                                    ; preds = %2479, %2084
  %2087 = load i32* %j, align 4
  %2088 = load i32* @jend, align 4
  %2089 = icmp slt i32 %2087, %2088
  br i1 %2089, label %2090, label %2482

; <label>:2090                                    ; preds = %2086
  %2091 = load i32* %i, align 4
  %2092 = sext i32 %2091 to i64
  %2093 = load i32* %j, align 4
  %2094 = sext i32 %2093 to i64
  %2095 = load i32* %k, align 4
  %2096 = sext i32 %2095 to i64
  %2097 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %2096
  %2098 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2097, i32 0, i64 %2094
  %2099 = getelementptr inbounds [23 x [5 x double]]* %2098, i32 0, i64 %2092
  %2100 = getelementptr inbounds [5 x double]* %2099, i32 0, i64 0
  %2101 = load double* %2100, align 8
  %2102 = load double* @dy1, align 8
  %2103 = load double* @ty1, align 8
  %2104 = fmul double %2102, %2103
  %2105 = load i32* %i, align 4
  %2106 = sext i32 %2105 to i64
  %2107 = load i32* %j, align 4
  %2108 = sub nsw i32 %2107, 1
  %2109 = sext i32 %2108 to i64
  %2110 = load i32* %k, align 4
  %2111 = sext i32 %2110 to i64
  %2112 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2111
  %2113 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2112, i32 0, i64 %2109
  %2114 = getelementptr inbounds [23 x [5 x double]]* %2113, i32 0, i64 %2106
  %2115 = getelementptr inbounds [5 x double]* %2114, i32 0, i64 0
  %2116 = load double* %2115, align 8
  %2117 = load i32* %i, align 4
  %2118 = sext i32 %2117 to i64
  %2119 = load i32* %j, align 4
  %2120 = sext i32 %2119 to i64
  %2121 = load i32* %k, align 4
  %2122 = sext i32 %2121 to i64
  %2123 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2122
  %2124 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2123, i32 0, i64 %2120
  %2125 = getelementptr inbounds [23 x [5 x double]]* %2124, i32 0, i64 %2118
  %2126 = getelementptr inbounds [5 x double]* %2125, i32 0, i64 0
  %2127 = load double* %2126, align 8
  %2128 = fmul double 2.000000e+00, %2127
  %2129 = fsub double %2116, %2128
  %2130 = load i32* %i, align 4
  %2131 = sext i32 %2130 to i64
  %2132 = load i32* %j, align 4
  %2133 = add nsw i32 %2132, 1
  %2134 = sext i32 %2133 to i64
  %2135 = load i32* %k, align 4
  %2136 = sext i32 %2135 to i64
  %2137 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2136
  %2138 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2137, i32 0, i64 %2134
  %2139 = getelementptr inbounds [23 x [5 x double]]* %2138, i32 0, i64 %2131
  %2140 = getelementptr inbounds [5 x double]* %2139, i32 0, i64 0
  %2141 = load double* %2140, align 8
  %2142 = fadd double %2129, %2141
  %2143 = fmul double %2104, %2142
  %2144 = fadd double %2101, %2143
  %2145 = load i32* %i, align 4
  %2146 = sext i32 %2145 to i64
  %2147 = load i32* %j, align 4
  %2148 = sext i32 %2147 to i64
  %2149 = load i32* %k, align 4
  %2150 = sext i32 %2149 to i64
  %2151 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %2150
  %2152 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2151, i32 0, i64 %2148
  %2153 = getelementptr inbounds [23 x [5 x double]]* %2152, i32 0, i64 %2146
  %2154 = getelementptr inbounds [5 x double]* %2153, i32 0, i64 0
  store double %2144, double* %2154, align 8
  %2155 = load i32* %i, align 4
  %2156 = sext i32 %2155 to i64
  %2157 = load i32* %j, align 4
  %2158 = sext i32 %2157 to i64
  %2159 = load i32* %k, align 4
  %2160 = sext i32 %2159 to i64
  %2161 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %2160
  %2162 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2161, i32 0, i64 %2158
  %2163 = getelementptr inbounds [23 x [5 x double]]* %2162, i32 0, i64 %2156
  %2164 = getelementptr inbounds [5 x double]* %2163, i32 0, i64 1
  %2165 = load double* %2164, align 8
  %2166 = load double* @ty3, align 8
  %2167 = fmul double %2166, 1.000000e-01
  %2168 = fmul double %2167, 1.000000e+00
  %2169 = load i32* %j, align 4
  %2170 = add nsw i32 %2169, 1
  %2171 = sext i32 %2170 to i64
  %2172 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %2171
  %2173 = getelementptr inbounds [5 x double]* %2172, i32 0, i64 1
  %2174 = load double* %2173, align 8
  %2175 = load i32* %j, align 4
  %2176 = sext i32 %2175 to i64
  %2177 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %2176
  %2178 = getelementptr inbounds [5 x double]* %2177, i32 0, i64 1
  %2179 = load double* %2178, align 8
  %2180 = fsub double %2174, %2179
  %2181 = fmul double %2168, %2180
  %2182 = fadd double %2165, %2181
  %2183 = load double* @dy2, align 8
  %2184 = load double* @ty1, align 8
  %2185 = fmul double %2183, %2184
  %2186 = load i32* %i, align 4
  %2187 = sext i32 %2186 to i64
  %2188 = load i32* %j, align 4
  %2189 = sub nsw i32 %2188, 1
  %2190 = sext i32 %2189 to i64
  %2191 = load i32* %k, align 4
  %2192 = sext i32 %2191 to i64
  %2193 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2192
  %2194 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2193, i32 0, i64 %2190
  %2195 = getelementptr inbounds [23 x [5 x double]]* %2194, i32 0, i64 %2187
  %2196 = getelementptr inbounds [5 x double]* %2195, i32 0, i64 1
  %2197 = load double* %2196, align 8
  %2198 = load i32* %i, align 4
  %2199 = sext i32 %2198 to i64
  %2200 = load i32* %j, align 4
  %2201 = sext i32 %2200 to i64
  %2202 = load i32* %k, align 4
  %2203 = sext i32 %2202 to i64
  %2204 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2203
  %2205 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2204, i32 0, i64 %2201
  %2206 = getelementptr inbounds [23 x [5 x double]]* %2205, i32 0, i64 %2199
  %2207 = getelementptr inbounds [5 x double]* %2206, i32 0, i64 1
  %2208 = load double* %2207, align 8
  %2209 = fmul double 2.000000e+00, %2208
  %2210 = fsub double %2197, %2209
  %2211 = load i32* %i, align 4
  %2212 = sext i32 %2211 to i64
  %2213 = load i32* %j, align 4
  %2214 = add nsw i32 %2213, 1
  %2215 = sext i32 %2214 to i64
  %2216 = load i32* %k, align 4
  %2217 = sext i32 %2216 to i64
  %2218 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2217
  %2219 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2218, i32 0, i64 %2215
  %2220 = getelementptr inbounds [23 x [5 x double]]* %2219, i32 0, i64 %2212
  %2221 = getelementptr inbounds [5 x double]* %2220, i32 0, i64 1
  %2222 = load double* %2221, align 8
  %2223 = fadd double %2210, %2222
  %2224 = fmul double %2185, %2223
  %2225 = fadd double %2182, %2224
  %2226 = load i32* %i, align 4
  %2227 = sext i32 %2226 to i64
  %2228 = load i32* %j, align 4
  %2229 = sext i32 %2228 to i64
  %2230 = load i32* %k, align 4
  %2231 = sext i32 %2230 to i64
  %2232 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %2231
  %2233 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2232, i32 0, i64 %2229
  %2234 = getelementptr inbounds [23 x [5 x double]]* %2233, i32 0, i64 %2227
  %2235 = getelementptr inbounds [5 x double]* %2234, i32 0, i64 1
  store double %2225, double* %2235, align 8
  %2236 = load i32* %i, align 4
  %2237 = sext i32 %2236 to i64
  %2238 = load i32* %j, align 4
  %2239 = sext i32 %2238 to i64
  %2240 = load i32* %k, align 4
  %2241 = sext i32 %2240 to i64
  %2242 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %2241
  %2243 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2242, i32 0, i64 %2239
  %2244 = getelementptr inbounds [23 x [5 x double]]* %2243, i32 0, i64 %2237
  %2245 = getelementptr inbounds [5 x double]* %2244, i32 0, i64 2
  %2246 = load double* %2245, align 8
  %2247 = load double* @ty3, align 8
  %2248 = fmul double %2247, 1.000000e-01
  %2249 = fmul double %2248, 1.000000e+00
  %2250 = load i32* %j, align 4
  %2251 = add nsw i32 %2250, 1
  %2252 = sext i32 %2251 to i64
  %2253 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %2252
  %2254 = getelementptr inbounds [5 x double]* %2253, i32 0, i64 2
  %2255 = load double* %2254, align 8
  %2256 = load i32* %j, align 4
  %2257 = sext i32 %2256 to i64
  %2258 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %2257
  %2259 = getelementptr inbounds [5 x double]* %2258, i32 0, i64 2
  %2260 = load double* %2259, align 8
  %2261 = fsub double %2255, %2260
  %2262 = fmul double %2249, %2261
  %2263 = fadd double %2246, %2262
  %2264 = load double* @dy3, align 8
  %2265 = load double* @ty1, align 8
  %2266 = fmul double %2264, %2265
  %2267 = load i32* %i, align 4
  %2268 = sext i32 %2267 to i64
  %2269 = load i32* %j, align 4
  %2270 = sub nsw i32 %2269, 1
  %2271 = sext i32 %2270 to i64
  %2272 = load i32* %k, align 4
  %2273 = sext i32 %2272 to i64
  %2274 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2273
  %2275 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2274, i32 0, i64 %2271
  %2276 = getelementptr inbounds [23 x [5 x double]]* %2275, i32 0, i64 %2268
  %2277 = getelementptr inbounds [5 x double]* %2276, i32 0, i64 2
  %2278 = load double* %2277, align 8
  %2279 = load i32* %i, align 4
  %2280 = sext i32 %2279 to i64
  %2281 = load i32* %j, align 4
  %2282 = sext i32 %2281 to i64
  %2283 = load i32* %k, align 4
  %2284 = sext i32 %2283 to i64
  %2285 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2284
  %2286 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2285, i32 0, i64 %2282
  %2287 = getelementptr inbounds [23 x [5 x double]]* %2286, i32 0, i64 %2280
  %2288 = getelementptr inbounds [5 x double]* %2287, i32 0, i64 2
  %2289 = load double* %2288, align 8
  %2290 = fmul double 2.000000e+00, %2289
  %2291 = fsub double %2278, %2290
  %2292 = load i32* %i, align 4
  %2293 = sext i32 %2292 to i64
  %2294 = load i32* %j, align 4
  %2295 = add nsw i32 %2294, 1
  %2296 = sext i32 %2295 to i64
  %2297 = load i32* %k, align 4
  %2298 = sext i32 %2297 to i64
  %2299 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2298
  %2300 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2299, i32 0, i64 %2296
  %2301 = getelementptr inbounds [23 x [5 x double]]* %2300, i32 0, i64 %2293
  %2302 = getelementptr inbounds [5 x double]* %2301, i32 0, i64 2
  %2303 = load double* %2302, align 8
  %2304 = fadd double %2291, %2303
  %2305 = fmul double %2266, %2304
  %2306 = fadd double %2263, %2305
  %2307 = load i32* %i, align 4
  %2308 = sext i32 %2307 to i64
  %2309 = load i32* %j, align 4
  %2310 = sext i32 %2309 to i64
  %2311 = load i32* %k, align 4
  %2312 = sext i32 %2311 to i64
  %2313 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %2312
  %2314 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2313, i32 0, i64 %2310
  %2315 = getelementptr inbounds [23 x [5 x double]]* %2314, i32 0, i64 %2308
  %2316 = getelementptr inbounds [5 x double]* %2315, i32 0, i64 2
  store double %2306, double* %2316, align 8
  %2317 = load i32* %i, align 4
  %2318 = sext i32 %2317 to i64
  %2319 = load i32* %j, align 4
  %2320 = sext i32 %2319 to i64
  %2321 = load i32* %k, align 4
  %2322 = sext i32 %2321 to i64
  %2323 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %2322
  %2324 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2323, i32 0, i64 %2320
  %2325 = getelementptr inbounds [23 x [5 x double]]* %2324, i32 0, i64 %2318
  %2326 = getelementptr inbounds [5 x double]* %2325, i32 0, i64 3
  %2327 = load double* %2326, align 8
  %2328 = load double* @ty3, align 8
  %2329 = fmul double %2328, 1.000000e-01
  %2330 = fmul double %2329, 1.000000e+00
  %2331 = load i32* %j, align 4
  %2332 = add nsw i32 %2331, 1
  %2333 = sext i32 %2332 to i64
  %2334 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %2333
  %2335 = getelementptr inbounds [5 x double]* %2334, i32 0, i64 3
  %2336 = load double* %2335, align 8
  %2337 = load i32* %j, align 4
  %2338 = sext i32 %2337 to i64
  %2339 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %2338
  %2340 = getelementptr inbounds [5 x double]* %2339, i32 0, i64 3
  %2341 = load double* %2340, align 8
  %2342 = fsub double %2336, %2341
  %2343 = fmul double %2330, %2342
  %2344 = fadd double %2327, %2343
  %2345 = load double* @dy4, align 8
  %2346 = load double* @ty1, align 8
  %2347 = fmul double %2345, %2346
  %2348 = load i32* %i, align 4
  %2349 = sext i32 %2348 to i64
  %2350 = load i32* %j, align 4
  %2351 = sub nsw i32 %2350, 1
  %2352 = sext i32 %2351 to i64
  %2353 = load i32* %k, align 4
  %2354 = sext i32 %2353 to i64
  %2355 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2354
  %2356 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2355, i32 0, i64 %2352
  %2357 = getelementptr inbounds [23 x [5 x double]]* %2356, i32 0, i64 %2349
  %2358 = getelementptr inbounds [5 x double]* %2357, i32 0, i64 3
  %2359 = load double* %2358, align 8
  %2360 = load i32* %i, align 4
  %2361 = sext i32 %2360 to i64
  %2362 = load i32* %j, align 4
  %2363 = sext i32 %2362 to i64
  %2364 = load i32* %k, align 4
  %2365 = sext i32 %2364 to i64
  %2366 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2365
  %2367 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2366, i32 0, i64 %2363
  %2368 = getelementptr inbounds [23 x [5 x double]]* %2367, i32 0, i64 %2361
  %2369 = getelementptr inbounds [5 x double]* %2368, i32 0, i64 3
  %2370 = load double* %2369, align 8
  %2371 = fmul double 2.000000e+00, %2370
  %2372 = fsub double %2359, %2371
  %2373 = load i32* %i, align 4
  %2374 = sext i32 %2373 to i64
  %2375 = load i32* %j, align 4
  %2376 = add nsw i32 %2375, 1
  %2377 = sext i32 %2376 to i64
  %2378 = load i32* %k, align 4
  %2379 = sext i32 %2378 to i64
  %2380 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2379
  %2381 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2380, i32 0, i64 %2377
  %2382 = getelementptr inbounds [23 x [5 x double]]* %2381, i32 0, i64 %2374
  %2383 = getelementptr inbounds [5 x double]* %2382, i32 0, i64 3
  %2384 = load double* %2383, align 8
  %2385 = fadd double %2372, %2384
  %2386 = fmul double %2347, %2385
  %2387 = fadd double %2344, %2386
  %2388 = load i32* %i, align 4
  %2389 = sext i32 %2388 to i64
  %2390 = load i32* %j, align 4
  %2391 = sext i32 %2390 to i64
  %2392 = load i32* %k, align 4
  %2393 = sext i32 %2392 to i64
  %2394 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %2393
  %2395 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2394, i32 0, i64 %2391
  %2396 = getelementptr inbounds [23 x [5 x double]]* %2395, i32 0, i64 %2389
  %2397 = getelementptr inbounds [5 x double]* %2396, i32 0, i64 3
  store double %2387, double* %2397, align 8
  %2398 = load i32* %i, align 4
  %2399 = sext i32 %2398 to i64
  %2400 = load i32* %j, align 4
  %2401 = sext i32 %2400 to i64
  %2402 = load i32* %k, align 4
  %2403 = sext i32 %2402 to i64
  %2404 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %2403
  %2405 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2404, i32 0, i64 %2401
  %2406 = getelementptr inbounds [23 x [5 x double]]* %2405, i32 0, i64 %2399
  %2407 = getelementptr inbounds [5 x double]* %2406, i32 0, i64 4
  %2408 = load double* %2407, align 8
  %2409 = load double* @ty3, align 8
  %2410 = fmul double %2409, 1.000000e-01
  %2411 = fmul double %2410, 1.000000e+00
  %2412 = load i32* %j, align 4
  %2413 = add nsw i32 %2412, 1
  %2414 = sext i32 %2413 to i64
  %2415 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %2414
  %2416 = getelementptr inbounds [5 x double]* %2415, i32 0, i64 4
  %2417 = load double* %2416, align 8
  %2418 = load i32* %j, align 4
  %2419 = sext i32 %2418 to i64
  %2420 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %2419
  %2421 = getelementptr inbounds [5 x double]* %2420, i32 0, i64 4
  %2422 = load double* %2421, align 8
  %2423 = fsub double %2417, %2422
  %2424 = fmul double %2411, %2423
  %2425 = fadd double %2408, %2424
  %2426 = load double* @dy5, align 8
  %2427 = load double* @ty1, align 8
  %2428 = fmul double %2426, %2427
  %2429 = load i32* %i, align 4
  %2430 = sext i32 %2429 to i64
  %2431 = load i32* %j, align 4
  %2432 = sub nsw i32 %2431, 1
  %2433 = sext i32 %2432 to i64
  %2434 = load i32* %k, align 4
  %2435 = sext i32 %2434 to i64
  %2436 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2435
  %2437 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2436, i32 0, i64 %2433
  %2438 = getelementptr inbounds [23 x [5 x double]]* %2437, i32 0, i64 %2430
  %2439 = getelementptr inbounds [5 x double]* %2438, i32 0, i64 4
  %2440 = load double* %2439, align 8
  %2441 = load i32* %i, align 4
  %2442 = sext i32 %2441 to i64
  %2443 = load i32* %j, align 4
  %2444 = sext i32 %2443 to i64
  %2445 = load i32* %k, align 4
  %2446 = sext i32 %2445 to i64
  %2447 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2446
  %2448 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2447, i32 0, i64 %2444
  %2449 = getelementptr inbounds [23 x [5 x double]]* %2448, i32 0, i64 %2442
  %2450 = getelementptr inbounds [5 x double]* %2449, i32 0, i64 4
  %2451 = load double* %2450, align 8
  %2452 = fmul double 2.000000e+00, %2451
  %2453 = fsub double %2440, %2452
  %2454 = load i32* %i, align 4
  %2455 = sext i32 %2454 to i64
  %2456 = load i32* %j, align 4
  %2457 = add nsw i32 %2456, 1
  %2458 = sext i32 %2457 to i64
  %2459 = load i32* %k, align 4
  %2460 = sext i32 %2459 to i64
  %2461 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2460
  %2462 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2461, i32 0, i64 %2458
  %2463 = getelementptr inbounds [23 x [5 x double]]* %2462, i32 0, i64 %2455
  %2464 = getelementptr inbounds [5 x double]* %2463, i32 0, i64 4
  %2465 = load double* %2464, align 8
  %2466 = fadd double %2453, %2465
  %2467 = fmul double %2428, %2466
  %2468 = fadd double %2425, %2467
  %2469 = load i32* %i, align 4
  %2470 = sext i32 %2469 to i64
  %2471 = load i32* %j, align 4
  %2472 = sext i32 %2471 to i64
  %2473 = load i32* %k, align 4
  %2474 = sext i32 %2473 to i64
  %2475 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %2474
  %2476 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2475, i32 0, i64 %2472
  %2477 = getelementptr inbounds [23 x [5 x double]]* %2476, i32 0, i64 %2470
  %2478 = getelementptr inbounds [5 x double]* %2477, i32 0, i64 4
  store double %2468, double* %2478, align 8
  br label %2479

; <label>:2479                                    ; preds = %2090
  %2480 = load i32* %j, align 4
  %2481 = add nsw i32 %2480, 1
  store i32 %2481, i32* %j, align 4
  br label %2086

; <label>:2482                                    ; preds = %2086
  store i32 0, i32* %m, align 4
  br label %2483

; <label>:2483                                    ; preds = %2622, %2482
  %2484 = load i32* %m, align 4
  %2485 = icmp slt i32 %2484, 5
  br i1 %2485, label %2486, label %2625

; <label>:2486                                    ; preds = %2483
  %2487 = load i32* %m, align 4
  %2488 = sext i32 %2487 to i64
  %2489 = load i32* %i, align 4
  %2490 = sext i32 %2489 to i64
  %2491 = load i32* %k, align 4
  %2492 = sext i32 %2491 to i64
  %2493 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %2492
  %2494 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2493, i32 0, i64 1
  %2495 = getelementptr inbounds [23 x [5 x double]]* %2494, i32 0, i64 %2490
  %2496 = getelementptr inbounds [5 x double]* %2495, i32 0, i64 %2488
  %2497 = load double* %2496, align 8
  %2498 = load double* @dssp, align 8
  %2499 = load i32* %m, align 4
  %2500 = sext i32 %2499 to i64
  %2501 = load i32* %i, align 4
  %2502 = sext i32 %2501 to i64
  %2503 = load i32* %k, align 4
  %2504 = sext i32 %2503 to i64
  %2505 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2504
  %2506 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2505, i32 0, i64 1
  %2507 = getelementptr inbounds [23 x [5 x double]]* %2506, i32 0, i64 %2502
  %2508 = getelementptr inbounds [5 x double]* %2507, i32 0, i64 %2500
  %2509 = load double* %2508, align 8
  %2510 = fmul double 5.000000e+00, %2509
  %2511 = load i32* %m, align 4
  %2512 = sext i32 %2511 to i64
  %2513 = load i32* %i, align 4
  %2514 = sext i32 %2513 to i64
  %2515 = load i32* %k, align 4
  %2516 = sext i32 %2515 to i64
  %2517 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2516
  %2518 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2517, i32 0, i64 2
  %2519 = getelementptr inbounds [23 x [5 x double]]* %2518, i32 0, i64 %2514
  %2520 = getelementptr inbounds [5 x double]* %2519, i32 0, i64 %2512
  %2521 = load double* %2520, align 8
  %2522 = fmul double 4.000000e+00, %2521
  %2523 = fsub double %2510, %2522
  %2524 = load i32* %m, align 4
  %2525 = sext i32 %2524 to i64
  %2526 = load i32* %i, align 4
  %2527 = sext i32 %2526 to i64
  %2528 = load i32* %k, align 4
  %2529 = sext i32 %2528 to i64
  %2530 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2529
  %2531 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2530, i32 0, i64 3
  %2532 = getelementptr inbounds [23 x [5 x double]]* %2531, i32 0, i64 %2527
  %2533 = getelementptr inbounds [5 x double]* %2532, i32 0, i64 %2525
  %2534 = load double* %2533, align 8
  %2535 = fadd double %2523, %2534
  %2536 = fmul double %2498, %2535
  %2537 = fsub double %2497, %2536
  %2538 = load i32* %m, align 4
  %2539 = sext i32 %2538 to i64
  %2540 = load i32* %i, align 4
  %2541 = sext i32 %2540 to i64
  %2542 = load i32* %k, align 4
  %2543 = sext i32 %2542 to i64
  %2544 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %2543
  %2545 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2544, i32 0, i64 1
  %2546 = getelementptr inbounds [23 x [5 x double]]* %2545, i32 0, i64 %2541
  %2547 = getelementptr inbounds [5 x double]* %2546, i32 0, i64 %2539
  store double %2537, double* %2547, align 8
  %2548 = load i32* %m, align 4
  %2549 = sext i32 %2548 to i64
  %2550 = load i32* %i, align 4
  %2551 = sext i32 %2550 to i64
  %2552 = load i32* %k, align 4
  %2553 = sext i32 %2552 to i64
  %2554 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %2553
  %2555 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2554, i32 0, i64 2
  %2556 = getelementptr inbounds [23 x [5 x double]]* %2555, i32 0, i64 %2551
  %2557 = getelementptr inbounds [5 x double]* %2556, i32 0, i64 %2549
  %2558 = load double* %2557, align 8
  %2559 = load double* @dssp, align 8
  %2560 = load i32* %m, align 4
  %2561 = sext i32 %2560 to i64
  %2562 = load i32* %i, align 4
  %2563 = sext i32 %2562 to i64
  %2564 = load i32* %k, align 4
  %2565 = sext i32 %2564 to i64
  %2566 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2565
  %2567 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2566, i32 0, i64 1
  %2568 = getelementptr inbounds [23 x [5 x double]]* %2567, i32 0, i64 %2563
  %2569 = getelementptr inbounds [5 x double]* %2568, i32 0, i64 %2561
  %2570 = load double* %2569, align 8
  %2571 = fmul double -4.000000e+00, %2570
  %2572 = load i32* %m, align 4
  %2573 = sext i32 %2572 to i64
  %2574 = load i32* %i, align 4
  %2575 = sext i32 %2574 to i64
  %2576 = load i32* %k, align 4
  %2577 = sext i32 %2576 to i64
  %2578 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2577
  %2579 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2578, i32 0, i64 2
  %2580 = getelementptr inbounds [23 x [5 x double]]* %2579, i32 0, i64 %2575
  %2581 = getelementptr inbounds [5 x double]* %2580, i32 0, i64 %2573
  %2582 = load double* %2581, align 8
  %2583 = fmul double 6.000000e+00, %2582
  %2584 = fadd double %2571, %2583
  %2585 = load i32* %m, align 4
  %2586 = sext i32 %2585 to i64
  %2587 = load i32* %i, align 4
  %2588 = sext i32 %2587 to i64
  %2589 = load i32* %k, align 4
  %2590 = sext i32 %2589 to i64
  %2591 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2590
  %2592 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2591, i32 0, i64 3
  %2593 = getelementptr inbounds [23 x [5 x double]]* %2592, i32 0, i64 %2588
  %2594 = getelementptr inbounds [5 x double]* %2593, i32 0, i64 %2586
  %2595 = load double* %2594, align 8
  %2596 = fmul double 4.000000e+00, %2595
  %2597 = fsub double %2584, %2596
  %2598 = load i32* %m, align 4
  %2599 = sext i32 %2598 to i64
  %2600 = load i32* %i, align 4
  %2601 = sext i32 %2600 to i64
  %2602 = load i32* %k, align 4
  %2603 = sext i32 %2602 to i64
  %2604 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2603
  %2605 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2604, i32 0, i64 4
  %2606 = getelementptr inbounds [23 x [5 x double]]* %2605, i32 0, i64 %2601
  %2607 = getelementptr inbounds [5 x double]* %2606, i32 0, i64 %2599
  %2608 = load double* %2607, align 8
  %2609 = fadd double %2597, %2608
  %2610 = fmul double %2559, %2609
  %2611 = fsub double %2558, %2610
  %2612 = load i32* %m, align 4
  %2613 = sext i32 %2612 to i64
  %2614 = load i32* %i, align 4
  %2615 = sext i32 %2614 to i64
  %2616 = load i32* %k, align 4
  %2617 = sext i32 %2616 to i64
  %2618 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %2617
  %2619 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2618, i32 0, i64 2
  %2620 = getelementptr inbounds [23 x [5 x double]]* %2619, i32 0, i64 %2615
  %2621 = getelementptr inbounds [5 x double]* %2620, i32 0, i64 %2613
  store double %2611, double* %2621, align 8
  br label %2622

; <label>:2622                                    ; preds = %2486
  %2623 = load i32* %m, align 4
  %2624 = add nsw i32 %2623, 1
  store i32 %2624, i32* %m, align 4
  br label %2483

; <label>:2625                                    ; preds = %2483
  store i32 3, i32* %j, align 4
  br label %2626

; <label>:2626                                    ; preds = %2744, %2625
  %2627 = load i32* %j, align 4
  %2628 = load i32* @ny, align 4
  %2629 = sub nsw i32 %2628, 3
  %2630 = icmp slt i32 %2627, %2629
  br i1 %2630, label %2631, label %2747

; <label>:2631                                    ; preds = %2626
  store i32 0, i32* %m, align 4
  br label %2632

; <label>:2632                                    ; preds = %2740, %2631
  %2633 = load i32* %m, align 4
  %2634 = icmp slt i32 %2633, 5
  br i1 %2634, label %2635, label %2743

; <label>:2635                                    ; preds = %2632
  %2636 = load i32* %m, align 4
  %2637 = sext i32 %2636 to i64
  %2638 = load i32* %i, align 4
  %2639 = sext i32 %2638 to i64
  %2640 = load i32* %j, align 4
  %2641 = sext i32 %2640 to i64
  %2642 = load i32* %k, align 4
  %2643 = sext i32 %2642 to i64
  %2644 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %2643
  %2645 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2644, i32 0, i64 %2641
  %2646 = getelementptr inbounds [23 x [5 x double]]* %2645, i32 0, i64 %2639
  %2647 = getelementptr inbounds [5 x double]* %2646, i32 0, i64 %2637
  %2648 = load double* %2647, align 8
  %2649 = load double* @dssp, align 8
  %2650 = load i32* %m, align 4
  %2651 = sext i32 %2650 to i64
  %2652 = load i32* %i, align 4
  %2653 = sext i32 %2652 to i64
  %2654 = load i32* %j, align 4
  %2655 = sub nsw i32 %2654, 2
  %2656 = sext i32 %2655 to i64
  %2657 = load i32* %k, align 4
  %2658 = sext i32 %2657 to i64
  %2659 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2658
  %2660 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2659, i32 0, i64 %2656
  %2661 = getelementptr inbounds [23 x [5 x double]]* %2660, i32 0, i64 %2653
  %2662 = getelementptr inbounds [5 x double]* %2661, i32 0, i64 %2651
  %2663 = load double* %2662, align 8
  %2664 = load i32* %m, align 4
  %2665 = sext i32 %2664 to i64
  %2666 = load i32* %i, align 4
  %2667 = sext i32 %2666 to i64
  %2668 = load i32* %j, align 4
  %2669 = sub nsw i32 %2668, 1
  %2670 = sext i32 %2669 to i64
  %2671 = load i32* %k, align 4
  %2672 = sext i32 %2671 to i64
  %2673 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2672
  %2674 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2673, i32 0, i64 %2670
  %2675 = getelementptr inbounds [23 x [5 x double]]* %2674, i32 0, i64 %2667
  %2676 = getelementptr inbounds [5 x double]* %2675, i32 0, i64 %2665
  %2677 = load double* %2676, align 8
  %2678 = fmul double 4.000000e+00, %2677
  %2679 = fsub double %2663, %2678
  %2680 = load i32* %m, align 4
  %2681 = sext i32 %2680 to i64
  %2682 = load i32* %i, align 4
  %2683 = sext i32 %2682 to i64
  %2684 = load i32* %j, align 4
  %2685 = sext i32 %2684 to i64
  %2686 = load i32* %k, align 4
  %2687 = sext i32 %2686 to i64
  %2688 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2687
  %2689 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2688, i32 0, i64 %2685
  %2690 = getelementptr inbounds [23 x [5 x double]]* %2689, i32 0, i64 %2683
  %2691 = getelementptr inbounds [5 x double]* %2690, i32 0, i64 %2681
  %2692 = load double* %2691, align 8
  %2693 = fmul double 6.000000e+00, %2692
  %2694 = fadd double %2679, %2693
  %2695 = load i32* %m, align 4
  %2696 = sext i32 %2695 to i64
  %2697 = load i32* %i, align 4
  %2698 = sext i32 %2697 to i64
  %2699 = load i32* %j, align 4
  %2700 = add nsw i32 %2699, 1
  %2701 = sext i32 %2700 to i64
  %2702 = load i32* %k, align 4
  %2703 = sext i32 %2702 to i64
  %2704 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2703
  %2705 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2704, i32 0, i64 %2701
  %2706 = getelementptr inbounds [23 x [5 x double]]* %2705, i32 0, i64 %2698
  %2707 = getelementptr inbounds [5 x double]* %2706, i32 0, i64 %2696
  %2708 = load double* %2707, align 8
  %2709 = fmul double 4.000000e+00, %2708
  %2710 = fsub double %2694, %2709
  %2711 = load i32* %m, align 4
  %2712 = sext i32 %2711 to i64
  %2713 = load i32* %i, align 4
  %2714 = sext i32 %2713 to i64
  %2715 = load i32* %j, align 4
  %2716 = add nsw i32 %2715, 2
  %2717 = sext i32 %2716 to i64
  %2718 = load i32* %k, align 4
  %2719 = sext i32 %2718 to i64
  %2720 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2719
  %2721 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2720, i32 0, i64 %2717
  %2722 = getelementptr inbounds [23 x [5 x double]]* %2721, i32 0, i64 %2714
  %2723 = getelementptr inbounds [5 x double]* %2722, i32 0, i64 %2712
  %2724 = load double* %2723, align 8
  %2725 = fadd double %2710, %2724
  %2726 = fmul double %2649, %2725
  %2727 = fsub double %2648, %2726
  %2728 = load i32* %m, align 4
  %2729 = sext i32 %2728 to i64
  %2730 = load i32* %i, align 4
  %2731 = sext i32 %2730 to i64
  %2732 = load i32* %j, align 4
  %2733 = sext i32 %2732 to i64
  %2734 = load i32* %k, align 4
  %2735 = sext i32 %2734 to i64
  %2736 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %2735
  %2737 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2736, i32 0, i64 %2733
  %2738 = getelementptr inbounds [23 x [5 x double]]* %2737, i32 0, i64 %2731
  %2739 = getelementptr inbounds [5 x double]* %2738, i32 0, i64 %2729
  store double %2727, double* %2739, align 8
  br label %2740

; <label>:2740                                    ; preds = %2635
  %2741 = load i32* %m, align 4
  %2742 = add nsw i32 %2741, 1
  store i32 %2742, i32* %m, align 4
  br label %2632

; <label>:2743                                    ; preds = %2632
  br label %2744

; <label>:2744                                    ; preds = %2743
  %2745 = load i32* %j, align 4
  %2746 = add nsw i32 %2745, 1
  store i32 %2746, i32* %j, align 4
  br label %2626

; <label>:2747                                    ; preds = %2626
  store i32 0, i32* %m, align 4
  br label %2748

; <label>:2748                                    ; preds = %2920, %2747
  %2749 = load i32* %m, align 4
  %2750 = icmp slt i32 %2749, 5
  br i1 %2750, label %2751, label %2923

; <label>:2751                                    ; preds = %2748
  %2752 = load i32* %m, align 4
  %2753 = sext i32 %2752 to i64
  %2754 = load i32* %i, align 4
  %2755 = sext i32 %2754 to i64
  %2756 = load i32* @ny, align 4
  %2757 = sub nsw i32 %2756, 3
  %2758 = sext i32 %2757 to i64
  %2759 = load i32* %k, align 4
  %2760 = sext i32 %2759 to i64
  %2761 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %2760
  %2762 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2761, i32 0, i64 %2758
  %2763 = getelementptr inbounds [23 x [5 x double]]* %2762, i32 0, i64 %2755
  %2764 = getelementptr inbounds [5 x double]* %2763, i32 0, i64 %2753
  %2765 = load double* %2764, align 8
  %2766 = load double* @dssp, align 8
  %2767 = load i32* %m, align 4
  %2768 = sext i32 %2767 to i64
  %2769 = load i32* %i, align 4
  %2770 = sext i32 %2769 to i64
  %2771 = load i32* @ny, align 4
  %2772 = sub nsw i32 %2771, 5
  %2773 = sext i32 %2772 to i64
  %2774 = load i32* %k, align 4
  %2775 = sext i32 %2774 to i64
  %2776 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2775
  %2777 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2776, i32 0, i64 %2773
  %2778 = getelementptr inbounds [23 x [5 x double]]* %2777, i32 0, i64 %2770
  %2779 = getelementptr inbounds [5 x double]* %2778, i32 0, i64 %2768
  %2780 = load double* %2779, align 8
  %2781 = load i32* %m, align 4
  %2782 = sext i32 %2781 to i64
  %2783 = load i32* %i, align 4
  %2784 = sext i32 %2783 to i64
  %2785 = load i32* @ny, align 4
  %2786 = sub nsw i32 %2785, 4
  %2787 = sext i32 %2786 to i64
  %2788 = load i32* %k, align 4
  %2789 = sext i32 %2788 to i64
  %2790 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2789
  %2791 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2790, i32 0, i64 %2787
  %2792 = getelementptr inbounds [23 x [5 x double]]* %2791, i32 0, i64 %2784
  %2793 = getelementptr inbounds [5 x double]* %2792, i32 0, i64 %2782
  %2794 = load double* %2793, align 8
  %2795 = fmul double 4.000000e+00, %2794
  %2796 = fsub double %2780, %2795
  %2797 = load i32* %m, align 4
  %2798 = sext i32 %2797 to i64
  %2799 = load i32* %i, align 4
  %2800 = sext i32 %2799 to i64
  %2801 = load i32* @ny, align 4
  %2802 = sub nsw i32 %2801, 3
  %2803 = sext i32 %2802 to i64
  %2804 = load i32* %k, align 4
  %2805 = sext i32 %2804 to i64
  %2806 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2805
  %2807 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2806, i32 0, i64 %2803
  %2808 = getelementptr inbounds [23 x [5 x double]]* %2807, i32 0, i64 %2800
  %2809 = getelementptr inbounds [5 x double]* %2808, i32 0, i64 %2798
  %2810 = load double* %2809, align 8
  %2811 = fmul double 6.000000e+00, %2810
  %2812 = fadd double %2796, %2811
  %2813 = load i32* %m, align 4
  %2814 = sext i32 %2813 to i64
  %2815 = load i32* %i, align 4
  %2816 = sext i32 %2815 to i64
  %2817 = load i32* @ny, align 4
  %2818 = sub nsw i32 %2817, 2
  %2819 = sext i32 %2818 to i64
  %2820 = load i32* %k, align 4
  %2821 = sext i32 %2820 to i64
  %2822 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2821
  %2823 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2822, i32 0, i64 %2819
  %2824 = getelementptr inbounds [23 x [5 x double]]* %2823, i32 0, i64 %2816
  %2825 = getelementptr inbounds [5 x double]* %2824, i32 0, i64 %2814
  %2826 = load double* %2825, align 8
  %2827 = fmul double 4.000000e+00, %2826
  %2828 = fsub double %2812, %2827
  %2829 = fmul double %2766, %2828
  %2830 = fsub double %2765, %2829
  %2831 = load i32* %m, align 4
  %2832 = sext i32 %2831 to i64
  %2833 = load i32* %i, align 4
  %2834 = sext i32 %2833 to i64
  %2835 = load i32* @ny, align 4
  %2836 = sub nsw i32 %2835, 3
  %2837 = sext i32 %2836 to i64
  %2838 = load i32* %k, align 4
  %2839 = sext i32 %2838 to i64
  %2840 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %2839
  %2841 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2840, i32 0, i64 %2837
  %2842 = getelementptr inbounds [23 x [5 x double]]* %2841, i32 0, i64 %2834
  %2843 = getelementptr inbounds [5 x double]* %2842, i32 0, i64 %2832
  store double %2830, double* %2843, align 8
  %2844 = load i32* %m, align 4
  %2845 = sext i32 %2844 to i64
  %2846 = load i32* %i, align 4
  %2847 = sext i32 %2846 to i64
  %2848 = load i32* @ny, align 4
  %2849 = sub nsw i32 %2848, 2
  %2850 = sext i32 %2849 to i64
  %2851 = load i32* %k, align 4
  %2852 = sext i32 %2851 to i64
  %2853 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %2852
  %2854 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2853, i32 0, i64 %2850
  %2855 = getelementptr inbounds [23 x [5 x double]]* %2854, i32 0, i64 %2847
  %2856 = getelementptr inbounds [5 x double]* %2855, i32 0, i64 %2845
  %2857 = load double* %2856, align 8
  %2858 = load double* @dssp, align 8
  %2859 = load i32* %m, align 4
  %2860 = sext i32 %2859 to i64
  %2861 = load i32* %i, align 4
  %2862 = sext i32 %2861 to i64
  %2863 = load i32* @ny, align 4
  %2864 = sub nsw i32 %2863, 4
  %2865 = sext i32 %2864 to i64
  %2866 = load i32* %k, align 4
  %2867 = sext i32 %2866 to i64
  %2868 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2867
  %2869 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2868, i32 0, i64 %2865
  %2870 = getelementptr inbounds [23 x [5 x double]]* %2869, i32 0, i64 %2862
  %2871 = getelementptr inbounds [5 x double]* %2870, i32 0, i64 %2860
  %2872 = load double* %2871, align 8
  %2873 = load i32* %m, align 4
  %2874 = sext i32 %2873 to i64
  %2875 = load i32* %i, align 4
  %2876 = sext i32 %2875 to i64
  %2877 = load i32* @ny, align 4
  %2878 = sub nsw i32 %2877, 3
  %2879 = sext i32 %2878 to i64
  %2880 = load i32* %k, align 4
  %2881 = sext i32 %2880 to i64
  %2882 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2881
  %2883 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2882, i32 0, i64 %2879
  %2884 = getelementptr inbounds [23 x [5 x double]]* %2883, i32 0, i64 %2876
  %2885 = getelementptr inbounds [5 x double]* %2884, i32 0, i64 %2874
  %2886 = load double* %2885, align 8
  %2887 = fmul double 4.000000e+00, %2886
  %2888 = fsub double %2872, %2887
  %2889 = load i32* %m, align 4
  %2890 = sext i32 %2889 to i64
  %2891 = load i32* %i, align 4
  %2892 = sext i32 %2891 to i64
  %2893 = load i32* @ny, align 4
  %2894 = sub nsw i32 %2893, 2
  %2895 = sext i32 %2894 to i64
  %2896 = load i32* %k, align 4
  %2897 = sext i32 %2896 to i64
  %2898 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2897
  %2899 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2898, i32 0, i64 %2895
  %2900 = getelementptr inbounds [23 x [5 x double]]* %2899, i32 0, i64 %2892
  %2901 = getelementptr inbounds [5 x double]* %2900, i32 0, i64 %2890
  %2902 = load double* %2901, align 8
  %2903 = fmul double 5.000000e+00, %2902
  %2904 = fadd double %2888, %2903
  %2905 = fmul double %2858, %2904
  %2906 = fsub double %2857, %2905
  %2907 = load i32* %m, align 4
  %2908 = sext i32 %2907 to i64
  %2909 = load i32* %i, align 4
  %2910 = sext i32 %2909 to i64
  %2911 = load i32* @ny, align 4
  %2912 = sub nsw i32 %2911, 2
  %2913 = sext i32 %2912 to i64
  %2914 = load i32* %k, align 4
  %2915 = sext i32 %2914 to i64
  %2916 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %2915
  %2917 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2916, i32 0, i64 %2913
  %2918 = getelementptr inbounds [23 x [5 x double]]* %2917, i32 0, i64 %2910
  %2919 = getelementptr inbounds [5 x double]* %2918, i32 0, i64 %2908
  store double %2906, double* %2919, align 8
  br label %2920

; <label>:2920                                    ; preds = %2751
  %2921 = load i32* %m, align 4
  %2922 = add nsw i32 %2921, 1
  store i32 %2922, i32* %m, align 4
  br label %2748

; <label>:2923                                    ; preds = %2748
  br label %2924

; <label>:2924                                    ; preds = %2923
  %2925 = load i32* %i, align 4
  %2926 = add nsw i32 %2925, 1
  store i32 %2926, i32* %i, align 4
  br label %1580

; <label>:2927                                    ; preds = %1580
  br label %2928

; <label>:2928                                    ; preds = %2927
  %2929 = load i32* %k, align 4
  %2930 = add nsw i32 %2929, 1
  store i32 %2930, i32* %k, align 4
  br label %1573

; <label>:2931                                    ; preds = %1573
  %2932 = load i32* @jst, align 4
  store i32 %2932, i32* %j, align 4
  br label %2933

; <label>:2933                                    ; preds = %4275, %2931
  %2934 = load i32* %j, align 4
  %2935 = load i32* @jend, align 4
  %2936 = icmp slt i32 %2934, %2935
  br i1 %2936, label %2937, label %4278

; <label>:2937                                    ; preds = %2933
  %2938 = load i32* @ist, align 4
  store i32 %2938, i32* %i, align 4
  br label %2939

; <label>:2939                                    ; preds = %4271, %2937
  %2940 = load i32* %i, align 4
  %2941 = load i32* @iend, align 4
  %2942 = icmp slt i32 %2940, %2941
  br i1 %2942, label %2943, label %4274

; <label>:2943                                    ; preds = %2939
  store i32 0, i32* %k, align 4
  br label %2944

; <label>:2944                                    ; preds = %3158, %2943
  %2945 = load i32* %k, align 4
  %2946 = load i32* @nz, align 4
  %2947 = icmp slt i32 %2945, %2946
  br i1 %2947, label %2948, label %3161

; <label>:2948                                    ; preds = %2944
  %2949 = load i32* %i, align 4
  %2950 = sext i32 %2949 to i64
  %2951 = load i32* %j, align 4
  %2952 = sext i32 %2951 to i64
  %2953 = load i32* %k, align 4
  %2954 = sext i32 %2953 to i64
  %2955 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2954
  %2956 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2955, i32 0, i64 %2952
  %2957 = getelementptr inbounds [23 x [5 x double]]* %2956, i32 0, i64 %2950
  %2958 = getelementptr inbounds [5 x double]* %2957, i32 0, i64 3
  %2959 = load double* %2958, align 8
  %2960 = load i32* %k, align 4
  %2961 = sext i32 %2960 to i64
  %2962 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %2961
  %2963 = getelementptr inbounds [5 x double]* %2962, i32 0, i64 0
  store double %2959, double* %2963, align 8
  %2964 = load i32* %i, align 4
  %2965 = sext i32 %2964 to i64
  %2966 = load i32* %j, align 4
  %2967 = sext i32 %2966 to i64
  %2968 = load i32* %k, align 4
  %2969 = sext i32 %2968 to i64
  %2970 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2969
  %2971 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2970, i32 0, i64 %2967
  %2972 = getelementptr inbounds [23 x [5 x double]]* %2971, i32 0, i64 %2965
  %2973 = getelementptr inbounds [5 x double]* %2972, i32 0, i64 3
  %2974 = load double* %2973, align 8
  %2975 = load i32* %i, align 4
  %2976 = sext i32 %2975 to i64
  %2977 = load i32* %j, align 4
  %2978 = sext i32 %2977 to i64
  %2979 = load i32* %k, align 4
  %2980 = sext i32 %2979 to i64
  %2981 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2980
  %2982 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2981, i32 0, i64 %2978
  %2983 = getelementptr inbounds [23 x [5 x double]]* %2982, i32 0, i64 %2976
  %2984 = getelementptr inbounds [5 x double]* %2983, i32 0, i64 0
  %2985 = load double* %2984, align 8
  %2986 = fdiv double %2974, %2985
  store double %2986, double* %u41, align 8
  %2987 = load i32* %i, align 4
  %2988 = sext i32 %2987 to i64
  %2989 = load i32* %j, align 4
  %2990 = sext i32 %2989 to i64
  %2991 = load i32* %k, align 4
  %2992 = sext i32 %2991 to i64
  %2993 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2992
  %2994 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2993, i32 0, i64 %2990
  %2995 = getelementptr inbounds [23 x [5 x double]]* %2994, i32 0, i64 %2988
  %2996 = getelementptr inbounds [5 x double]* %2995, i32 0, i64 1
  %2997 = load double* %2996, align 8
  %2998 = load i32* %i, align 4
  %2999 = sext i32 %2998 to i64
  %3000 = load i32* %j, align 4
  %3001 = sext i32 %3000 to i64
  %3002 = load i32* %k, align 4
  %3003 = sext i32 %3002 to i64
  %3004 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3003
  %3005 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3004, i32 0, i64 %3001
  %3006 = getelementptr inbounds [23 x [5 x double]]* %3005, i32 0, i64 %2999
  %3007 = getelementptr inbounds [5 x double]* %3006, i32 0, i64 1
  %3008 = load double* %3007, align 8
  %3009 = fmul double %2997, %3008
  %3010 = load i32* %i, align 4
  %3011 = sext i32 %3010 to i64
  %3012 = load i32* %j, align 4
  %3013 = sext i32 %3012 to i64
  %3014 = load i32* %k, align 4
  %3015 = sext i32 %3014 to i64
  %3016 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3015
  %3017 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3016, i32 0, i64 %3013
  %3018 = getelementptr inbounds [23 x [5 x double]]* %3017, i32 0, i64 %3011
  %3019 = getelementptr inbounds [5 x double]* %3018, i32 0, i64 2
  %3020 = load double* %3019, align 8
  %3021 = load i32* %i, align 4
  %3022 = sext i32 %3021 to i64
  %3023 = load i32* %j, align 4
  %3024 = sext i32 %3023 to i64
  %3025 = load i32* %k, align 4
  %3026 = sext i32 %3025 to i64
  %3027 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3026
  %3028 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3027, i32 0, i64 %3024
  %3029 = getelementptr inbounds [23 x [5 x double]]* %3028, i32 0, i64 %3022
  %3030 = getelementptr inbounds [5 x double]* %3029, i32 0, i64 2
  %3031 = load double* %3030, align 8
  %3032 = fmul double %3020, %3031
  %3033 = fadd double %3009, %3032
  %3034 = load i32* %i, align 4
  %3035 = sext i32 %3034 to i64
  %3036 = load i32* %j, align 4
  %3037 = sext i32 %3036 to i64
  %3038 = load i32* %k, align 4
  %3039 = sext i32 %3038 to i64
  %3040 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3039
  %3041 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3040, i32 0, i64 %3037
  %3042 = getelementptr inbounds [23 x [5 x double]]* %3041, i32 0, i64 %3035
  %3043 = getelementptr inbounds [5 x double]* %3042, i32 0, i64 3
  %3044 = load double* %3043, align 8
  %3045 = load i32* %i, align 4
  %3046 = sext i32 %3045 to i64
  %3047 = load i32* %j, align 4
  %3048 = sext i32 %3047 to i64
  %3049 = load i32* %k, align 4
  %3050 = sext i32 %3049 to i64
  %3051 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3050
  %3052 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3051, i32 0, i64 %3048
  %3053 = getelementptr inbounds [23 x [5 x double]]* %3052, i32 0, i64 %3046
  %3054 = getelementptr inbounds [5 x double]* %3053, i32 0, i64 3
  %3055 = load double* %3054, align 8
  %3056 = fmul double %3044, %3055
  %3057 = fadd double %3033, %3056
  %3058 = fmul double 5.000000e-01, %3057
  %3059 = load i32* %i, align 4
  %3060 = sext i32 %3059 to i64
  %3061 = load i32* %j, align 4
  %3062 = sext i32 %3061 to i64
  %3063 = load i32* %k, align 4
  %3064 = sext i32 %3063 to i64
  %3065 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3064
  %3066 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3065, i32 0, i64 %3062
  %3067 = getelementptr inbounds [23 x [5 x double]]* %3066, i32 0, i64 %3060
  %3068 = getelementptr inbounds [5 x double]* %3067, i32 0, i64 0
  %3069 = load double* %3068, align 8
  %3070 = fdiv double %3058, %3069
  store double %3070, double* %q, align 8
  %3071 = load i32* %i, align 4
  %3072 = sext i32 %3071 to i64
  %3073 = load i32* %j, align 4
  %3074 = sext i32 %3073 to i64
  %3075 = load i32* %k, align 4
  %3076 = sext i32 %3075 to i64
  %3077 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3076
  %3078 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3077, i32 0, i64 %3074
  %3079 = getelementptr inbounds [23 x [5 x double]]* %3078, i32 0, i64 %3072
  %3080 = getelementptr inbounds [5 x double]* %3079, i32 0, i64 1
  %3081 = load double* %3080, align 8
  %3082 = load double* %u41, align 8
  %3083 = fmul double %3081, %3082
  %3084 = load i32* %k, align 4
  %3085 = sext i32 %3084 to i64
  %3086 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3085
  %3087 = getelementptr inbounds [5 x double]* %3086, i32 0, i64 1
  store double %3083, double* %3087, align 8
  %3088 = load i32* %i, align 4
  %3089 = sext i32 %3088 to i64
  %3090 = load i32* %j, align 4
  %3091 = sext i32 %3090 to i64
  %3092 = load i32* %k, align 4
  %3093 = sext i32 %3092 to i64
  %3094 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3093
  %3095 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3094, i32 0, i64 %3091
  %3096 = getelementptr inbounds [23 x [5 x double]]* %3095, i32 0, i64 %3089
  %3097 = getelementptr inbounds [5 x double]* %3096, i32 0, i64 2
  %3098 = load double* %3097, align 8
  %3099 = load double* %u41, align 8
  %3100 = fmul double %3098, %3099
  %3101 = load i32* %k, align 4
  %3102 = sext i32 %3101 to i64
  %3103 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3102
  %3104 = getelementptr inbounds [5 x double]* %3103, i32 0, i64 2
  store double %3100, double* %3104, align 8
  %3105 = load i32* %i, align 4
  %3106 = sext i32 %3105 to i64
  %3107 = load i32* %j, align 4
  %3108 = sext i32 %3107 to i64
  %3109 = load i32* %k, align 4
  %3110 = sext i32 %3109 to i64
  %3111 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3110
  %3112 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3111, i32 0, i64 %3108
  %3113 = getelementptr inbounds [23 x [5 x double]]* %3112, i32 0, i64 %3106
  %3114 = getelementptr inbounds [5 x double]* %3113, i32 0, i64 3
  %3115 = load double* %3114, align 8
  %3116 = load double* %u41, align 8
  %3117 = fmul double %3115, %3116
  %3118 = load i32* %i, align 4
  %3119 = sext i32 %3118 to i64
  %3120 = load i32* %j, align 4
  %3121 = sext i32 %3120 to i64
  %3122 = load i32* %k, align 4
  %3123 = sext i32 %3122 to i64
  %3124 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3123
  %3125 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3124, i32 0, i64 %3121
  %3126 = getelementptr inbounds [23 x [5 x double]]* %3125, i32 0, i64 %3119
  %3127 = getelementptr inbounds [5 x double]* %3126, i32 0, i64 4
  %3128 = load double* %3127, align 8
  %3129 = load double* %q, align 8
  %3130 = fsub double %3128, %3129
  %3131 = fmul double 4.000000e-01, %3130
  %3132 = fadd double %3117, %3131
  %3133 = load i32* %k, align 4
  %3134 = sext i32 %3133 to i64
  %3135 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3134
  %3136 = getelementptr inbounds [5 x double]* %3135, i32 0, i64 3
  store double %3132, double* %3136, align 8
  %3137 = load i32* %i, align 4
  %3138 = sext i32 %3137 to i64
  %3139 = load i32* %j, align 4
  %3140 = sext i32 %3139 to i64
  %3141 = load i32* %k, align 4
  %3142 = sext i32 %3141 to i64
  %3143 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3142
  %3144 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3143, i32 0, i64 %3140
  %3145 = getelementptr inbounds [23 x [5 x double]]* %3144, i32 0, i64 %3138
  %3146 = getelementptr inbounds [5 x double]* %3145, i32 0, i64 4
  %3147 = load double* %3146, align 8
  %3148 = fmul double 1.400000e+00, %3147
  %3149 = load double* %q, align 8
  %3150 = fmul double 4.000000e-01, %3149
  %3151 = fsub double %3148, %3150
  %3152 = load double* %u41, align 8
  %3153 = fmul double %3151, %3152
  %3154 = load i32* %k, align 4
  %3155 = sext i32 %3154 to i64
  %3156 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3155
  %3157 = getelementptr inbounds [5 x double]* %3156, i32 0, i64 4
  store double %3153, double* %3157, align 8
  br label %3158

; <label>:3158                                    ; preds = %2948
  %3159 = load i32* %k, align 4
  %3160 = add nsw i32 %3159, 1
  store i32 %3160, i32* %k, align 4
  br label %2944

; <label>:3161                                    ; preds = %2944
  store i32 1, i32* %k, align 4
  br label %3162

; <label>:3162                                    ; preds = %3221, %3161
  %3163 = load i32* %k, align 4
  %3164 = load i32* @nz, align 4
  %3165 = sub nsw i32 %3164, 1
  %3166 = icmp slt i32 %3163, %3165
  br i1 %3166, label %3167, label %3224

; <label>:3167                                    ; preds = %3162
  store i32 0, i32* %m, align 4
  br label %3168

; <label>:3168                                    ; preds = %3217, %3167
  %3169 = load i32* %m, align 4
  %3170 = icmp slt i32 %3169, 5
  br i1 %3170, label %3171, label %3220

; <label>:3171                                    ; preds = %3168
  %3172 = load i32* %m, align 4
  %3173 = sext i32 %3172 to i64
  %3174 = load i32* %i, align 4
  %3175 = sext i32 %3174 to i64
  %3176 = load i32* %j, align 4
  %3177 = sext i32 %3176 to i64
  %3178 = load i32* %k, align 4
  %3179 = sext i32 %3178 to i64
  %3180 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %3179
  %3181 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3180, i32 0, i64 %3177
  %3182 = getelementptr inbounds [23 x [5 x double]]* %3181, i32 0, i64 %3175
  %3183 = getelementptr inbounds [5 x double]* %3182, i32 0, i64 %3173
  %3184 = load double* %3183, align 8
  %3185 = load double* @tz2, align 8
  %3186 = load i32* %m, align 4
  %3187 = sext i32 %3186 to i64
  %3188 = load i32* %k, align 4
  %3189 = add nsw i32 %3188, 1
  %3190 = sext i32 %3189 to i64
  %3191 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3190
  %3192 = getelementptr inbounds [5 x double]* %3191, i32 0, i64 %3187
  %3193 = load double* %3192, align 8
  %3194 = load i32* %m, align 4
  %3195 = sext i32 %3194 to i64
  %3196 = load i32* %k, align 4
  %3197 = sub nsw i32 %3196, 1
  %3198 = sext i32 %3197 to i64
  %3199 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3198
  %3200 = getelementptr inbounds [5 x double]* %3199, i32 0, i64 %3195
  %3201 = load double* %3200, align 8
  %3202 = fsub double %3193, %3201
  %3203 = fmul double %3185, %3202
  %3204 = fsub double %3184, %3203
  %3205 = load i32* %m, align 4
  %3206 = sext i32 %3205 to i64
  %3207 = load i32* %i, align 4
  %3208 = sext i32 %3207 to i64
  %3209 = load i32* %j, align 4
  %3210 = sext i32 %3209 to i64
  %3211 = load i32* %k, align 4
  %3212 = sext i32 %3211 to i64
  %3213 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %3212
  %3214 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3213, i32 0, i64 %3210
  %3215 = getelementptr inbounds [23 x [5 x double]]* %3214, i32 0, i64 %3208
  %3216 = getelementptr inbounds [5 x double]* %3215, i32 0, i64 %3206
  store double %3204, double* %3216, align 8
  br label %3217

; <label>:3217                                    ; preds = %3171
  %3218 = load i32* %m, align 4
  %3219 = add nsw i32 %3218, 1
  store i32 %3219, i32* %m, align 4
  br label %3168

; <label>:3220                                    ; preds = %3168
  br label %3221

; <label>:3221                                    ; preds = %3220
  %3222 = load i32* %k, align 4
  %3223 = add nsw i32 %3222, 1
  store i32 %3223, i32* %k, align 4
  br label %3162

; <label>:3224                                    ; preds = %3162
  store i32 1, i32* %k, align 4
  br label %3225

; <label>:3225                                    ; preds = %3439, %3224
  %3226 = load i32* %k, align 4
  %3227 = load i32* @nz, align 4
  %3228 = icmp slt i32 %3226, %3227
  br i1 %3228, label %3229, label %3442

; <label>:3229                                    ; preds = %3225
  %3230 = load i32* %i, align 4
  %3231 = sext i32 %3230 to i64
  %3232 = load i32* %j, align 4
  %3233 = sext i32 %3232 to i64
  %3234 = load i32* %k, align 4
  %3235 = sext i32 %3234 to i64
  %3236 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3235
  %3237 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3236, i32 0, i64 %3233
  %3238 = getelementptr inbounds [23 x [5 x double]]* %3237, i32 0, i64 %3231
  %3239 = getelementptr inbounds [5 x double]* %3238, i32 0, i64 0
  %3240 = load double* %3239, align 8
  %3241 = fdiv double 1.000000e+00, %3240
  store double %3241, double* %tmp, align 8
  %3242 = load double* %tmp, align 8
  %3243 = load i32* %i, align 4
  %3244 = sext i32 %3243 to i64
  %3245 = load i32* %j, align 4
  %3246 = sext i32 %3245 to i64
  %3247 = load i32* %k, align 4
  %3248 = sext i32 %3247 to i64
  %3249 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3248
  %3250 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3249, i32 0, i64 %3246
  %3251 = getelementptr inbounds [23 x [5 x double]]* %3250, i32 0, i64 %3244
  %3252 = getelementptr inbounds [5 x double]* %3251, i32 0, i64 1
  %3253 = load double* %3252, align 8
  %3254 = fmul double %3242, %3253
  store double %3254, double* %u21k, align 8
  %3255 = load double* %tmp, align 8
  %3256 = load i32* %i, align 4
  %3257 = sext i32 %3256 to i64
  %3258 = load i32* %j, align 4
  %3259 = sext i32 %3258 to i64
  %3260 = load i32* %k, align 4
  %3261 = sext i32 %3260 to i64
  %3262 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3261
  %3263 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3262, i32 0, i64 %3259
  %3264 = getelementptr inbounds [23 x [5 x double]]* %3263, i32 0, i64 %3257
  %3265 = getelementptr inbounds [5 x double]* %3264, i32 0, i64 2
  %3266 = load double* %3265, align 8
  %3267 = fmul double %3255, %3266
  store double %3267, double* %u31k, align 8
  %3268 = load double* %tmp, align 8
  %3269 = load i32* %i, align 4
  %3270 = sext i32 %3269 to i64
  %3271 = load i32* %j, align 4
  %3272 = sext i32 %3271 to i64
  %3273 = load i32* %k, align 4
  %3274 = sext i32 %3273 to i64
  %3275 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3274
  %3276 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3275, i32 0, i64 %3272
  %3277 = getelementptr inbounds [23 x [5 x double]]* %3276, i32 0, i64 %3270
  %3278 = getelementptr inbounds [5 x double]* %3277, i32 0, i64 3
  %3279 = load double* %3278, align 8
  %3280 = fmul double %3268, %3279
  store double %3280, double* %u41k, align 8
  %3281 = load double* %tmp, align 8
  %3282 = load i32* %i, align 4
  %3283 = sext i32 %3282 to i64
  %3284 = load i32* %j, align 4
  %3285 = sext i32 %3284 to i64
  %3286 = load i32* %k, align 4
  %3287 = sext i32 %3286 to i64
  %3288 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3287
  %3289 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3288, i32 0, i64 %3285
  %3290 = getelementptr inbounds [23 x [5 x double]]* %3289, i32 0, i64 %3283
  %3291 = getelementptr inbounds [5 x double]* %3290, i32 0, i64 4
  %3292 = load double* %3291, align 8
  %3293 = fmul double %3281, %3292
  store double %3293, double* %u51k, align 8
  %3294 = load i32* %i, align 4
  %3295 = sext i32 %3294 to i64
  %3296 = load i32* %j, align 4
  %3297 = sext i32 %3296 to i64
  %3298 = load i32* %k, align 4
  %3299 = sub nsw i32 %3298, 1
  %3300 = sext i32 %3299 to i64
  %3301 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3300
  %3302 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3301, i32 0, i64 %3297
  %3303 = getelementptr inbounds [23 x [5 x double]]* %3302, i32 0, i64 %3295
  %3304 = getelementptr inbounds [5 x double]* %3303, i32 0, i64 0
  %3305 = load double* %3304, align 8
  %3306 = fdiv double 1.000000e+00, %3305
  store double %3306, double* %tmp, align 8
  %3307 = load double* %tmp, align 8
  %3308 = load i32* %i, align 4
  %3309 = sext i32 %3308 to i64
  %3310 = load i32* %j, align 4
  %3311 = sext i32 %3310 to i64
  %3312 = load i32* %k, align 4
  %3313 = sub nsw i32 %3312, 1
  %3314 = sext i32 %3313 to i64
  %3315 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3314
  %3316 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3315, i32 0, i64 %3311
  %3317 = getelementptr inbounds [23 x [5 x double]]* %3316, i32 0, i64 %3309
  %3318 = getelementptr inbounds [5 x double]* %3317, i32 0, i64 1
  %3319 = load double* %3318, align 8
  %3320 = fmul double %3307, %3319
  store double %3320, double* %u21km1, align 8
  %3321 = load double* %tmp, align 8
  %3322 = load i32* %i, align 4
  %3323 = sext i32 %3322 to i64
  %3324 = load i32* %j, align 4
  %3325 = sext i32 %3324 to i64
  %3326 = load i32* %k, align 4
  %3327 = sub nsw i32 %3326, 1
  %3328 = sext i32 %3327 to i64
  %3329 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3328
  %3330 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3329, i32 0, i64 %3325
  %3331 = getelementptr inbounds [23 x [5 x double]]* %3330, i32 0, i64 %3323
  %3332 = getelementptr inbounds [5 x double]* %3331, i32 0, i64 2
  %3333 = load double* %3332, align 8
  %3334 = fmul double %3321, %3333
  store double %3334, double* %u31km1, align 8
  %3335 = load double* %tmp, align 8
  %3336 = load i32* %i, align 4
  %3337 = sext i32 %3336 to i64
  %3338 = load i32* %j, align 4
  %3339 = sext i32 %3338 to i64
  %3340 = load i32* %k, align 4
  %3341 = sub nsw i32 %3340, 1
  %3342 = sext i32 %3341 to i64
  %3343 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3342
  %3344 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3343, i32 0, i64 %3339
  %3345 = getelementptr inbounds [23 x [5 x double]]* %3344, i32 0, i64 %3337
  %3346 = getelementptr inbounds [5 x double]* %3345, i32 0, i64 3
  %3347 = load double* %3346, align 8
  %3348 = fmul double %3335, %3347
  store double %3348, double* %u41km1, align 8
  %3349 = load double* %tmp, align 8
  %3350 = load i32* %i, align 4
  %3351 = sext i32 %3350 to i64
  %3352 = load i32* %j, align 4
  %3353 = sext i32 %3352 to i64
  %3354 = load i32* %k, align 4
  %3355 = sub nsw i32 %3354, 1
  %3356 = sext i32 %3355 to i64
  %3357 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3356
  %3358 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3357, i32 0, i64 %3353
  %3359 = getelementptr inbounds [23 x [5 x double]]* %3358, i32 0, i64 %3351
  %3360 = getelementptr inbounds [5 x double]* %3359, i32 0, i64 4
  %3361 = load double* %3360, align 8
  %3362 = fmul double %3349, %3361
  store double %3362, double* %u51km1, align 8
  %3363 = load double* @tz3, align 8
  %3364 = load double* %u21k, align 8
  %3365 = load double* %u21km1, align 8
  %3366 = fsub double %3364, %3365
  %3367 = fmul double %3363, %3366
  %3368 = load i32* %k, align 4
  %3369 = sext i32 %3368 to i64
  %3370 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3369
  %3371 = getelementptr inbounds [5 x double]* %3370, i32 0, i64 1
  store double %3367, double* %3371, align 8
  %3372 = load double* @tz3, align 8
  %3373 = load double* %u31k, align 8
  %3374 = load double* %u31km1, align 8
  %3375 = fsub double %3373, %3374
  %3376 = fmul double %3372, %3375
  %3377 = load i32* %k, align 4
  %3378 = sext i32 %3377 to i64
  %3379 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3378
  %3380 = getelementptr inbounds [5 x double]* %3379, i32 0, i64 2
  store double %3376, double* %3380, align 8
  %3381 = load double* @tz3, align 8
  %3382 = fmul double 0x3FF5555555555555, %3381
  %3383 = load double* %u41k, align 8
  %3384 = load double* %u41km1, align 8
  %3385 = fsub double %3383, %3384
  %3386 = fmul double %3382, %3385
  %3387 = load i32* %k, align 4
  %3388 = sext i32 %3387 to i64
  %3389 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3388
  %3390 = getelementptr inbounds [5 x double]* %3389, i32 0, i64 3
  store double %3386, double* %3390, align 8
  %3391 = load double* @tz3, align 8
  %3392 = fmul double 0xBFDEB851EB851EB6, %3391
  %3393 = load double* %u21k, align 8
  %3394 = load double* %u21k, align 8
  %3395 = fmul double %3393, %3394
  %3396 = load double* %u31k, align 8
  %3397 = load double* %u31k, align 8
  %3398 = fmul double %3396, %3397
  %3399 = fadd double %3395, %3398
  %3400 = load double* %u41k, align 8
  %3401 = load double* %u41k, align 8
  %3402 = fmul double %3400, %3401
  %3403 = fadd double %3399, %3402
  %3404 = load double* %u21km1, align 8
  %3405 = load double* %u21km1, align 8
  %3406 = fmul double %3404, %3405
  %3407 = load double* %u31km1, align 8
  %3408 = load double* %u31km1, align 8
  %3409 = fmul double %3407, %3408
  %3410 = fadd double %3406, %3409
  %3411 = load double* %u41km1, align 8
  %3412 = load double* %u41km1, align 8
  %3413 = fmul double %3411, %3412
  %3414 = fadd double %3410, %3413
  %3415 = fsub double %3403, %3414
  %3416 = fmul double %3392, %3415
  %3417 = load double* @tz3, align 8
  %3418 = fmul double 0x3FC5555555555555, %3417
  %3419 = load double* %u41k, align 8
  %3420 = load double* %u41k, align 8
  %3421 = fmul double %3419, %3420
  %3422 = load double* %u41km1, align 8
  %3423 = load double* %u41km1, align 8
  %3424 = fmul double %3422, %3423
  %3425 = fsub double %3421, %3424
  %3426 = fmul double %3418, %3425
  %3427 = fadd double %3416, %3426
  %3428 = load double* @tz3, align 8
  %3429 = fmul double 0x3FFF5C28F5C28F5B, %3428
  %3430 = load double* %u51k, align 8
  %3431 = load double* %u51km1, align 8
  %3432 = fsub double %3430, %3431
  %3433 = fmul double %3429, %3432
  %3434 = fadd double %3427, %3433
  %3435 = load i32* %k, align 4
  %3436 = sext i32 %3435 to i64
  %3437 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3436
  %3438 = getelementptr inbounds [5 x double]* %3437, i32 0, i64 4
  store double %3434, double* %3438, align 8
  br label %3439

; <label>:3439                                    ; preds = %3229
  %3440 = load i32* %k, align 4
  %3441 = add nsw i32 %3440, 1
  store i32 %3441, i32* %k, align 4
  br label %3225

; <label>:3442                                    ; preds = %3225
  store i32 1, i32* %k, align 4
  br label %3443

; <label>:3443                                    ; preds = %3837, %3442
  %3444 = load i32* %k, align 4
  %3445 = load i32* @nz, align 4
  %3446 = sub nsw i32 %3445, 1
  %3447 = icmp slt i32 %3444, %3446
  br i1 %3447, label %3448, label %3840

; <label>:3448                                    ; preds = %3443
  %3449 = load i32* %i, align 4
  %3450 = sext i32 %3449 to i64
  %3451 = load i32* %j, align 4
  %3452 = sext i32 %3451 to i64
  %3453 = load i32* %k, align 4
  %3454 = sext i32 %3453 to i64
  %3455 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %3454
  %3456 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3455, i32 0, i64 %3452
  %3457 = getelementptr inbounds [23 x [5 x double]]* %3456, i32 0, i64 %3450
  %3458 = getelementptr inbounds [5 x double]* %3457, i32 0, i64 0
  %3459 = load double* %3458, align 8
  %3460 = load double* @dz1, align 8
  %3461 = load double* @tz1, align 8
  %3462 = fmul double %3460, %3461
  %3463 = load i32* %i, align 4
  %3464 = sext i32 %3463 to i64
  %3465 = load i32* %j, align 4
  %3466 = sext i32 %3465 to i64
  %3467 = load i32* %k, align 4
  %3468 = add nsw i32 %3467, 1
  %3469 = sext i32 %3468 to i64
  %3470 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3469
  %3471 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3470, i32 0, i64 %3466
  %3472 = getelementptr inbounds [23 x [5 x double]]* %3471, i32 0, i64 %3464
  %3473 = getelementptr inbounds [5 x double]* %3472, i32 0, i64 0
  %3474 = load double* %3473, align 8
  %3475 = load i32* %i, align 4
  %3476 = sext i32 %3475 to i64
  %3477 = load i32* %j, align 4
  %3478 = sext i32 %3477 to i64
  %3479 = load i32* %k, align 4
  %3480 = sext i32 %3479 to i64
  %3481 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3480
  %3482 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3481, i32 0, i64 %3478
  %3483 = getelementptr inbounds [23 x [5 x double]]* %3482, i32 0, i64 %3476
  %3484 = getelementptr inbounds [5 x double]* %3483, i32 0, i64 0
  %3485 = load double* %3484, align 8
  %3486 = fmul double 2.000000e+00, %3485
  %3487 = fsub double %3474, %3486
  %3488 = load i32* %i, align 4
  %3489 = sext i32 %3488 to i64
  %3490 = load i32* %j, align 4
  %3491 = sext i32 %3490 to i64
  %3492 = load i32* %k, align 4
  %3493 = sub nsw i32 %3492, 1
  %3494 = sext i32 %3493 to i64
  %3495 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3494
  %3496 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3495, i32 0, i64 %3491
  %3497 = getelementptr inbounds [23 x [5 x double]]* %3496, i32 0, i64 %3489
  %3498 = getelementptr inbounds [5 x double]* %3497, i32 0, i64 0
  %3499 = load double* %3498, align 8
  %3500 = fadd double %3487, %3499
  %3501 = fmul double %3462, %3500
  %3502 = fadd double %3459, %3501
  %3503 = load i32* %i, align 4
  %3504 = sext i32 %3503 to i64
  %3505 = load i32* %j, align 4
  %3506 = sext i32 %3505 to i64
  %3507 = load i32* %k, align 4
  %3508 = sext i32 %3507 to i64
  %3509 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %3508
  %3510 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3509, i32 0, i64 %3506
  %3511 = getelementptr inbounds [23 x [5 x double]]* %3510, i32 0, i64 %3504
  %3512 = getelementptr inbounds [5 x double]* %3511, i32 0, i64 0
  store double %3502, double* %3512, align 8
  %3513 = load i32* %i, align 4
  %3514 = sext i32 %3513 to i64
  %3515 = load i32* %j, align 4
  %3516 = sext i32 %3515 to i64
  %3517 = load i32* %k, align 4
  %3518 = sext i32 %3517 to i64
  %3519 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %3518
  %3520 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3519, i32 0, i64 %3516
  %3521 = getelementptr inbounds [23 x [5 x double]]* %3520, i32 0, i64 %3514
  %3522 = getelementptr inbounds [5 x double]* %3521, i32 0, i64 1
  %3523 = load double* %3522, align 8
  %3524 = load double* @tz3, align 8
  %3525 = fmul double %3524, 1.000000e-01
  %3526 = fmul double %3525, 1.000000e+00
  %3527 = load i32* %k, align 4
  %3528 = add nsw i32 %3527, 1
  %3529 = sext i32 %3528 to i64
  %3530 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3529
  %3531 = getelementptr inbounds [5 x double]* %3530, i32 0, i64 1
  %3532 = load double* %3531, align 8
  %3533 = load i32* %k, align 4
  %3534 = sext i32 %3533 to i64
  %3535 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3534
  %3536 = getelementptr inbounds [5 x double]* %3535, i32 0, i64 1
  %3537 = load double* %3536, align 8
  %3538 = fsub double %3532, %3537
  %3539 = fmul double %3526, %3538
  %3540 = fadd double %3523, %3539
  %3541 = load double* @dz2, align 8
  %3542 = load double* @tz1, align 8
  %3543 = fmul double %3541, %3542
  %3544 = load i32* %i, align 4
  %3545 = sext i32 %3544 to i64
  %3546 = load i32* %j, align 4
  %3547 = sext i32 %3546 to i64
  %3548 = load i32* %k, align 4
  %3549 = add nsw i32 %3548, 1
  %3550 = sext i32 %3549 to i64
  %3551 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3550
  %3552 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3551, i32 0, i64 %3547
  %3553 = getelementptr inbounds [23 x [5 x double]]* %3552, i32 0, i64 %3545
  %3554 = getelementptr inbounds [5 x double]* %3553, i32 0, i64 1
  %3555 = load double* %3554, align 8
  %3556 = load i32* %i, align 4
  %3557 = sext i32 %3556 to i64
  %3558 = load i32* %j, align 4
  %3559 = sext i32 %3558 to i64
  %3560 = load i32* %k, align 4
  %3561 = sext i32 %3560 to i64
  %3562 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3561
  %3563 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3562, i32 0, i64 %3559
  %3564 = getelementptr inbounds [23 x [5 x double]]* %3563, i32 0, i64 %3557
  %3565 = getelementptr inbounds [5 x double]* %3564, i32 0, i64 1
  %3566 = load double* %3565, align 8
  %3567 = fmul double 2.000000e+00, %3566
  %3568 = fsub double %3555, %3567
  %3569 = load i32* %i, align 4
  %3570 = sext i32 %3569 to i64
  %3571 = load i32* %j, align 4
  %3572 = sext i32 %3571 to i64
  %3573 = load i32* %k, align 4
  %3574 = sub nsw i32 %3573, 1
  %3575 = sext i32 %3574 to i64
  %3576 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3575
  %3577 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3576, i32 0, i64 %3572
  %3578 = getelementptr inbounds [23 x [5 x double]]* %3577, i32 0, i64 %3570
  %3579 = getelementptr inbounds [5 x double]* %3578, i32 0, i64 1
  %3580 = load double* %3579, align 8
  %3581 = fadd double %3568, %3580
  %3582 = fmul double %3543, %3581
  %3583 = fadd double %3540, %3582
  %3584 = load i32* %i, align 4
  %3585 = sext i32 %3584 to i64
  %3586 = load i32* %j, align 4
  %3587 = sext i32 %3586 to i64
  %3588 = load i32* %k, align 4
  %3589 = sext i32 %3588 to i64
  %3590 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %3589
  %3591 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3590, i32 0, i64 %3587
  %3592 = getelementptr inbounds [23 x [5 x double]]* %3591, i32 0, i64 %3585
  %3593 = getelementptr inbounds [5 x double]* %3592, i32 0, i64 1
  store double %3583, double* %3593, align 8
  %3594 = load i32* %i, align 4
  %3595 = sext i32 %3594 to i64
  %3596 = load i32* %j, align 4
  %3597 = sext i32 %3596 to i64
  %3598 = load i32* %k, align 4
  %3599 = sext i32 %3598 to i64
  %3600 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %3599
  %3601 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3600, i32 0, i64 %3597
  %3602 = getelementptr inbounds [23 x [5 x double]]* %3601, i32 0, i64 %3595
  %3603 = getelementptr inbounds [5 x double]* %3602, i32 0, i64 2
  %3604 = load double* %3603, align 8
  %3605 = load double* @tz3, align 8
  %3606 = fmul double %3605, 1.000000e-01
  %3607 = fmul double %3606, 1.000000e+00
  %3608 = load i32* %k, align 4
  %3609 = add nsw i32 %3608, 1
  %3610 = sext i32 %3609 to i64
  %3611 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3610
  %3612 = getelementptr inbounds [5 x double]* %3611, i32 0, i64 2
  %3613 = load double* %3612, align 8
  %3614 = load i32* %k, align 4
  %3615 = sext i32 %3614 to i64
  %3616 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3615
  %3617 = getelementptr inbounds [5 x double]* %3616, i32 0, i64 2
  %3618 = load double* %3617, align 8
  %3619 = fsub double %3613, %3618
  %3620 = fmul double %3607, %3619
  %3621 = fadd double %3604, %3620
  %3622 = load double* @dz3, align 8
  %3623 = load double* @tz1, align 8
  %3624 = fmul double %3622, %3623
  %3625 = load i32* %i, align 4
  %3626 = sext i32 %3625 to i64
  %3627 = load i32* %j, align 4
  %3628 = sext i32 %3627 to i64
  %3629 = load i32* %k, align 4
  %3630 = add nsw i32 %3629, 1
  %3631 = sext i32 %3630 to i64
  %3632 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3631
  %3633 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3632, i32 0, i64 %3628
  %3634 = getelementptr inbounds [23 x [5 x double]]* %3633, i32 0, i64 %3626
  %3635 = getelementptr inbounds [5 x double]* %3634, i32 0, i64 2
  %3636 = load double* %3635, align 8
  %3637 = load i32* %i, align 4
  %3638 = sext i32 %3637 to i64
  %3639 = load i32* %j, align 4
  %3640 = sext i32 %3639 to i64
  %3641 = load i32* %k, align 4
  %3642 = sext i32 %3641 to i64
  %3643 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3642
  %3644 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3643, i32 0, i64 %3640
  %3645 = getelementptr inbounds [23 x [5 x double]]* %3644, i32 0, i64 %3638
  %3646 = getelementptr inbounds [5 x double]* %3645, i32 0, i64 2
  %3647 = load double* %3646, align 8
  %3648 = fmul double 2.000000e+00, %3647
  %3649 = fsub double %3636, %3648
  %3650 = load i32* %i, align 4
  %3651 = sext i32 %3650 to i64
  %3652 = load i32* %j, align 4
  %3653 = sext i32 %3652 to i64
  %3654 = load i32* %k, align 4
  %3655 = sub nsw i32 %3654, 1
  %3656 = sext i32 %3655 to i64
  %3657 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3656
  %3658 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3657, i32 0, i64 %3653
  %3659 = getelementptr inbounds [23 x [5 x double]]* %3658, i32 0, i64 %3651
  %3660 = getelementptr inbounds [5 x double]* %3659, i32 0, i64 2
  %3661 = load double* %3660, align 8
  %3662 = fadd double %3649, %3661
  %3663 = fmul double %3624, %3662
  %3664 = fadd double %3621, %3663
  %3665 = load i32* %i, align 4
  %3666 = sext i32 %3665 to i64
  %3667 = load i32* %j, align 4
  %3668 = sext i32 %3667 to i64
  %3669 = load i32* %k, align 4
  %3670 = sext i32 %3669 to i64
  %3671 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %3670
  %3672 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3671, i32 0, i64 %3668
  %3673 = getelementptr inbounds [23 x [5 x double]]* %3672, i32 0, i64 %3666
  %3674 = getelementptr inbounds [5 x double]* %3673, i32 0, i64 2
  store double %3664, double* %3674, align 8
  %3675 = load i32* %i, align 4
  %3676 = sext i32 %3675 to i64
  %3677 = load i32* %j, align 4
  %3678 = sext i32 %3677 to i64
  %3679 = load i32* %k, align 4
  %3680 = sext i32 %3679 to i64
  %3681 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %3680
  %3682 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3681, i32 0, i64 %3678
  %3683 = getelementptr inbounds [23 x [5 x double]]* %3682, i32 0, i64 %3676
  %3684 = getelementptr inbounds [5 x double]* %3683, i32 0, i64 3
  %3685 = load double* %3684, align 8
  %3686 = load double* @tz3, align 8
  %3687 = fmul double %3686, 1.000000e-01
  %3688 = fmul double %3687, 1.000000e+00
  %3689 = load i32* %k, align 4
  %3690 = add nsw i32 %3689, 1
  %3691 = sext i32 %3690 to i64
  %3692 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3691
  %3693 = getelementptr inbounds [5 x double]* %3692, i32 0, i64 3
  %3694 = load double* %3693, align 8
  %3695 = load i32* %k, align 4
  %3696 = sext i32 %3695 to i64
  %3697 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3696
  %3698 = getelementptr inbounds [5 x double]* %3697, i32 0, i64 3
  %3699 = load double* %3698, align 8
  %3700 = fsub double %3694, %3699
  %3701 = fmul double %3688, %3700
  %3702 = fadd double %3685, %3701
  %3703 = load double* @dz4, align 8
  %3704 = load double* @tz1, align 8
  %3705 = fmul double %3703, %3704
  %3706 = load i32* %i, align 4
  %3707 = sext i32 %3706 to i64
  %3708 = load i32* %j, align 4
  %3709 = sext i32 %3708 to i64
  %3710 = load i32* %k, align 4
  %3711 = add nsw i32 %3710, 1
  %3712 = sext i32 %3711 to i64
  %3713 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3712
  %3714 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3713, i32 0, i64 %3709
  %3715 = getelementptr inbounds [23 x [5 x double]]* %3714, i32 0, i64 %3707
  %3716 = getelementptr inbounds [5 x double]* %3715, i32 0, i64 3
  %3717 = load double* %3716, align 8
  %3718 = load i32* %i, align 4
  %3719 = sext i32 %3718 to i64
  %3720 = load i32* %j, align 4
  %3721 = sext i32 %3720 to i64
  %3722 = load i32* %k, align 4
  %3723 = sext i32 %3722 to i64
  %3724 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3723
  %3725 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3724, i32 0, i64 %3721
  %3726 = getelementptr inbounds [23 x [5 x double]]* %3725, i32 0, i64 %3719
  %3727 = getelementptr inbounds [5 x double]* %3726, i32 0, i64 3
  %3728 = load double* %3727, align 8
  %3729 = fmul double 2.000000e+00, %3728
  %3730 = fsub double %3717, %3729
  %3731 = load i32* %i, align 4
  %3732 = sext i32 %3731 to i64
  %3733 = load i32* %j, align 4
  %3734 = sext i32 %3733 to i64
  %3735 = load i32* %k, align 4
  %3736 = sub nsw i32 %3735, 1
  %3737 = sext i32 %3736 to i64
  %3738 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3737
  %3739 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3738, i32 0, i64 %3734
  %3740 = getelementptr inbounds [23 x [5 x double]]* %3739, i32 0, i64 %3732
  %3741 = getelementptr inbounds [5 x double]* %3740, i32 0, i64 3
  %3742 = load double* %3741, align 8
  %3743 = fadd double %3730, %3742
  %3744 = fmul double %3705, %3743
  %3745 = fadd double %3702, %3744
  %3746 = load i32* %i, align 4
  %3747 = sext i32 %3746 to i64
  %3748 = load i32* %j, align 4
  %3749 = sext i32 %3748 to i64
  %3750 = load i32* %k, align 4
  %3751 = sext i32 %3750 to i64
  %3752 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %3751
  %3753 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3752, i32 0, i64 %3749
  %3754 = getelementptr inbounds [23 x [5 x double]]* %3753, i32 0, i64 %3747
  %3755 = getelementptr inbounds [5 x double]* %3754, i32 0, i64 3
  store double %3745, double* %3755, align 8
  %3756 = load i32* %i, align 4
  %3757 = sext i32 %3756 to i64
  %3758 = load i32* %j, align 4
  %3759 = sext i32 %3758 to i64
  %3760 = load i32* %k, align 4
  %3761 = sext i32 %3760 to i64
  %3762 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %3761
  %3763 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3762, i32 0, i64 %3759
  %3764 = getelementptr inbounds [23 x [5 x double]]* %3763, i32 0, i64 %3757
  %3765 = getelementptr inbounds [5 x double]* %3764, i32 0, i64 4
  %3766 = load double* %3765, align 8
  %3767 = load double* @tz3, align 8
  %3768 = fmul double %3767, 1.000000e-01
  %3769 = fmul double %3768, 1.000000e+00
  %3770 = load i32* %k, align 4
  %3771 = add nsw i32 %3770, 1
  %3772 = sext i32 %3771 to i64
  %3773 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3772
  %3774 = getelementptr inbounds [5 x double]* %3773, i32 0, i64 4
  %3775 = load double* %3774, align 8
  %3776 = load i32* %k, align 4
  %3777 = sext i32 %3776 to i64
  %3778 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3777
  %3779 = getelementptr inbounds [5 x double]* %3778, i32 0, i64 4
  %3780 = load double* %3779, align 8
  %3781 = fsub double %3775, %3780
  %3782 = fmul double %3769, %3781
  %3783 = fadd double %3766, %3782
  %3784 = load double* @dz5, align 8
  %3785 = load double* @tz1, align 8
  %3786 = fmul double %3784, %3785
  %3787 = load i32* %i, align 4
  %3788 = sext i32 %3787 to i64
  %3789 = load i32* %j, align 4
  %3790 = sext i32 %3789 to i64
  %3791 = load i32* %k, align 4
  %3792 = add nsw i32 %3791, 1
  %3793 = sext i32 %3792 to i64
  %3794 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3793
  %3795 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3794, i32 0, i64 %3790
  %3796 = getelementptr inbounds [23 x [5 x double]]* %3795, i32 0, i64 %3788
  %3797 = getelementptr inbounds [5 x double]* %3796, i32 0, i64 4
  %3798 = load double* %3797, align 8
  %3799 = load i32* %i, align 4
  %3800 = sext i32 %3799 to i64
  %3801 = load i32* %j, align 4
  %3802 = sext i32 %3801 to i64
  %3803 = load i32* %k, align 4
  %3804 = sext i32 %3803 to i64
  %3805 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3804
  %3806 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3805, i32 0, i64 %3802
  %3807 = getelementptr inbounds [23 x [5 x double]]* %3806, i32 0, i64 %3800
  %3808 = getelementptr inbounds [5 x double]* %3807, i32 0, i64 4
  %3809 = load double* %3808, align 8
  %3810 = fmul double 2.000000e+00, %3809
  %3811 = fsub double %3798, %3810
  %3812 = load i32* %i, align 4
  %3813 = sext i32 %3812 to i64
  %3814 = load i32* %j, align 4
  %3815 = sext i32 %3814 to i64
  %3816 = load i32* %k, align 4
  %3817 = sub nsw i32 %3816, 1
  %3818 = sext i32 %3817 to i64
  %3819 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3818
  %3820 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3819, i32 0, i64 %3815
  %3821 = getelementptr inbounds [23 x [5 x double]]* %3820, i32 0, i64 %3813
  %3822 = getelementptr inbounds [5 x double]* %3821, i32 0, i64 4
  %3823 = load double* %3822, align 8
  %3824 = fadd double %3811, %3823
  %3825 = fmul double %3786, %3824
  %3826 = fadd double %3783, %3825
  %3827 = load i32* %i, align 4
  %3828 = sext i32 %3827 to i64
  %3829 = load i32* %j, align 4
  %3830 = sext i32 %3829 to i64
  %3831 = load i32* %k, align 4
  %3832 = sext i32 %3831 to i64
  %3833 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %3832
  %3834 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3833, i32 0, i64 %3830
  %3835 = getelementptr inbounds [23 x [5 x double]]* %3834, i32 0, i64 %3828
  %3836 = getelementptr inbounds [5 x double]* %3835, i32 0, i64 4
  store double %3826, double* %3836, align 8
  br label %3837

; <label>:3837                                    ; preds = %3448
  %3838 = load i32* %k, align 4
  %3839 = add nsw i32 %3838, 1
  store i32 %3839, i32* %k, align 4
  br label %3443

; <label>:3840                                    ; preds = %3443
  store i32 0, i32* %m, align 4
  br label %3841

; <label>:3841                                    ; preds = %3969, %3840
  %3842 = load i32* %m, align 4
  %3843 = icmp slt i32 %3842, 5
  br i1 %3843, label %3844, label %3972

; <label>:3844                                    ; preds = %3841
  %3845 = load i32* %m, align 4
  %3846 = sext i32 %3845 to i64
  %3847 = load i32* %i, align 4
  %3848 = sext i32 %3847 to i64
  %3849 = load i32* %j, align 4
  %3850 = sext i32 %3849 to i64
  %3851 = getelementptr inbounds [23 x [23 x [5 x double]]]* getelementptr inbounds ([22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 1), i32 0, i64 %3850
  %3852 = getelementptr inbounds [23 x [5 x double]]* %3851, i32 0, i64 %3848
  %3853 = getelementptr inbounds [5 x double]* %3852, i32 0, i64 %3846
  %3854 = load double* %3853, align 8
  %3855 = load double* @dssp, align 8
  %3856 = load i32* %m, align 4
  %3857 = sext i32 %3856 to i64
  %3858 = load i32* %i, align 4
  %3859 = sext i32 %3858 to i64
  %3860 = load i32* %j, align 4
  %3861 = sext i32 %3860 to i64
  %3862 = getelementptr inbounds [23 x [23 x [5 x double]]]* getelementptr inbounds ([22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 1), i32 0, i64 %3861
  %3863 = getelementptr inbounds [23 x [5 x double]]* %3862, i32 0, i64 %3859
  %3864 = getelementptr inbounds [5 x double]* %3863, i32 0, i64 %3857
  %3865 = load double* %3864, align 8
  %3866 = fmul double 5.000000e+00, %3865
  %3867 = load i32* %m, align 4
  %3868 = sext i32 %3867 to i64
  %3869 = load i32* %i, align 4
  %3870 = sext i32 %3869 to i64
  %3871 = load i32* %j, align 4
  %3872 = sext i32 %3871 to i64
  %3873 = getelementptr inbounds [23 x [23 x [5 x double]]]* getelementptr inbounds ([22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 2), i32 0, i64 %3872
  %3874 = getelementptr inbounds [23 x [5 x double]]* %3873, i32 0, i64 %3870
  %3875 = getelementptr inbounds [5 x double]* %3874, i32 0, i64 %3868
  %3876 = load double* %3875, align 8
  %3877 = fmul double 4.000000e+00, %3876
  %3878 = fsub double %3866, %3877
  %3879 = load i32* %m, align 4
  %3880 = sext i32 %3879 to i64
  %3881 = load i32* %i, align 4
  %3882 = sext i32 %3881 to i64
  %3883 = load i32* %j, align 4
  %3884 = sext i32 %3883 to i64
  %3885 = getelementptr inbounds [23 x [23 x [5 x double]]]* getelementptr inbounds ([22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 3), i32 0, i64 %3884
  %3886 = getelementptr inbounds [23 x [5 x double]]* %3885, i32 0, i64 %3882
  %3887 = getelementptr inbounds [5 x double]* %3886, i32 0, i64 %3880
  %3888 = load double* %3887, align 8
  %3889 = fadd double %3878, %3888
  %3890 = fmul double %3855, %3889
  %3891 = fsub double %3854, %3890
  %3892 = load i32* %m, align 4
  %3893 = sext i32 %3892 to i64
  %3894 = load i32* %i, align 4
  %3895 = sext i32 %3894 to i64
  %3896 = load i32* %j, align 4
  %3897 = sext i32 %3896 to i64
  %3898 = getelementptr inbounds [23 x [23 x [5 x double]]]* getelementptr inbounds ([22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 1), i32 0, i64 %3897
  %3899 = getelementptr inbounds [23 x [5 x double]]* %3898, i32 0, i64 %3895
  %3900 = getelementptr inbounds [5 x double]* %3899, i32 0, i64 %3893
  store double %3891, double* %3900, align 8
  %3901 = load i32* %m, align 4
  %3902 = sext i32 %3901 to i64
  %3903 = load i32* %i, align 4
  %3904 = sext i32 %3903 to i64
  %3905 = load i32* %j, align 4
  %3906 = sext i32 %3905 to i64
  %3907 = getelementptr inbounds [23 x [23 x [5 x double]]]* getelementptr inbounds ([22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 2), i32 0, i64 %3906
  %3908 = getelementptr inbounds [23 x [5 x double]]* %3907, i32 0, i64 %3904
  %3909 = getelementptr inbounds [5 x double]* %3908, i32 0, i64 %3902
  %3910 = load double* %3909, align 8
  %3911 = load double* @dssp, align 8
  %3912 = load i32* %m, align 4
  %3913 = sext i32 %3912 to i64
  %3914 = load i32* %i, align 4
  %3915 = sext i32 %3914 to i64
  %3916 = load i32* %j, align 4
  %3917 = sext i32 %3916 to i64
  %3918 = getelementptr inbounds [23 x [23 x [5 x double]]]* getelementptr inbounds ([22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 1), i32 0, i64 %3917
  %3919 = getelementptr inbounds [23 x [5 x double]]* %3918, i32 0, i64 %3915
  %3920 = getelementptr inbounds [5 x double]* %3919, i32 0, i64 %3913
  %3921 = load double* %3920, align 8
  %3922 = fmul double -4.000000e+00, %3921
  %3923 = load i32* %m, align 4
  %3924 = sext i32 %3923 to i64
  %3925 = load i32* %i, align 4
  %3926 = sext i32 %3925 to i64
  %3927 = load i32* %j, align 4
  %3928 = sext i32 %3927 to i64
  %3929 = getelementptr inbounds [23 x [23 x [5 x double]]]* getelementptr inbounds ([22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 2), i32 0, i64 %3928
  %3930 = getelementptr inbounds [23 x [5 x double]]* %3929, i32 0, i64 %3926
  %3931 = getelementptr inbounds [5 x double]* %3930, i32 0, i64 %3924
  %3932 = load double* %3931, align 8
  %3933 = fmul double 6.000000e+00, %3932
  %3934 = fadd double %3922, %3933
  %3935 = load i32* %m, align 4
  %3936 = sext i32 %3935 to i64
  %3937 = load i32* %i, align 4
  %3938 = sext i32 %3937 to i64
  %3939 = load i32* %j, align 4
  %3940 = sext i32 %3939 to i64
  %3941 = getelementptr inbounds [23 x [23 x [5 x double]]]* getelementptr inbounds ([22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 3), i32 0, i64 %3940
  %3942 = getelementptr inbounds [23 x [5 x double]]* %3941, i32 0, i64 %3938
  %3943 = getelementptr inbounds [5 x double]* %3942, i32 0, i64 %3936
  %3944 = load double* %3943, align 8
  %3945 = fmul double 4.000000e+00, %3944
  %3946 = fsub double %3934, %3945
  %3947 = load i32* %m, align 4
  %3948 = sext i32 %3947 to i64
  %3949 = load i32* %i, align 4
  %3950 = sext i32 %3949 to i64
  %3951 = load i32* %j, align 4
  %3952 = sext i32 %3951 to i64
  %3953 = getelementptr inbounds [23 x [23 x [5 x double]]]* getelementptr inbounds ([22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 4), i32 0, i64 %3952
  %3954 = getelementptr inbounds [23 x [5 x double]]* %3953, i32 0, i64 %3950
  %3955 = getelementptr inbounds [5 x double]* %3954, i32 0, i64 %3948
  %3956 = load double* %3955, align 8
  %3957 = fadd double %3946, %3956
  %3958 = fmul double %3911, %3957
  %3959 = fsub double %3910, %3958
  %3960 = load i32* %m, align 4
  %3961 = sext i32 %3960 to i64
  %3962 = load i32* %i, align 4
  %3963 = sext i32 %3962 to i64
  %3964 = load i32* %j, align 4
  %3965 = sext i32 %3964 to i64
  %3966 = getelementptr inbounds [23 x [23 x [5 x double]]]* getelementptr inbounds ([22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 2), i32 0, i64 %3965
  %3967 = getelementptr inbounds [23 x [5 x double]]* %3966, i32 0, i64 %3963
  %3968 = getelementptr inbounds [5 x double]* %3967, i32 0, i64 %3961
  store double %3959, double* %3968, align 8
  br label %3969

; <label>:3969                                    ; preds = %3844
  %3970 = load i32* %m, align 4
  %3971 = add nsw i32 %3970, 1
  store i32 %3971, i32* %m, align 4
  br label %3841

; <label>:3972                                    ; preds = %3841
  store i32 3, i32* %k, align 4
  br label %3973

; <label>:3973                                    ; preds = %4091, %3972
  %3974 = load i32* %k, align 4
  %3975 = load i32* @nz, align 4
  %3976 = sub nsw i32 %3975, 3
  %3977 = icmp slt i32 %3974, %3976
  br i1 %3977, label %3978, label %4094

; <label>:3978                                    ; preds = %3973
  store i32 0, i32* %m, align 4
  br label %3979

; <label>:3979                                    ; preds = %4087, %3978
  %3980 = load i32* %m, align 4
  %3981 = icmp slt i32 %3980, 5
  br i1 %3981, label %3982, label %4090

; <label>:3982                                    ; preds = %3979
  %3983 = load i32* %m, align 4
  %3984 = sext i32 %3983 to i64
  %3985 = load i32* %i, align 4
  %3986 = sext i32 %3985 to i64
  %3987 = load i32* %j, align 4
  %3988 = sext i32 %3987 to i64
  %3989 = load i32* %k, align 4
  %3990 = sext i32 %3989 to i64
  %3991 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %3990
  %3992 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3991, i32 0, i64 %3988
  %3993 = getelementptr inbounds [23 x [5 x double]]* %3992, i32 0, i64 %3986
  %3994 = getelementptr inbounds [5 x double]* %3993, i32 0, i64 %3984
  %3995 = load double* %3994, align 8
  %3996 = load double* @dssp, align 8
  %3997 = load i32* %m, align 4
  %3998 = sext i32 %3997 to i64
  %3999 = load i32* %i, align 4
  %4000 = sext i32 %3999 to i64
  %4001 = load i32* %j, align 4
  %4002 = sext i32 %4001 to i64
  %4003 = load i32* %k, align 4
  %4004 = sub nsw i32 %4003, 2
  %4005 = sext i32 %4004 to i64
  %4006 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %4005
  %4007 = getelementptr inbounds [23 x [23 x [5 x double]]]* %4006, i32 0, i64 %4002
  %4008 = getelementptr inbounds [23 x [5 x double]]* %4007, i32 0, i64 %4000
  %4009 = getelementptr inbounds [5 x double]* %4008, i32 0, i64 %3998
  %4010 = load double* %4009, align 8
  %4011 = load i32* %m, align 4
  %4012 = sext i32 %4011 to i64
  %4013 = load i32* %i, align 4
  %4014 = sext i32 %4013 to i64
  %4015 = load i32* %j, align 4
  %4016 = sext i32 %4015 to i64
  %4017 = load i32* %k, align 4
  %4018 = sub nsw i32 %4017, 1
  %4019 = sext i32 %4018 to i64
  %4020 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %4019
  %4021 = getelementptr inbounds [23 x [23 x [5 x double]]]* %4020, i32 0, i64 %4016
  %4022 = getelementptr inbounds [23 x [5 x double]]* %4021, i32 0, i64 %4014
  %4023 = getelementptr inbounds [5 x double]* %4022, i32 0, i64 %4012
  %4024 = load double* %4023, align 8
  %4025 = fmul double 4.000000e+00, %4024
  %4026 = fsub double %4010, %4025
  %4027 = load i32* %m, align 4
  %4028 = sext i32 %4027 to i64
  %4029 = load i32* %i, align 4
  %4030 = sext i32 %4029 to i64
  %4031 = load i32* %j, align 4
  %4032 = sext i32 %4031 to i64
  %4033 = load i32* %k, align 4
  %4034 = sext i32 %4033 to i64
  %4035 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %4034
  %4036 = getelementptr inbounds [23 x [23 x [5 x double]]]* %4035, i32 0, i64 %4032
  %4037 = getelementptr inbounds [23 x [5 x double]]* %4036, i32 0, i64 %4030
  %4038 = getelementptr inbounds [5 x double]* %4037, i32 0, i64 %4028
  %4039 = load double* %4038, align 8
  %4040 = fmul double 6.000000e+00, %4039
  %4041 = fadd double %4026, %4040
  %4042 = load i32* %m, align 4
  %4043 = sext i32 %4042 to i64
  %4044 = load i32* %i, align 4
  %4045 = sext i32 %4044 to i64
  %4046 = load i32* %j, align 4
  %4047 = sext i32 %4046 to i64
  %4048 = load i32* %k, align 4
  %4049 = add nsw i32 %4048, 1
  %4050 = sext i32 %4049 to i64
  %4051 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %4050
  %4052 = getelementptr inbounds [23 x [23 x [5 x double]]]* %4051, i32 0, i64 %4047
  %4053 = getelementptr inbounds [23 x [5 x double]]* %4052, i32 0, i64 %4045
  %4054 = getelementptr inbounds [5 x double]* %4053, i32 0, i64 %4043
  %4055 = load double* %4054, align 8
  %4056 = fmul double 4.000000e+00, %4055
  %4057 = fsub double %4041, %4056
  %4058 = load i32* %m, align 4
  %4059 = sext i32 %4058 to i64
  %4060 = load i32* %i, align 4
  %4061 = sext i32 %4060 to i64
  %4062 = load i32* %j, align 4
  %4063 = sext i32 %4062 to i64
  %4064 = load i32* %k, align 4
  %4065 = add nsw i32 %4064, 2
  %4066 = sext i32 %4065 to i64
  %4067 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %4066
  %4068 = getelementptr inbounds [23 x [23 x [5 x double]]]* %4067, i32 0, i64 %4063
  %4069 = getelementptr inbounds [23 x [5 x double]]* %4068, i32 0, i64 %4061
  %4070 = getelementptr inbounds [5 x double]* %4069, i32 0, i64 %4059
  %4071 = load double* %4070, align 8
  %4072 = fadd double %4057, %4071
  %4073 = fmul double %3996, %4072
  %4074 = fsub double %3995, %4073
  %4075 = load i32* %m, align 4
  %4076 = sext i32 %4075 to i64
  %4077 = load i32* %i, align 4
  %4078 = sext i32 %4077 to i64
  %4079 = load i32* %j, align 4
  %4080 = sext i32 %4079 to i64
  %4081 = load i32* %k, align 4
  %4082 = sext i32 %4081 to i64
  %4083 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %4082
  %4084 = getelementptr inbounds [23 x [23 x [5 x double]]]* %4083, i32 0, i64 %4080
  %4085 = getelementptr inbounds [23 x [5 x double]]* %4084, i32 0, i64 %4078
  %4086 = getelementptr inbounds [5 x double]* %4085, i32 0, i64 %4076
  store double %4074, double* %4086, align 8
  br label %4087

; <label>:4087                                    ; preds = %3982
  %4088 = load i32* %m, align 4
  %4089 = add nsw i32 %4088, 1
  store i32 %4089, i32* %m, align 4
  br label %3979

; <label>:4090                                    ; preds = %3979
  br label %4091

; <label>:4091                                    ; preds = %4090
  %4092 = load i32* %k, align 4
  %4093 = add nsw i32 %4092, 1
  store i32 %4093, i32* %k, align 4
  br label %3973

; <label>:4094                                    ; preds = %3973
  store i32 0, i32* %m, align 4
  br label %4095

; <label>:4095                                    ; preds = %4267, %4094
  %4096 = load i32* %m, align 4
  %4097 = icmp slt i32 %4096, 5
  br i1 %4097, label %4098, label %4270

; <label>:4098                                    ; preds = %4095
  %4099 = load i32* %m, align 4
  %4100 = sext i32 %4099 to i64
  %4101 = load i32* %i, align 4
  %4102 = sext i32 %4101 to i64
  %4103 = load i32* %j, align 4
  %4104 = sext i32 %4103 to i64
  %4105 = load i32* @nz, align 4
  %4106 = sub nsw i32 %4105, 3
  %4107 = sext i32 %4106 to i64
  %4108 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %4107
  %4109 = getelementptr inbounds [23 x [23 x [5 x double]]]* %4108, i32 0, i64 %4104
  %4110 = getelementptr inbounds [23 x [5 x double]]* %4109, i32 0, i64 %4102
  %4111 = getelementptr inbounds [5 x double]* %4110, i32 0, i64 %4100
  %4112 = load double* %4111, align 8
  %4113 = load double* @dssp, align 8
  %4114 = load i32* %m, align 4
  %4115 = sext i32 %4114 to i64
  %4116 = load i32* %i, align 4
  %4117 = sext i32 %4116 to i64
  %4118 = load i32* %j, align 4
  %4119 = sext i32 %4118 to i64
  %4120 = load i32* @nz, align 4
  %4121 = sub nsw i32 %4120, 5
  %4122 = sext i32 %4121 to i64
  %4123 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %4122
  %4124 = getelementptr inbounds [23 x [23 x [5 x double]]]* %4123, i32 0, i64 %4119
  %4125 = getelementptr inbounds [23 x [5 x double]]* %4124, i32 0, i64 %4117
  %4126 = getelementptr inbounds [5 x double]* %4125, i32 0, i64 %4115
  %4127 = load double* %4126, align 8
  %4128 = load i32* %m, align 4
  %4129 = sext i32 %4128 to i64
  %4130 = load i32* %i, align 4
  %4131 = sext i32 %4130 to i64
  %4132 = load i32* %j, align 4
  %4133 = sext i32 %4132 to i64
  %4134 = load i32* @nz, align 4
  %4135 = sub nsw i32 %4134, 4
  %4136 = sext i32 %4135 to i64
  %4137 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %4136
  %4138 = getelementptr inbounds [23 x [23 x [5 x double]]]* %4137, i32 0, i64 %4133
  %4139 = getelementptr inbounds [23 x [5 x double]]* %4138, i32 0, i64 %4131
  %4140 = getelementptr inbounds [5 x double]* %4139, i32 0, i64 %4129
  %4141 = load double* %4140, align 8
  %4142 = fmul double 4.000000e+00, %4141
  %4143 = fsub double %4127, %4142
  %4144 = load i32* %m, align 4
  %4145 = sext i32 %4144 to i64
  %4146 = load i32* %i, align 4
  %4147 = sext i32 %4146 to i64
  %4148 = load i32* %j, align 4
  %4149 = sext i32 %4148 to i64
  %4150 = load i32* @nz, align 4
  %4151 = sub nsw i32 %4150, 3
  %4152 = sext i32 %4151 to i64
  %4153 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %4152
  %4154 = getelementptr inbounds [23 x [23 x [5 x double]]]* %4153, i32 0, i64 %4149
  %4155 = getelementptr inbounds [23 x [5 x double]]* %4154, i32 0, i64 %4147
  %4156 = getelementptr inbounds [5 x double]* %4155, i32 0, i64 %4145
  %4157 = load double* %4156, align 8
  %4158 = fmul double 6.000000e+00, %4157
  %4159 = fadd double %4143, %4158
  %4160 = load i32* %m, align 4
  %4161 = sext i32 %4160 to i64
  %4162 = load i32* %i, align 4
  %4163 = sext i32 %4162 to i64
  %4164 = load i32* %j, align 4
  %4165 = sext i32 %4164 to i64
  %4166 = load i32* @nz, align 4
  %4167 = sub nsw i32 %4166, 2
  %4168 = sext i32 %4167 to i64
  %4169 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %4168
  %4170 = getelementptr inbounds [23 x [23 x [5 x double]]]* %4169, i32 0, i64 %4165
  %4171 = getelementptr inbounds [23 x [5 x double]]* %4170, i32 0, i64 %4163
  %4172 = getelementptr inbounds [5 x double]* %4171, i32 0, i64 %4161
  %4173 = load double* %4172, align 8
  %4174 = fmul double 4.000000e+00, %4173
  %4175 = fsub double %4159, %4174
  %4176 = fmul double %4113, %4175
  %4177 = fsub double %4112, %4176
  %4178 = load i32* %m, align 4
  %4179 = sext i32 %4178 to i64
  %4180 = load i32* %i, align 4
  %4181 = sext i32 %4180 to i64
  %4182 = load i32* %j, align 4
  %4183 = sext i32 %4182 to i64
  %4184 = load i32* @nz, align 4
  %4185 = sub nsw i32 %4184, 3
  %4186 = sext i32 %4185 to i64
  %4187 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %4186
  %4188 = getelementptr inbounds [23 x [23 x [5 x double]]]* %4187, i32 0, i64 %4183
  %4189 = getelementptr inbounds [23 x [5 x double]]* %4188, i32 0, i64 %4181
  %4190 = getelementptr inbounds [5 x double]* %4189, i32 0, i64 %4179
  store double %4177, double* %4190, align 8
  %4191 = load i32* %m, align 4
  %4192 = sext i32 %4191 to i64
  %4193 = load i32* %i, align 4
  %4194 = sext i32 %4193 to i64
  %4195 = load i32* %j, align 4
  %4196 = sext i32 %4195 to i64
  %4197 = load i32* @nz, align 4
  %4198 = sub nsw i32 %4197, 2
  %4199 = sext i32 %4198 to i64
  %4200 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %4199
  %4201 = getelementptr inbounds [23 x [23 x [5 x double]]]* %4200, i32 0, i64 %4196
  %4202 = getelementptr inbounds [23 x [5 x double]]* %4201, i32 0, i64 %4194
  %4203 = getelementptr inbounds [5 x double]* %4202, i32 0, i64 %4192
  %4204 = load double* %4203, align 8
  %4205 = load double* @dssp, align 8
  %4206 = load i32* %m, align 4
  %4207 = sext i32 %4206 to i64
  %4208 = load i32* %i, align 4
  %4209 = sext i32 %4208 to i64
  %4210 = load i32* %j, align 4
  %4211 = sext i32 %4210 to i64
  %4212 = load i32* @nz, align 4
  %4213 = sub nsw i32 %4212, 4
  %4214 = sext i32 %4213 to i64
  %4215 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %4214
  %4216 = getelementptr inbounds [23 x [23 x [5 x double]]]* %4215, i32 0, i64 %4211
  %4217 = getelementptr inbounds [23 x [5 x double]]* %4216, i32 0, i64 %4209
  %4218 = getelementptr inbounds [5 x double]* %4217, i32 0, i64 %4207
  %4219 = load double* %4218, align 8
  %4220 = load i32* %m, align 4
  %4221 = sext i32 %4220 to i64
  %4222 = load i32* %i, align 4
  %4223 = sext i32 %4222 to i64
  %4224 = load i32* %j, align 4
  %4225 = sext i32 %4224 to i64
  %4226 = load i32* @nz, align 4
  %4227 = sub nsw i32 %4226, 3
  %4228 = sext i32 %4227 to i64
  %4229 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %4228
  %4230 = getelementptr inbounds [23 x [23 x [5 x double]]]* %4229, i32 0, i64 %4225
  %4231 = getelementptr inbounds [23 x [5 x double]]* %4230, i32 0, i64 %4223
  %4232 = getelementptr inbounds [5 x double]* %4231, i32 0, i64 %4221
  %4233 = load double* %4232, align 8
  %4234 = fmul double 4.000000e+00, %4233
  %4235 = fsub double %4219, %4234
  %4236 = load i32* %m, align 4
  %4237 = sext i32 %4236 to i64
  %4238 = load i32* %i, align 4
  %4239 = sext i32 %4238 to i64
  %4240 = load i32* %j, align 4
  %4241 = sext i32 %4240 to i64
  %4242 = load i32* @nz, align 4
  %4243 = sub nsw i32 %4242, 2
  %4244 = sext i32 %4243 to i64
  %4245 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %4244
  %4246 = getelementptr inbounds [23 x [23 x [5 x double]]]* %4245, i32 0, i64 %4241
  %4247 = getelementptr inbounds [23 x [5 x double]]* %4246, i32 0, i64 %4239
  %4248 = getelementptr inbounds [5 x double]* %4247, i32 0, i64 %4237
  %4249 = load double* %4248, align 8
  %4250 = fmul double 5.000000e+00, %4249
  %4251 = fadd double %4235, %4250
  %4252 = fmul double %4205, %4251
  %4253 = fsub double %4204, %4252
  %4254 = load i32* %m, align 4
  %4255 = sext i32 %4254 to i64
  %4256 = load i32* %i, align 4
  %4257 = sext i32 %4256 to i64
  %4258 = load i32* %j, align 4
  %4259 = sext i32 %4258 to i64
  %4260 = load i32* @nz, align 4
  %4261 = sub nsw i32 %4260, 2
  %4262 = sext i32 %4261 to i64
  %4263 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %4262
  %4264 = getelementptr inbounds [23 x [23 x [5 x double]]]* %4263, i32 0, i64 %4259
  %4265 = getelementptr inbounds [23 x [5 x double]]* %4264, i32 0, i64 %4257
  %4266 = getelementptr inbounds [5 x double]* %4265, i32 0, i64 %4255
  store double %4253, double* %4266, align 8
  br label %4267

; <label>:4267                                    ; preds = %4098
  %4268 = load i32* %m, align 4
  %4269 = add nsw i32 %4268, 1
  store i32 %4269, i32* %m, align 4
  br label %4095

; <label>:4270                                    ; preds = %4095
  br label %4271

; <label>:4271                                    ; preds = %4270
  %4272 = load i32* %i, align 4
  %4273 = add nsw i32 %4272, 1
  store i32 %4273, i32* %i, align 4
  br label %2939

; <label>:4274                                    ; preds = %2939
  br label %4275

; <label>:4275                                    ; preds = %4274
  %4276 = load i32* %j, align 4
  %4277 = add nsw i32 %4276, 1
  store i32 %4277, i32* %j, align 4
  br label %2933

; <label>:4278                                    ; preds = %2933
  ret void
}

; Function Attrs: nounwind uwtable
define void @error() #0 {
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %m = alloca i32, align 4
  %tmp = alloca double, align 8
  %u000ijk = alloca [5 x double], align 16
  store i32 0, i32* %m, align 4
  br label %1

; <label>:1                                       ; preds = %8, %0
  %2 = load i32* %m, align 4
  %3 = icmp slt i32 %2, 5
  br i1 %3, label %4, label %11

; <label>:4                                       ; preds = %1
  %5 = load i32* %m, align 4
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds [5 x double]* @errnm, i32 0, i64 %6
  store double 0.000000e+00, double* %7, align 8
  br label %8

; <label>:8                                       ; preds = %4
  %9 = load i32* %m, align 4
  %10 = add nsw i32 %9, 1
  store i32 %10, i32* %m, align 4
  br label %1

; <label>:11                                      ; preds = %1
  store i32 1, i32* %k, align 4
  br label %12

; <label>:12                                      ; preds = %79, %11
  %13 = load i32* %k, align 4
  %14 = load i32* @nz, align 4
  %15 = sub nsw i32 %14, 1
  %16 = icmp slt i32 %13, %15
  br i1 %16, label %17, label %82

; <label>:17                                      ; preds = %12
  %18 = load i32* @jst, align 4
  store i32 %18, i32* %j, align 4
  br label %19

; <label>:19                                      ; preds = %75, %17
  %20 = load i32* %j, align 4
  %21 = load i32* @jend, align 4
  %22 = icmp slt i32 %20, %21
  br i1 %22, label %23, label %78

; <label>:23                                      ; preds = %19
  %24 = load i32* @ist, align 4
  store i32 %24, i32* %i, align 4
  br label %25

; <label>:25                                      ; preds = %71, %23
  %26 = load i32* %i, align 4
  %27 = load i32* @iend, align 4
  %28 = icmp slt i32 %26, %27
  br i1 %28, label %29, label %74

; <label>:29                                      ; preds = %25
  %30 = load i32* %i, align 4
  %31 = load i32* %j, align 4
  %32 = load i32* %k, align 4
  %33 = getelementptr inbounds [5 x double]* %u000ijk, i32 0, i32 0
  call void @exact(i32 %30, i32 %31, i32 %32, double* %33)
  store i32 0, i32* %m, align 4
  br label %34

; <label>:34                                      ; preds = %67, %29
  %35 = load i32* %m, align 4
  %36 = icmp slt i32 %35, 5
  br i1 %36, label %37, label %70

; <label>:37                                      ; preds = %34
  %38 = load i32* %m, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [5 x double]* %u000ijk, i32 0, i64 %39
  %41 = load double* %40, align 8
  %42 = load i32* %m, align 4
  %43 = sext i32 %42 to i64
  %44 = load i32* %i, align 4
  %45 = sext i32 %44 to i64
  %46 = load i32* %j, align 4
  %47 = sext i32 %46 to i64
  %48 = load i32* %k, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %49
  %51 = getelementptr inbounds [23 x [23 x [5 x double]]]* %50, i32 0, i64 %47
  %52 = getelementptr inbounds [23 x [5 x double]]* %51, i32 0, i64 %45
  %53 = getelementptr inbounds [5 x double]* %52, i32 0, i64 %43
  %54 = load double* %53, align 8
  %55 = fsub double %41, %54
  store double %55, double* %tmp, align 8
  %56 = load i32* %m, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds [5 x double]* @errnm, i32 0, i64 %57
  %59 = load double* %58, align 8
  %60 = load double* %tmp, align 8
  %61 = load double* %tmp, align 8
  %62 = fmul double %60, %61
  %63 = fadd double %59, %62
  %64 = load i32* %m, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds [5 x double]* @errnm, i32 0, i64 %65
  store double %63, double* %66, align 8
  br label %67

; <label>:67                                      ; preds = %37
  %68 = load i32* %m, align 4
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %m, align 4
  br label %34

; <label>:70                                      ; preds = %34
  br label %71

; <label>:71                                      ; preds = %70
  %72 = load i32* %i, align 4
  %73 = add nsw i32 %72, 1
  store i32 %73, i32* %i, align 4
  br label %25

; <label>:74                                      ; preds = %25
  br label %75

; <label>:75                                      ; preds = %74
  %76 = load i32* %j, align 4
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %j, align 4
  br label %19

; <label>:78                                      ; preds = %19
  br label %79

; <label>:79                                      ; preds = %78
  %80 = load i32* %k, align 4
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %k, align 4
  br label %12

; <label>:82                                      ; preds = %12
  store i32 0, i32* %m, align 4
  br label %83

; <label>:83                                      ; preds = %105, %82
  %84 = load i32* %m, align 4
  %85 = icmp slt i32 %84, 5
  br i1 %85, label %86, label %108

; <label>:86                                      ; preds = %83
  %87 = load i32* %m, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds [5 x double]* @errnm, i32 0, i64 %88
  %90 = load double* %89, align 8
  %91 = load i32* @nx0, align 4
  %92 = sub nsw i32 %91, 2
  %93 = load i32* @ny0, align 4
  %94 = sub nsw i32 %93, 2
  %95 = mul nsw i32 %92, %94
  %96 = load i32* @nz0, align 4
  %97 = sub nsw i32 %96, 2
  %98 = mul nsw i32 %95, %97
  %99 = sitofp i32 %98 to double
  %100 = fdiv double %90, %99
  %101 = call double @sqrt(double %100) #6
  %102 = load i32* %m, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds [5 x double]* @errnm, i32 0, i64 %103
  store double %101, double* %104, align 8
  br label %105

; <label>:105                                     ; preds = %86
  %106 = load i32* %m, align 4
  %107 = add nsw i32 %106, 1
  store i32 %107, i32* %m, align 4
  br label %83

; <label>:108                                     ; preds = %83
  ret void
}

; Function Attrs: nounwind
declare double @sqrt(double) #3

; Function Attrs: nounwind uwtable
define void @exact(i32 %i, i32 %j, i32 %k, double* %u000ijk) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca double*, align 8
  %m = alloca i32, align 4
  %xi = alloca double, align 8
  %eta = alloca double, align 8
  %zeta = alloca double, align 8
  store i32 %i, i32* %1, align 4
  store i32 %j, i32* %2, align 4
  store i32 %k, i32* %3, align 4
  store double* %u000ijk, double** %4, align 8
  %5 = load i32* %1, align 4
  %6 = sitofp i32 %5 to double
  %7 = load i32* @nx0, align 4
  %8 = sub nsw i32 %7, 1
  %9 = sitofp i32 %8 to double
  %10 = fdiv double %6, %9
  store double %10, double* %xi, align 8
  %11 = load i32* %2, align 4
  %12 = sitofp i32 %11 to double
  %13 = load i32* @ny0, align 4
  %14 = sub nsw i32 %13, 1
  %15 = sitofp i32 %14 to double
  %16 = fdiv double %12, %15
  store double %16, double* %eta, align 8
  %17 = load i32* %3, align 4
  %18 = sitofp i32 %17 to double
  %19 = load i32* @nz, align 4
  %20 = sub nsw i32 %19, 1
  %21 = sitofp i32 %20 to double
  %22 = fdiv double %18, %21
  store double %22, double* %zeta, align 8
  store i32 0, i32* %m, align 4
  br label %23

; <label>:23                                      ; preds = %132, %0
  %24 = load i32* %m, align 4
  %25 = icmp slt i32 %24, 5
  br i1 %25, label %26, label %135

; <label>:26                                      ; preds = %23
  %27 = load i32* %m, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %28
  %30 = getelementptr inbounds [13 x double]* %29, i32 0, i64 0
  %31 = load double* %30, align 8
  %32 = load i32* %m, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %33
  %35 = getelementptr inbounds [13 x double]* %34, i32 0, i64 1
  %36 = load double* %35, align 8
  %37 = load i32* %m, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %38
  %40 = getelementptr inbounds [13 x double]* %39, i32 0, i64 4
  %41 = load double* %40, align 8
  %42 = load i32* %m, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %43
  %45 = getelementptr inbounds [13 x double]* %44, i32 0, i64 7
  %46 = load double* %45, align 8
  %47 = load i32* %m, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %48
  %50 = getelementptr inbounds [13 x double]* %49, i32 0, i64 10
  %51 = load double* %50, align 8
  %52 = load double* %xi, align 8
  %53 = fmul double %51, %52
  %54 = fadd double %46, %53
  %55 = load double* %xi, align 8
  %56 = fmul double %54, %55
  %57 = fadd double %41, %56
  %58 = load double* %xi, align 8
  %59 = fmul double %57, %58
  %60 = fadd double %36, %59
  %61 = load double* %xi, align 8
  %62 = fmul double %60, %61
  %63 = fadd double %31, %62
  %64 = load i32* %m, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %65
  %67 = getelementptr inbounds [13 x double]* %66, i32 0, i64 2
  %68 = load double* %67, align 8
  %69 = load i32* %m, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %70
  %72 = getelementptr inbounds [13 x double]* %71, i32 0, i64 5
  %73 = load double* %72, align 8
  %74 = load i32* %m, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %75
  %77 = getelementptr inbounds [13 x double]* %76, i32 0, i64 8
  %78 = load double* %77, align 8
  %79 = load i32* %m, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %80
  %82 = getelementptr inbounds [13 x double]* %81, i32 0, i64 11
  %83 = load double* %82, align 8
  %84 = load double* %eta, align 8
  %85 = fmul double %83, %84
  %86 = fadd double %78, %85
  %87 = load double* %eta, align 8
  %88 = fmul double %86, %87
  %89 = fadd double %73, %88
  %90 = load double* %eta, align 8
  %91 = fmul double %89, %90
  %92 = fadd double %68, %91
  %93 = load double* %eta, align 8
  %94 = fmul double %92, %93
  %95 = fadd double %63, %94
  %96 = load i32* %m, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %97
  %99 = getelementptr inbounds [13 x double]* %98, i32 0, i64 3
  %100 = load double* %99, align 8
  %101 = load i32* %m, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %102
  %104 = getelementptr inbounds [13 x double]* %103, i32 0, i64 6
  %105 = load double* %104, align 8
  %106 = load i32* %m, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %107
  %109 = getelementptr inbounds [13 x double]* %108, i32 0, i64 9
  %110 = load double* %109, align 8
  %111 = load i32* %m, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds [5 x [13 x double]]* @ce, i32 0, i64 %112
  %114 = getelementptr inbounds [13 x double]* %113, i32 0, i64 12
  %115 = load double* %114, align 8
  %116 = load double* %zeta, align 8
  %117 = fmul double %115, %116
  %118 = fadd double %110, %117
  %119 = load double* %zeta, align 8
  %120 = fmul double %118, %119
  %121 = fadd double %105, %120
  %122 = load double* %zeta, align 8
  %123 = fmul double %121, %122
  %124 = fadd double %100, %123
  %125 = load double* %zeta, align 8
  %126 = fmul double %124, %125
  %127 = fadd double %95, %126
  %128 = load i32* %m, align 4
  %129 = sext i32 %128 to i64
  %130 = load double** %4, align 8
  %131 = getelementptr inbounds double* %130, i64 %129
  store double %127, double* %131, align 8
  br label %132

; <label>:132                                     ; preds = %26
  %133 = load i32* %m, align 4
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %m, align 4
  br label %23

; <label>:135                                     ; preds = %23
  ret void
}

; Function Attrs: nounwind uwtable
define void @jacld(i32 %k) #0 {
  %1 = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %r43 = alloca double, align 8
  %c1345 = alloca double, align 8
  %c34 = alloca double, align 8
  %tmp1 = alloca double, align 8
  %tmp2 = alloca double, align 8
  %tmp3 = alloca double, align 8
  store i32 %k, i32* %1, align 4
  store double 0x3FF5555555555555, double* %r43, align 8
  store double 0x3FC916872B020C49, double* %c1345, align 8
  store double 1.000000e-01, double* %c34, align 8
  %2 = load i32* @jst, align 4
  store i32 %2, i32* %j, align 4
  br label %3

; <label>:3                                       ; preds = %3703, %0
  %4 = load i32* %j, align 4
  %5 = load i32* @jend, align 4
  %6 = icmp slt i32 %4, %5
  br i1 %6, label %7, label %3706

; <label>:7                                       ; preds = %3
  %8 = load i32* @ist, align 4
  store i32 %8, i32* %i, align 4
  br label %9

; <label>:9                                       ; preds = %3699, %7
  %10 = load i32* %i, align 4
  %11 = load i32* @iend, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %13, label %3702

; <label>:13                                      ; preds = %9
  %14 = load i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load i32* %j, align 4
  %17 = sext i32 %16 to i64
  %18 = load i32* %1, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [22 x [23 x [23 x double]]]* @rho_i, i32 0, i64 %19
  %21 = getelementptr inbounds [23 x [23 x double]]* %20, i32 0, i64 %17
  %22 = getelementptr inbounds [23 x double]* %21, i32 0, i64 %15
  %23 = load double* %22, align 8
  store double %23, double* %tmp1, align 8
  %24 = load double* %tmp1, align 8
  %25 = load double* %tmp1, align 8
  %26 = fmul double %24, %25
  store double %26, double* %tmp2, align 8
  %27 = load double* %tmp1, align 8
  %28 = load double* %tmp2, align 8
  %29 = fmul double %27, %28
  store double %29, double* %tmp3, align 8
  %30 = load double* @dt, align 8
  %31 = fmul double %30, 2.000000e+00
  %32 = load double* @tx1, align 8
  %33 = load double* @dx1, align 8
  %34 = fmul double %32, %33
  %35 = load double* @ty1, align 8
  %36 = load double* @dy1, align 8
  %37 = fmul double %35, %36
  %38 = fadd double %34, %37
  %39 = load double* @tz1, align 8
  %40 = load double* @dz1, align 8
  %41 = fmul double %39, %40
  %42 = fadd double %38, %41
  %43 = fmul double %31, %42
  %44 = fadd double 1.000000e+00, %43
  %45 = load i32* %i, align 4
  %46 = sext i32 %45 to i64
  %47 = load i32* %j, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %48
  %50 = getelementptr inbounds [23 x [5 x [5 x double]]]* %49, i32 0, i64 %46
  %51 = getelementptr inbounds [5 x [5 x double]]* %50, i32 0, i64 0
  %52 = getelementptr inbounds [5 x double]* %51, i32 0, i64 0
  store double %44, double* %52, align 8
  %53 = load i32* %i, align 4
  %54 = sext i32 %53 to i64
  %55 = load i32* %j, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %56
  %58 = getelementptr inbounds [23 x [5 x [5 x double]]]* %57, i32 0, i64 %54
  %59 = getelementptr inbounds [5 x [5 x double]]* %58, i32 0, i64 1
  %60 = getelementptr inbounds [5 x double]* %59, i32 0, i64 0
  store double 0.000000e+00, double* %60, align 8
  %61 = load i32* %i, align 4
  %62 = sext i32 %61 to i64
  %63 = load i32* %j, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %64
  %66 = getelementptr inbounds [23 x [5 x [5 x double]]]* %65, i32 0, i64 %62
  %67 = getelementptr inbounds [5 x [5 x double]]* %66, i32 0, i64 2
  %68 = getelementptr inbounds [5 x double]* %67, i32 0, i64 0
  store double 0.000000e+00, double* %68, align 8
  %69 = load i32* %i, align 4
  %70 = sext i32 %69 to i64
  %71 = load i32* %j, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %72
  %74 = getelementptr inbounds [23 x [5 x [5 x double]]]* %73, i32 0, i64 %70
  %75 = getelementptr inbounds [5 x [5 x double]]* %74, i32 0, i64 3
  %76 = getelementptr inbounds [5 x double]* %75, i32 0, i64 0
  store double 0.000000e+00, double* %76, align 8
  %77 = load i32* %i, align 4
  %78 = sext i32 %77 to i64
  %79 = load i32* %j, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %80
  %82 = getelementptr inbounds [23 x [5 x [5 x double]]]* %81, i32 0, i64 %78
  %83 = getelementptr inbounds [5 x [5 x double]]* %82, i32 0, i64 4
  %84 = getelementptr inbounds [5 x double]* %83, i32 0, i64 0
  store double 0.000000e+00, double* %84, align 8
  %85 = load double* @dt, align 8
  %86 = fsub double -0.000000e+00, %85
  %87 = fmul double %86, 2.000000e+00
  %88 = load double* @tx1, align 8
  %89 = load double* %r43, align 8
  %90 = fmul double %88, %89
  %91 = load double* @ty1, align 8
  %92 = fadd double %90, %91
  %93 = load double* @tz1, align 8
  %94 = fadd double %92, %93
  %95 = fmul double %87, %94
  %96 = load double* %c34, align 8
  %97 = fmul double %95, %96
  %98 = load double* %tmp2, align 8
  %99 = fmul double %97, %98
  %100 = load i32* %i, align 4
  %101 = sext i32 %100 to i64
  %102 = load i32* %j, align 4
  %103 = sext i32 %102 to i64
  %104 = load i32* %1, align 4
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %105
  %107 = getelementptr inbounds [23 x [23 x [5 x double]]]* %106, i32 0, i64 %103
  %108 = getelementptr inbounds [23 x [5 x double]]* %107, i32 0, i64 %101
  %109 = getelementptr inbounds [5 x double]* %108, i32 0, i64 1
  %110 = load double* %109, align 8
  %111 = fmul double %99, %110
  %112 = load i32* %i, align 4
  %113 = sext i32 %112 to i64
  %114 = load i32* %j, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %115
  %117 = getelementptr inbounds [23 x [5 x [5 x double]]]* %116, i32 0, i64 %113
  %118 = getelementptr inbounds [5 x [5 x double]]* %117, i32 0, i64 0
  %119 = getelementptr inbounds [5 x double]* %118, i32 0, i64 1
  store double %111, double* %119, align 8
  %120 = load double* @dt, align 8
  %121 = fmul double %120, 2.000000e+00
  %122 = load double* %c34, align 8
  %123 = fmul double %121, %122
  %124 = load double* %tmp1, align 8
  %125 = fmul double %123, %124
  %126 = load double* @tx1, align 8
  %127 = load double* %r43, align 8
  %128 = fmul double %126, %127
  %129 = load double* @ty1, align 8
  %130 = fadd double %128, %129
  %131 = load double* @tz1, align 8
  %132 = fadd double %130, %131
  %133 = fmul double %125, %132
  %134 = fadd double 1.000000e+00, %133
  %135 = load double* @dt, align 8
  %136 = fmul double %135, 2.000000e+00
  %137 = load double* @tx1, align 8
  %138 = load double* @dx2, align 8
  %139 = fmul double %137, %138
  %140 = load double* @ty1, align 8
  %141 = load double* @dy2, align 8
  %142 = fmul double %140, %141
  %143 = fadd double %139, %142
  %144 = load double* @tz1, align 8
  %145 = load double* @dz2, align 8
  %146 = fmul double %144, %145
  %147 = fadd double %143, %146
  %148 = fmul double %136, %147
  %149 = fadd double %134, %148
  %150 = load i32* %i, align 4
  %151 = sext i32 %150 to i64
  %152 = load i32* %j, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %153
  %155 = getelementptr inbounds [23 x [5 x [5 x double]]]* %154, i32 0, i64 %151
  %156 = getelementptr inbounds [5 x [5 x double]]* %155, i32 0, i64 1
  %157 = getelementptr inbounds [5 x double]* %156, i32 0, i64 1
  store double %149, double* %157, align 8
  %158 = load i32* %i, align 4
  %159 = sext i32 %158 to i64
  %160 = load i32* %j, align 4
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %161
  %163 = getelementptr inbounds [23 x [5 x [5 x double]]]* %162, i32 0, i64 %159
  %164 = getelementptr inbounds [5 x [5 x double]]* %163, i32 0, i64 2
  %165 = getelementptr inbounds [5 x double]* %164, i32 0, i64 1
  store double 0.000000e+00, double* %165, align 8
  %166 = load i32* %i, align 4
  %167 = sext i32 %166 to i64
  %168 = load i32* %j, align 4
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %169
  %171 = getelementptr inbounds [23 x [5 x [5 x double]]]* %170, i32 0, i64 %167
  %172 = getelementptr inbounds [5 x [5 x double]]* %171, i32 0, i64 3
  %173 = getelementptr inbounds [5 x double]* %172, i32 0, i64 1
  store double 0.000000e+00, double* %173, align 8
  %174 = load i32* %i, align 4
  %175 = sext i32 %174 to i64
  %176 = load i32* %j, align 4
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %177
  %179 = getelementptr inbounds [23 x [5 x [5 x double]]]* %178, i32 0, i64 %175
  %180 = getelementptr inbounds [5 x [5 x double]]* %179, i32 0, i64 4
  %181 = getelementptr inbounds [5 x double]* %180, i32 0, i64 1
  store double 0.000000e+00, double* %181, align 8
  %182 = load double* @dt, align 8
  %183 = fsub double -0.000000e+00, %182
  %184 = fmul double %183, 2.000000e+00
  %185 = load double* @tx1, align 8
  %186 = load double* @ty1, align 8
  %187 = load double* %r43, align 8
  %188 = fmul double %186, %187
  %189 = fadd double %185, %188
  %190 = load double* @tz1, align 8
  %191 = fadd double %189, %190
  %192 = fmul double %184, %191
  %193 = load double* %c34, align 8
  %194 = fmul double %192, %193
  %195 = load double* %tmp2, align 8
  %196 = fmul double %194, %195
  %197 = load i32* %i, align 4
  %198 = sext i32 %197 to i64
  %199 = load i32* %j, align 4
  %200 = sext i32 %199 to i64
  %201 = load i32* %1, align 4
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %202
  %204 = getelementptr inbounds [23 x [23 x [5 x double]]]* %203, i32 0, i64 %200
  %205 = getelementptr inbounds [23 x [5 x double]]* %204, i32 0, i64 %198
  %206 = getelementptr inbounds [5 x double]* %205, i32 0, i64 2
  %207 = load double* %206, align 8
  %208 = fmul double %196, %207
  %209 = load i32* %i, align 4
  %210 = sext i32 %209 to i64
  %211 = load i32* %j, align 4
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %212
  %214 = getelementptr inbounds [23 x [5 x [5 x double]]]* %213, i32 0, i64 %210
  %215 = getelementptr inbounds [5 x [5 x double]]* %214, i32 0, i64 0
  %216 = getelementptr inbounds [5 x double]* %215, i32 0, i64 2
  store double %208, double* %216, align 8
  %217 = load i32* %i, align 4
  %218 = sext i32 %217 to i64
  %219 = load i32* %j, align 4
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %220
  %222 = getelementptr inbounds [23 x [5 x [5 x double]]]* %221, i32 0, i64 %218
  %223 = getelementptr inbounds [5 x [5 x double]]* %222, i32 0, i64 1
  %224 = getelementptr inbounds [5 x double]* %223, i32 0, i64 2
  store double 0.000000e+00, double* %224, align 8
  %225 = load double* @dt, align 8
  %226 = fmul double %225, 2.000000e+00
  %227 = load double* %c34, align 8
  %228 = fmul double %226, %227
  %229 = load double* %tmp1, align 8
  %230 = fmul double %228, %229
  %231 = load double* @tx1, align 8
  %232 = load double* @ty1, align 8
  %233 = load double* %r43, align 8
  %234 = fmul double %232, %233
  %235 = fadd double %231, %234
  %236 = load double* @tz1, align 8
  %237 = fadd double %235, %236
  %238 = fmul double %230, %237
  %239 = fadd double 1.000000e+00, %238
  %240 = load double* @dt, align 8
  %241 = fmul double %240, 2.000000e+00
  %242 = load double* @tx1, align 8
  %243 = load double* @dx3, align 8
  %244 = fmul double %242, %243
  %245 = load double* @ty1, align 8
  %246 = load double* @dy3, align 8
  %247 = fmul double %245, %246
  %248 = fadd double %244, %247
  %249 = load double* @tz1, align 8
  %250 = load double* @dz3, align 8
  %251 = fmul double %249, %250
  %252 = fadd double %248, %251
  %253 = fmul double %241, %252
  %254 = fadd double %239, %253
  %255 = load i32* %i, align 4
  %256 = sext i32 %255 to i64
  %257 = load i32* %j, align 4
  %258 = sext i32 %257 to i64
  %259 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %258
  %260 = getelementptr inbounds [23 x [5 x [5 x double]]]* %259, i32 0, i64 %256
  %261 = getelementptr inbounds [5 x [5 x double]]* %260, i32 0, i64 2
  %262 = getelementptr inbounds [5 x double]* %261, i32 0, i64 2
  store double %254, double* %262, align 8
  %263 = load i32* %i, align 4
  %264 = sext i32 %263 to i64
  %265 = load i32* %j, align 4
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %266
  %268 = getelementptr inbounds [23 x [5 x [5 x double]]]* %267, i32 0, i64 %264
  %269 = getelementptr inbounds [5 x [5 x double]]* %268, i32 0, i64 3
  %270 = getelementptr inbounds [5 x double]* %269, i32 0, i64 2
  store double 0.000000e+00, double* %270, align 8
  %271 = load i32* %i, align 4
  %272 = sext i32 %271 to i64
  %273 = load i32* %j, align 4
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %274
  %276 = getelementptr inbounds [23 x [5 x [5 x double]]]* %275, i32 0, i64 %272
  %277 = getelementptr inbounds [5 x [5 x double]]* %276, i32 0, i64 4
  %278 = getelementptr inbounds [5 x double]* %277, i32 0, i64 2
  store double 0.000000e+00, double* %278, align 8
  %279 = load double* @dt, align 8
  %280 = fsub double -0.000000e+00, %279
  %281 = fmul double %280, 2.000000e+00
  %282 = load double* @tx1, align 8
  %283 = load double* @ty1, align 8
  %284 = fadd double %282, %283
  %285 = load double* @tz1, align 8
  %286 = load double* %r43, align 8
  %287 = fmul double %285, %286
  %288 = fadd double %284, %287
  %289 = fmul double %281, %288
  %290 = load double* %c34, align 8
  %291 = fmul double %289, %290
  %292 = load double* %tmp2, align 8
  %293 = fmul double %291, %292
  %294 = load i32* %i, align 4
  %295 = sext i32 %294 to i64
  %296 = load i32* %j, align 4
  %297 = sext i32 %296 to i64
  %298 = load i32* %1, align 4
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %299
  %301 = getelementptr inbounds [23 x [23 x [5 x double]]]* %300, i32 0, i64 %297
  %302 = getelementptr inbounds [23 x [5 x double]]* %301, i32 0, i64 %295
  %303 = getelementptr inbounds [5 x double]* %302, i32 0, i64 3
  %304 = load double* %303, align 8
  %305 = fmul double %293, %304
  %306 = load i32* %i, align 4
  %307 = sext i32 %306 to i64
  %308 = load i32* %j, align 4
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %309
  %311 = getelementptr inbounds [23 x [5 x [5 x double]]]* %310, i32 0, i64 %307
  %312 = getelementptr inbounds [5 x [5 x double]]* %311, i32 0, i64 0
  %313 = getelementptr inbounds [5 x double]* %312, i32 0, i64 3
  store double %305, double* %313, align 8
  %314 = load i32* %i, align 4
  %315 = sext i32 %314 to i64
  %316 = load i32* %j, align 4
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %317
  %319 = getelementptr inbounds [23 x [5 x [5 x double]]]* %318, i32 0, i64 %315
  %320 = getelementptr inbounds [5 x [5 x double]]* %319, i32 0, i64 1
  %321 = getelementptr inbounds [5 x double]* %320, i32 0, i64 3
  store double 0.000000e+00, double* %321, align 8
  %322 = load i32* %i, align 4
  %323 = sext i32 %322 to i64
  %324 = load i32* %j, align 4
  %325 = sext i32 %324 to i64
  %326 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %325
  %327 = getelementptr inbounds [23 x [5 x [5 x double]]]* %326, i32 0, i64 %323
  %328 = getelementptr inbounds [5 x [5 x double]]* %327, i32 0, i64 2
  %329 = getelementptr inbounds [5 x double]* %328, i32 0, i64 3
  store double 0.000000e+00, double* %329, align 8
  %330 = load double* @dt, align 8
  %331 = fmul double %330, 2.000000e+00
  %332 = load double* %c34, align 8
  %333 = fmul double %331, %332
  %334 = load double* %tmp1, align 8
  %335 = fmul double %333, %334
  %336 = load double* @tx1, align 8
  %337 = load double* @ty1, align 8
  %338 = fadd double %336, %337
  %339 = load double* @tz1, align 8
  %340 = load double* %r43, align 8
  %341 = fmul double %339, %340
  %342 = fadd double %338, %341
  %343 = fmul double %335, %342
  %344 = fadd double 1.000000e+00, %343
  %345 = load double* @dt, align 8
  %346 = fmul double %345, 2.000000e+00
  %347 = load double* @tx1, align 8
  %348 = load double* @dx4, align 8
  %349 = fmul double %347, %348
  %350 = load double* @ty1, align 8
  %351 = load double* @dy4, align 8
  %352 = fmul double %350, %351
  %353 = fadd double %349, %352
  %354 = load double* @tz1, align 8
  %355 = load double* @dz4, align 8
  %356 = fmul double %354, %355
  %357 = fadd double %353, %356
  %358 = fmul double %346, %357
  %359 = fadd double %344, %358
  %360 = load i32* %i, align 4
  %361 = sext i32 %360 to i64
  %362 = load i32* %j, align 4
  %363 = sext i32 %362 to i64
  %364 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %363
  %365 = getelementptr inbounds [23 x [5 x [5 x double]]]* %364, i32 0, i64 %361
  %366 = getelementptr inbounds [5 x [5 x double]]* %365, i32 0, i64 3
  %367 = getelementptr inbounds [5 x double]* %366, i32 0, i64 3
  store double %359, double* %367, align 8
  %368 = load i32* %i, align 4
  %369 = sext i32 %368 to i64
  %370 = load i32* %j, align 4
  %371 = sext i32 %370 to i64
  %372 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %371
  %373 = getelementptr inbounds [23 x [5 x [5 x double]]]* %372, i32 0, i64 %369
  %374 = getelementptr inbounds [5 x [5 x double]]* %373, i32 0, i64 4
  %375 = getelementptr inbounds [5 x double]* %374, i32 0, i64 3
  store double 0.000000e+00, double* %375, align 8
  %376 = load double* @dt, align 8
  %377 = fsub double -0.000000e+00, %376
  %378 = fmul double %377, 2.000000e+00
  %379 = load double* @tx1, align 8
  %380 = load double* %r43, align 8
  %381 = load double* %c34, align 8
  %382 = fmul double %380, %381
  %383 = load double* %c1345, align 8
  %384 = fsub double %382, %383
  %385 = fmul double %379, %384
  %386 = load double* @ty1, align 8
  %387 = load double* %c34, align 8
  %388 = load double* %c1345, align 8
  %389 = fsub double %387, %388
  %390 = fmul double %386, %389
  %391 = fadd double %385, %390
  %392 = load double* @tz1, align 8
  %393 = load double* %c34, align 8
  %394 = load double* %c1345, align 8
  %395 = fsub double %393, %394
  %396 = fmul double %392, %395
  %397 = fadd double %391, %396
  %398 = load i32* %i, align 4
  %399 = sext i32 %398 to i64
  %400 = load i32* %j, align 4
  %401 = sext i32 %400 to i64
  %402 = load i32* %1, align 4
  %403 = sext i32 %402 to i64
  %404 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %403
  %405 = getelementptr inbounds [23 x [23 x [5 x double]]]* %404, i32 0, i64 %401
  %406 = getelementptr inbounds [23 x [5 x double]]* %405, i32 0, i64 %399
  %407 = getelementptr inbounds [5 x double]* %406, i32 0, i64 1
  %408 = load double* %407, align 8
  %409 = load i32* %i, align 4
  %410 = sext i32 %409 to i64
  %411 = load i32* %j, align 4
  %412 = sext i32 %411 to i64
  %413 = load i32* %1, align 4
  %414 = sext i32 %413 to i64
  %415 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %414
  %416 = getelementptr inbounds [23 x [23 x [5 x double]]]* %415, i32 0, i64 %412
  %417 = getelementptr inbounds [23 x [5 x double]]* %416, i32 0, i64 %410
  %418 = getelementptr inbounds [5 x double]* %417, i32 0, i64 1
  %419 = load double* %418, align 8
  %420 = fmul double %408, %419
  %421 = fmul double %397, %420
  %422 = load double* @tx1, align 8
  %423 = load double* %c34, align 8
  %424 = load double* %c1345, align 8
  %425 = fsub double %423, %424
  %426 = fmul double %422, %425
  %427 = load double* @ty1, align 8
  %428 = load double* %r43, align 8
  %429 = load double* %c34, align 8
  %430 = fmul double %428, %429
  %431 = load double* %c1345, align 8
  %432 = fsub double %430, %431
  %433 = fmul double %427, %432
  %434 = fadd double %426, %433
  %435 = load double* @tz1, align 8
  %436 = load double* %c34, align 8
  %437 = load double* %c1345, align 8
  %438 = fsub double %436, %437
  %439 = fmul double %435, %438
  %440 = fadd double %434, %439
  %441 = load i32* %i, align 4
  %442 = sext i32 %441 to i64
  %443 = load i32* %j, align 4
  %444 = sext i32 %443 to i64
  %445 = load i32* %1, align 4
  %446 = sext i32 %445 to i64
  %447 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %446
  %448 = getelementptr inbounds [23 x [23 x [5 x double]]]* %447, i32 0, i64 %444
  %449 = getelementptr inbounds [23 x [5 x double]]* %448, i32 0, i64 %442
  %450 = getelementptr inbounds [5 x double]* %449, i32 0, i64 2
  %451 = load double* %450, align 8
  %452 = load i32* %i, align 4
  %453 = sext i32 %452 to i64
  %454 = load i32* %j, align 4
  %455 = sext i32 %454 to i64
  %456 = load i32* %1, align 4
  %457 = sext i32 %456 to i64
  %458 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %457
  %459 = getelementptr inbounds [23 x [23 x [5 x double]]]* %458, i32 0, i64 %455
  %460 = getelementptr inbounds [23 x [5 x double]]* %459, i32 0, i64 %453
  %461 = getelementptr inbounds [5 x double]* %460, i32 0, i64 2
  %462 = load double* %461, align 8
  %463 = fmul double %451, %462
  %464 = fmul double %440, %463
  %465 = fadd double %421, %464
  %466 = load double* @tx1, align 8
  %467 = load double* %c34, align 8
  %468 = load double* %c1345, align 8
  %469 = fsub double %467, %468
  %470 = fmul double %466, %469
  %471 = load double* @ty1, align 8
  %472 = load double* %c34, align 8
  %473 = load double* %c1345, align 8
  %474 = fsub double %472, %473
  %475 = fmul double %471, %474
  %476 = fadd double %470, %475
  %477 = load double* @tz1, align 8
  %478 = load double* %r43, align 8
  %479 = load double* %c34, align 8
  %480 = fmul double %478, %479
  %481 = load double* %c1345, align 8
  %482 = fsub double %480, %481
  %483 = fmul double %477, %482
  %484 = fadd double %476, %483
  %485 = load i32* %i, align 4
  %486 = sext i32 %485 to i64
  %487 = load i32* %j, align 4
  %488 = sext i32 %487 to i64
  %489 = load i32* %1, align 4
  %490 = sext i32 %489 to i64
  %491 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %490
  %492 = getelementptr inbounds [23 x [23 x [5 x double]]]* %491, i32 0, i64 %488
  %493 = getelementptr inbounds [23 x [5 x double]]* %492, i32 0, i64 %486
  %494 = getelementptr inbounds [5 x double]* %493, i32 0, i64 3
  %495 = load double* %494, align 8
  %496 = load i32* %i, align 4
  %497 = sext i32 %496 to i64
  %498 = load i32* %j, align 4
  %499 = sext i32 %498 to i64
  %500 = load i32* %1, align 4
  %501 = sext i32 %500 to i64
  %502 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %501
  %503 = getelementptr inbounds [23 x [23 x [5 x double]]]* %502, i32 0, i64 %499
  %504 = getelementptr inbounds [23 x [5 x double]]* %503, i32 0, i64 %497
  %505 = getelementptr inbounds [5 x double]* %504, i32 0, i64 3
  %506 = load double* %505, align 8
  %507 = fmul double %495, %506
  %508 = fmul double %484, %507
  %509 = fadd double %465, %508
  %510 = load double* %tmp3, align 8
  %511 = fmul double %509, %510
  %512 = load double* @tx1, align 8
  %513 = load double* @ty1, align 8
  %514 = fadd double %512, %513
  %515 = load double* @tz1, align 8
  %516 = fadd double %514, %515
  %517 = load double* %c1345, align 8
  %518 = fmul double %516, %517
  %519 = load double* %tmp2, align 8
  %520 = fmul double %518, %519
  %521 = load i32* %i, align 4
  %522 = sext i32 %521 to i64
  %523 = load i32* %j, align 4
  %524 = sext i32 %523 to i64
  %525 = load i32* %1, align 4
  %526 = sext i32 %525 to i64
  %527 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %526
  %528 = getelementptr inbounds [23 x [23 x [5 x double]]]* %527, i32 0, i64 %524
  %529 = getelementptr inbounds [23 x [5 x double]]* %528, i32 0, i64 %522
  %530 = getelementptr inbounds [5 x double]* %529, i32 0, i64 4
  %531 = load double* %530, align 8
  %532 = fmul double %520, %531
  %533 = fadd double %511, %532
  %534 = fmul double %378, %533
  %535 = load i32* %i, align 4
  %536 = sext i32 %535 to i64
  %537 = load i32* %j, align 4
  %538 = sext i32 %537 to i64
  %539 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %538
  %540 = getelementptr inbounds [23 x [5 x [5 x double]]]* %539, i32 0, i64 %536
  %541 = getelementptr inbounds [5 x [5 x double]]* %540, i32 0, i64 0
  %542 = getelementptr inbounds [5 x double]* %541, i32 0, i64 4
  store double %534, double* %542, align 8
  %543 = load double* @dt, align 8
  %544 = fmul double %543, 2.000000e+00
  %545 = load double* %tmp2, align 8
  %546 = fmul double %544, %545
  %547 = load i32* %i, align 4
  %548 = sext i32 %547 to i64
  %549 = load i32* %j, align 4
  %550 = sext i32 %549 to i64
  %551 = load i32* %1, align 4
  %552 = sext i32 %551 to i64
  %553 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %552
  %554 = getelementptr inbounds [23 x [23 x [5 x double]]]* %553, i32 0, i64 %550
  %555 = getelementptr inbounds [23 x [5 x double]]* %554, i32 0, i64 %548
  %556 = getelementptr inbounds [5 x double]* %555, i32 0, i64 1
  %557 = load double* %556, align 8
  %558 = fmul double %546, %557
  %559 = load double* @tx1, align 8
  %560 = load double* %r43, align 8
  %561 = load double* %c34, align 8
  %562 = fmul double %560, %561
  %563 = load double* %c1345, align 8
  %564 = fsub double %562, %563
  %565 = fmul double %559, %564
  %566 = load double* @ty1, align 8
  %567 = load double* %c34, align 8
  %568 = load double* %c1345, align 8
  %569 = fsub double %567, %568
  %570 = fmul double %566, %569
  %571 = fadd double %565, %570
  %572 = load double* @tz1, align 8
  %573 = load double* %c34, align 8
  %574 = load double* %c1345, align 8
  %575 = fsub double %573, %574
  %576 = fmul double %572, %575
  %577 = fadd double %571, %576
  %578 = fmul double %558, %577
  %579 = load i32* %i, align 4
  %580 = sext i32 %579 to i64
  %581 = load i32* %j, align 4
  %582 = sext i32 %581 to i64
  %583 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %582
  %584 = getelementptr inbounds [23 x [5 x [5 x double]]]* %583, i32 0, i64 %580
  %585 = getelementptr inbounds [5 x [5 x double]]* %584, i32 0, i64 1
  %586 = getelementptr inbounds [5 x double]* %585, i32 0, i64 4
  store double %578, double* %586, align 8
  %587 = load double* @dt, align 8
  %588 = fmul double %587, 2.000000e+00
  %589 = load double* %tmp2, align 8
  %590 = fmul double %588, %589
  %591 = load i32* %i, align 4
  %592 = sext i32 %591 to i64
  %593 = load i32* %j, align 4
  %594 = sext i32 %593 to i64
  %595 = load i32* %1, align 4
  %596 = sext i32 %595 to i64
  %597 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %596
  %598 = getelementptr inbounds [23 x [23 x [5 x double]]]* %597, i32 0, i64 %594
  %599 = getelementptr inbounds [23 x [5 x double]]* %598, i32 0, i64 %592
  %600 = getelementptr inbounds [5 x double]* %599, i32 0, i64 2
  %601 = load double* %600, align 8
  %602 = fmul double %590, %601
  %603 = load double* @tx1, align 8
  %604 = load double* %c34, align 8
  %605 = load double* %c1345, align 8
  %606 = fsub double %604, %605
  %607 = fmul double %603, %606
  %608 = load double* @ty1, align 8
  %609 = load double* %r43, align 8
  %610 = load double* %c34, align 8
  %611 = fmul double %609, %610
  %612 = load double* %c1345, align 8
  %613 = fsub double %611, %612
  %614 = fmul double %608, %613
  %615 = fadd double %607, %614
  %616 = load double* @tz1, align 8
  %617 = load double* %c34, align 8
  %618 = load double* %c1345, align 8
  %619 = fsub double %617, %618
  %620 = fmul double %616, %619
  %621 = fadd double %615, %620
  %622 = fmul double %602, %621
  %623 = load i32* %i, align 4
  %624 = sext i32 %623 to i64
  %625 = load i32* %j, align 4
  %626 = sext i32 %625 to i64
  %627 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %626
  %628 = getelementptr inbounds [23 x [5 x [5 x double]]]* %627, i32 0, i64 %624
  %629 = getelementptr inbounds [5 x [5 x double]]* %628, i32 0, i64 2
  %630 = getelementptr inbounds [5 x double]* %629, i32 0, i64 4
  store double %622, double* %630, align 8
  %631 = load double* @dt, align 8
  %632 = fmul double %631, 2.000000e+00
  %633 = load double* %tmp2, align 8
  %634 = fmul double %632, %633
  %635 = load i32* %i, align 4
  %636 = sext i32 %635 to i64
  %637 = load i32* %j, align 4
  %638 = sext i32 %637 to i64
  %639 = load i32* %1, align 4
  %640 = sext i32 %639 to i64
  %641 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %640
  %642 = getelementptr inbounds [23 x [23 x [5 x double]]]* %641, i32 0, i64 %638
  %643 = getelementptr inbounds [23 x [5 x double]]* %642, i32 0, i64 %636
  %644 = getelementptr inbounds [5 x double]* %643, i32 0, i64 3
  %645 = load double* %644, align 8
  %646 = fmul double %634, %645
  %647 = load double* @tx1, align 8
  %648 = load double* %c34, align 8
  %649 = load double* %c1345, align 8
  %650 = fsub double %648, %649
  %651 = fmul double %647, %650
  %652 = load double* @ty1, align 8
  %653 = load double* %c34, align 8
  %654 = load double* %c1345, align 8
  %655 = fsub double %653, %654
  %656 = fmul double %652, %655
  %657 = fadd double %651, %656
  %658 = load double* @tz1, align 8
  %659 = load double* %r43, align 8
  %660 = load double* %c34, align 8
  %661 = fmul double %659, %660
  %662 = load double* %c1345, align 8
  %663 = fsub double %661, %662
  %664 = fmul double %658, %663
  %665 = fadd double %657, %664
  %666 = fmul double %646, %665
  %667 = load i32* %i, align 4
  %668 = sext i32 %667 to i64
  %669 = load i32* %j, align 4
  %670 = sext i32 %669 to i64
  %671 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %670
  %672 = getelementptr inbounds [23 x [5 x [5 x double]]]* %671, i32 0, i64 %668
  %673 = getelementptr inbounds [5 x [5 x double]]* %672, i32 0, i64 3
  %674 = getelementptr inbounds [5 x double]* %673, i32 0, i64 4
  store double %666, double* %674, align 8
  %675 = load double* @dt, align 8
  %676 = fmul double %675, 2.000000e+00
  %677 = load double* @tx1, align 8
  %678 = load double* @ty1, align 8
  %679 = fadd double %677, %678
  %680 = load double* @tz1, align 8
  %681 = fadd double %679, %680
  %682 = fmul double %676, %681
  %683 = load double* %c1345, align 8
  %684 = fmul double %682, %683
  %685 = load double* %tmp1, align 8
  %686 = fmul double %684, %685
  %687 = fadd double 1.000000e+00, %686
  %688 = load double* @dt, align 8
  %689 = fmul double %688, 2.000000e+00
  %690 = load double* @tx1, align 8
  %691 = load double* @dx5, align 8
  %692 = fmul double %690, %691
  %693 = load double* @ty1, align 8
  %694 = load double* @dy5, align 8
  %695 = fmul double %693, %694
  %696 = fadd double %692, %695
  %697 = load double* @tz1, align 8
  %698 = load double* @dz5, align 8
  %699 = fmul double %697, %698
  %700 = fadd double %696, %699
  %701 = fmul double %689, %700
  %702 = fadd double %687, %701
  %703 = load i32* %i, align 4
  %704 = sext i32 %703 to i64
  %705 = load i32* %j, align 4
  %706 = sext i32 %705 to i64
  %707 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %706
  %708 = getelementptr inbounds [23 x [5 x [5 x double]]]* %707, i32 0, i64 %704
  %709 = getelementptr inbounds [5 x [5 x double]]* %708, i32 0, i64 4
  %710 = getelementptr inbounds [5 x double]* %709, i32 0, i64 4
  store double %702, double* %710, align 8
  %711 = load i32* %i, align 4
  %712 = sext i32 %711 to i64
  %713 = load i32* %j, align 4
  %714 = sext i32 %713 to i64
  %715 = load i32* %1, align 4
  %716 = sub nsw i32 %715, 1
  %717 = sext i32 %716 to i64
  %718 = getelementptr inbounds [22 x [23 x [23 x double]]]* @rho_i, i32 0, i64 %717
  %719 = getelementptr inbounds [23 x [23 x double]]* %718, i32 0, i64 %714
  %720 = getelementptr inbounds [23 x double]* %719, i32 0, i64 %712
  %721 = load double* %720, align 8
  store double %721, double* %tmp1, align 8
  %722 = load double* %tmp1, align 8
  %723 = load double* %tmp1, align 8
  %724 = fmul double %722, %723
  store double %724, double* %tmp2, align 8
  %725 = load double* %tmp1, align 8
  %726 = load double* %tmp2, align 8
  %727 = fmul double %725, %726
  store double %727, double* %tmp3, align 8
  %728 = load double* @dt, align 8
  %729 = fsub double -0.000000e+00, %728
  %730 = load double* @tz1, align 8
  %731 = fmul double %729, %730
  %732 = load double* @dz1, align 8
  %733 = fmul double %731, %732
  %734 = load i32* %i, align 4
  %735 = sext i32 %734 to i64
  %736 = load i32* %j, align 4
  %737 = sext i32 %736 to i64
  %738 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %737
  %739 = getelementptr inbounds [23 x [5 x [5 x double]]]* %738, i32 0, i64 %735
  %740 = getelementptr inbounds [5 x [5 x double]]* %739, i32 0, i64 0
  %741 = getelementptr inbounds [5 x double]* %740, i32 0, i64 0
  store double %733, double* %741, align 8
  %742 = load i32* %i, align 4
  %743 = sext i32 %742 to i64
  %744 = load i32* %j, align 4
  %745 = sext i32 %744 to i64
  %746 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %745
  %747 = getelementptr inbounds [23 x [5 x [5 x double]]]* %746, i32 0, i64 %743
  %748 = getelementptr inbounds [5 x [5 x double]]* %747, i32 0, i64 1
  %749 = getelementptr inbounds [5 x double]* %748, i32 0, i64 0
  store double 0.000000e+00, double* %749, align 8
  %750 = load i32* %i, align 4
  %751 = sext i32 %750 to i64
  %752 = load i32* %j, align 4
  %753 = sext i32 %752 to i64
  %754 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %753
  %755 = getelementptr inbounds [23 x [5 x [5 x double]]]* %754, i32 0, i64 %751
  %756 = getelementptr inbounds [5 x [5 x double]]* %755, i32 0, i64 2
  %757 = getelementptr inbounds [5 x double]* %756, i32 0, i64 0
  store double 0.000000e+00, double* %757, align 8
  %758 = load double* @dt, align 8
  %759 = fsub double -0.000000e+00, %758
  %760 = load double* @tz2, align 8
  %761 = fmul double %759, %760
  %762 = load i32* %i, align 4
  %763 = sext i32 %762 to i64
  %764 = load i32* %j, align 4
  %765 = sext i32 %764 to i64
  %766 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %765
  %767 = getelementptr inbounds [23 x [5 x [5 x double]]]* %766, i32 0, i64 %763
  %768 = getelementptr inbounds [5 x [5 x double]]* %767, i32 0, i64 3
  %769 = getelementptr inbounds [5 x double]* %768, i32 0, i64 0
  store double %761, double* %769, align 8
  %770 = load i32* %i, align 4
  %771 = sext i32 %770 to i64
  %772 = load i32* %j, align 4
  %773 = sext i32 %772 to i64
  %774 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %773
  %775 = getelementptr inbounds [23 x [5 x [5 x double]]]* %774, i32 0, i64 %771
  %776 = getelementptr inbounds [5 x [5 x double]]* %775, i32 0, i64 4
  %777 = getelementptr inbounds [5 x double]* %776, i32 0, i64 0
  store double 0.000000e+00, double* %777, align 8
  %778 = load double* @dt, align 8
  %779 = fsub double -0.000000e+00, %778
  %780 = load double* @tz2, align 8
  %781 = fmul double %779, %780
  %782 = load i32* %i, align 4
  %783 = sext i32 %782 to i64
  %784 = load i32* %j, align 4
  %785 = sext i32 %784 to i64
  %786 = load i32* %1, align 4
  %787 = sub nsw i32 %786, 1
  %788 = sext i32 %787 to i64
  %789 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %788
  %790 = getelementptr inbounds [23 x [23 x [5 x double]]]* %789, i32 0, i64 %785
  %791 = getelementptr inbounds [23 x [5 x double]]* %790, i32 0, i64 %783
  %792 = getelementptr inbounds [5 x double]* %791, i32 0, i64 1
  %793 = load double* %792, align 8
  %794 = load i32* %i, align 4
  %795 = sext i32 %794 to i64
  %796 = load i32* %j, align 4
  %797 = sext i32 %796 to i64
  %798 = load i32* %1, align 4
  %799 = sub nsw i32 %798, 1
  %800 = sext i32 %799 to i64
  %801 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %800
  %802 = getelementptr inbounds [23 x [23 x [5 x double]]]* %801, i32 0, i64 %797
  %803 = getelementptr inbounds [23 x [5 x double]]* %802, i32 0, i64 %795
  %804 = getelementptr inbounds [5 x double]* %803, i32 0, i64 3
  %805 = load double* %804, align 8
  %806 = fmul double %793, %805
  %807 = fsub double -0.000000e+00, %806
  %808 = load double* %tmp2, align 8
  %809 = fmul double %807, %808
  %810 = fmul double %781, %809
  %811 = load double* @dt, align 8
  %812 = load double* @tz1, align 8
  %813 = fmul double %811, %812
  %814 = load double* %c34, align 8
  %815 = fsub double -0.000000e+00, %814
  %816 = load double* %tmp2, align 8
  %817 = fmul double %815, %816
  %818 = load i32* %i, align 4
  %819 = sext i32 %818 to i64
  %820 = load i32* %j, align 4
  %821 = sext i32 %820 to i64
  %822 = load i32* %1, align 4
  %823 = sub nsw i32 %822, 1
  %824 = sext i32 %823 to i64
  %825 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %824
  %826 = getelementptr inbounds [23 x [23 x [5 x double]]]* %825, i32 0, i64 %821
  %827 = getelementptr inbounds [23 x [5 x double]]* %826, i32 0, i64 %819
  %828 = getelementptr inbounds [5 x double]* %827, i32 0, i64 1
  %829 = load double* %828, align 8
  %830 = fmul double %817, %829
  %831 = fmul double %813, %830
  %832 = fsub double %810, %831
  %833 = load i32* %i, align 4
  %834 = sext i32 %833 to i64
  %835 = load i32* %j, align 4
  %836 = sext i32 %835 to i64
  %837 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %836
  %838 = getelementptr inbounds [23 x [5 x [5 x double]]]* %837, i32 0, i64 %834
  %839 = getelementptr inbounds [5 x [5 x double]]* %838, i32 0, i64 0
  %840 = getelementptr inbounds [5 x double]* %839, i32 0, i64 1
  store double %832, double* %840, align 8
  %841 = load double* @dt, align 8
  %842 = fsub double -0.000000e+00, %841
  %843 = load double* @tz2, align 8
  %844 = fmul double %842, %843
  %845 = load i32* %i, align 4
  %846 = sext i32 %845 to i64
  %847 = load i32* %j, align 4
  %848 = sext i32 %847 to i64
  %849 = load i32* %1, align 4
  %850 = sub nsw i32 %849, 1
  %851 = sext i32 %850 to i64
  %852 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %851
  %853 = getelementptr inbounds [23 x [23 x [5 x double]]]* %852, i32 0, i64 %848
  %854 = getelementptr inbounds [23 x [5 x double]]* %853, i32 0, i64 %846
  %855 = getelementptr inbounds [5 x double]* %854, i32 0, i64 3
  %856 = load double* %855, align 8
  %857 = load double* %tmp1, align 8
  %858 = fmul double %856, %857
  %859 = fmul double %844, %858
  %860 = load double* @dt, align 8
  %861 = load double* @tz1, align 8
  %862 = fmul double %860, %861
  %863 = load double* %c34, align 8
  %864 = fmul double %862, %863
  %865 = load double* %tmp1, align 8
  %866 = fmul double %864, %865
  %867 = fsub double %859, %866
  %868 = load double* @dt, align 8
  %869 = load double* @tz1, align 8
  %870 = fmul double %868, %869
  %871 = load double* @dz2, align 8
  %872 = fmul double %870, %871
  %873 = fsub double %867, %872
  %874 = load i32* %i, align 4
  %875 = sext i32 %874 to i64
  %876 = load i32* %j, align 4
  %877 = sext i32 %876 to i64
  %878 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %877
  %879 = getelementptr inbounds [23 x [5 x [5 x double]]]* %878, i32 0, i64 %875
  %880 = getelementptr inbounds [5 x [5 x double]]* %879, i32 0, i64 1
  %881 = getelementptr inbounds [5 x double]* %880, i32 0, i64 1
  store double %873, double* %881, align 8
  %882 = load i32* %i, align 4
  %883 = sext i32 %882 to i64
  %884 = load i32* %j, align 4
  %885 = sext i32 %884 to i64
  %886 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %885
  %887 = getelementptr inbounds [23 x [5 x [5 x double]]]* %886, i32 0, i64 %883
  %888 = getelementptr inbounds [5 x [5 x double]]* %887, i32 0, i64 2
  %889 = getelementptr inbounds [5 x double]* %888, i32 0, i64 1
  store double 0.000000e+00, double* %889, align 8
  %890 = load double* @dt, align 8
  %891 = fsub double -0.000000e+00, %890
  %892 = load double* @tz2, align 8
  %893 = fmul double %891, %892
  %894 = load i32* %i, align 4
  %895 = sext i32 %894 to i64
  %896 = load i32* %j, align 4
  %897 = sext i32 %896 to i64
  %898 = load i32* %1, align 4
  %899 = sub nsw i32 %898, 1
  %900 = sext i32 %899 to i64
  %901 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %900
  %902 = getelementptr inbounds [23 x [23 x [5 x double]]]* %901, i32 0, i64 %897
  %903 = getelementptr inbounds [23 x [5 x double]]* %902, i32 0, i64 %895
  %904 = getelementptr inbounds [5 x double]* %903, i32 0, i64 1
  %905 = load double* %904, align 8
  %906 = load double* %tmp1, align 8
  %907 = fmul double %905, %906
  %908 = fmul double %893, %907
  %909 = load i32* %i, align 4
  %910 = sext i32 %909 to i64
  %911 = load i32* %j, align 4
  %912 = sext i32 %911 to i64
  %913 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %912
  %914 = getelementptr inbounds [23 x [5 x [5 x double]]]* %913, i32 0, i64 %910
  %915 = getelementptr inbounds [5 x [5 x double]]* %914, i32 0, i64 3
  %916 = getelementptr inbounds [5 x double]* %915, i32 0, i64 1
  store double %908, double* %916, align 8
  %917 = load i32* %i, align 4
  %918 = sext i32 %917 to i64
  %919 = load i32* %j, align 4
  %920 = sext i32 %919 to i64
  %921 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %920
  %922 = getelementptr inbounds [23 x [5 x [5 x double]]]* %921, i32 0, i64 %918
  %923 = getelementptr inbounds [5 x [5 x double]]* %922, i32 0, i64 4
  %924 = getelementptr inbounds [5 x double]* %923, i32 0, i64 1
  store double 0.000000e+00, double* %924, align 8
  %925 = load double* @dt, align 8
  %926 = fsub double -0.000000e+00, %925
  %927 = load double* @tz2, align 8
  %928 = fmul double %926, %927
  %929 = load i32* %i, align 4
  %930 = sext i32 %929 to i64
  %931 = load i32* %j, align 4
  %932 = sext i32 %931 to i64
  %933 = load i32* %1, align 4
  %934 = sub nsw i32 %933, 1
  %935 = sext i32 %934 to i64
  %936 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %935
  %937 = getelementptr inbounds [23 x [23 x [5 x double]]]* %936, i32 0, i64 %932
  %938 = getelementptr inbounds [23 x [5 x double]]* %937, i32 0, i64 %930
  %939 = getelementptr inbounds [5 x double]* %938, i32 0, i64 2
  %940 = load double* %939, align 8
  %941 = load i32* %i, align 4
  %942 = sext i32 %941 to i64
  %943 = load i32* %j, align 4
  %944 = sext i32 %943 to i64
  %945 = load i32* %1, align 4
  %946 = sub nsw i32 %945, 1
  %947 = sext i32 %946 to i64
  %948 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %947
  %949 = getelementptr inbounds [23 x [23 x [5 x double]]]* %948, i32 0, i64 %944
  %950 = getelementptr inbounds [23 x [5 x double]]* %949, i32 0, i64 %942
  %951 = getelementptr inbounds [5 x double]* %950, i32 0, i64 3
  %952 = load double* %951, align 8
  %953 = fmul double %940, %952
  %954 = fsub double -0.000000e+00, %953
  %955 = load double* %tmp2, align 8
  %956 = fmul double %954, %955
  %957 = fmul double %928, %956
  %958 = load double* @dt, align 8
  %959 = load double* @tz1, align 8
  %960 = fmul double %958, %959
  %961 = load double* %c34, align 8
  %962 = fsub double -0.000000e+00, %961
  %963 = load double* %tmp2, align 8
  %964 = fmul double %962, %963
  %965 = load i32* %i, align 4
  %966 = sext i32 %965 to i64
  %967 = load i32* %j, align 4
  %968 = sext i32 %967 to i64
  %969 = load i32* %1, align 4
  %970 = sub nsw i32 %969, 1
  %971 = sext i32 %970 to i64
  %972 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %971
  %973 = getelementptr inbounds [23 x [23 x [5 x double]]]* %972, i32 0, i64 %968
  %974 = getelementptr inbounds [23 x [5 x double]]* %973, i32 0, i64 %966
  %975 = getelementptr inbounds [5 x double]* %974, i32 0, i64 2
  %976 = load double* %975, align 8
  %977 = fmul double %964, %976
  %978 = fmul double %960, %977
  %979 = fsub double %957, %978
  %980 = load i32* %i, align 4
  %981 = sext i32 %980 to i64
  %982 = load i32* %j, align 4
  %983 = sext i32 %982 to i64
  %984 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %983
  %985 = getelementptr inbounds [23 x [5 x [5 x double]]]* %984, i32 0, i64 %981
  %986 = getelementptr inbounds [5 x [5 x double]]* %985, i32 0, i64 0
  %987 = getelementptr inbounds [5 x double]* %986, i32 0, i64 2
  store double %979, double* %987, align 8
  %988 = load i32* %i, align 4
  %989 = sext i32 %988 to i64
  %990 = load i32* %j, align 4
  %991 = sext i32 %990 to i64
  %992 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %991
  %993 = getelementptr inbounds [23 x [5 x [5 x double]]]* %992, i32 0, i64 %989
  %994 = getelementptr inbounds [5 x [5 x double]]* %993, i32 0, i64 1
  %995 = getelementptr inbounds [5 x double]* %994, i32 0, i64 2
  store double 0.000000e+00, double* %995, align 8
  %996 = load double* @dt, align 8
  %997 = fsub double -0.000000e+00, %996
  %998 = load double* @tz2, align 8
  %999 = fmul double %997, %998
  %1000 = load i32* %i, align 4
  %1001 = sext i32 %1000 to i64
  %1002 = load i32* %j, align 4
  %1003 = sext i32 %1002 to i64
  %1004 = load i32* %1, align 4
  %1005 = sub nsw i32 %1004, 1
  %1006 = sext i32 %1005 to i64
  %1007 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1006
  %1008 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1007, i32 0, i64 %1003
  %1009 = getelementptr inbounds [23 x [5 x double]]* %1008, i32 0, i64 %1001
  %1010 = getelementptr inbounds [5 x double]* %1009, i32 0, i64 3
  %1011 = load double* %1010, align 8
  %1012 = load double* %tmp1, align 8
  %1013 = fmul double %1011, %1012
  %1014 = fmul double %999, %1013
  %1015 = load double* @dt, align 8
  %1016 = load double* @tz1, align 8
  %1017 = fmul double %1015, %1016
  %1018 = load double* %c34, align 8
  %1019 = load double* %tmp1, align 8
  %1020 = fmul double %1018, %1019
  %1021 = fmul double %1017, %1020
  %1022 = fsub double %1014, %1021
  %1023 = load double* @dt, align 8
  %1024 = load double* @tz1, align 8
  %1025 = fmul double %1023, %1024
  %1026 = load double* @dz3, align 8
  %1027 = fmul double %1025, %1026
  %1028 = fsub double %1022, %1027
  %1029 = load i32* %i, align 4
  %1030 = sext i32 %1029 to i64
  %1031 = load i32* %j, align 4
  %1032 = sext i32 %1031 to i64
  %1033 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %1032
  %1034 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1033, i32 0, i64 %1030
  %1035 = getelementptr inbounds [5 x [5 x double]]* %1034, i32 0, i64 2
  %1036 = getelementptr inbounds [5 x double]* %1035, i32 0, i64 2
  store double %1028, double* %1036, align 8
  %1037 = load double* @dt, align 8
  %1038 = fsub double -0.000000e+00, %1037
  %1039 = load double* @tz2, align 8
  %1040 = fmul double %1038, %1039
  %1041 = load i32* %i, align 4
  %1042 = sext i32 %1041 to i64
  %1043 = load i32* %j, align 4
  %1044 = sext i32 %1043 to i64
  %1045 = load i32* %1, align 4
  %1046 = sub nsw i32 %1045, 1
  %1047 = sext i32 %1046 to i64
  %1048 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1047
  %1049 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1048, i32 0, i64 %1044
  %1050 = getelementptr inbounds [23 x [5 x double]]* %1049, i32 0, i64 %1042
  %1051 = getelementptr inbounds [5 x double]* %1050, i32 0, i64 2
  %1052 = load double* %1051, align 8
  %1053 = load double* %tmp1, align 8
  %1054 = fmul double %1052, %1053
  %1055 = fmul double %1040, %1054
  %1056 = load i32* %i, align 4
  %1057 = sext i32 %1056 to i64
  %1058 = load i32* %j, align 4
  %1059 = sext i32 %1058 to i64
  %1060 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %1059
  %1061 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1060, i32 0, i64 %1057
  %1062 = getelementptr inbounds [5 x [5 x double]]* %1061, i32 0, i64 3
  %1063 = getelementptr inbounds [5 x double]* %1062, i32 0, i64 2
  store double %1055, double* %1063, align 8
  %1064 = load i32* %i, align 4
  %1065 = sext i32 %1064 to i64
  %1066 = load i32* %j, align 4
  %1067 = sext i32 %1066 to i64
  %1068 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %1067
  %1069 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1068, i32 0, i64 %1065
  %1070 = getelementptr inbounds [5 x [5 x double]]* %1069, i32 0, i64 4
  %1071 = getelementptr inbounds [5 x double]* %1070, i32 0, i64 2
  store double 0.000000e+00, double* %1071, align 8
  %1072 = load double* @dt, align 8
  %1073 = fsub double -0.000000e+00, %1072
  %1074 = load double* @tz2, align 8
  %1075 = fmul double %1073, %1074
  %1076 = load i32* %i, align 4
  %1077 = sext i32 %1076 to i64
  %1078 = load i32* %j, align 4
  %1079 = sext i32 %1078 to i64
  %1080 = load i32* %1, align 4
  %1081 = sub nsw i32 %1080, 1
  %1082 = sext i32 %1081 to i64
  %1083 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1082
  %1084 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1083, i32 0, i64 %1079
  %1085 = getelementptr inbounds [23 x [5 x double]]* %1084, i32 0, i64 %1077
  %1086 = getelementptr inbounds [5 x double]* %1085, i32 0, i64 3
  %1087 = load double* %1086, align 8
  %1088 = load double* %tmp1, align 8
  %1089 = fmul double %1087, %1088
  %1090 = fsub double -0.000000e+00, %1089
  %1091 = load i32* %i, align 4
  %1092 = sext i32 %1091 to i64
  %1093 = load i32* %j, align 4
  %1094 = sext i32 %1093 to i64
  %1095 = load i32* %1, align 4
  %1096 = sub nsw i32 %1095, 1
  %1097 = sext i32 %1096 to i64
  %1098 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1097
  %1099 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1098, i32 0, i64 %1094
  %1100 = getelementptr inbounds [23 x [5 x double]]* %1099, i32 0, i64 %1092
  %1101 = getelementptr inbounds [5 x double]* %1100, i32 0, i64 3
  %1102 = load double* %1101, align 8
  %1103 = load double* %tmp1, align 8
  %1104 = fmul double %1102, %1103
  %1105 = fmul double %1090, %1104
  %1106 = load i32* %i, align 4
  %1107 = sext i32 %1106 to i64
  %1108 = load i32* %j, align 4
  %1109 = sext i32 %1108 to i64
  %1110 = load i32* %1, align 4
  %1111 = sub nsw i32 %1110, 1
  %1112 = sext i32 %1111 to i64
  %1113 = getelementptr inbounds [22 x [23 x [23 x double]]]* @qs, i32 0, i64 %1112
  %1114 = getelementptr inbounds [23 x [23 x double]]* %1113, i32 0, i64 %1109
  %1115 = getelementptr inbounds [23 x double]* %1114, i32 0, i64 %1107
  %1116 = load double* %1115, align 8
  %1117 = fmul double 4.000000e-01, %1116
  %1118 = load double* %tmp1, align 8
  %1119 = fmul double %1117, %1118
  %1120 = fadd double %1105, %1119
  %1121 = fmul double %1075, %1120
  %1122 = load double* @dt, align 8
  %1123 = load double* @tz1, align 8
  %1124 = fmul double %1122, %1123
  %1125 = load double* %r43, align 8
  %1126 = fsub double -0.000000e+00, %1125
  %1127 = load double* %c34, align 8
  %1128 = fmul double %1126, %1127
  %1129 = load double* %tmp2, align 8
  %1130 = fmul double %1128, %1129
  %1131 = load i32* %i, align 4
  %1132 = sext i32 %1131 to i64
  %1133 = load i32* %j, align 4
  %1134 = sext i32 %1133 to i64
  %1135 = load i32* %1, align 4
  %1136 = sub nsw i32 %1135, 1
  %1137 = sext i32 %1136 to i64
  %1138 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1137
  %1139 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1138, i32 0, i64 %1134
  %1140 = getelementptr inbounds [23 x [5 x double]]* %1139, i32 0, i64 %1132
  %1141 = getelementptr inbounds [5 x double]* %1140, i32 0, i64 3
  %1142 = load double* %1141, align 8
  %1143 = fmul double %1130, %1142
  %1144 = fmul double %1124, %1143
  %1145 = fsub double %1121, %1144
  %1146 = load i32* %i, align 4
  %1147 = sext i32 %1146 to i64
  %1148 = load i32* %j, align 4
  %1149 = sext i32 %1148 to i64
  %1150 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %1149
  %1151 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1150, i32 0, i64 %1147
  %1152 = getelementptr inbounds [5 x [5 x double]]* %1151, i32 0, i64 0
  %1153 = getelementptr inbounds [5 x double]* %1152, i32 0, i64 3
  store double %1145, double* %1153, align 8
  %1154 = load double* @dt, align 8
  %1155 = fsub double -0.000000e+00, %1154
  %1156 = load double* @tz2, align 8
  %1157 = fmul double %1155, %1156
  %1158 = load i32* %i, align 4
  %1159 = sext i32 %1158 to i64
  %1160 = load i32* %j, align 4
  %1161 = sext i32 %1160 to i64
  %1162 = load i32* %1, align 4
  %1163 = sub nsw i32 %1162, 1
  %1164 = sext i32 %1163 to i64
  %1165 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1164
  %1166 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1165, i32 0, i64 %1161
  %1167 = getelementptr inbounds [23 x [5 x double]]* %1166, i32 0, i64 %1159
  %1168 = getelementptr inbounds [5 x double]* %1167, i32 0, i64 1
  %1169 = load double* %1168, align 8
  %1170 = load double* %tmp1, align 8
  %1171 = fmul double %1169, %1170
  %1172 = fmul double -4.000000e-01, %1171
  %1173 = fmul double %1157, %1172
  %1174 = load i32* %i, align 4
  %1175 = sext i32 %1174 to i64
  %1176 = load i32* %j, align 4
  %1177 = sext i32 %1176 to i64
  %1178 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %1177
  %1179 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1178, i32 0, i64 %1175
  %1180 = getelementptr inbounds [5 x [5 x double]]* %1179, i32 0, i64 1
  %1181 = getelementptr inbounds [5 x double]* %1180, i32 0, i64 3
  store double %1173, double* %1181, align 8
  %1182 = load double* @dt, align 8
  %1183 = fsub double -0.000000e+00, %1182
  %1184 = load double* @tz2, align 8
  %1185 = fmul double %1183, %1184
  %1186 = load i32* %i, align 4
  %1187 = sext i32 %1186 to i64
  %1188 = load i32* %j, align 4
  %1189 = sext i32 %1188 to i64
  %1190 = load i32* %1, align 4
  %1191 = sub nsw i32 %1190, 1
  %1192 = sext i32 %1191 to i64
  %1193 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1192
  %1194 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1193, i32 0, i64 %1189
  %1195 = getelementptr inbounds [23 x [5 x double]]* %1194, i32 0, i64 %1187
  %1196 = getelementptr inbounds [5 x double]* %1195, i32 0, i64 2
  %1197 = load double* %1196, align 8
  %1198 = load double* %tmp1, align 8
  %1199 = fmul double %1197, %1198
  %1200 = fmul double -4.000000e-01, %1199
  %1201 = fmul double %1185, %1200
  %1202 = load i32* %i, align 4
  %1203 = sext i32 %1202 to i64
  %1204 = load i32* %j, align 4
  %1205 = sext i32 %1204 to i64
  %1206 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %1205
  %1207 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1206, i32 0, i64 %1203
  %1208 = getelementptr inbounds [5 x [5 x double]]* %1207, i32 0, i64 2
  %1209 = getelementptr inbounds [5 x double]* %1208, i32 0, i64 3
  store double %1201, double* %1209, align 8
  %1210 = load double* @dt, align 8
  %1211 = fsub double -0.000000e+00, %1210
  %1212 = load double* @tz2, align 8
  %1213 = fmul double %1211, %1212
  %1214 = fmul double %1213, 1.600000e+00
  %1215 = load i32* %i, align 4
  %1216 = sext i32 %1215 to i64
  %1217 = load i32* %j, align 4
  %1218 = sext i32 %1217 to i64
  %1219 = load i32* %1, align 4
  %1220 = sub nsw i32 %1219, 1
  %1221 = sext i32 %1220 to i64
  %1222 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1221
  %1223 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1222, i32 0, i64 %1218
  %1224 = getelementptr inbounds [23 x [5 x double]]* %1223, i32 0, i64 %1216
  %1225 = getelementptr inbounds [5 x double]* %1224, i32 0, i64 3
  %1226 = load double* %1225, align 8
  %1227 = load double* %tmp1, align 8
  %1228 = fmul double %1226, %1227
  %1229 = fmul double %1214, %1228
  %1230 = load double* @dt, align 8
  %1231 = load double* @tz1, align 8
  %1232 = fmul double %1230, %1231
  %1233 = load double* %r43, align 8
  %1234 = load double* %c34, align 8
  %1235 = fmul double %1233, %1234
  %1236 = load double* %tmp1, align 8
  %1237 = fmul double %1235, %1236
  %1238 = fmul double %1232, %1237
  %1239 = fsub double %1229, %1238
  %1240 = load double* @dt, align 8
  %1241 = load double* @tz1, align 8
  %1242 = fmul double %1240, %1241
  %1243 = load double* @dz4, align 8
  %1244 = fmul double %1242, %1243
  %1245 = fsub double %1239, %1244
  %1246 = load i32* %i, align 4
  %1247 = sext i32 %1246 to i64
  %1248 = load i32* %j, align 4
  %1249 = sext i32 %1248 to i64
  %1250 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %1249
  %1251 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1250, i32 0, i64 %1247
  %1252 = getelementptr inbounds [5 x [5 x double]]* %1251, i32 0, i64 3
  %1253 = getelementptr inbounds [5 x double]* %1252, i32 0, i64 3
  store double %1245, double* %1253, align 8
  %1254 = load double* @dt, align 8
  %1255 = fsub double -0.000000e+00, %1254
  %1256 = load double* @tz2, align 8
  %1257 = fmul double %1255, %1256
  %1258 = fmul double %1257, 4.000000e-01
  %1259 = load i32* %i, align 4
  %1260 = sext i32 %1259 to i64
  %1261 = load i32* %j, align 4
  %1262 = sext i32 %1261 to i64
  %1263 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %1262
  %1264 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1263, i32 0, i64 %1260
  %1265 = getelementptr inbounds [5 x [5 x double]]* %1264, i32 0, i64 4
  %1266 = getelementptr inbounds [5 x double]* %1265, i32 0, i64 3
  store double %1258, double* %1266, align 8
  %1267 = load double* @dt, align 8
  %1268 = fsub double -0.000000e+00, %1267
  %1269 = load double* @tz2, align 8
  %1270 = fmul double %1268, %1269
  %1271 = load i32* %i, align 4
  %1272 = sext i32 %1271 to i64
  %1273 = load i32* %j, align 4
  %1274 = sext i32 %1273 to i64
  %1275 = load i32* %1, align 4
  %1276 = sub nsw i32 %1275, 1
  %1277 = sext i32 %1276 to i64
  %1278 = getelementptr inbounds [22 x [23 x [23 x double]]]* @qs, i32 0, i64 %1277
  %1279 = getelementptr inbounds [23 x [23 x double]]* %1278, i32 0, i64 %1274
  %1280 = getelementptr inbounds [23 x double]* %1279, i32 0, i64 %1272
  %1281 = load double* %1280, align 8
  %1282 = fmul double 8.000000e-01, %1281
  %1283 = load i32* %i, align 4
  %1284 = sext i32 %1283 to i64
  %1285 = load i32* %j, align 4
  %1286 = sext i32 %1285 to i64
  %1287 = load i32* %1, align 4
  %1288 = sub nsw i32 %1287, 1
  %1289 = sext i32 %1288 to i64
  %1290 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1289
  %1291 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1290, i32 0, i64 %1286
  %1292 = getelementptr inbounds [23 x [5 x double]]* %1291, i32 0, i64 %1284
  %1293 = getelementptr inbounds [5 x double]* %1292, i32 0, i64 4
  %1294 = load double* %1293, align 8
  %1295 = fmul double 1.400000e+00, %1294
  %1296 = fsub double %1282, %1295
  %1297 = load i32* %i, align 4
  %1298 = sext i32 %1297 to i64
  %1299 = load i32* %j, align 4
  %1300 = sext i32 %1299 to i64
  %1301 = load i32* %1, align 4
  %1302 = sub nsw i32 %1301, 1
  %1303 = sext i32 %1302 to i64
  %1304 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1303
  %1305 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1304, i32 0, i64 %1300
  %1306 = getelementptr inbounds [23 x [5 x double]]* %1305, i32 0, i64 %1298
  %1307 = getelementptr inbounds [5 x double]* %1306, i32 0, i64 3
  %1308 = load double* %1307, align 8
  %1309 = fmul double %1296, %1308
  %1310 = load double* %tmp2, align 8
  %1311 = fmul double %1309, %1310
  %1312 = fmul double %1270, %1311
  %1313 = load double* @dt, align 8
  %1314 = load double* @tz1, align 8
  %1315 = fmul double %1313, %1314
  %1316 = load double* %c34, align 8
  %1317 = load double* %c1345, align 8
  %1318 = fsub double %1316, %1317
  %1319 = fsub double -0.000000e+00, %1318
  %1320 = load double* %tmp3, align 8
  %1321 = fmul double %1319, %1320
  %1322 = load i32* %i, align 4
  %1323 = sext i32 %1322 to i64
  %1324 = load i32* %j, align 4
  %1325 = sext i32 %1324 to i64
  %1326 = load i32* %1, align 4
  %1327 = sub nsw i32 %1326, 1
  %1328 = sext i32 %1327 to i64
  %1329 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1328
  %1330 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1329, i32 0, i64 %1325
  %1331 = getelementptr inbounds [23 x [5 x double]]* %1330, i32 0, i64 %1323
  %1332 = getelementptr inbounds [5 x double]* %1331, i32 0, i64 1
  %1333 = load double* %1332, align 8
  %1334 = load i32* %i, align 4
  %1335 = sext i32 %1334 to i64
  %1336 = load i32* %j, align 4
  %1337 = sext i32 %1336 to i64
  %1338 = load i32* %1, align 4
  %1339 = sub nsw i32 %1338, 1
  %1340 = sext i32 %1339 to i64
  %1341 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1340
  %1342 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1341, i32 0, i64 %1337
  %1343 = getelementptr inbounds [23 x [5 x double]]* %1342, i32 0, i64 %1335
  %1344 = getelementptr inbounds [5 x double]* %1343, i32 0, i64 1
  %1345 = load double* %1344, align 8
  %1346 = fmul double %1333, %1345
  %1347 = fmul double %1321, %1346
  %1348 = load double* %c34, align 8
  %1349 = load double* %c1345, align 8
  %1350 = fsub double %1348, %1349
  %1351 = load double* %tmp3, align 8
  %1352 = fmul double %1350, %1351
  %1353 = load i32* %i, align 4
  %1354 = sext i32 %1353 to i64
  %1355 = load i32* %j, align 4
  %1356 = sext i32 %1355 to i64
  %1357 = load i32* %1, align 4
  %1358 = sub nsw i32 %1357, 1
  %1359 = sext i32 %1358 to i64
  %1360 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1359
  %1361 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1360, i32 0, i64 %1356
  %1362 = getelementptr inbounds [23 x [5 x double]]* %1361, i32 0, i64 %1354
  %1363 = getelementptr inbounds [5 x double]* %1362, i32 0, i64 2
  %1364 = load double* %1363, align 8
  %1365 = load i32* %i, align 4
  %1366 = sext i32 %1365 to i64
  %1367 = load i32* %j, align 4
  %1368 = sext i32 %1367 to i64
  %1369 = load i32* %1, align 4
  %1370 = sub nsw i32 %1369, 1
  %1371 = sext i32 %1370 to i64
  %1372 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1371
  %1373 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1372, i32 0, i64 %1368
  %1374 = getelementptr inbounds [23 x [5 x double]]* %1373, i32 0, i64 %1366
  %1375 = getelementptr inbounds [5 x double]* %1374, i32 0, i64 2
  %1376 = load double* %1375, align 8
  %1377 = fmul double %1364, %1376
  %1378 = fmul double %1352, %1377
  %1379 = fsub double %1347, %1378
  %1380 = load double* %r43, align 8
  %1381 = load double* %c34, align 8
  %1382 = fmul double %1380, %1381
  %1383 = load double* %c1345, align 8
  %1384 = fsub double %1382, %1383
  %1385 = load double* %tmp3, align 8
  %1386 = fmul double %1384, %1385
  %1387 = load i32* %i, align 4
  %1388 = sext i32 %1387 to i64
  %1389 = load i32* %j, align 4
  %1390 = sext i32 %1389 to i64
  %1391 = load i32* %1, align 4
  %1392 = sub nsw i32 %1391, 1
  %1393 = sext i32 %1392 to i64
  %1394 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1393
  %1395 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1394, i32 0, i64 %1390
  %1396 = getelementptr inbounds [23 x [5 x double]]* %1395, i32 0, i64 %1388
  %1397 = getelementptr inbounds [5 x double]* %1396, i32 0, i64 3
  %1398 = load double* %1397, align 8
  %1399 = load i32* %i, align 4
  %1400 = sext i32 %1399 to i64
  %1401 = load i32* %j, align 4
  %1402 = sext i32 %1401 to i64
  %1403 = load i32* %1, align 4
  %1404 = sub nsw i32 %1403, 1
  %1405 = sext i32 %1404 to i64
  %1406 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1405
  %1407 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1406, i32 0, i64 %1402
  %1408 = getelementptr inbounds [23 x [5 x double]]* %1407, i32 0, i64 %1400
  %1409 = getelementptr inbounds [5 x double]* %1408, i32 0, i64 3
  %1410 = load double* %1409, align 8
  %1411 = fmul double %1398, %1410
  %1412 = fmul double %1386, %1411
  %1413 = fsub double %1379, %1412
  %1414 = load double* %c1345, align 8
  %1415 = load double* %tmp2, align 8
  %1416 = fmul double %1414, %1415
  %1417 = load i32* %i, align 4
  %1418 = sext i32 %1417 to i64
  %1419 = load i32* %j, align 4
  %1420 = sext i32 %1419 to i64
  %1421 = load i32* %1, align 4
  %1422 = sub nsw i32 %1421, 1
  %1423 = sext i32 %1422 to i64
  %1424 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1423
  %1425 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1424, i32 0, i64 %1420
  %1426 = getelementptr inbounds [23 x [5 x double]]* %1425, i32 0, i64 %1418
  %1427 = getelementptr inbounds [5 x double]* %1426, i32 0, i64 4
  %1428 = load double* %1427, align 8
  %1429 = fmul double %1416, %1428
  %1430 = fsub double %1413, %1429
  %1431 = fmul double %1315, %1430
  %1432 = fsub double %1312, %1431
  %1433 = load i32* %i, align 4
  %1434 = sext i32 %1433 to i64
  %1435 = load i32* %j, align 4
  %1436 = sext i32 %1435 to i64
  %1437 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %1436
  %1438 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1437, i32 0, i64 %1434
  %1439 = getelementptr inbounds [5 x [5 x double]]* %1438, i32 0, i64 0
  %1440 = getelementptr inbounds [5 x double]* %1439, i32 0, i64 4
  store double %1432, double* %1440, align 8
  %1441 = load double* @dt, align 8
  %1442 = fsub double -0.000000e+00, %1441
  %1443 = load double* @tz2, align 8
  %1444 = fmul double %1442, %1443
  %1445 = load i32* %i, align 4
  %1446 = sext i32 %1445 to i64
  %1447 = load i32* %j, align 4
  %1448 = sext i32 %1447 to i64
  %1449 = load i32* %1, align 4
  %1450 = sub nsw i32 %1449, 1
  %1451 = sext i32 %1450 to i64
  %1452 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1451
  %1453 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1452, i32 0, i64 %1448
  %1454 = getelementptr inbounds [23 x [5 x double]]* %1453, i32 0, i64 %1446
  %1455 = getelementptr inbounds [5 x double]* %1454, i32 0, i64 1
  %1456 = load double* %1455, align 8
  %1457 = load i32* %i, align 4
  %1458 = sext i32 %1457 to i64
  %1459 = load i32* %j, align 4
  %1460 = sext i32 %1459 to i64
  %1461 = load i32* %1, align 4
  %1462 = sub nsw i32 %1461, 1
  %1463 = sext i32 %1462 to i64
  %1464 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1463
  %1465 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1464, i32 0, i64 %1460
  %1466 = getelementptr inbounds [23 x [5 x double]]* %1465, i32 0, i64 %1458
  %1467 = getelementptr inbounds [5 x double]* %1466, i32 0, i64 3
  %1468 = load double* %1467, align 8
  %1469 = fmul double %1456, %1468
  %1470 = fmul double -4.000000e-01, %1469
  %1471 = load double* %tmp2, align 8
  %1472 = fmul double %1470, %1471
  %1473 = fmul double %1444, %1472
  %1474 = load double* @dt, align 8
  %1475 = load double* @tz1, align 8
  %1476 = fmul double %1474, %1475
  %1477 = load double* %c34, align 8
  %1478 = load double* %c1345, align 8
  %1479 = fsub double %1477, %1478
  %1480 = fmul double %1476, %1479
  %1481 = load double* %tmp2, align 8
  %1482 = fmul double %1480, %1481
  %1483 = load i32* %i, align 4
  %1484 = sext i32 %1483 to i64
  %1485 = load i32* %j, align 4
  %1486 = sext i32 %1485 to i64
  %1487 = load i32* %1, align 4
  %1488 = sub nsw i32 %1487, 1
  %1489 = sext i32 %1488 to i64
  %1490 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1489
  %1491 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1490, i32 0, i64 %1486
  %1492 = getelementptr inbounds [23 x [5 x double]]* %1491, i32 0, i64 %1484
  %1493 = getelementptr inbounds [5 x double]* %1492, i32 0, i64 1
  %1494 = load double* %1493, align 8
  %1495 = fmul double %1482, %1494
  %1496 = fsub double %1473, %1495
  %1497 = load i32* %i, align 4
  %1498 = sext i32 %1497 to i64
  %1499 = load i32* %j, align 4
  %1500 = sext i32 %1499 to i64
  %1501 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %1500
  %1502 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1501, i32 0, i64 %1498
  %1503 = getelementptr inbounds [5 x [5 x double]]* %1502, i32 0, i64 1
  %1504 = getelementptr inbounds [5 x double]* %1503, i32 0, i64 4
  store double %1496, double* %1504, align 8
  %1505 = load double* @dt, align 8
  %1506 = fsub double -0.000000e+00, %1505
  %1507 = load double* @tz2, align 8
  %1508 = fmul double %1506, %1507
  %1509 = load i32* %i, align 4
  %1510 = sext i32 %1509 to i64
  %1511 = load i32* %j, align 4
  %1512 = sext i32 %1511 to i64
  %1513 = load i32* %1, align 4
  %1514 = sub nsw i32 %1513, 1
  %1515 = sext i32 %1514 to i64
  %1516 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1515
  %1517 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1516, i32 0, i64 %1512
  %1518 = getelementptr inbounds [23 x [5 x double]]* %1517, i32 0, i64 %1510
  %1519 = getelementptr inbounds [5 x double]* %1518, i32 0, i64 2
  %1520 = load double* %1519, align 8
  %1521 = load i32* %i, align 4
  %1522 = sext i32 %1521 to i64
  %1523 = load i32* %j, align 4
  %1524 = sext i32 %1523 to i64
  %1525 = load i32* %1, align 4
  %1526 = sub nsw i32 %1525, 1
  %1527 = sext i32 %1526 to i64
  %1528 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1527
  %1529 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1528, i32 0, i64 %1524
  %1530 = getelementptr inbounds [23 x [5 x double]]* %1529, i32 0, i64 %1522
  %1531 = getelementptr inbounds [5 x double]* %1530, i32 0, i64 3
  %1532 = load double* %1531, align 8
  %1533 = fmul double %1520, %1532
  %1534 = fmul double -4.000000e-01, %1533
  %1535 = load double* %tmp2, align 8
  %1536 = fmul double %1534, %1535
  %1537 = fmul double %1508, %1536
  %1538 = load double* @dt, align 8
  %1539 = load double* @tz1, align 8
  %1540 = fmul double %1538, %1539
  %1541 = load double* %c34, align 8
  %1542 = load double* %c1345, align 8
  %1543 = fsub double %1541, %1542
  %1544 = fmul double %1540, %1543
  %1545 = load double* %tmp2, align 8
  %1546 = fmul double %1544, %1545
  %1547 = load i32* %i, align 4
  %1548 = sext i32 %1547 to i64
  %1549 = load i32* %j, align 4
  %1550 = sext i32 %1549 to i64
  %1551 = load i32* %1, align 4
  %1552 = sub nsw i32 %1551, 1
  %1553 = sext i32 %1552 to i64
  %1554 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1553
  %1555 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1554, i32 0, i64 %1550
  %1556 = getelementptr inbounds [23 x [5 x double]]* %1555, i32 0, i64 %1548
  %1557 = getelementptr inbounds [5 x double]* %1556, i32 0, i64 2
  %1558 = load double* %1557, align 8
  %1559 = fmul double %1546, %1558
  %1560 = fsub double %1537, %1559
  %1561 = load i32* %i, align 4
  %1562 = sext i32 %1561 to i64
  %1563 = load i32* %j, align 4
  %1564 = sext i32 %1563 to i64
  %1565 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %1564
  %1566 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1565, i32 0, i64 %1562
  %1567 = getelementptr inbounds [5 x [5 x double]]* %1566, i32 0, i64 2
  %1568 = getelementptr inbounds [5 x double]* %1567, i32 0, i64 4
  store double %1560, double* %1568, align 8
  %1569 = load double* @dt, align 8
  %1570 = fsub double -0.000000e+00, %1569
  %1571 = load double* @tz2, align 8
  %1572 = fmul double %1570, %1571
  %1573 = load i32* %i, align 4
  %1574 = sext i32 %1573 to i64
  %1575 = load i32* %j, align 4
  %1576 = sext i32 %1575 to i64
  %1577 = load i32* %1, align 4
  %1578 = sub nsw i32 %1577, 1
  %1579 = sext i32 %1578 to i64
  %1580 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1579
  %1581 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1580, i32 0, i64 %1576
  %1582 = getelementptr inbounds [23 x [5 x double]]* %1581, i32 0, i64 %1574
  %1583 = getelementptr inbounds [5 x double]* %1582, i32 0, i64 4
  %1584 = load double* %1583, align 8
  %1585 = load double* %tmp1, align 8
  %1586 = fmul double %1584, %1585
  %1587 = fmul double 1.400000e+00, %1586
  %1588 = load i32* %i, align 4
  %1589 = sext i32 %1588 to i64
  %1590 = load i32* %j, align 4
  %1591 = sext i32 %1590 to i64
  %1592 = load i32* %1, align 4
  %1593 = sub nsw i32 %1592, 1
  %1594 = sext i32 %1593 to i64
  %1595 = getelementptr inbounds [22 x [23 x [23 x double]]]* @qs, i32 0, i64 %1594
  %1596 = getelementptr inbounds [23 x [23 x double]]* %1595, i32 0, i64 %1591
  %1597 = getelementptr inbounds [23 x double]* %1596, i32 0, i64 %1589
  %1598 = load double* %1597, align 8
  %1599 = load double* %tmp1, align 8
  %1600 = fmul double %1598, %1599
  %1601 = load i32* %i, align 4
  %1602 = sext i32 %1601 to i64
  %1603 = load i32* %j, align 4
  %1604 = sext i32 %1603 to i64
  %1605 = load i32* %1, align 4
  %1606 = sub nsw i32 %1605, 1
  %1607 = sext i32 %1606 to i64
  %1608 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1607
  %1609 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1608, i32 0, i64 %1604
  %1610 = getelementptr inbounds [23 x [5 x double]]* %1609, i32 0, i64 %1602
  %1611 = getelementptr inbounds [5 x double]* %1610, i32 0, i64 3
  %1612 = load double* %1611, align 8
  %1613 = load i32* %i, align 4
  %1614 = sext i32 %1613 to i64
  %1615 = load i32* %j, align 4
  %1616 = sext i32 %1615 to i64
  %1617 = load i32* %1, align 4
  %1618 = sub nsw i32 %1617, 1
  %1619 = sext i32 %1618 to i64
  %1620 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1619
  %1621 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1620, i32 0, i64 %1616
  %1622 = getelementptr inbounds [23 x [5 x double]]* %1621, i32 0, i64 %1614
  %1623 = getelementptr inbounds [5 x double]* %1622, i32 0, i64 3
  %1624 = load double* %1623, align 8
  %1625 = fmul double %1612, %1624
  %1626 = load double* %tmp2, align 8
  %1627 = fmul double %1625, %1626
  %1628 = fadd double %1600, %1627
  %1629 = fmul double 4.000000e-01, %1628
  %1630 = fsub double %1587, %1629
  %1631 = fmul double %1572, %1630
  %1632 = load double* @dt, align 8
  %1633 = load double* @tz1, align 8
  %1634 = fmul double %1632, %1633
  %1635 = load double* %r43, align 8
  %1636 = load double* %c34, align 8
  %1637 = fmul double %1635, %1636
  %1638 = load double* %c1345, align 8
  %1639 = fsub double %1637, %1638
  %1640 = fmul double %1634, %1639
  %1641 = load double* %tmp2, align 8
  %1642 = fmul double %1640, %1641
  %1643 = load i32* %i, align 4
  %1644 = sext i32 %1643 to i64
  %1645 = load i32* %j, align 4
  %1646 = sext i32 %1645 to i64
  %1647 = load i32* %1, align 4
  %1648 = sub nsw i32 %1647, 1
  %1649 = sext i32 %1648 to i64
  %1650 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1649
  %1651 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1650, i32 0, i64 %1646
  %1652 = getelementptr inbounds [23 x [5 x double]]* %1651, i32 0, i64 %1644
  %1653 = getelementptr inbounds [5 x double]* %1652, i32 0, i64 3
  %1654 = load double* %1653, align 8
  %1655 = fmul double %1642, %1654
  %1656 = fsub double %1631, %1655
  %1657 = load i32* %i, align 4
  %1658 = sext i32 %1657 to i64
  %1659 = load i32* %j, align 4
  %1660 = sext i32 %1659 to i64
  %1661 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %1660
  %1662 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1661, i32 0, i64 %1658
  %1663 = getelementptr inbounds [5 x [5 x double]]* %1662, i32 0, i64 3
  %1664 = getelementptr inbounds [5 x double]* %1663, i32 0, i64 4
  store double %1656, double* %1664, align 8
  %1665 = load double* @dt, align 8
  %1666 = fsub double -0.000000e+00, %1665
  %1667 = load double* @tz2, align 8
  %1668 = fmul double %1666, %1667
  %1669 = load i32* %i, align 4
  %1670 = sext i32 %1669 to i64
  %1671 = load i32* %j, align 4
  %1672 = sext i32 %1671 to i64
  %1673 = load i32* %1, align 4
  %1674 = sub nsw i32 %1673, 1
  %1675 = sext i32 %1674 to i64
  %1676 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1675
  %1677 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1676, i32 0, i64 %1672
  %1678 = getelementptr inbounds [23 x [5 x double]]* %1677, i32 0, i64 %1670
  %1679 = getelementptr inbounds [5 x double]* %1678, i32 0, i64 3
  %1680 = load double* %1679, align 8
  %1681 = load double* %tmp1, align 8
  %1682 = fmul double %1680, %1681
  %1683 = fmul double 1.400000e+00, %1682
  %1684 = fmul double %1668, %1683
  %1685 = load double* @dt, align 8
  %1686 = load double* @tz1, align 8
  %1687 = fmul double %1685, %1686
  %1688 = load double* %c1345, align 8
  %1689 = fmul double %1687, %1688
  %1690 = load double* %tmp1, align 8
  %1691 = fmul double %1689, %1690
  %1692 = fsub double %1684, %1691
  %1693 = load double* @dt, align 8
  %1694 = load double* @tz1, align 8
  %1695 = fmul double %1693, %1694
  %1696 = load double* @dz5, align 8
  %1697 = fmul double %1695, %1696
  %1698 = fsub double %1692, %1697
  %1699 = load i32* %i, align 4
  %1700 = sext i32 %1699 to i64
  %1701 = load i32* %j, align 4
  %1702 = sext i32 %1701 to i64
  %1703 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %1702
  %1704 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1703, i32 0, i64 %1700
  %1705 = getelementptr inbounds [5 x [5 x double]]* %1704, i32 0, i64 4
  %1706 = getelementptr inbounds [5 x double]* %1705, i32 0, i64 4
  store double %1698, double* %1706, align 8
  %1707 = load i32* %i, align 4
  %1708 = sext i32 %1707 to i64
  %1709 = load i32* %j, align 4
  %1710 = sub nsw i32 %1709, 1
  %1711 = sext i32 %1710 to i64
  %1712 = load i32* %1, align 4
  %1713 = sext i32 %1712 to i64
  %1714 = getelementptr inbounds [22 x [23 x [23 x double]]]* @rho_i, i32 0, i64 %1713
  %1715 = getelementptr inbounds [23 x [23 x double]]* %1714, i32 0, i64 %1711
  %1716 = getelementptr inbounds [23 x double]* %1715, i32 0, i64 %1708
  %1717 = load double* %1716, align 8
  store double %1717, double* %tmp1, align 8
  %1718 = load double* %tmp1, align 8
  %1719 = load double* %tmp1, align 8
  %1720 = fmul double %1718, %1719
  store double %1720, double* %tmp2, align 8
  %1721 = load double* %tmp1, align 8
  %1722 = load double* %tmp2, align 8
  %1723 = fmul double %1721, %1722
  store double %1723, double* %tmp3, align 8
  %1724 = load double* @dt, align 8
  %1725 = fsub double -0.000000e+00, %1724
  %1726 = load double* @ty1, align 8
  %1727 = fmul double %1725, %1726
  %1728 = load double* @dy1, align 8
  %1729 = fmul double %1727, %1728
  %1730 = load i32* %i, align 4
  %1731 = sext i32 %1730 to i64
  %1732 = load i32* %j, align 4
  %1733 = sext i32 %1732 to i64
  %1734 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %1733
  %1735 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1734, i32 0, i64 %1731
  %1736 = getelementptr inbounds [5 x [5 x double]]* %1735, i32 0, i64 0
  %1737 = getelementptr inbounds [5 x double]* %1736, i32 0, i64 0
  store double %1729, double* %1737, align 8
  %1738 = load i32* %i, align 4
  %1739 = sext i32 %1738 to i64
  %1740 = load i32* %j, align 4
  %1741 = sext i32 %1740 to i64
  %1742 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %1741
  %1743 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1742, i32 0, i64 %1739
  %1744 = getelementptr inbounds [5 x [5 x double]]* %1743, i32 0, i64 1
  %1745 = getelementptr inbounds [5 x double]* %1744, i32 0, i64 0
  store double 0.000000e+00, double* %1745, align 8
  %1746 = load double* @dt, align 8
  %1747 = fsub double -0.000000e+00, %1746
  %1748 = load double* @ty2, align 8
  %1749 = fmul double %1747, %1748
  %1750 = load i32* %i, align 4
  %1751 = sext i32 %1750 to i64
  %1752 = load i32* %j, align 4
  %1753 = sext i32 %1752 to i64
  %1754 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %1753
  %1755 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1754, i32 0, i64 %1751
  %1756 = getelementptr inbounds [5 x [5 x double]]* %1755, i32 0, i64 2
  %1757 = getelementptr inbounds [5 x double]* %1756, i32 0, i64 0
  store double %1749, double* %1757, align 8
  %1758 = load i32* %i, align 4
  %1759 = sext i32 %1758 to i64
  %1760 = load i32* %j, align 4
  %1761 = sext i32 %1760 to i64
  %1762 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %1761
  %1763 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1762, i32 0, i64 %1759
  %1764 = getelementptr inbounds [5 x [5 x double]]* %1763, i32 0, i64 3
  %1765 = getelementptr inbounds [5 x double]* %1764, i32 0, i64 0
  store double 0.000000e+00, double* %1765, align 8
  %1766 = load i32* %i, align 4
  %1767 = sext i32 %1766 to i64
  %1768 = load i32* %j, align 4
  %1769 = sext i32 %1768 to i64
  %1770 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %1769
  %1771 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1770, i32 0, i64 %1767
  %1772 = getelementptr inbounds [5 x [5 x double]]* %1771, i32 0, i64 4
  %1773 = getelementptr inbounds [5 x double]* %1772, i32 0, i64 0
  store double 0.000000e+00, double* %1773, align 8
  %1774 = load double* @dt, align 8
  %1775 = fsub double -0.000000e+00, %1774
  %1776 = load double* @ty2, align 8
  %1777 = fmul double %1775, %1776
  %1778 = load i32* %i, align 4
  %1779 = sext i32 %1778 to i64
  %1780 = load i32* %j, align 4
  %1781 = sub nsw i32 %1780, 1
  %1782 = sext i32 %1781 to i64
  %1783 = load i32* %1, align 4
  %1784 = sext i32 %1783 to i64
  %1785 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1784
  %1786 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1785, i32 0, i64 %1782
  %1787 = getelementptr inbounds [23 x [5 x double]]* %1786, i32 0, i64 %1779
  %1788 = getelementptr inbounds [5 x double]* %1787, i32 0, i64 1
  %1789 = load double* %1788, align 8
  %1790 = load i32* %i, align 4
  %1791 = sext i32 %1790 to i64
  %1792 = load i32* %j, align 4
  %1793 = sub nsw i32 %1792, 1
  %1794 = sext i32 %1793 to i64
  %1795 = load i32* %1, align 4
  %1796 = sext i32 %1795 to i64
  %1797 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1796
  %1798 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1797, i32 0, i64 %1794
  %1799 = getelementptr inbounds [23 x [5 x double]]* %1798, i32 0, i64 %1791
  %1800 = getelementptr inbounds [5 x double]* %1799, i32 0, i64 2
  %1801 = load double* %1800, align 8
  %1802 = fmul double %1789, %1801
  %1803 = fsub double -0.000000e+00, %1802
  %1804 = load double* %tmp2, align 8
  %1805 = fmul double %1803, %1804
  %1806 = fmul double %1777, %1805
  %1807 = load double* @dt, align 8
  %1808 = load double* @ty1, align 8
  %1809 = fmul double %1807, %1808
  %1810 = load double* %c34, align 8
  %1811 = fsub double -0.000000e+00, %1810
  %1812 = load double* %tmp2, align 8
  %1813 = fmul double %1811, %1812
  %1814 = load i32* %i, align 4
  %1815 = sext i32 %1814 to i64
  %1816 = load i32* %j, align 4
  %1817 = sub nsw i32 %1816, 1
  %1818 = sext i32 %1817 to i64
  %1819 = load i32* %1, align 4
  %1820 = sext i32 %1819 to i64
  %1821 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1820
  %1822 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1821, i32 0, i64 %1818
  %1823 = getelementptr inbounds [23 x [5 x double]]* %1822, i32 0, i64 %1815
  %1824 = getelementptr inbounds [5 x double]* %1823, i32 0, i64 1
  %1825 = load double* %1824, align 8
  %1826 = fmul double %1813, %1825
  %1827 = fmul double %1809, %1826
  %1828 = fsub double %1806, %1827
  %1829 = load i32* %i, align 4
  %1830 = sext i32 %1829 to i64
  %1831 = load i32* %j, align 4
  %1832 = sext i32 %1831 to i64
  %1833 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %1832
  %1834 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1833, i32 0, i64 %1830
  %1835 = getelementptr inbounds [5 x [5 x double]]* %1834, i32 0, i64 0
  %1836 = getelementptr inbounds [5 x double]* %1835, i32 0, i64 1
  store double %1828, double* %1836, align 8
  %1837 = load double* @dt, align 8
  %1838 = fsub double -0.000000e+00, %1837
  %1839 = load double* @ty2, align 8
  %1840 = fmul double %1838, %1839
  %1841 = load i32* %i, align 4
  %1842 = sext i32 %1841 to i64
  %1843 = load i32* %j, align 4
  %1844 = sub nsw i32 %1843, 1
  %1845 = sext i32 %1844 to i64
  %1846 = load i32* %1, align 4
  %1847 = sext i32 %1846 to i64
  %1848 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1847
  %1849 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1848, i32 0, i64 %1845
  %1850 = getelementptr inbounds [23 x [5 x double]]* %1849, i32 0, i64 %1842
  %1851 = getelementptr inbounds [5 x double]* %1850, i32 0, i64 2
  %1852 = load double* %1851, align 8
  %1853 = load double* %tmp1, align 8
  %1854 = fmul double %1852, %1853
  %1855 = fmul double %1840, %1854
  %1856 = load double* @dt, align 8
  %1857 = load double* @ty1, align 8
  %1858 = fmul double %1856, %1857
  %1859 = load double* %c34, align 8
  %1860 = load double* %tmp1, align 8
  %1861 = fmul double %1859, %1860
  %1862 = fmul double %1858, %1861
  %1863 = fsub double %1855, %1862
  %1864 = load double* @dt, align 8
  %1865 = load double* @ty1, align 8
  %1866 = fmul double %1864, %1865
  %1867 = load double* @dy2, align 8
  %1868 = fmul double %1866, %1867
  %1869 = fsub double %1863, %1868
  %1870 = load i32* %i, align 4
  %1871 = sext i32 %1870 to i64
  %1872 = load i32* %j, align 4
  %1873 = sext i32 %1872 to i64
  %1874 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %1873
  %1875 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1874, i32 0, i64 %1871
  %1876 = getelementptr inbounds [5 x [5 x double]]* %1875, i32 0, i64 1
  %1877 = getelementptr inbounds [5 x double]* %1876, i32 0, i64 1
  store double %1869, double* %1877, align 8
  %1878 = load double* @dt, align 8
  %1879 = fsub double -0.000000e+00, %1878
  %1880 = load double* @ty2, align 8
  %1881 = fmul double %1879, %1880
  %1882 = load i32* %i, align 4
  %1883 = sext i32 %1882 to i64
  %1884 = load i32* %j, align 4
  %1885 = sub nsw i32 %1884, 1
  %1886 = sext i32 %1885 to i64
  %1887 = load i32* %1, align 4
  %1888 = sext i32 %1887 to i64
  %1889 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1888
  %1890 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1889, i32 0, i64 %1886
  %1891 = getelementptr inbounds [23 x [5 x double]]* %1890, i32 0, i64 %1883
  %1892 = getelementptr inbounds [5 x double]* %1891, i32 0, i64 1
  %1893 = load double* %1892, align 8
  %1894 = load double* %tmp1, align 8
  %1895 = fmul double %1893, %1894
  %1896 = fmul double %1881, %1895
  %1897 = load i32* %i, align 4
  %1898 = sext i32 %1897 to i64
  %1899 = load i32* %j, align 4
  %1900 = sext i32 %1899 to i64
  %1901 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %1900
  %1902 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1901, i32 0, i64 %1898
  %1903 = getelementptr inbounds [5 x [5 x double]]* %1902, i32 0, i64 2
  %1904 = getelementptr inbounds [5 x double]* %1903, i32 0, i64 1
  store double %1896, double* %1904, align 8
  %1905 = load i32* %i, align 4
  %1906 = sext i32 %1905 to i64
  %1907 = load i32* %j, align 4
  %1908 = sext i32 %1907 to i64
  %1909 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %1908
  %1910 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1909, i32 0, i64 %1906
  %1911 = getelementptr inbounds [5 x [5 x double]]* %1910, i32 0, i64 3
  %1912 = getelementptr inbounds [5 x double]* %1911, i32 0, i64 1
  store double 0.000000e+00, double* %1912, align 8
  %1913 = load i32* %i, align 4
  %1914 = sext i32 %1913 to i64
  %1915 = load i32* %j, align 4
  %1916 = sext i32 %1915 to i64
  %1917 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %1916
  %1918 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1917, i32 0, i64 %1914
  %1919 = getelementptr inbounds [5 x [5 x double]]* %1918, i32 0, i64 4
  %1920 = getelementptr inbounds [5 x double]* %1919, i32 0, i64 1
  store double 0.000000e+00, double* %1920, align 8
  %1921 = load double* @dt, align 8
  %1922 = fsub double -0.000000e+00, %1921
  %1923 = load double* @ty2, align 8
  %1924 = fmul double %1922, %1923
  %1925 = load i32* %i, align 4
  %1926 = sext i32 %1925 to i64
  %1927 = load i32* %j, align 4
  %1928 = sub nsw i32 %1927, 1
  %1929 = sext i32 %1928 to i64
  %1930 = load i32* %1, align 4
  %1931 = sext i32 %1930 to i64
  %1932 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1931
  %1933 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1932, i32 0, i64 %1929
  %1934 = getelementptr inbounds [23 x [5 x double]]* %1933, i32 0, i64 %1926
  %1935 = getelementptr inbounds [5 x double]* %1934, i32 0, i64 2
  %1936 = load double* %1935, align 8
  %1937 = load double* %tmp1, align 8
  %1938 = fmul double %1936, %1937
  %1939 = fsub double -0.000000e+00, %1938
  %1940 = load i32* %i, align 4
  %1941 = sext i32 %1940 to i64
  %1942 = load i32* %j, align 4
  %1943 = sub nsw i32 %1942, 1
  %1944 = sext i32 %1943 to i64
  %1945 = load i32* %1, align 4
  %1946 = sext i32 %1945 to i64
  %1947 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1946
  %1948 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1947, i32 0, i64 %1944
  %1949 = getelementptr inbounds [23 x [5 x double]]* %1948, i32 0, i64 %1941
  %1950 = getelementptr inbounds [5 x double]* %1949, i32 0, i64 2
  %1951 = load double* %1950, align 8
  %1952 = load double* %tmp1, align 8
  %1953 = fmul double %1951, %1952
  %1954 = fmul double %1939, %1953
  %1955 = load i32* %i, align 4
  %1956 = sext i32 %1955 to i64
  %1957 = load i32* %j, align 4
  %1958 = sub nsw i32 %1957, 1
  %1959 = sext i32 %1958 to i64
  %1960 = load i32* %1, align 4
  %1961 = sext i32 %1960 to i64
  %1962 = getelementptr inbounds [22 x [23 x [23 x double]]]* @qs, i32 0, i64 %1961
  %1963 = getelementptr inbounds [23 x [23 x double]]* %1962, i32 0, i64 %1959
  %1964 = getelementptr inbounds [23 x double]* %1963, i32 0, i64 %1956
  %1965 = load double* %1964, align 8
  %1966 = load double* %tmp1, align 8
  %1967 = fmul double %1965, %1966
  %1968 = fmul double 4.000000e-01, %1967
  %1969 = fadd double %1954, %1968
  %1970 = fmul double %1924, %1969
  %1971 = load double* @dt, align 8
  %1972 = load double* @ty1, align 8
  %1973 = fmul double %1971, %1972
  %1974 = load double* %r43, align 8
  %1975 = fsub double -0.000000e+00, %1974
  %1976 = load double* %c34, align 8
  %1977 = fmul double %1975, %1976
  %1978 = load double* %tmp2, align 8
  %1979 = fmul double %1977, %1978
  %1980 = load i32* %i, align 4
  %1981 = sext i32 %1980 to i64
  %1982 = load i32* %j, align 4
  %1983 = sub nsw i32 %1982, 1
  %1984 = sext i32 %1983 to i64
  %1985 = load i32* %1, align 4
  %1986 = sext i32 %1985 to i64
  %1987 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1986
  %1988 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1987, i32 0, i64 %1984
  %1989 = getelementptr inbounds [23 x [5 x double]]* %1988, i32 0, i64 %1981
  %1990 = getelementptr inbounds [5 x double]* %1989, i32 0, i64 2
  %1991 = load double* %1990, align 8
  %1992 = fmul double %1979, %1991
  %1993 = fmul double %1973, %1992
  %1994 = fsub double %1970, %1993
  %1995 = load i32* %i, align 4
  %1996 = sext i32 %1995 to i64
  %1997 = load i32* %j, align 4
  %1998 = sext i32 %1997 to i64
  %1999 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %1998
  %2000 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1999, i32 0, i64 %1996
  %2001 = getelementptr inbounds [5 x [5 x double]]* %2000, i32 0, i64 0
  %2002 = getelementptr inbounds [5 x double]* %2001, i32 0, i64 2
  store double %1994, double* %2002, align 8
  %2003 = load double* @dt, align 8
  %2004 = fsub double -0.000000e+00, %2003
  %2005 = load double* @ty2, align 8
  %2006 = fmul double %2004, %2005
  %2007 = load i32* %i, align 4
  %2008 = sext i32 %2007 to i64
  %2009 = load i32* %j, align 4
  %2010 = sub nsw i32 %2009, 1
  %2011 = sext i32 %2010 to i64
  %2012 = load i32* %1, align 4
  %2013 = sext i32 %2012 to i64
  %2014 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2013
  %2015 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2014, i32 0, i64 %2011
  %2016 = getelementptr inbounds [23 x [5 x double]]* %2015, i32 0, i64 %2008
  %2017 = getelementptr inbounds [5 x double]* %2016, i32 0, i64 1
  %2018 = load double* %2017, align 8
  %2019 = load double* %tmp1, align 8
  %2020 = fmul double %2018, %2019
  %2021 = fmul double -4.000000e-01, %2020
  %2022 = fmul double %2006, %2021
  %2023 = load i32* %i, align 4
  %2024 = sext i32 %2023 to i64
  %2025 = load i32* %j, align 4
  %2026 = sext i32 %2025 to i64
  %2027 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %2026
  %2028 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2027, i32 0, i64 %2024
  %2029 = getelementptr inbounds [5 x [5 x double]]* %2028, i32 0, i64 1
  %2030 = getelementptr inbounds [5 x double]* %2029, i32 0, i64 2
  store double %2022, double* %2030, align 8
  %2031 = load double* @dt, align 8
  %2032 = fsub double -0.000000e+00, %2031
  %2033 = load double* @ty2, align 8
  %2034 = fmul double %2032, %2033
  %2035 = load i32* %i, align 4
  %2036 = sext i32 %2035 to i64
  %2037 = load i32* %j, align 4
  %2038 = sub nsw i32 %2037, 1
  %2039 = sext i32 %2038 to i64
  %2040 = load i32* %1, align 4
  %2041 = sext i32 %2040 to i64
  %2042 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2041
  %2043 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2042, i32 0, i64 %2039
  %2044 = getelementptr inbounds [23 x [5 x double]]* %2043, i32 0, i64 %2036
  %2045 = getelementptr inbounds [5 x double]* %2044, i32 0, i64 2
  %2046 = load double* %2045, align 8
  %2047 = load double* %tmp1, align 8
  %2048 = fmul double %2046, %2047
  %2049 = fmul double 1.600000e+00, %2048
  %2050 = fmul double %2034, %2049
  %2051 = load double* @dt, align 8
  %2052 = load double* @ty1, align 8
  %2053 = fmul double %2051, %2052
  %2054 = load double* %r43, align 8
  %2055 = load double* %c34, align 8
  %2056 = fmul double %2054, %2055
  %2057 = load double* %tmp1, align 8
  %2058 = fmul double %2056, %2057
  %2059 = fmul double %2053, %2058
  %2060 = fsub double %2050, %2059
  %2061 = load double* @dt, align 8
  %2062 = load double* @ty1, align 8
  %2063 = fmul double %2061, %2062
  %2064 = load double* @dy3, align 8
  %2065 = fmul double %2063, %2064
  %2066 = fsub double %2060, %2065
  %2067 = load i32* %i, align 4
  %2068 = sext i32 %2067 to i64
  %2069 = load i32* %j, align 4
  %2070 = sext i32 %2069 to i64
  %2071 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %2070
  %2072 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2071, i32 0, i64 %2068
  %2073 = getelementptr inbounds [5 x [5 x double]]* %2072, i32 0, i64 2
  %2074 = getelementptr inbounds [5 x double]* %2073, i32 0, i64 2
  store double %2066, double* %2074, align 8
  %2075 = load double* @dt, align 8
  %2076 = fsub double -0.000000e+00, %2075
  %2077 = load double* @ty2, align 8
  %2078 = fmul double %2076, %2077
  %2079 = load i32* %i, align 4
  %2080 = sext i32 %2079 to i64
  %2081 = load i32* %j, align 4
  %2082 = sub nsw i32 %2081, 1
  %2083 = sext i32 %2082 to i64
  %2084 = load i32* %1, align 4
  %2085 = sext i32 %2084 to i64
  %2086 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2085
  %2087 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2086, i32 0, i64 %2083
  %2088 = getelementptr inbounds [23 x [5 x double]]* %2087, i32 0, i64 %2080
  %2089 = getelementptr inbounds [5 x double]* %2088, i32 0, i64 3
  %2090 = load double* %2089, align 8
  %2091 = load double* %tmp1, align 8
  %2092 = fmul double %2090, %2091
  %2093 = fmul double -4.000000e-01, %2092
  %2094 = fmul double %2078, %2093
  %2095 = load i32* %i, align 4
  %2096 = sext i32 %2095 to i64
  %2097 = load i32* %j, align 4
  %2098 = sext i32 %2097 to i64
  %2099 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %2098
  %2100 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2099, i32 0, i64 %2096
  %2101 = getelementptr inbounds [5 x [5 x double]]* %2100, i32 0, i64 3
  %2102 = getelementptr inbounds [5 x double]* %2101, i32 0, i64 2
  store double %2094, double* %2102, align 8
  %2103 = load double* @dt, align 8
  %2104 = fsub double -0.000000e+00, %2103
  %2105 = load double* @ty2, align 8
  %2106 = fmul double %2104, %2105
  %2107 = fmul double %2106, 4.000000e-01
  %2108 = load i32* %i, align 4
  %2109 = sext i32 %2108 to i64
  %2110 = load i32* %j, align 4
  %2111 = sext i32 %2110 to i64
  %2112 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %2111
  %2113 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2112, i32 0, i64 %2109
  %2114 = getelementptr inbounds [5 x [5 x double]]* %2113, i32 0, i64 4
  %2115 = getelementptr inbounds [5 x double]* %2114, i32 0, i64 2
  store double %2107, double* %2115, align 8
  %2116 = load double* @dt, align 8
  %2117 = fsub double -0.000000e+00, %2116
  %2118 = load double* @ty2, align 8
  %2119 = fmul double %2117, %2118
  %2120 = load i32* %i, align 4
  %2121 = sext i32 %2120 to i64
  %2122 = load i32* %j, align 4
  %2123 = sub nsw i32 %2122, 1
  %2124 = sext i32 %2123 to i64
  %2125 = load i32* %1, align 4
  %2126 = sext i32 %2125 to i64
  %2127 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2126
  %2128 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2127, i32 0, i64 %2124
  %2129 = getelementptr inbounds [23 x [5 x double]]* %2128, i32 0, i64 %2121
  %2130 = getelementptr inbounds [5 x double]* %2129, i32 0, i64 2
  %2131 = load double* %2130, align 8
  %2132 = load i32* %i, align 4
  %2133 = sext i32 %2132 to i64
  %2134 = load i32* %j, align 4
  %2135 = sub nsw i32 %2134, 1
  %2136 = sext i32 %2135 to i64
  %2137 = load i32* %1, align 4
  %2138 = sext i32 %2137 to i64
  %2139 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2138
  %2140 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2139, i32 0, i64 %2136
  %2141 = getelementptr inbounds [23 x [5 x double]]* %2140, i32 0, i64 %2133
  %2142 = getelementptr inbounds [5 x double]* %2141, i32 0, i64 3
  %2143 = load double* %2142, align 8
  %2144 = fmul double %2131, %2143
  %2145 = fsub double -0.000000e+00, %2144
  %2146 = load double* %tmp2, align 8
  %2147 = fmul double %2145, %2146
  %2148 = fmul double %2119, %2147
  %2149 = load double* @dt, align 8
  %2150 = load double* @ty1, align 8
  %2151 = fmul double %2149, %2150
  %2152 = load double* %c34, align 8
  %2153 = fsub double -0.000000e+00, %2152
  %2154 = load double* %tmp2, align 8
  %2155 = fmul double %2153, %2154
  %2156 = load i32* %i, align 4
  %2157 = sext i32 %2156 to i64
  %2158 = load i32* %j, align 4
  %2159 = sub nsw i32 %2158, 1
  %2160 = sext i32 %2159 to i64
  %2161 = load i32* %1, align 4
  %2162 = sext i32 %2161 to i64
  %2163 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2162
  %2164 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2163, i32 0, i64 %2160
  %2165 = getelementptr inbounds [23 x [5 x double]]* %2164, i32 0, i64 %2157
  %2166 = getelementptr inbounds [5 x double]* %2165, i32 0, i64 3
  %2167 = load double* %2166, align 8
  %2168 = fmul double %2155, %2167
  %2169 = fmul double %2151, %2168
  %2170 = fsub double %2148, %2169
  %2171 = load i32* %i, align 4
  %2172 = sext i32 %2171 to i64
  %2173 = load i32* %j, align 4
  %2174 = sext i32 %2173 to i64
  %2175 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %2174
  %2176 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2175, i32 0, i64 %2172
  %2177 = getelementptr inbounds [5 x [5 x double]]* %2176, i32 0, i64 0
  %2178 = getelementptr inbounds [5 x double]* %2177, i32 0, i64 3
  store double %2170, double* %2178, align 8
  %2179 = load i32* %i, align 4
  %2180 = sext i32 %2179 to i64
  %2181 = load i32* %j, align 4
  %2182 = sext i32 %2181 to i64
  %2183 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %2182
  %2184 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2183, i32 0, i64 %2180
  %2185 = getelementptr inbounds [5 x [5 x double]]* %2184, i32 0, i64 1
  %2186 = getelementptr inbounds [5 x double]* %2185, i32 0, i64 3
  store double 0.000000e+00, double* %2186, align 8
  %2187 = load double* @dt, align 8
  %2188 = fsub double -0.000000e+00, %2187
  %2189 = load double* @ty2, align 8
  %2190 = fmul double %2188, %2189
  %2191 = load i32* %i, align 4
  %2192 = sext i32 %2191 to i64
  %2193 = load i32* %j, align 4
  %2194 = sub nsw i32 %2193, 1
  %2195 = sext i32 %2194 to i64
  %2196 = load i32* %1, align 4
  %2197 = sext i32 %2196 to i64
  %2198 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2197
  %2199 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2198, i32 0, i64 %2195
  %2200 = getelementptr inbounds [23 x [5 x double]]* %2199, i32 0, i64 %2192
  %2201 = getelementptr inbounds [5 x double]* %2200, i32 0, i64 3
  %2202 = load double* %2201, align 8
  %2203 = load double* %tmp1, align 8
  %2204 = fmul double %2202, %2203
  %2205 = fmul double %2190, %2204
  %2206 = load i32* %i, align 4
  %2207 = sext i32 %2206 to i64
  %2208 = load i32* %j, align 4
  %2209 = sext i32 %2208 to i64
  %2210 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %2209
  %2211 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2210, i32 0, i64 %2207
  %2212 = getelementptr inbounds [5 x [5 x double]]* %2211, i32 0, i64 2
  %2213 = getelementptr inbounds [5 x double]* %2212, i32 0, i64 3
  store double %2205, double* %2213, align 8
  %2214 = load double* @dt, align 8
  %2215 = fsub double -0.000000e+00, %2214
  %2216 = load double* @ty2, align 8
  %2217 = fmul double %2215, %2216
  %2218 = load i32* %i, align 4
  %2219 = sext i32 %2218 to i64
  %2220 = load i32* %j, align 4
  %2221 = sub nsw i32 %2220, 1
  %2222 = sext i32 %2221 to i64
  %2223 = load i32* %1, align 4
  %2224 = sext i32 %2223 to i64
  %2225 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2224
  %2226 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2225, i32 0, i64 %2222
  %2227 = getelementptr inbounds [23 x [5 x double]]* %2226, i32 0, i64 %2219
  %2228 = getelementptr inbounds [5 x double]* %2227, i32 0, i64 2
  %2229 = load double* %2228, align 8
  %2230 = load double* %tmp1, align 8
  %2231 = fmul double %2229, %2230
  %2232 = fmul double %2217, %2231
  %2233 = load double* @dt, align 8
  %2234 = load double* @ty1, align 8
  %2235 = fmul double %2233, %2234
  %2236 = load double* %c34, align 8
  %2237 = load double* %tmp1, align 8
  %2238 = fmul double %2236, %2237
  %2239 = fmul double %2235, %2238
  %2240 = fsub double %2232, %2239
  %2241 = load double* @dt, align 8
  %2242 = load double* @ty1, align 8
  %2243 = fmul double %2241, %2242
  %2244 = load double* @dy4, align 8
  %2245 = fmul double %2243, %2244
  %2246 = fsub double %2240, %2245
  %2247 = load i32* %i, align 4
  %2248 = sext i32 %2247 to i64
  %2249 = load i32* %j, align 4
  %2250 = sext i32 %2249 to i64
  %2251 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %2250
  %2252 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2251, i32 0, i64 %2248
  %2253 = getelementptr inbounds [5 x [5 x double]]* %2252, i32 0, i64 3
  %2254 = getelementptr inbounds [5 x double]* %2253, i32 0, i64 3
  store double %2246, double* %2254, align 8
  %2255 = load i32* %i, align 4
  %2256 = sext i32 %2255 to i64
  %2257 = load i32* %j, align 4
  %2258 = sext i32 %2257 to i64
  %2259 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %2258
  %2260 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2259, i32 0, i64 %2256
  %2261 = getelementptr inbounds [5 x [5 x double]]* %2260, i32 0, i64 4
  %2262 = getelementptr inbounds [5 x double]* %2261, i32 0, i64 3
  store double 0.000000e+00, double* %2262, align 8
  %2263 = load double* @dt, align 8
  %2264 = fsub double -0.000000e+00, %2263
  %2265 = load double* @ty2, align 8
  %2266 = fmul double %2264, %2265
  %2267 = load i32* %i, align 4
  %2268 = sext i32 %2267 to i64
  %2269 = load i32* %j, align 4
  %2270 = sub nsw i32 %2269, 1
  %2271 = sext i32 %2270 to i64
  %2272 = load i32* %1, align 4
  %2273 = sext i32 %2272 to i64
  %2274 = getelementptr inbounds [22 x [23 x [23 x double]]]* @qs, i32 0, i64 %2273
  %2275 = getelementptr inbounds [23 x [23 x double]]* %2274, i32 0, i64 %2271
  %2276 = getelementptr inbounds [23 x double]* %2275, i32 0, i64 %2268
  %2277 = load double* %2276, align 8
  %2278 = fmul double 8.000000e-01, %2277
  %2279 = load i32* %i, align 4
  %2280 = sext i32 %2279 to i64
  %2281 = load i32* %j, align 4
  %2282 = sub nsw i32 %2281, 1
  %2283 = sext i32 %2282 to i64
  %2284 = load i32* %1, align 4
  %2285 = sext i32 %2284 to i64
  %2286 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2285
  %2287 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2286, i32 0, i64 %2283
  %2288 = getelementptr inbounds [23 x [5 x double]]* %2287, i32 0, i64 %2280
  %2289 = getelementptr inbounds [5 x double]* %2288, i32 0, i64 4
  %2290 = load double* %2289, align 8
  %2291 = fmul double 1.400000e+00, %2290
  %2292 = fsub double %2278, %2291
  %2293 = load i32* %i, align 4
  %2294 = sext i32 %2293 to i64
  %2295 = load i32* %j, align 4
  %2296 = sub nsw i32 %2295, 1
  %2297 = sext i32 %2296 to i64
  %2298 = load i32* %1, align 4
  %2299 = sext i32 %2298 to i64
  %2300 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2299
  %2301 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2300, i32 0, i64 %2297
  %2302 = getelementptr inbounds [23 x [5 x double]]* %2301, i32 0, i64 %2294
  %2303 = getelementptr inbounds [5 x double]* %2302, i32 0, i64 2
  %2304 = load double* %2303, align 8
  %2305 = load double* %tmp2, align 8
  %2306 = fmul double %2304, %2305
  %2307 = fmul double %2292, %2306
  %2308 = fmul double %2266, %2307
  %2309 = load double* @dt, align 8
  %2310 = load double* @ty1, align 8
  %2311 = fmul double %2309, %2310
  %2312 = load double* %c34, align 8
  %2313 = load double* %c1345, align 8
  %2314 = fsub double %2312, %2313
  %2315 = fsub double -0.000000e+00, %2314
  %2316 = load double* %tmp3, align 8
  %2317 = fmul double %2315, %2316
  %2318 = load i32* %i, align 4
  %2319 = sext i32 %2318 to i64
  %2320 = load i32* %j, align 4
  %2321 = sub nsw i32 %2320, 1
  %2322 = sext i32 %2321 to i64
  %2323 = load i32* %1, align 4
  %2324 = sext i32 %2323 to i64
  %2325 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2324
  %2326 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2325, i32 0, i64 %2322
  %2327 = getelementptr inbounds [23 x [5 x double]]* %2326, i32 0, i64 %2319
  %2328 = getelementptr inbounds [5 x double]* %2327, i32 0, i64 1
  %2329 = load double* %2328, align 8
  %2330 = load i32* %i, align 4
  %2331 = sext i32 %2330 to i64
  %2332 = load i32* %j, align 4
  %2333 = sub nsw i32 %2332, 1
  %2334 = sext i32 %2333 to i64
  %2335 = load i32* %1, align 4
  %2336 = sext i32 %2335 to i64
  %2337 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2336
  %2338 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2337, i32 0, i64 %2334
  %2339 = getelementptr inbounds [23 x [5 x double]]* %2338, i32 0, i64 %2331
  %2340 = getelementptr inbounds [5 x double]* %2339, i32 0, i64 1
  %2341 = load double* %2340, align 8
  %2342 = fmul double %2329, %2341
  %2343 = fmul double %2317, %2342
  %2344 = load double* %r43, align 8
  %2345 = load double* %c34, align 8
  %2346 = fmul double %2344, %2345
  %2347 = load double* %c1345, align 8
  %2348 = fsub double %2346, %2347
  %2349 = load double* %tmp3, align 8
  %2350 = fmul double %2348, %2349
  %2351 = load i32* %i, align 4
  %2352 = sext i32 %2351 to i64
  %2353 = load i32* %j, align 4
  %2354 = sub nsw i32 %2353, 1
  %2355 = sext i32 %2354 to i64
  %2356 = load i32* %1, align 4
  %2357 = sext i32 %2356 to i64
  %2358 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2357
  %2359 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2358, i32 0, i64 %2355
  %2360 = getelementptr inbounds [23 x [5 x double]]* %2359, i32 0, i64 %2352
  %2361 = getelementptr inbounds [5 x double]* %2360, i32 0, i64 2
  %2362 = load double* %2361, align 8
  %2363 = load i32* %i, align 4
  %2364 = sext i32 %2363 to i64
  %2365 = load i32* %j, align 4
  %2366 = sub nsw i32 %2365, 1
  %2367 = sext i32 %2366 to i64
  %2368 = load i32* %1, align 4
  %2369 = sext i32 %2368 to i64
  %2370 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2369
  %2371 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2370, i32 0, i64 %2367
  %2372 = getelementptr inbounds [23 x [5 x double]]* %2371, i32 0, i64 %2364
  %2373 = getelementptr inbounds [5 x double]* %2372, i32 0, i64 2
  %2374 = load double* %2373, align 8
  %2375 = fmul double %2362, %2374
  %2376 = fmul double %2350, %2375
  %2377 = fsub double %2343, %2376
  %2378 = load double* %c34, align 8
  %2379 = load double* %c1345, align 8
  %2380 = fsub double %2378, %2379
  %2381 = load double* %tmp3, align 8
  %2382 = fmul double %2380, %2381
  %2383 = load i32* %i, align 4
  %2384 = sext i32 %2383 to i64
  %2385 = load i32* %j, align 4
  %2386 = sub nsw i32 %2385, 1
  %2387 = sext i32 %2386 to i64
  %2388 = load i32* %1, align 4
  %2389 = sext i32 %2388 to i64
  %2390 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2389
  %2391 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2390, i32 0, i64 %2387
  %2392 = getelementptr inbounds [23 x [5 x double]]* %2391, i32 0, i64 %2384
  %2393 = getelementptr inbounds [5 x double]* %2392, i32 0, i64 3
  %2394 = load double* %2393, align 8
  %2395 = load i32* %i, align 4
  %2396 = sext i32 %2395 to i64
  %2397 = load i32* %j, align 4
  %2398 = sub nsw i32 %2397, 1
  %2399 = sext i32 %2398 to i64
  %2400 = load i32* %1, align 4
  %2401 = sext i32 %2400 to i64
  %2402 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2401
  %2403 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2402, i32 0, i64 %2399
  %2404 = getelementptr inbounds [23 x [5 x double]]* %2403, i32 0, i64 %2396
  %2405 = getelementptr inbounds [5 x double]* %2404, i32 0, i64 3
  %2406 = load double* %2405, align 8
  %2407 = fmul double %2394, %2406
  %2408 = fmul double %2382, %2407
  %2409 = fsub double %2377, %2408
  %2410 = load double* %c1345, align 8
  %2411 = load double* %tmp2, align 8
  %2412 = fmul double %2410, %2411
  %2413 = load i32* %i, align 4
  %2414 = sext i32 %2413 to i64
  %2415 = load i32* %j, align 4
  %2416 = sub nsw i32 %2415, 1
  %2417 = sext i32 %2416 to i64
  %2418 = load i32* %1, align 4
  %2419 = sext i32 %2418 to i64
  %2420 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2419
  %2421 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2420, i32 0, i64 %2417
  %2422 = getelementptr inbounds [23 x [5 x double]]* %2421, i32 0, i64 %2414
  %2423 = getelementptr inbounds [5 x double]* %2422, i32 0, i64 4
  %2424 = load double* %2423, align 8
  %2425 = fmul double %2412, %2424
  %2426 = fsub double %2409, %2425
  %2427 = fmul double %2311, %2426
  %2428 = fsub double %2308, %2427
  %2429 = load i32* %i, align 4
  %2430 = sext i32 %2429 to i64
  %2431 = load i32* %j, align 4
  %2432 = sext i32 %2431 to i64
  %2433 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %2432
  %2434 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2433, i32 0, i64 %2430
  %2435 = getelementptr inbounds [5 x [5 x double]]* %2434, i32 0, i64 0
  %2436 = getelementptr inbounds [5 x double]* %2435, i32 0, i64 4
  store double %2428, double* %2436, align 8
  %2437 = load double* @dt, align 8
  %2438 = fsub double -0.000000e+00, %2437
  %2439 = load double* @ty2, align 8
  %2440 = fmul double %2438, %2439
  %2441 = load i32* %i, align 4
  %2442 = sext i32 %2441 to i64
  %2443 = load i32* %j, align 4
  %2444 = sub nsw i32 %2443, 1
  %2445 = sext i32 %2444 to i64
  %2446 = load i32* %1, align 4
  %2447 = sext i32 %2446 to i64
  %2448 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2447
  %2449 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2448, i32 0, i64 %2445
  %2450 = getelementptr inbounds [23 x [5 x double]]* %2449, i32 0, i64 %2442
  %2451 = getelementptr inbounds [5 x double]* %2450, i32 0, i64 1
  %2452 = load double* %2451, align 8
  %2453 = load i32* %i, align 4
  %2454 = sext i32 %2453 to i64
  %2455 = load i32* %j, align 4
  %2456 = sub nsw i32 %2455, 1
  %2457 = sext i32 %2456 to i64
  %2458 = load i32* %1, align 4
  %2459 = sext i32 %2458 to i64
  %2460 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2459
  %2461 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2460, i32 0, i64 %2457
  %2462 = getelementptr inbounds [23 x [5 x double]]* %2461, i32 0, i64 %2454
  %2463 = getelementptr inbounds [5 x double]* %2462, i32 0, i64 2
  %2464 = load double* %2463, align 8
  %2465 = fmul double %2452, %2464
  %2466 = fmul double -4.000000e-01, %2465
  %2467 = load double* %tmp2, align 8
  %2468 = fmul double %2466, %2467
  %2469 = fmul double %2440, %2468
  %2470 = load double* @dt, align 8
  %2471 = load double* @ty1, align 8
  %2472 = fmul double %2470, %2471
  %2473 = load double* %c34, align 8
  %2474 = load double* %c1345, align 8
  %2475 = fsub double %2473, %2474
  %2476 = fmul double %2472, %2475
  %2477 = load double* %tmp2, align 8
  %2478 = fmul double %2476, %2477
  %2479 = load i32* %i, align 4
  %2480 = sext i32 %2479 to i64
  %2481 = load i32* %j, align 4
  %2482 = sub nsw i32 %2481, 1
  %2483 = sext i32 %2482 to i64
  %2484 = load i32* %1, align 4
  %2485 = sext i32 %2484 to i64
  %2486 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2485
  %2487 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2486, i32 0, i64 %2483
  %2488 = getelementptr inbounds [23 x [5 x double]]* %2487, i32 0, i64 %2480
  %2489 = getelementptr inbounds [5 x double]* %2488, i32 0, i64 1
  %2490 = load double* %2489, align 8
  %2491 = fmul double %2478, %2490
  %2492 = fsub double %2469, %2491
  %2493 = load i32* %i, align 4
  %2494 = sext i32 %2493 to i64
  %2495 = load i32* %j, align 4
  %2496 = sext i32 %2495 to i64
  %2497 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %2496
  %2498 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2497, i32 0, i64 %2494
  %2499 = getelementptr inbounds [5 x [5 x double]]* %2498, i32 0, i64 1
  %2500 = getelementptr inbounds [5 x double]* %2499, i32 0, i64 4
  store double %2492, double* %2500, align 8
  %2501 = load double* @dt, align 8
  %2502 = fsub double -0.000000e+00, %2501
  %2503 = load double* @ty2, align 8
  %2504 = fmul double %2502, %2503
  %2505 = load i32* %i, align 4
  %2506 = sext i32 %2505 to i64
  %2507 = load i32* %j, align 4
  %2508 = sub nsw i32 %2507, 1
  %2509 = sext i32 %2508 to i64
  %2510 = load i32* %1, align 4
  %2511 = sext i32 %2510 to i64
  %2512 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2511
  %2513 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2512, i32 0, i64 %2509
  %2514 = getelementptr inbounds [23 x [5 x double]]* %2513, i32 0, i64 %2506
  %2515 = getelementptr inbounds [5 x double]* %2514, i32 0, i64 4
  %2516 = load double* %2515, align 8
  %2517 = load double* %tmp1, align 8
  %2518 = fmul double %2516, %2517
  %2519 = fmul double 1.400000e+00, %2518
  %2520 = load i32* %i, align 4
  %2521 = sext i32 %2520 to i64
  %2522 = load i32* %j, align 4
  %2523 = sub nsw i32 %2522, 1
  %2524 = sext i32 %2523 to i64
  %2525 = load i32* %1, align 4
  %2526 = sext i32 %2525 to i64
  %2527 = getelementptr inbounds [22 x [23 x [23 x double]]]* @qs, i32 0, i64 %2526
  %2528 = getelementptr inbounds [23 x [23 x double]]* %2527, i32 0, i64 %2524
  %2529 = getelementptr inbounds [23 x double]* %2528, i32 0, i64 %2521
  %2530 = load double* %2529, align 8
  %2531 = load double* %tmp1, align 8
  %2532 = fmul double %2530, %2531
  %2533 = load i32* %i, align 4
  %2534 = sext i32 %2533 to i64
  %2535 = load i32* %j, align 4
  %2536 = sub nsw i32 %2535, 1
  %2537 = sext i32 %2536 to i64
  %2538 = load i32* %1, align 4
  %2539 = sext i32 %2538 to i64
  %2540 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2539
  %2541 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2540, i32 0, i64 %2537
  %2542 = getelementptr inbounds [23 x [5 x double]]* %2541, i32 0, i64 %2534
  %2543 = getelementptr inbounds [5 x double]* %2542, i32 0, i64 2
  %2544 = load double* %2543, align 8
  %2545 = load i32* %i, align 4
  %2546 = sext i32 %2545 to i64
  %2547 = load i32* %j, align 4
  %2548 = sub nsw i32 %2547, 1
  %2549 = sext i32 %2548 to i64
  %2550 = load i32* %1, align 4
  %2551 = sext i32 %2550 to i64
  %2552 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2551
  %2553 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2552, i32 0, i64 %2549
  %2554 = getelementptr inbounds [23 x [5 x double]]* %2553, i32 0, i64 %2546
  %2555 = getelementptr inbounds [5 x double]* %2554, i32 0, i64 2
  %2556 = load double* %2555, align 8
  %2557 = fmul double %2544, %2556
  %2558 = load double* %tmp2, align 8
  %2559 = fmul double %2557, %2558
  %2560 = fadd double %2532, %2559
  %2561 = fmul double 4.000000e-01, %2560
  %2562 = fsub double %2519, %2561
  %2563 = fmul double %2504, %2562
  %2564 = load double* @dt, align 8
  %2565 = load double* @ty1, align 8
  %2566 = fmul double %2564, %2565
  %2567 = load double* %r43, align 8
  %2568 = load double* %c34, align 8
  %2569 = fmul double %2567, %2568
  %2570 = load double* %c1345, align 8
  %2571 = fsub double %2569, %2570
  %2572 = fmul double %2566, %2571
  %2573 = load double* %tmp2, align 8
  %2574 = fmul double %2572, %2573
  %2575 = load i32* %i, align 4
  %2576 = sext i32 %2575 to i64
  %2577 = load i32* %j, align 4
  %2578 = sub nsw i32 %2577, 1
  %2579 = sext i32 %2578 to i64
  %2580 = load i32* %1, align 4
  %2581 = sext i32 %2580 to i64
  %2582 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2581
  %2583 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2582, i32 0, i64 %2579
  %2584 = getelementptr inbounds [23 x [5 x double]]* %2583, i32 0, i64 %2576
  %2585 = getelementptr inbounds [5 x double]* %2584, i32 0, i64 2
  %2586 = load double* %2585, align 8
  %2587 = fmul double %2574, %2586
  %2588 = fsub double %2563, %2587
  %2589 = load i32* %i, align 4
  %2590 = sext i32 %2589 to i64
  %2591 = load i32* %j, align 4
  %2592 = sext i32 %2591 to i64
  %2593 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %2592
  %2594 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2593, i32 0, i64 %2590
  %2595 = getelementptr inbounds [5 x [5 x double]]* %2594, i32 0, i64 2
  %2596 = getelementptr inbounds [5 x double]* %2595, i32 0, i64 4
  store double %2588, double* %2596, align 8
  %2597 = load double* @dt, align 8
  %2598 = fsub double -0.000000e+00, %2597
  %2599 = load double* @ty2, align 8
  %2600 = fmul double %2598, %2599
  %2601 = load i32* %i, align 4
  %2602 = sext i32 %2601 to i64
  %2603 = load i32* %j, align 4
  %2604 = sub nsw i32 %2603, 1
  %2605 = sext i32 %2604 to i64
  %2606 = load i32* %1, align 4
  %2607 = sext i32 %2606 to i64
  %2608 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2607
  %2609 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2608, i32 0, i64 %2605
  %2610 = getelementptr inbounds [23 x [5 x double]]* %2609, i32 0, i64 %2602
  %2611 = getelementptr inbounds [5 x double]* %2610, i32 0, i64 2
  %2612 = load double* %2611, align 8
  %2613 = load i32* %i, align 4
  %2614 = sext i32 %2613 to i64
  %2615 = load i32* %j, align 4
  %2616 = sub nsw i32 %2615, 1
  %2617 = sext i32 %2616 to i64
  %2618 = load i32* %1, align 4
  %2619 = sext i32 %2618 to i64
  %2620 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2619
  %2621 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2620, i32 0, i64 %2617
  %2622 = getelementptr inbounds [23 x [5 x double]]* %2621, i32 0, i64 %2614
  %2623 = getelementptr inbounds [5 x double]* %2622, i32 0, i64 3
  %2624 = load double* %2623, align 8
  %2625 = fmul double %2612, %2624
  %2626 = fmul double -4.000000e-01, %2625
  %2627 = load double* %tmp2, align 8
  %2628 = fmul double %2626, %2627
  %2629 = fmul double %2600, %2628
  %2630 = load double* @dt, align 8
  %2631 = load double* @ty1, align 8
  %2632 = fmul double %2630, %2631
  %2633 = load double* %c34, align 8
  %2634 = load double* %c1345, align 8
  %2635 = fsub double %2633, %2634
  %2636 = fmul double %2632, %2635
  %2637 = load double* %tmp2, align 8
  %2638 = fmul double %2636, %2637
  %2639 = load i32* %i, align 4
  %2640 = sext i32 %2639 to i64
  %2641 = load i32* %j, align 4
  %2642 = sub nsw i32 %2641, 1
  %2643 = sext i32 %2642 to i64
  %2644 = load i32* %1, align 4
  %2645 = sext i32 %2644 to i64
  %2646 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2645
  %2647 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2646, i32 0, i64 %2643
  %2648 = getelementptr inbounds [23 x [5 x double]]* %2647, i32 0, i64 %2640
  %2649 = getelementptr inbounds [5 x double]* %2648, i32 0, i64 3
  %2650 = load double* %2649, align 8
  %2651 = fmul double %2638, %2650
  %2652 = fsub double %2629, %2651
  %2653 = load i32* %i, align 4
  %2654 = sext i32 %2653 to i64
  %2655 = load i32* %j, align 4
  %2656 = sext i32 %2655 to i64
  %2657 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %2656
  %2658 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2657, i32 0, i64 %2654
  %2659 = getelementptr inbounds [5 x [5 x double]]* %2658, i32 0, i64 3
  %2660 = getelementptr inbounds [5 x double]* %2659, i32 0, i64 4
  store double %2652, double* %2660, align 8
  %2661 = load double* @dt, align 8
  %2662 = fsub double -0.000000e+00, %2661
  %2663 = load double* @ty2, align 8
  %2664 = fmul double %2662, %2663
  %2665 = load i32* %i, align 4
  %2666 = sext i32 %2665 to i64
  %2667 = load i32* %j, align 4
  %2668 = sub nsw i32 %2667, 1
  %2669 = sext i32 %2668 to i64
  %2670 = load i32* %1, align 4
  %2671 = sext i32 %2670 to i64
  %2672 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2671
  %2673 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2672, i32 0, i64 %2669
  %2674 = getelementptr inbounds [23 x [5 x double]]* %2673, i32 0, i64 %2666
  %2675 = getelementptr inbounds [5 x double]* %2674, i32 0, i64 2
  %2676 = load double* %2675, align 8
  %2677 = load double* %tmp1, align 8
  %2678 = fmul double %2676, %2677
  %2679 = fmul double 1.400000e+00, %2678
  %2680 = fmul double %2664, %2679
  %2681 = load double* @dt, align 8
  %2682 = load double* @ty1, align 8
  %2683 = fmul double %2681, %2682
  %2684 = load double* %c1345, align 8
  %2685 = fmul double %2683, %2684
  %2686 = load double* %tmp1, align 8
  %2687 = fmul double %2685, %2686
  %2688 = fsub double %2680, %2687
  %2689 = load double* @dt, align 8
  %2690 = load double* @ty1, align 8
  %2691 = fmul double %2689, %2690
  %2692 = load double* @dy5, align 8
  %2693 = fmul double %2691, %2692
  %2694 = fsub double %2688, %2693
  %2695 = load i32* %i, align 4
  %2696 = sext i32 %2695 to i64
  %2697 = load i32* %j, align 4
  %2698 = sext i32 %2697 to i64
  %2699 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %2698
  %2700 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2699, i32 0, i64 %2696
  %2701 = getelementptr inbounds [5 x [5 x double]]* %2700, i32 0, i64 4
  %2702 = getelementptr inbounds [5 x double]* %2701, i32 0, i64 4
  store double %2694, double* %2702, align 8
  %2703 = load i32* %i, align 4
  %2704 = sub nsw i32 %2703, 1
  %2705 = sext i32 %2704 to i64
  %2706 = load i32* %j, align 4
  %2707 = sext i32 %2706 to i64
  %2708 = load i32* %1, align 4
  %2709 = sext i32 %2708 to i64
  %2710 = getelementptr inbounds [22 x [23 x [23 x double]]]* @rho_i, i32 0, i64 %2709
  %2711 = getelementptr inbounds [23 x [23 x double]]* %2710, i32 0, i64 %2707
  %2712 = getelementptr inbounds [23 x double]* %2711, i32 0, i64 %2705
  %2713 = load double* %2712, align 8
  store double %2713, double* %tmp1, align 8
  %2714 = load double* %tmp1, align 8
  %2715 = load double* %tmp1, align 8
  %2716 = fmul double %2714, %2715
  store double %2716, double* %tmp2, align 8
  %2717 = load double* %tmp1, align 8
  %2718 = load double* %tmp2, align 8
  %2719 = fmul double %2717, %2718
  store double %2719, double* %tmp3, align 8
  %2720 = load double* @dt, align 8
  %2721 = fsub double -0.000000e+00, %2720
  %2722 = load double* @tx1, align 8
  %2723 = fmul double %2721, %2722
  %2724 = load double* @dx1, align 8
  %2725 = fmul double %2723, %2724
  %2726 = load i32* %i, align 4
  %2727 = sext i32 %2726 to i64
  %2728 = load i32* %j, align 4
  %2729 = sext i32 %2728 to i64
  %2730 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %2729
  %2731 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2730, i32 0, i64 %2727
  %2732 = getelementptr inbounds [5 x [5 x double]]* %2731, i32 0, i64 0
  %2733 = getelementptr inbounds [5 x double]* %2732, i32 0, i64 0
  store double %2725, double* %2733, align 8
  %2734 = load double* @dt, align 8
  %2735 = fsub double -0.000000e+00, %2734
  %2736 = load double* @tx2, align 8
  %2737 = fmul double %2735, %2736
  %2738 = load i32* %i, align 4
  %2739 = sext i32 %2738 to i64
  %2740 = load i32* %j, align 4
  %2741 = sext i32 %2740 to i64
  %2742 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %2741
  %2743 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2742, i32 0, i64 %2739
  %2744 = getelementptr inbounds [5 x [5 x double]]* %2743, i32 0, i64 1
  %2745 = getelementptr inbounds [5 x double]* %2744, i32 0, i64 0
  store double %2737, double* %2745, align 8
  %2746 = load i32* %i, align 4
  %2747 = sext i32 %2746 to i64
  %2748 = load i32* %j, align 4
  %2749 = sext i32 %2748 to i64
  %2750 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %2749
  %2751 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2750, i32 0, i64 %2747
  %2752 = getelementptr inbounds [5 x [5 x double]]* %2751, i32 0, i64 2
  %2753 = getelementptr inbounds [5 x double]* %2752, i32 0, i64 0
  store double 0.000000e+00, double* %2753, align 8
  %2754 = load i32* %i, align 4
  %2755 = sext i32 %2754 to i64
  %2756 = load i32* %j, align 4
  %2757 = sext i32 %2756 to i64
  %2758 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %2757
  %2759 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2758, i32 0, i64 %2755
  %2760 = getelementptr inbounds [5 x [5 x double]]* %2759, i32 0, i64 3
  %2761 = getelementptr inbounds [5 x double]* %2760, i32 0, i64 0
  store double 0.000000e+00, double* %2761, align 8
  %2762 = load i32* %i, align 4
  %2763 = sext i32 %2762 to i64
  %2764 = load i32* %j, align 4
  %2765 = sext i32 %2764 to i64
  %2766 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %2765
  %2767 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2766, i32 0, i64 %2763
  %2768 = getelementptr inbounds [5 x [5 x double]]* %2767, i32 0, i64 4
  %2769 = getelementptr inbounds [5 x double]* %2768, i32 0, i64 0
  store double 0.000000e+00, double* %2769, align 8
  %2770 = load double* @dt, align 8
  %2771 = fsub double -0.000000e+00, %2770
  %2772 = load double* @tx2, align 8
  %2773 = fmul double %2771, %2772
  %2774 = load i32* %i, align 4
  %2775 = sub nsw i32 %2774, 1
  %2776 = sext i32 %2775 to i64
  %2777 = load i32* %j, align 4
  %2778 = sext i32 %2777 to i64
  %2779 = load i32* %1, align 4
  %2780 = sext i32 %2779 to i64
  %2781 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2780
  %2782 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2781, i32 0, i64 %2778
  %2783 = getelementptr inbounds [23 x [5 x double]]* %2782, i32 0, i64 %2776
  %2784 = getelementptr inbounds [5 x double]* %2783, i32 0, i64 1
  %2785 = load double* %2784, align 8
  %2786 = load double* %tmp1, align 8
  %2787 = fmul double %2785, %2786
  %2788 = fsub double -0.000000e+00, %2787
  %2789 = load i32* %i, align 4
  %2790 = sub nsw i32 %2789, 1
  %2791 = sext i32 %2790 to i64
  %2792 = load i32* %j, align 4
  %2793 = sext i32 %2792 to i64
  %2794 = load i32* %1, align 4
  %2795 = sext i32 %2794 to i64
  %2796 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2795
  %2797 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2796, i32 0, i64 %2793
  %2798 = getelementptr inbounds [23 x [5 x double]]* %2797, i32 0, i64 %2791
  %2799 = getelementptr inbounds [5 x double]* %2798, i32 0, i64 1
  %2800 = load double* %2799, align 8
  %2801 = load double* %tmp1, align 8
  %2802 = fmul double %2800, %2801
  %2803 = fmul double %2788, %2802
  %2804 = load i32* %i, align 4
  %2805 = sub nsw i32 %2804, 1
  %2806 = sext i32 %2805 to i64
  %2807 = load i32* %j, align 4
  %2808 = sext i32 %2807 to i64
  %2809 = load i32* %1, align 4
  %2810 = sext i32 %2809 to i64
  %2811 = getelementptr inbounds [22 x [23 x [23 x double]]]* @qs, i32 0, i64 %2810
  %2812 = getelementptr inbounds [23 x [23 x double]]* %2811, i32 0, i64 %2808
  %2813 = getelementptr inbounds [23 x double]* %2812, i32 0, i64 %2806
  %2814 = load double* %2813, align 8
  %2815 = fmul double 4.000000e-01, %2814
  %2816 = load double* %tmp1, align 8
  %2817 = fmul double %2815, %2816
  %2818 = fadd double %2803, %2817
  %2819 = fmul double %2773, %2818
  %2820 = load double* @dt, align 8
  %2821 = load double* @tx1, align 8
  %2822 = fmul double %2820, %2821
  %2823 = load double* %r43, align 8
  %2824 = fsub double -0.000000e+00, %2823
  %2825 = load double* %c34, align 8
  %2826 = fmul double %2824, %2825
  %2827 = load double* %tmp2, align 8
  %2828 = fmul double %2826, %2827
  %2829 = load i32* %i, align 4
  %2830 = sub nsw i32 %2829, 1
  %2831 = sext i32 %2830 to i64
  %2832 = load i32* %j, align 4
  %2833 = sext i32 %2832 to i64
  %2834 = load i32* %1, align 4
  %2835 = sext i32 %2834 to i64
  %2836 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2835
  %2837 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2836, i32 0, i64 %2833
  %2838 = getelementptr inbounds [23 x [5 x double]]* %2837, i32 0, i64 %2831
  %2839 = getelementptr inbounds [5 x double]* %2838, i32 0, i64 1
  %2840 = load double* %2839, align 8
  %2841 = fmul double %2828, %2840
  %2842 = fmul double %2822, %2841
  %2843 = fsub double %2819, %2842
  %2844 = load i32* %i, align 4
  %2845 = sext i32 %2844 to i64
  %2846 = load i32* %j, align 4
  %2847 = sext i32 %2846 to i64
  %2848 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %2847
  %2849 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2848, i32 0, i64 %2845
  %2850 = getelementptr inbounds [5 x [5 x double]]* %2849, i32 0, i64 0
  %2851 = getelementptr inbounds [5 x double]* %2850, i32 0, i64 1
  store double %2843, double* %2851, align 8
  %2852 = load double* @dt, align 8
  %2853 = fsub double -0.000000e+00, %2852
  %2854 = load double* @tx2, align 8
  %2855 = fmul double %2853, %2854
  %2856 = load i32* %i, align 4
  %2857 = sub nsw i32 %2856, 1
  %2858 = sext i32 %2857 to i64
  %2859 = load i32* %j, align 4
  %2860 = sext i32 %2859 to i64
  %2861 = load i32* %1, align 4
  %2862 = sext i32 %2861 to i64
  %2863 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2862
  %2864 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2863, i32 0, i64 %2860
  %2865 = getelementptr inbounds [23 x [5 x double]]* %2864, i32 0, i64 %2858
  %2866 = getelementptr inbounds [5 x double]* %2865, i32 0, i64 1
  %2867 = load double* %2866, align 8
  %2868 = load double* %tmp1, align 8
  %2869 = fmul double %2867, %2868
  %2870 = fmul double 1.600000e+00, %2869
  %2871 = fmul double %2855, %2870
  %2872 = load double* @dt, align 8
  %2873 = load double* @tx1, align 8
  %2874 = fmul double %2872, %2873
  %2875 = load double* %r43, align 8
  %2876 = load double* %c34, align 8
  %2877 = fmul double %2875, %2876
  %2878 = load double* %tmp1, align 8
  %2879 = fmul double %2877, %2878
  %2880 = fmul double %2874, %2879
  %2881 = fsub double %2871, %2880
  %2882 = load double* @dt, align 8
  %2883 = load double* @tx1, align 8
  %2884 = fmul double %2882, %2883
  %2885 = load double* @dx2, align 8
  %2886 = fmul double %2884, %2885
  %2887 = fsub double %2881, %2886
  %2888 = load i32* %i, align 4
  %2889 = sext i32 %2888 to i64
  %2890 = load i32* %j, align 4
  %2891 = sext i32 %2890 to i64
  %2892 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %2891
  %2893 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2892, i32 0, i64 %2889
  %2894 = getelementptr inbounds [5 x [5 x double]]* %2893, i32 0, i64 1
  %2895 = getelementptr inbounds [5 x double]* %2894, i32 0, i64 1
  store double %2887, double* %2895, align 8
  %2896 = load double* @dt, align 8
  %2897 = fsub double -0.000000e+00, %2896
  %2898 = load double* @tx2, align 8
  %2899 = fmul double %2897, %2898
  %2900 = load i32* %i, align 4
  %2901 = sub nsw i32 %2900, 1
  %2902 = sext i32 %2901 to i64
  %2903 = load i32* %j, align 4
  %2904 = sext i32 %2903 to i64
  %2905 = load i32* %1, align 4
  %2906 = sext i32 %2905 to i64
  %2907 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2906
  %2908 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2907, i32 0, i64 %2904
  %2909 = getelementptr inbounds [23 x [5 x double]]* %2908, i32 0, i64 %2902
  %2910 = getelementptr inbounds [5 x double]* %2909, i32 0, i64 2
  %2911 = load double* %2910, align 8
  %2912 = load double* %tmp1, align 8
  %2913 = fmul double %2911, %2912
  %2914 = fmul double -4.000000e-01, %2913
  %2915 = fmul double %2899, %2914
  %2916 = load i32* %i, align 4
  %2917 = sext i32 %2916 to i64
  %2918 = load i32* %j, align 4
  %2919 = sext i32 %2918 to i64
  %2920 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %2919
  %2921 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2920, i32 0, i64 %2917
  %2922 = getelementptr inbounds [5 x [5 x double]]* %2921, i32 0, i64 2
  %2923 = getelementptr inbounds [5 x double]* %2922, i32 0, i64 1
  store double %2915, double* %2923, align 8
  %2924 = load double* @dt, align 8
  %2925 = fsub double -0.000000e+00, %2924
  %2926 = load double* @tx2, align 8
  %2927 = fmul double %2925, %2926
  %2928 = load i32* %i, align 4
  %2929 = sub nsw i32 %2928, 1
  %2930 = sext i32 %2929 to i64
  %2931 = load i32* %j, align 4
  %2932 = sext i32 %2931 to i64
  %2933 = load i32* %1, align 4
  %2934 = sext i32 %2933 to i64
  %2935 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2934
  %2936 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2935, i32 0, i64 %2932
  %2937 = getelementptr inbounds [23 x [5 x double]]* %2936, i32 0, i64 %2930
  %2938 = getelementptr inbounds [5 x double]* %2937, i32 0, i64 3
  %2939 = load double* %2938, align 8
  %2940 = load double* %tmp1, align 8
  %2941 = fmul double %2939, %2940
  %2942 = fmul double -4.000000e-01, %2941
  %2943 = fmul double %2927, %2942
  %2944 = load i32* %i, align 4
  %2945 = sext i32 %2944 to i64
  %2946 = load i32* %j, align 4
  %2947 = sext i32 %2946 to i64
  %2948 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %2947
  %2949 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2948, i32 0, i64 %2945
  %2950 = getelementptr inbounds [5 x [5 x double]]* %2949, i32 0, i64 3
  %2951 = getelementptr inbounds [5 x double]* %2950, i32 0, i64 1
  store double %2943, double* %2951, align 8
  %2952 = load double* @dt, align 8
  %2953 = fsub double -0.000000e+00, %2952
  %2954 = load double* @tx2, align 8
  %2955 = fmul double %2953, %2954
  %2956 = fmul double %2955, 4.000000e-01
  %2957 = load i32* %i, align 4
  %2958 = sext i32 %2957 to i64
  %2959 = load i32* %j, align 4
  %2960 = sext i32 %2959 to i64
  %2961 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %2960
  %2962 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2961, i32 0, i64 %2958
  %2963 = getelementptr inbounds [5 x [5 x double]]* %2962, i32 0, i64 4
  %2964 = getelementptr inbounds [5 x double]* %2963, i32 0, i64 1
  store double %2956, double* %2964, align 8
  %2965 = load double* @dt, align 8
  %2966 = fsub double -0.000000e+00, %2965
  %2967 = load double* @tx2, align 8
  %2968 = fmul double %2966, %2967
  %2969 = load i32* %i, align 4
  %2970 = sub nsw i32 %2969, 1
  %2971 = sext i32 %2970 to i64
  %2972 = load i32* %j, align 4
  %2973 = sext i32 %2972 to i64
  %2974 = load i32* %1, align 4
  %2975 = sext i32 %2974 to i64
  %2976 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2975
  %2977 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2976, i32 0, i64 %2973
  %2978 = getelementptr inbounds [23 x [5 x double]]* %2977, i32 0, i64 %2971
  %2979 = getelementptr inbounds [5 x double]* %2978, i32 0, i64 1
  %2980 = load double* %2979, align 8
  %2981 = load i32* %i, align 4
  %2982 = sub nsw i32 %2981, 1
  %2983 = sext i32 %2982 to i64
  %2984 = load i32* %j, align 4
  %2985 = sext i32 %2984 to i64
  %2986 = load i32* %1, align 4
  %2987 = sext i32 %2986 to i64
  %2988 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2987
  %2989 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2988, i32 0, i64 %2985
  %2990 = getelementptr inbounds [23 x [5 x double]]* %2989, i32 0, i64 %2983
  %2991 = getelementptr inbounds [5 x double]* %2990, i32 0, i64 2
  %2992 = load double* %2991, align 8
  %2993 = fmul double %2980, %2992
  %2994 = fsub double -0.000000e+00, %2993
  %2995 = load double* %tmp2, align 8
  %2996 = fmul double %2994, %2995
  %2997 = fmul double %2968, %2996
  %2998 = load double* @dt, align 8
  %2999 = load double* @tx1, align 8
  %3000 = fmul double %2998, %2999
  %3001 = load double* %c34, align 8
  %3002 = fsub double -0.000000e+00, %3001
  %3003 = load double* %tmp2, align 8
  %3004 = fmul double %3002, %3003
  %3005 = load i32* %i, align 4
  %3006 = sub nsw i32 %3005, 1
  %3007 = sext i32 %3006 to i64
  %3008 = load i32* %j, align 4
  %3009 = sext i32 %3008 to i64
  %3010 = load i32* %1, align 4
  %3011 = sext i32 %3010 to i64
  %3012 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3011
  %3013 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3012, i32 0, i64 %3009
  %3014 = getelementptr inbounds [23 x [5 x double]]* %3013, i32 0, i64 %3007
  %3015 = getelementptr inbounds [5 x double]* %3014, i32 0, i64 2
  %3016 = load double* %3015, align 8
  %3017 = fmul double %3004, %3016
  %3018 = fmul double %3000, %3017
  %3019 = fsub double %2997, %3018
  %3020 = load i32* %i, align 4
  %3021 = sext i32 %3020 to i64
  %3022 = load i32* %j, align 4
  %3023 = sext i32 %3022 to i64
  %3024 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %3023
  %3025 = getelementptr inbounds [23 x [5 x [5 x double]]]* %3024, i32 0, i64 %3021
  %3026 = getelementptr inbounds [5 x [5 x double]]* %3025, i32 0, i64 0
  %3027 = getelementptr inbounds [5 x double]* %3026, i32 0, i64 2
  store double %3019, double* %3027, align 8
  %3028 = load double* @dt, align 8
  %3029 = fsub double -0.000000e+00, %3028
  %3030 = load double* @tx2, align 8
  %3031 = fmul double %3029, %3030
  %3032 = load i32* %i, align 4
  %3033 = sub nsw i32 %3032, 1
  %3034 = sext i32 %3033 to i64
  %3035 = load i32* %j, align 4
  %3036 = sext i32 %3035 to i64
  %3037 = load i32* %1, align 4
  %3038 = sext i32 %3037 to i64
  %3039 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3038
  %3040 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3039, i32 0, i64 %3036
  %3041 = getelementptr inbounds [23 x [5 x double]]* %3040, i32 0, i64 %3034
  %3042 = getelementptr inbounds [5 x double]* %3041, i32 0, i64 2
  %3043 = load double* %3042, align 8
  %3044 = load double* %tmp1, align 8
  %3045 = fmul double %3043, %3044
  %3046 = fmul double %3031, %3045
  %3047 = load i32* %i, align 4
  %3048 = sext i32 %3047 to i64
  %3049 = load i32* %j, align 4
  %3050 = sext i32 %3049 to i64
  %3051 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %3050
  %3052 = getelementptr inbounds [23 x [5 x [5 x double]]]* %3051, i32 0, i64 %3048
  %3053 = getelementptr inbounds [5 x [5 x double]]* %3052, i32 0, i64 1
  %3054 = getelementptr inbounds [5 x double]* %3053, i32 0, i64 2
  store double %3046, double* %3054, align 8
  %3055 = load double* @dt, align 8
  %3056 = fsub double -0.000000e+00, %3055
  %3057 = load double* @tx2, align 8
  %3058 = fmul double %3056, %3057
  %3059 = load i32* %i, align 4
  %3060 = sub nsw i32 %3059, 1
  %3061 = sext i32 %3060 to i64
  %3062 = load i32* %j, align 4
  %3063 = sext i32 %3062 to i64
  %3064 = load i32* %1, align 4
  %3065 = sext i32 %3064 to i64
  %3066 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3065
  %3067 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3066, i32 0, i64 %3063
  %3068 = getelementptr inbounds [23 x [5 x double]]* %3067, i32 0, i64 %3061
  %3069 = getelementptr inbounds [5 x double]* %3068, i32 0, i64 1
  %3070 = load double* %3069, align 8
  %3071 = load double* %tmp1, align 8
  %3072 = fmul double %3070, %3071
  %3073 = fmul double %3058, %3072
  %3074 = load double* @dt, align 8
  %3075 = load double* @tx1, align 8
  %3076 = fmul double %3074, %3075
  %3077 = load double* %c34, align 8
  %3078 = load double* %tmp1, align 8
  %3079 = fmul double %3077, %3078
  %3080 = fmul double %3076, %3079
  %3081 = fsub double %3073, %3080
  %3082 = load double* @dt, align 8
  %3083 = load double* @tx1, align 8
  %3084 = fmul double %3082, %3083
  %3085 = load double* @dx3, align 8
  %3086 = fmul double %3084, %3085
  %3087 = fsub double %3081, %3086
  %3088 = load i32* %i, align 4
  %3089 = sext i32 %3088 to i64
  %3090 = load i32* %j, align 4
  %3091 = sext i32 %3090 to i64
  %3092 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %3091
  %3093 = getelementptr inbounds [23 x [5 x [5 x double]]]* %3092, i32 0, i64 %3089
  %3094 = getelementptr inbounds [5 x [5 x double]]* %3093, i32 0, i64 2
  %3095 = getelementptr inbounds [5 x double]* %3094, i32 0, i64 2
  store double %3087, double* %3095, align 8
  %3096 = load i32* %i, align 4
  %3097 = sext i32 %3096 to i64
  %3098 = load i32* %j, align 4
  %3099 = sext i32 %3098 to i64
  %3100 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %3099
  %3101 = getelementptr inbounds [23 x [5 x [5 x double]]]* %3100, i32 0, i64 %3097
  %3102 = getelementptr inbounds [5 x [5 x double]]* %3101, i32 0, i64 3
  %3103 = getelementptr inbounds [5 x double]* %3102, i32 0, i64 2
  store double 0.000000e+00, double* %3103, align 8
  %3104 = load i32* %i, align 4
  %3105 = sext i32 %3104 to i64
  %3106 = load i32* %j, align 4
  %3107 = sext i32 %3106 to i64
  %3108 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %3107
  %3109 = getelementptr inbounds [23 x [5 x [5 x double]]]* %3108, i32 0, i64 %3105
  %3110 = getelementptr inbounds [5 x [5 x double]]* %3109, i32 0, i64 4
  %3111 = getelementptr inbounds [5 x double]* %3110, i32 0, i64 2
  store double 0.000000e+00, double* %3111, align 8
  %3112 = load double* @dt, align 8
  %3113 = fsub double -0.000000e+00, %3112
  %3114 = load double* @tx2, align 8
  %3115 = fmul double %3113, %3114
  %3116 = load i32* %i, align 4
  %3117 = sub nsw i32 %3116, 1
  %3118 = sext i32 %3117 to i64
  %3119 = load i32* %j, align 4
  %3120 = sext i32 %3119 to i64
  %3121 = load i32* %1, align 4
  %3122 = sext i32 %3121 to i64
  %3123 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3122
  %3124 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3123, i32 0, i64 %3120
  %3125 = getelementptr inbounds [23 x [5 x double]]* %3124, i32 0, i64 %3118
  %3126 = getelementptr inbounds [5 x double]* %3125, i32 0, i64 1
  %3127 = load double* %3126, align 8
  %3128 = load i32* %i, align 4
  %3129 = sub nsw i32 %3128, 1
  %3130 = sext i32 %3129 to i64
  %3131 = load i32* %j, align 4
  %3132 = sext i32 %3131 to i64
  %3133 = load i32* %1, align 4
  %3134 = sext i32 %3133 to i64
  %3135 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3134
  %3136 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3135, i32 0, i64 %3132
  %3137 = getelementptr inbounds [23 x [5 x double]]* %3136, i32 0, i64 %3130
  %3138 = getelementptr inbounds [5 x double]* %3137, i32 0, i64 3
  %3139 = load double* %3138, align 8
  %3140 = fmul double %3127, %3139
  %3141 = fsub double -0.000000e+00, %3140
  %3142 = load double* %tmp2, align 8
  %3143 = fmul double %3141, %3142
  %3144 = fmul double %3115, %3143
  %3145 = load double* @dt, align 8
  %3146 = load double* @tx1, align 8
  %3147 = fmul double %3145, %3146
  %3148 = load double* %c34, align 8
  %3149 = fsub double -0.000000e+00, %3148
  %3150 = load double* %tmp2, align 8
  %3151 = fmul double %3149, %3150
  %3152 = load i32* %i, align 4
  %3153 = sub nsw i32 %3152, 1
  %3154 = sext i32 %3153 to i64
  %3155 = load i32* %j, align 4
  %3156 = sext i32 %3155 to i64
  %3157 = load i32* %1, align 4
  %3158 = sext i32 %3157 to i64
  %3159 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3158
  %3160 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3159, i32 0, i64 %3156
  %3161 = getelementptr inbounds [23 x [5 x double]]* %3160, i32 0, i64 %3154
  %3162 = getelementptr inbounds [5 x double]* %3161, i32 0, i64 3
  %3163 = load double* %3162, align 8
  %3164 = fmul double %3151, %3163
  %3165 = fmul double %3147, %3164
  %3166 = fsub double %3144, %3165
  %3167 = load i32* %i, align 4
  %3168 = sext i32 %3167 to i64
  %3169 = load i32* %j, align 4
  %3170 = sext i32 %3169 to i64
  %3171 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %3170
  %3172 = getelementptr inbounds [23 x [5 x [5 x double]]]* %3171, i32 0, i64 %3168
  %3173 = getelementptr inbounds [5 x [5 x double]]* %3172, i32 0, i64 0
  %3174 = getelementptr inbounds [5 x double]* %3173, i32 0, i64 3
  store double %3166, double* %3174, align 8
  %3175 = load double* @dt, align 8
  %3176 = fsub double -0.000000e+00, %3175
  %3177 = load double* @tx2, align 8
  %3178 = fmul double %3176, %3177
  %3179 = load i32* %i, align 4
  %3180 = sub nsw i32 %3179, 1
  %3181 = sext i32 %3180 to i64
  %3182 = load i32* %j, align 4
  %3183 = sext i32 %3182 to i64
  %3184 = load i32* %1, align 4
  %3185 = sext i32 %3184 to i64
  %3186 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3185
  %3187 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3186, i32 0, i64 %3183
  %3188 = getelementptr inbounds [23 x [5 x double]]* %3187, i32 0, i64 %3181
  %3189 = getelementptr inbounds [5 x double]* %3188, i32 0, i64 3
  %3190 = load double* %3189, align 8
  %3191 = load double* %tmp1, align 8
  %3192 = fmul double %3190, %3191
  %3193 = fmul double %3178, %3192
  %3194 = load i32* %i, align 4
  %3195 = sext i32 %3194 to i64
  %3196 = load i32* %j, align 4
  %3197 = sext i32 %3196 to i64
  %3198 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %3197
  %3199 = getelementptr inbounds [23 x [5 x [5 x double]]]* %3198, i32 0, i64 %3195
  %3200 = getelementptr inbounds [5 x [5 x double]]* %3199, i32 0, i64 1
  %3201 = getelementptr inbounds [5 x double]* %3200, i32 0, i64 3
  store double %3193, double* %3201, align 8
  %3202 = load i32* %i, align 4
  %3203 = sext i32 %3202 to i64
  %3204 = load i32* %j, align 4
  %3205 = sext i32 %3204 to i64
  %3206 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %3205
  %3207 = getelementptr inbounds [23 x [5 x [5 x double]]]* %3206, i32 0, i64 %3203
  %3208 = getelementptr inbounds [5 x [5 x double]]* %3207, i32 0, i64 2
  %3209 = getelementptr inbounds [5 x double]* %3208, i32 0, i64 3
  store double 0.000000e+00, double* %3209, align 8
  %3210 = load double* @dt, align 8
  %3211 = fsub double -0.000000e+00, %3210
  %3212 = load double* @tx2, align 8
  %3213 = fmul double %3211, %3212
  %3214 = load i32* %i, align 4
  %3215 = sub nsw i32 %3214, 1
  %3216 = sext i32 %3215 to i64
  %3217 = load i32* %j, align 4
  %3218 = sext i32 %3217 to i64
  %3219 = load i32* %1, align 4
  %3220 = sext i32 %3219 to i64
  %3221 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3220
  %3222 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3221, i32 0, i64 %3218
  %3223 = getelementptr inbounds [23 x [5 x double]]* %3222, i32 0, i64 %3216
  %3224 = getelementptr inbounds [5 x double]* %3223, i32 0, i64 1
  %3225 = load double* %3224, align 8
  %3226 = load double* %tmp1, align 8
  %3227 = fmul double %3225, %3226
  %3228 = fmul double %3213, %3227
  %3229 = load double* @dt, align 8
  %3230 = load double* @tx1, align 8
  %3231 = fmul double %3229, %3230
  %3232 = load double* %c34, align 8
  %3233 = load double* %tmp1, align 8
  %3234 = fmul double %3232, %3233
  %3235 = fmul double %3231, %3234
  %3236 = fsub double %3228, %3235
  %3237 = load double* @dt, align 8
  %3238 = load double* @tx1, align 8
  %3239 = fmul double %3237, %3238
  %3240 = load double* @dx4, align 8
  %3241 = fmul double %3239, %3240
  %3242 = fsub double %3236, %3241
  %3243 = load i32* %i, align 4
  %3244 = sext i32 %3243 to i64
  %3245 = load i32* %j, align 4
  %3246 = sext i32 %3245 to i64
  %3247 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %3246
  %3248 = getelementptr inbounds [23 x [5 x [5 x double]]]* %3247, i32 0, i64 %3244
  %3249 = getelementptr inbounds [5 x [5 x double]]* %3248, i32 0, i64 3
  %3250 = getelementptr inbounds [5 x double]* %3249, i32 0, i64 3
  store double %3242, double* %3250, align 8
  %3251 = load i32* %i, align 4
  %3252 = sext i32 %3251 to i64
  %3253 = load i32* %j, align 4
  %3254 = sext i32 %3253 to i64
  %3255 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %3254
  %3256 = getelementptr inbounds [23 x [5 x [5 x double]]]* %3255, i32 0, i64 %3252
  %3257 = getelementptr inbounds [5 x [5 x double]]* %3256, i32 0, i64 4
  %3258 = getelementptr inbounds [5 x double]* %3257, i32 0, i64 3
  store double 0.000000e+00, double* %3258, align 8
  %3259 = load double* @dt, align 8
  %3260 = fsub double -0.000000e+00, %3259
  %3261 = load double* @tx2, align 8
  %3262 = fmul double %3260, %3261
  %3263 = load i32* %i, align 4
  %3264 = sub nsw i32 %3263, 1
  %3265 = sext i32 %3264 to i64
  %3266 = load i32* %j, align 4
  %3267 = sext i32 %3266 to i64
  %3268 = load i32* %1, align 4
  %3269 = sext i32 %3268 to i64
  %3270 = getelementptr inbounds [22 x [23 x [23 x double]]]* @qs, i32 0, i64 %3269
  %3271 = getelementptr inbounds [23 x [23 x double]]* %3270, i32 0, i64 %3267
  %3272 = getelementptr inbounds [23 x double]* %3271, i32 0, i64 %3265
  %3273 = load double* %3272, align 8
  %3274 = fmul double 8.000000e-01, %3273
  %3275 = load i32* %i, align 4
  %3276 = sub nsw i32 %3275, 1
  %3277 = sext i32 %3276 to i64
  %3278 = load i32* %j, align 4
  %3279 = sext i32 %3278 to i64
  %3280 = load i32* %1, align 4
  %3281 = sext i32 %3280 to i64
  %3282 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3281
  %3283 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3282, i32 0, i64 %3279
  %3284 = getelementptr inbounds [23 x [5 x double]]* %3283, i32 0, i64 %3277
  %3285 = getelementptr inbounds [5 x double]* %3284, i32 0, i64 4
  %3286 = load double* %3285, align 8
  %3287 = fmul double 1.400000e+00, %3286
  %3288 = fsub double %3274, %3287
  %3289 = load i32* %i, align 4
  %3290 = sub nsw i32 %3289, 1
  %3291 = sext i32 %3290 to i64
  %3292 = load i32* %j, align 4
  %3293 = sext i32 %3292 to i64
  %3294 = load i32* %1, align 4
  %3295 = sext i32 %3294 to i64
  %3296 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3295
  %3297 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3296, i32 0, i64 %3293
  %3298 = getelementptr inbounds [23 x [5 x double]]* %3297, i32 0, i64 %3291
  %3299 = getelementptr inbounds [5 x double]* %3298, i32 0, i64 1
  %3300 = load double* %3299, align 8
  %3301 = fmul double %3288, %3300
  %3302 = load double* %tmp2, align 8
  %3303 = fmul double %3301, %3302
  %3304 = fmul double %3262, %3303
  %3305 = load double* @dt, align 8
  %3306 = load double* @tx1, align 8
  %3307 = fmul double %3305, %3306
  %3308 = load double* %r43, align 8
  %3309 = load double* %c34, align 8
  %3310 = fmul double %3308, %3309
  %3311 = load double* %c1345, align 8
  %3312 = fsub double %3310, %3311
  %3313 = fsub double -0.000000e+00, %3312
  %3314 = load double* %tmp3, align 8
  %3315 = fmul double %3313, %3314
  %3316 = load i32* %i, align 4
  %3317 = sub nsw i32 %3316, 1
  %3318 = sext i32 %3317 to i64
  %3319 = load i32* %j, align 4
  %3320 = sext i32 %3319 to i64
  %3321 = load i32* %1, align 4
  %3322 = sext i32 %3321 to i64
  %3323 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3322
  %3324 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3323, i32 0, i64 %3320
  %3325 = getelementptr inbounds [23 x [5 x double]]* %3324, i32 0, i64 %3318
  %3326 = getelementptr inbounds [5 x double]* %3325, i32 0, i64 1
  %3327 = load double* %3326, align 8
  %3328 = load i32* %i, align 4
  %3329 = sub nsw i32 %3328, 1
  %3330 = sext i32 %3329 to i64
  %3331 = load i32* %j, align 4
  %3332 = sext i32 %3331 to i64
  %3333 = load i32* %1, align 4
  %3334 = sext i32 %3333 to i64
  %3335 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3334
  %3336 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3335, i32 0, i64 %3332
  %3337 = getelementptr inbounds [23 x [5 x double]]* %3336, i32 0, i64 %3330
  %3338 = getelementptr inbounds [5 x double]* %3337, i32 0, i64 1
  %3339 = load double* %3338, align 8
  %3340 = fmul double %3327, %3339
  %3341 = fmul double %3315, %3340
  %3342 = load double* %c34, align 8
  %3343 = load double* %c1345, align 8
  %3344 = fsub double %3342, %3343
  %3345 = load double* %tmp3, align 8
  %3346 = fmul double %3344, %3345
  %3347 = load i32* %i, align 4
  %3348 = sub nsw i32 %3347, 1
  %3349 = sext i32 %3348 to i64
  %3350 = load i32* %j, align 4
  %3351 = sext i32 %3350 to i64
  %3352 = load i32* %1, align 4
  %3353 = sext i32 %3352 to i64
  %3354 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3353
  %3355 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3354, i32 0, i64 %3351
  %3356 = getelementptr inbounds [23 x [5 x double]]* %3355, i32 0, i64 %3349
  %3357 = getelementptr inbounds [5 x double]* %3356, i32 0, i64 2
  %3358 = load double* %3357, align 8
  %3359 = load i32* %i, align 4
  %3360 = sub nsw i32 %3359, 1
  %3361 = sext i32 %3360 to i64
  %3362 = load i32* %j, align 4
  %3363 = sext i32 %3362 to i64
  %3364 = load i32* %1, align 4
  %3365 = sext i32 %3364 to i64
  %3366 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3365
  %3367 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3366, i32 0, i64 %3363
  %3368 = getelementptr inbounds [23 x [5 x double]]* %3367, i32 0, i64 %3361
  %3369 = getelementptr inbounds [5 x double]* %3368, i32 0, i64 2
  %3370 = load double* %3369, align 8
  %3371 = fmul double %3358, %3370
  %3372 = fmul double %3346, %3371
  %3373 = fsub double %3341, %3372
  %3374 = load double* %c34, align 8
  %3375 = load double* %c1345, align 8
  %3376 = fsub double %3374, %3375
  %3377 = load double* %tmp3, align 8
  %3378 = fmul double %3376, %3377
  %3379 = load i32* %i, align 4
  %3380 = sub nsw i32 %3379, 1
  %3381 = sext i32 %3380 to i64
  %3382 = load i32* %j, align 4
  %3383 = sext i32 %3382 to i64
  %3384 = load i32* %1, align 4
  %3385 = sext i32 %3384 to i64
  %3386 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3385
  %3387 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3386, i32 0, i64 %3383
  %3388 = getelementptr inbounds [23 x [5 x double]]* %3387, i32 0, i64 %3381
  %3389 = getelementptr inbounds [5 x double]* %3388, i32 0, i64 3
  %3390 = load double* %3389, align 8
  %3391 = load i32* %i, align 4
  %3392 = sub nsw i32 %3391, 1
  %3393 = sext i32 %3392 to i64
  %3394 = load i32* %j, align 4
  %3395 = sext i32 %3394 to i64
  %3396 = load i32* %1, align 4
  %3397 = sext i32 %3396 to i64
  %3398 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3397
  %3399 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3398, i32 0, i64 %3395
  %3400 = getelementptr inbounds [23 x [5 x double]]* %3399, i32 0, i64 %3393
  %3401 = getelementptr inbounds [5 x double]* %3400, i32 0, i64 3
  %3402 = load double* %3401, align 8
  %3403 = fmul double %3390, %3402
  %3404 = fmul double %3378, %3403
  %3405 = fsub double %3373, %3404
  %3406 = load double* %c1345, align 8
  %3407 = load double* %tmp2, align 8
  %3408 = fmul double %3406, %3407
  %3409 = load i32* %i, align 4
  %3410 = sub nsw i32 %3409, 1
  %3411 = sext i32 %3410 to i64
  %3412 = load i32* %j, align 4
  %3413 = sext i32 %3412 to i64
  %3414 = load i32* %1, align 4
  %3415 = sext i32 %3414 to i64
  %3416 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3415
  %3417 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3416, i32 0, i64 %3413
  %3418 = getelementptr inbounds [23 x [5 x double]]* %3417, i32 0, i64 %3411
  %3419 = getelementptr inbounds [5 x double]* %3418, i32 0, i64 4
  %3420 = load double* %3419, align 8
  %3421 = fmul double %3408, %3420
  %3422 = fsub double %3405, %3421
  %3423 = fmul double %3307, %3422
  %3424 = fsub double %3304, %3423
  %3425 = load i32* %i, align 4
  %3426 = sext i32 %3425 to i64
  %3427 = load i32* %j, align 4
  %3428 = sext i32 %3427 to i64
  %3429 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %3428
  %3430 = getelementptr inbounds [23 x [5 x [5 x double]]]* %3429, i32 0, i64 %3426
  %3431 = getelementptr inbounds [5 x [5 x double]]* %3430, i32 0, i64 0
  %3432 = getelementptr inbounds [5 x double]* %3431, i32 0, i64 4
  store double %3424, double* %3432, align 8
  %3433 = load double* @dt, align 8
  %3434 = fsub double -0.000000e+00, %3433
  %3435 = load double* @tx2, align 8
  %3436 = fmul double %3434, %3435
  %3437 = load i32* %i, align 4
  %3438 = sub nsw i32 %3437, 1
  %3439 = sext i32 %3438 to i64
  %3440 = load i32* %j, align 4
  %3441 = sext i32 %3440 to i64
  %3442 = load i32* %1, align 4
  %3443 = sext i32 %3442 to i64
  %3444 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3443
  %3445 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3444, i32 0, i64 %3441
  %3446 = getelementptr inbounds [23 x [5 x double]]* %3445, i32 0, i64 %3439
  %3447 = getelementptr inbounds [5 x double]* %3446, i32 0, i64 4
  %3448 = load double* %3447, align 8
  %3449 = load double* %tmp1, align 8
  %3450 = fmul double %3448, %3449
  %3451 = fmul double 1.400000e+00, %3450
  %3452 = load i32* %i, align 4
  %3453 = sub nsw i32 %3452, 1
  %3454 = sext i32 %3453 to i64
  %3455 = load i32* %j, align 4
  %3456 = sext i32 %3455 to i64
  %3457 = load i32* %1, align 4
  %3458 = sext i32 %3457 to i64
  %3459 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3458
  %3460 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3459, i32 0, i64 %3456
  %3461 = getelementptr inbounds [23 x [5 x double]]* %3460, i32 0, i64 %3454
  %3462 = getelementptr inbounds [5 x double]* %3461, i32 0, i64 1
  %3463 = load double* %3462, align 8
  %3464 = load i32* %i, align 4
  %3465 = sub nsw i32 %3464, 1
  %3466 = sext i32 %3465 to i64
  %3467 = load i32* %j, align 4
  %3468 = sext i32 %3467 to i64
  %3469 = load i32* %1, align 4
  %3470 = sext i32 %3469 to i64
  %3471 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3470
  %3472 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3471, i32 0, i64 %3468
  %3473 = getelementptr inbounds [23 x [5 x double]]* %3472, i32 0, i64 %3466
  %3474 = getelementptr inbounds [5 x double]* %3473, i32 0, i64 1
  %3475 = load double* %3474, align 8
  %3476 = fmul double %3463, %3475
  %3477 = load double* %tmp2, align 8
  %3478 = fmul double %3476, %3477
  %3479 = load i32* %i, align 4
  %3480 = sub nsw i32 %3479, 1
  %3481 = sext i32 %3480 to i64
  %3482 = load i32* %j, align 4
  %3483 = sext i32 %3482 to i64
  %3484 = load i32* %1, align 4
  %3485 = sext i32 %3484 to i64
  %3486 = getelementptr inbounds [22 x [23 x [23 x double]]]* @qs, i32 0, i64 %3485
  %3487 = getelementptr inbounds [23 x [23 x double]]* %3486, i32 0, i64 %3483
  %3488 = getelementptr inbounds [23 x double]* %3487, i32 0, i64 %3481
  %3489 = load double* %3488, align 8
  %3490 = load double* %tmp1, align 8
  %3491 = fmul double %3489, %3490
  %3492 = fadd double %3478, %3491
  %3493 = fmul double 4.000000e-01, %3492
  %3494 = fsub double %3451, %3493
  %3495 = fmul double %3436, %3494
  %3496 = load double* @dt, align 8
  %3497 = load double* @tx1, align 8
  %3498 = fmul double %3496, %3497
  %3499 = load double* %r43, align 8
  %3500 = load double* %c34, align 8
  %3501 = fmul double %3499, %3500
  %3502 = load double* %c1345, align 8
  %3503 = fsub double %3501, %3502
  %3504 = fmul double %3498, %3503
  %3505 = load double* %tmp2, align 8
  %3506 = fmul double %3504, %3505
  %3507 = load i32* %i, align 4
  %3508 = sub nsw i32 %3507, 1
  %3509 = sext i32 %3508 to i64
  %3510 = load i32* %j, align 4
  %3511 = sext i32 %3510 to i64
  %3512 = load i32* %1, align 4
  %3513 = sext i32 %3512 to i64
  %3514 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3513
  %3515 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3514, i32 0, i64 %3511
  %3516 = getelementptr inbounds [23 x [5 x double]]* %3515, i32 0, i64 %3509
  %3517 = getelementptr inbounds [5 x double]* %3516, i32 0, i64 1
  %3518 = load double* %3517, align 8
  %3519 = fmul double %3506, %3518
  %3520 = fsub double %3495, %3519
  %3521 = load i32* %i, align 4
  %3522 = sext i32 %3521 to i64
  %3523 = load i32* %j, align 4
  %3524 = sext i32 %3523 to i64
  %3525 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %3524
  %3526 = getelementptr inbounds [23 x [5 x [5 x double]]]* %3525, i32 0, i64 %3522
  %3527 = getelementptr inbounds [5 x [5 x double]]* %3526, i32 0, i64 1
  %3528 = getelementptr inbounds [5 x double]* %3527, i32 0, i64 4
  store double %3520, double* %3528, align 8
  %3529 = load double* @dt, align 8
  %3530 = fsub double -0.000000e+00, %3529
  %3531 = load double* @tx2, align 8
  %3532 = fmul double %3530, %3531
  %3533 = load i32* %i, align 4
  %3534 = sub nsw i32 %3533, 1
  %3535 = sext i32 %3534 to i64
  %3536 = load i32* %j, align 4
  %3537 = sext i32 %3536 to i64
  %3538 = load i32* %1, align 4
  %3539 = sext i32 %3538 to i64
  %3540 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3539
  %3541 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3540, i32 0, i64 %3537
  %3542 = getelementptr inbounds [23 x [5 x double]]* %3541, i32 0, i64 %3535
  %3543 = getelementptr inbounds [5 x double]* %3542, i32 0, i64 2
  %3544 = load double* %3543, align 8
  %3545 = load i32* %i, align 4
  %3546 = sub nsw i32 %3545, 1
  %3547 = sext i32 %3546 to i64
  %3548 = load i32* %j, align 4
  %3549 = sext i32 %3548 to i64
  %3550 = load i32* %1, align 4
  %3551 = sext i32 %3550 to i64
  %3552 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3551
  %3553 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3552, i32 0, i64 %3549
  %3554 = getelementptr inbounds [23 x [5 x double]]* %3553, i32 0, i64 %3547
  %3555 = getelementptr inbounds [5 x double]* %3554, i32 0, i64 1
  %3556 = load double* %3555, align 8
  %3557 = fmul double %3544, %3556
  %3558 = fmul double -4.000000e-01, %3557
  %3559 = load double* %tmp2, align 8
  %3560 = fmul double %3558, %3559
  %3561 = fmul double %3532, %3560
  %3562 = load double* @dt, align 8
  %3563 = load double* @tx1, align 8
  %3564 = fmul double %3562, %3563
  %3565 = load double* %c34, align 8
  %3566 = load double* %c1345, align 8
  %3567 = fsub double %3565, %3566
  %3568 = fmul double %3564, %3567
  %3569 = load double* %tmp2, align 8
  %3570 = fmul double %3568, %3569
  %3571 = load i32* %i, align 4
  %3572 = sub nsw i32 %3571, 1
  %3573 = sext i32 %3572 to i64
  %3574 = load i32* %j, align 4
  %3575 = sext i32 %3574 to i64
  %3576 = load i32* %1, align 4
  %3577 = sext i32 %3576 to i64
  %3578 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3577
  %3579 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3578, i32 0, i64 %3575
  %3580 = getelementptr inbounds [23 x [5 x double]]* %3579, i32 0, i64 %3573
  %3581 = getelementptr inbounds [5 x double]* %3580, i32 0, i64 2
  %3582 = load double* %3581, align 8
  %3583 = fmul double %3570, %3582
  %3584 = fsub double %3561, %3583
  %3585 = load i32* %i, align 4
  %3586 = sext i32 %3585 to i64
  %3587 = load i32* %j, align 4
  %3588 = sext i32 %3587 to i64
  %3589 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %3588
  %3590 = getelementptr inbounds [23 x [5 x [5 x double]]]* %3589, i32 0, i64 %3586
  %3591 = getelementptr inbounds [5 x [5 x double]]* %3590, i32 0, i64 2
  %3592 = getelementptr inbounds [5 x double]* %3591, i32 0, i64 4
  store double %3584, double* %3592, align 8
  %3593 = load double* @dt, align 8
  %3594 = fsub double -0.000000e+00, %3593
  %3595 = load double* @tx2, align 8
  %3596 = fmul double %3594, %3595
  %3597 = load i32* %i, align 4
  %3598 = sub nsw i32 %3597, 1
  %3599 = sext i32 %3598 to i64
  %3600 = load i32* %j, align 4
  %3601 = sext i32 %3600 to i64
  %3602 = load i32* %1, align 4
  %3603 = sext i32 %3602 to i64
  %3604 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3603
  %3605 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3604, i32 0, i64 %3601
  %3606 = getelementptr inbounds [23 x [5 x double]]* %3605, i32 0, i64 %3599
  %3607 = getelementptr inbounds [5 x double]* %3606, i32 0, i64 3
  %3608 = load double* %3607, align 8
  %3609 = load i32* %i, align 4
  %3610 = sub nsw i32 %3609, 1
  %3611 = sext i32 %3610 to i64
  %3612 = load i32* %j, align 4
  %3613 = sext i32 %3612 to i64
  %3614 = load i32* %1, align 4
  %3615 = sext i32 %3614 to i64
  %3616 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3615
  %3617 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3616, i32 0, i64 %3613
  %3618 = getelementptr inbounds [23 x [5 x double]]* %3617, i32 0, i64 %3611
  %3619 = getelementptr inbounds [5 x double]* %3618, i32 0, i64 1
  %3620 = load double* %3619, align 8
  %3621 = fmul double %3608, %3620
  %3622 = fmul double -4.000000e-01, %3621
  %3623 = load double* %tmp2, align 8
  %3624 = fmul double %3622, %3623
  %3625 = fmul double %3596, %3624
  %3626 = load double* @dt, align 8
  %3627 = load double* @tx1, align 8
  %3628 = fmul double %3626, %3627
  %3629 = load double* %c34, align 8
  %3630 = load double* %c1345, align 8
  %3631 = fsub double %3629, %3630
  %3632 = fmul double %3628, %3631
  %3633 = load double* %tmp2, align 8
  %3634 = fmul double %3632, %3633
  %3635 = load i32* %i, align 4
  %3636 = sub nsw i32 %3635, 1
  %3637 = sext i32 %3636 to i64
  %3638 = load i32* %j, align 4
  %3639 = sext i32 %3638 to i64
  %3640 = load i32* %1, align 4
  %3641 = sext i32 %3640 to i64
  %3642 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3641
  %3643 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3642, i32 0, i64 %3639
  %3644 = getelementptr inbounds [23 x [5 x double]]* %3643, i32 0, i64 %3637
  %3645 = getelementptr inbounds [5 x double]* %3644, i32 0, i64 3
  %3646 = load double* %3645, align 8
  %3647 = fmul double %3634, %3646
  %3648 = fsub double %3625, %3647
  %3649 = load i32* %i, align 4
  %3650 = sext i32 %3649 to i64
  %3651 = load i32* %j, align 4
  %3652 = sext i32 %3651 to i64
  %3653 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %3652
  %3654 = getelementptr inbounds [23 x [5 x [5 x double]]]* %3653, i32 0, i64 %3650
  %3655 = getelementptr inbounds [5 x [5 x double]]* %3654, i32 0, i64 3
  %3656 = getelementptr inbounds [5 x double]* %3655, i32 0, i64 4
  store double %3648, double* %3656, align 8
  %3657 = load double* @dt, align 8
  %3658 = fsub double -0.000000e+00, %3657
  %3659 = load double* @tx2, align 8
  %3660 = fmul double %3658, %3659
  %3661 = load i32* %i, align 4
  %3662 = sub nsw i32 %3661, 1
  %3663 = sext i32 %3662 to i64
  %3664 = load i32* %j, align 4
  %3665 = sext i32 %3664 to i64
  %3666 = load i32* %1, align 4
  %3667 = sext i32 %3666 to i64
  %3668 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3667
  %3669 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3668, i32 0, i64 %3665
  %3670 = getelementptr inbounds [23 x [5 x double]]* %3669, i32 0, i64 %3663
  %3671 = getelementptr inbounds [5 x double]* %3670, i32 0, i64 1
  %3672 = load double* %3671, align 8
  %3673 = load double* %tmp1, align 8
  %3674 = fmul double %3672, %3673
  %3675 = fmul double 1.400000e+00, %3674
  %3676 = fmul double %3660, %3675
  %3677 = load double* @dt, align 8
  %3678 = load double* @tx1, align 8
  %3679 = fmul double %3677, %3678
  %3680 = load double* %c1345, align 8
  %3681 = fmul double %3679, %3680
  %3682 = load double* %tmp1, align 8
  %3683 = fmul double %3681, %3682
  %3684 = fsub double %3676, %3683
  %3685 = load double* @dt, align 8
  %3686 = load double* @tx1, align 8
  %3687 = fmul double %3685, %3686
  %3688 = load double* @dx5, align 8
  %3689 = fmul double %3687, %3688
  %3690 = fsub double %3684, %3689
  %3691 = load i32* %i, align 4
  %3692 = sext i32 %3691 to i64
  %3693 = load i32* %j, align 4
  %3694 = sext i32 %3693 to i64
  %3695 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %3694
  %3696 = getelementptr inbounds [23 x [5 x [5 x double]]]* %3695, i32 0, i64 %3692
  %3697 = getelementptr inbounds [5 x [5 x double]]* %3696, i32 0, i64 4
  %3698 = getelementptr inbounds [5 x double]* %3697, i32 0, i64 4
  store double %3690, double* %3698, align 8
  br label %3699

; <label>:3699                                    ; preds = %13
  %3700 = load i32* %i, align 4
  %3701 = add nsw i32 %3700, 1
  store i32 %3701, i32* %i, align 4
  br label %9

; <label>:3702                                    ; preds = %9
  br label %3703

; <label>:3703                                    ; preds = %3702
  %3704 = load i32* %j, align 4
  %3705 = add nsw i32 %3704, 1
  store i32 %3705, i32* %j, align 4
  br label %3

; <label>:3706                                    ; preds = %3
  ret void
}

; Function Attrs: nounwind uwtable
define void @jacu(i32 %k) #0 {
  %1 = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %r43 = alloca double, align 8
  %c1345 = alloca double, align 8
  %c34 = alloca double, align 8
  %tmp1 = alloca double, align 8
  %tmp2 = alloca double, align 8
  %tmp3 = alloca double, align 8
  store i32 %k, i32* %1, align 4
  store double 0x3FF5555555555555, double* %r43, align 8
  store double 0x3FC916872B020C49, double* %c1345, align 8
  store double 1.000000e-01, double* %c34, align 8
  %2 = load i32* @jst, align 4
  store i32 %2, i32* %j, align 4
  br label %3

; <label>:3                                       ; preds = %3652, %0
  %4 = load i32* %j, align 4
  %5 = load i32* @jend, align 4
  %6 = icmp slt i32 %4, %5
  br i1 %6, label %7, label %3655

; <label>:7                                       ; preds = %3
  %8 = load i32* @ist, align 4
  store i32 %8, i32* %i, align 4
  br label %9

; <label>:9                                       ; preds = %3648, %7
  %10 = load i32* %i, align 4
  %11 = load i32* @iend, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %13, label %3651

; <label>:13                                      ; preds = %9
  %14 = load i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load i32* %j, align 4
  %17 = sext i32 %16 to i64
  %18 = load i32* %1, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [22 x [23 x [23 x double]]]* @rho_i, i32 0, i64 %19
  %21 = getelementptr inbounds [23 x [23 x double]]* %20, i32 0, i64 %17
  %22 = getelementptr inbounds [23 x double]* %21, i32 0, i64 %15
  %23 = load double* %22, align 8
  store double %23, double* %tmp1, align 8
  %24 = load double* %tmp1, align 8
  %25 = load double* %tmp1, align 8
  %26 = fmul double %24, %25
  store double %26, double* %tmp2, align 8
  %27 = load double* %tmp1, align 8
  %28 = load double* %tmp2, align 8
  %29 = fmul double %27, %28
  store double %29, double* %tmp3, align 8
  %30 = load double* @dt, align 8
  %31 = fmul double %30, 2.000000e+00
  %32 = load double* @tx1, align 8
  %33 = load double* @dx1, align 8
  %34 = fmul double %32, %33
  %35 = load double* @ty1, align 8
  %36 = load double* @dy1, align 8
  %37 = fmul double %35, %36
  %38 = fadd double %34, %37
  %39 = load double* @tz1, align 8
  %40 = load double* @dz1, align 8
  %41 = fmul double %39, %40
  %42 = fadd double %38, %41
  %43 = fmul double %31, %42
  %44 = fadd double 1.000000e+00, %43
  %45 = load i32* %i, align 4
  %46 = sext i32 %45 to i64
  %47 = load i32* %j, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %48
  %50 = getelementptr inbounds [23 x [5 x [5 x double]]]* %49, i32 0, i64 %46
  %51 = getelementptr inbounds [5 x [5 x double]]* %50, i32 0, i64 0
  %52 = getelementptr inbounds [5 x double]* %51, i32 0, i64 0
  store double %44, double* %52, align 8
  %53 = load i32* %i, align 4
  %54 = sext i32 %53 to i64
  %55 = load i32* %j, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %56
  %58 = getelementptr inbounds [23 x [5 x [5 x double]]]* %57, i32 0, i64 %54
  %59 = getelementptr inbounds [5 x [5 x double]]* %58, i32 0, i64 1
  %60 = getelementptr inbounds [5 x double]* %59, i32 0, i64 0
  store double 0.000000e+00, double* %60, align 8
  %61 = load i32* %i, align 4
  %62 = sext i32 %61 to i64
  %63 = load i32* %j, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %64
  %66 = getelementptr inbounds [23 x [5 x [5 x double]]]* %65, i32 0, i64 %62
  %67 = getelementptr inbounds [5 x [5 x double]]* %66, i32 0, i64 2
  %68 = getelementptr inbounds [5 x double]* %67, i32 0, i64 0
  store double 0.000000e+00, double* %68, align 8
  %69 = load i32* %i, align 4
  %70 = sext i32 %69 to i64
  %71 = load i32* %j, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %72
  %74 = getelementptr inbounds [23 x [5 x [5 x double]]]* %73, i32 0, i64 %70
  %75 = getelementptr inbounds [5 x [5 x double]]* %74, i32 0, i64 3
  %76 = getelementptr inbounds [5 x double]* %75, i32 0, i64 0
  store double 0.000000e+00, double* %76, align 8
  %77 = load i32* %i, align 4
  %78 = sext i32 %77 to i64
  %79 = load i32* %j, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %80
  %82 = getelementptr inbounds [23 x [5 x [5 x double]]]* %81, i32 0, i64 %78
  %83 = getelementptr inbounds [5 x [5 x double]]* %82, i32 0, i64 4
  %84 = getelementptr inbounds [5 x double]* %83, i32 0, i64 0
  store double 0.000000e+00, double* %84, align 8
  %85 = load double* @dt, align 8
  %86 = fmul double %85, 2.000000e+00
  %87 = load double* @tx1, align 8
  %88 = fsub double -0.000000e+00, %87
  %89 = load double* %r43, align 8
  %90 = fmul double %88, %89
  %91 = load double* @ty1, align 8
  %92 = fsub double %90, %91
  %93 = load double* @tz1, align 8
  %94 = fsub double %92, %93
  %95 = fmul double %86, %94
  %96 = load double* %c34, align 8
  %97 = load double* %tmp2, align 8
  %98 = fmul double %96, %97
  %99 = load i32* %i, align 4
  %100 = sext i32 %99 to i64
  %101 = load i32* %j, align 4
  %102 = sext i32 %101 to i64
  %103 = load i32* %1, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %104
  %106 = getelementptr inbounds [23 x [23 x [5 x double]]]* %105, i32 0, i64 %102
  %107 = getelementptr inbounds [23 x [5 x double]]* %106, i32 0, i64 %100
  %108 = getelementptr inbounds [5 x double]* %107, i32 0, i64 1
  %109 = load double* %108, align 8
  %110 = fmul double %98, %109
  %111 = fmul double %95, %110
  %112 = load i32* %i, align 4
  %113 = sext i32 %112 to i64
  %114 = load i32* %j, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %115
  %117 = getelementptr inbounds [23 x [5 x [5 x double]]]* %116, i32 0, i64 %113
  %118 = getelementptr inbounds [5 x [5 x double]]* %117, i32 0, i64 0
  %119 = getelementptr inbounds [5 x double]* %118, i32 0, i64 1
  store double %111, double* %119, align 8
  %120 = load double* @dt, align 8
  %121 = fmul double %120, 2.000000e+00
  %122 = load double* %c34, align 8
  %123 = fmul double %121, %122
  %124 = load double* %tmp1, align 8
  %125 = fmul double %123, %124
  %126 = load double* @tx1, align 8
  %127 = load double* %r43, align 8
  %128 = fmul double %126, %127
  %129 = load double* @ty1, align 8
  %130 = fadd double %128, %129
  %131 = load double* @tz1, align 8
  %132 = fadd double %130, %131
  %133 = fmul double %125, %132
  %134 = fadd double 1.000000e+00, %133
  %135 = load double* @dt, align 8
  %136 = fmul double %135, 2.000000e+00
  %137 = load double* @tx1, align 8
  %138 = load double* @dx2, align 8
  %139 = fmul double %137, %138
  %140 = load double* @ty1, align 8
  %141 = load double* @dy2, align 8
  %142 = fmul double %140, %141
  %143 = fadd double %139, %142
  %144 = load double* @tz1, align 8
  %145 = load double* @dz2, align 8
  %146 = fmul double %144, %145
  %147 = fadd double %143, %146
  %148 = fmul double %136, %147
  %149 = fadd double %134, %148
  %150 = load i32* %i, align 4
  %151 = sext i32 %150 to i64
  %152 = load i32* %j, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %153
  %155 = getelementptr inbounds [23 x [5 x [5 x double]]]* %154, i32 0, i64 %151
  %156 = getelementptr inbounds [5 x [5 x double]]* %155, i32 0, i64 1
  %157 = getelementptr inbounds [5 x double]* %156, i32 0, i64 1
  store double %149, double* %157, align 8
  %158 = load i32* %i, align 4
  %159 = sext i32 %158 to i64
  %160 = load i32* %j, align 4
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %161
  %163 = getelementptr inbounds [23 x [5 x [5 x double]]]* %162, i32 0, i64 %159
  %164 = getelementptr inbounds [5 x [5 x double]]* %163, i32 0, i64 2
  %165 = getelementptr inbounds [5 x double]* %164, i32 0, i64 1
  store double 0.000000e+00, double* %165, align 8
  %166 = load i32* %i, align 4
  %167 = sext i32 %166 to i64
  %168 = load i32* %j, align 4
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %169
  %171 = getelementptr inbounds [23 x [5 x [5 x double]]]* %170, i32 0, i64 %167
  %172 = getelementptr inbounds [5 x [5 x double]]* %171, i32 0, i64 3
  %173 = getelementptr inbounds [5 x double]* %172, i32 0, i64 1
  store double 0.000000e+00, double* %173, align 8
  %174 = load i32* %i, align 4
  %175 = sext i32 %174 to i64
  %176 = load i32* %j, align 4
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %177
  %179 = getelementptr inbounds [23 x [5 x [5 x double]]]* %178, i32 0, i64 %175
  %180 = getelementptr inbounds [5 x [5 x double]]* %179, i32 0, i64 4
  %181 = getelementptr inbounds [5 x double]* %180, i32 0, i64 1
  store double 0.000000e+00, double* %181, align 8
  %182 = load double* @dt, align 8
  %183 = fmul double %182, 2.000000e+00
  %184 = load double* @tx1, align 8
  %185 = fsub double -0.000000e+00, %184
  %186 = load double* @ty1, align 8
  %187 = load double* %r43, align 8
  %188 = fmul double %186, %187
  %189 = fsub double %185, %188
  %190 = load double* @tz1, align 8
  %191 = fsub double %189, %190
  %192 = fmul double %183, %191
  %193 = load double* %c34, align 8
  %194 = load double* %tmp2, align 8
  %195 = fmul double %193, %194
  %196 = load i32* %i, align 4
  %197 = sext i32 %196 to i64
  %198 = load i32* %j, align 4
  %199 = sext i32 %198 to i64
  %200 = load i32* %1, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %201
  %203 = getelementptr inbounds [23 x [23 x [5 x double]]]* %202, i32 0, i64 %199
  %204 = getelementptr inbounds [23 x [5 x double]]* %203, i32 0, i64 %197
  %205 = getelementptr inbounds [5 x double]* %204, i32 0, i64 2
  %206 = load double* %205, align 8
  %207 = fmul double %195, %206
  %208 = fmul double %192, %207
  %209 = load i32* %i, align 4
  %210 = sext i32 %209 to i64
  %211 = load i32* %j, align 4
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %212
  %214 = getelementptr inbounds [23 x [5 x [5 x double]]]* %213, i32 0, i64 %210
  %215 = getelementptr inbounds [5 x [5 x double]]* %214, i32 0, i64 0
  %216 = getelementptr inbounds [5 x double]* %215, i32 0, i64 2
  store double %208, double* %216, align 8
  %217 = load i32* %i, align 4
  %218 = sext i32 %217 to i64
  %219 = load i32* %j, align 4
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %220
  %222 = getelementptr inbounds [23 x [5 x [5 x double]]]* %221, i32 0, i64 %218
  %223 = getelementptr inbounds [5 x [5 x double]]* %222, i32 0, i64 1
  %224 = getelementptr inbounds [5 x double]* %223, i32 0, i64 2
  store double 0.000000e+00, double* %224, align 8
  %225 = load double* @dt, align 8
  %226 = fmul double %225, 2.000000e+00
  %227 = load double* %c34, align 8
  %228 = fmul double %226, %227
  %229 = load double* %tmp1, align 8
  %230 = fmul double %228, %229
  %231 = load double* @tx1, align 8
  %232 = load double* @ty1, align 8
  %233 = load double* %r43, align 8
  %234 = fmul double %232, %233
  %235 = fadd double %231, %234
  %236 = load double* @tz1, align 8
  %237 = fadd double %235, %236
  %238 = fmul double %230, %237
  %239 = fadd double 1.000000e+00, %238
  %240 = load double* @dt, align 8
  %241 = fmul double %240, 2.000000e+00
  %242 = load double* @tx1, align 8
  %243 = load double* @dx3, align 8
  %244 = fmul double %242, %243
  %245 = load double* @ty1, align 8
  %246 = load double* @dy3, align 8
  %247 = fmul double %245, %246
  %248 = fadd double %244, %247
  %249 = load double* @tz1, align 8
  %250 = load double* @dz3, align 8
  %251 = fmul double %249, %250
  %252 = fadd double %248, %251
  %253 = fmul double %241, %252
  %254 = fadd double %239, %253
  %255 = load i32* %i, align 4
  %256 = sext i32 %255 to i64
  %257 = load i32* %j, align 4
  %258 = sext i32 %257 to i64
  %259 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %258
  %260 = getelementptr inbounds [23 x [5 x [5 x double]]]* %259, i32 0, i64 %256
  %261 = getelementptr inbounds [5 x [5 x double]]* %260, i32 0, i64 2
  %262 = getelementptr inbounds [5 x double]* %261, i32 0, i64 2
  store double %254, double* %262, align 8
  %263 = load i32* %i, align 4
  %264 = sext i32 %263 to i64
  %265 = load i32* %j, align 4
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %266
  %268 = getelementptr inbounds [23 x [5 x [5 x double]]]* %267, i32 0, i64 %264
  %269 = getelementptr inbounds [5 x [5 x double]]* %268, i32 0, i64 3
  %270 = getelementptr inbounds [5 x double]* %269, i32 0, i64 2
  store double 0.000000e+00, double* %270, align 8
  %271 = load i32* %i, align 4
  %272 = sext i32 %271 to i64
  %273 = load i32* %j, align 4
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %274
  %276 = getelementptr inbounds [23 x [5 x [5 x double]]]* %275, i32 0, i64 %272
  %277 = getelementptr inbounds [5 x [5 x double]]* %276, i32 0, i64 4
  %278 = getelementptr inbounds [5 x double]* %277, i32 0, i64 2
  store double 0.000000e+00, double* %278, align 8
  %279 = load double* @dt, align 8
  %280 = fmul double %279, 2.000000e+00
  %281 = load double* @tx1, align 8
  %282 = fsub double -0.000000e+00, %281
  %283 = load double* @ty1, align 8
  %284 = fsub double %282, %283
  %285 = load double* @tz1, align 8
  %286 = load double* %r43, align 8
  %287 = fmul double %285, %286
  %288 = fsub double %284, %287
  %289 = fmul double %280, %288
  %290 = load double* %c34, align 8
  %291 = load double* %tmp2, align 8
  %292 = fmul double %290, %291
  %293 = load i32* %i, align 4
  %294 = sext i32 %293 to i64
  %295 = load i32* %j, align 4
  %296 = sext i32 %295 to i64
  %297 = load i32* %1, align 4
  %298 = sext i32 %297 to i64
  %299 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %298
  %300 = getelementptr inbounds [23 x [23 x [5 x double]]]* %299, i32 0, i64 %296
  %301 = getelementptr inbounds [23 x [5 x double]]* %300, i32 0, i64 %294
  %302 = getelementptr inbounds [5 x double]* %301, i32 0, i64 3
  %303 = load double* %302, align 8
  %304 = fmul double %292, %303
  %305 = fmul double %289, %304
  %306 = load i32* %i, align 4
  %307 = sext i32 %306 to i64
  %308 = load i32* %j, align 4
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %309
  %311 = getelementptr inbounds [23 x [5 x [5 x double]]]* %310, i32 0, i64 %307
  %312 = getelementptr inbounds [5 x [5 x double]]* %311, i32 0, i64 0
  %313 = getelementptr inbounds [5 x double]* %312, i32 0, i64 3
  store double %305, double* %313, align 8
  %314 = load i32* %i, align 4
  %315 = sext i32 %314 to i64
  %316 = load i32* %j, align 4
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %317
  %319 = getelementptr inbounds [23 x [5 x [5 x double]]]* %318, i32 0, i64 %315
  %320 = getelementptr inbounds [5 x [5 x double]]* %319, i32 0, i64 1
  %321 = getelementptr inbounds [5 x double]* %320, i32 0, i64 3
  store double 0.000000e+00, double* %321, align 8
  %322 = load i32* %i, align 4
  %323 = sext i32 %322 to i64
  %324 = load i32* %j, align 4
  %325 = sext i32 %324 to i64
  %326 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %325
  %327 = getelementptr inbounds [23 x [5 x [5 x double]]]* %326, i32 0, i64 %323
  %328 = getelementptr inbounds [5 x [5 x double]]* %327, i32 0, i64 2
  %329 = getelementptr inbounds [5 x double]* %328, i32 0, i64 3
  store double 0.000000e+00, double* %329, align 8
  %330 = load double* @dt, align 8
  %331 = fmul double %330, 2.000000e+00
  %332 = load double* %c34, align 8
  %333 = fmul double %331, %332
  %334 = load double* %tmp1, align 8
  %335 = fmul double %333, %334
  %336 = load double* @tx1, align 8
  %337 = load double* @ty1, align 8
  %338 = fadd double %336, %337
  %339 = load double* @tz1, align 8
  %340 = load double* %r43, align 8
  %341 = fmul double %339, %340
  %342 = fadd double %338, %341
  %343 = fmul double %335, %342
  %344 = fadd double 1.000000e+00, %343
  %345 = load double* @dt, align 8
  %346 = fmul double %345, 2.000000e+00
  %347 = load double* @tx1, align 8
  %348 = load double* @dx4, align 8
  %349 = fmul double %347, %348
  %350 = load double* @ty1, align 8
  %351 = load double* @dy4, align 8
  %352 = fmul double %350, %351
  %353 = fadd double %349, %352
  %354 = load double* @tz1, align 8
  %355 = load double* @dz4, align 8
  %356 = fmul double %354, %355
  %357 = fadd double %353, %356
  %358 = fmul double %346, %357
  %359 = fadd double %344, %358
  %360 = load i32* %i, align 4
  %361 = sext i32 %360 to i64
  %362 = load i32* %j, align 4
  %363 = sext i32 %362 to i64
  %364 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %363
  %365 = getelementptr inbounds [23 x [5 x [5 x double]]]* %364, i32 0, i64 %361
  %366 = getelementptr inbounds [5 x [5 x double]]* %365, i32 0, i64 3
  %367 = getelementptr inbounds [5 x double]* %366, i32 0, i64 3
  store double %359, double* %367, align 8
  %368 = load i32* %i, align 4
  %369 = sext i32 %368 to i64
  %370 = load i32* %j, align 4
  %371 = sext i32 %370 to i64
  %372 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %371
  %373 = getelementptr inbounds [23 x [5 x [5 x double]]]* %372, i32 0, i64 %369
  %374 = getelementptr inbounds [5 x [5 x double]]* %373, i32 0, i64 4
  %375 = getelementptr inbounds [5 x double]* %374, i32 0, i64 3
  store double 0.000000e+00, double* %375, align 8
  %376 = load double* @dt, align 8
  %377 = fsub double -0.000000e+00, %376
  %378 = fmul double %377, 2.000000e+00
  %379 = load double* @tx1, align 8
  %380 = load double* %r43, align 8
  %381 = load double* %c34, align 8
  %382 = fmul double %380, %381
  %383 = load double* %c1345, align 8
  %384 = fsub double %382, %383
  %385 = fmul double %379, %384
  %386 = load double* @ty1, align 8
  %387 = load double* %c34, align 8
  %388 = load double* %c1345, align 8
  %389 = fsub double %387, %388
  %390 = fmul double %386, %389
  %391 = fadd double %385, %390
  %392 = load double* @tz1, align 8
  %393 = load double* %c34, align 8
  %394 = load double* %c1345, align 8
  %395 = fsub double %393, %394
  %396 = fmul double %392, %395
  %397 = fadd double %391, %396
  %398 = load i32* %i, align 4
  %399 = sext i32 %398 to i64
  %400 = load i32* %j, align 4
  %401 = sext i32 %400 to i64
  %402 = load i32* %1, align 4
  %403 = sext i32 %402 to i64
  %404 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %403
  %405 = getelementptr inbounds [23 x [23 x [5 x double]]]* %404, i32 0, i64 %401
  %406 = getelementptr inbounds [23 x [5 x double]]* %405, i32 0, i64 %399
  %407 = getelementptr inbounds [5 x double]* %406, i32 0, i64 1
  %408 = load double* %407, align 8
  %409 = load i32* %i, align 4
  %410 = sext i32 %409 to i64
  %411 = load i32* %j, align 4
  %412 = sext i32 %411 to i64
  %413 = load i32* %1, align 4
  %414 = sext i32 %413 to i64
  %415 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %414
  %416 = getelementptr inbounds [23 x [23 x [5 x double]]]* %415, i32 0, i64 %412
  %417 = getelementptr inbounds [23 x [5 x double]]* %416, i32 0, i64 %410
  %418 = getelementptr inbounds [5 x double]* %417, i32 0, i64 1
  %419 = load double* %418, align 8
  %420 = fmul double %408, %419
  %421 = fmul double %397, %420
  %422 = load double* @tx1, align 8
  %423 = load double* %c34, align 8
  %424 = load double* %c1345, align 8
  %425 = fsub double %423, %424
  %426 = fmul double %422, %425
  %427 = load double* @ty1, align 8
  %428 = load double* %r43, align 8
  %429 = load double* %c34, align 8
  %430 = fmul double %428, %429
  %431 = load double* %c1345, align 8
  %432 = fsub double %430, %431
  %433 = fmul double %427, %432
  %434 = fadd double %426, %433
  %435 = load double* @tz1, align 8
  %436 = load double* %c34, align 8
  %437 = load double* %c1345, align 8
  %438 = fsub double %436, %437
  %439 = fmul double %435, %438
  %440 = fadd double %434, %439
  %441 = load i32* %i, align 4
  %442 = sext i32 %441 to i64
  %443 = load i32* %j, align 4
  %444 = sext i32 %443 to i64
  %445 = load i32* %1, align 4
  %446 = sext i32 %445 to i64
  %447 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %446
  %448 = getelementptr inbounds [23 x [23 x [5 x double]]]* %447, i32 0, i64 %444
  %449 = getelementptr inbounds [23 x [5 x double]]* %448, i32 0, i64 %442
  %450 = getelementptr inbounds [5 x double]* %449, i32 0, i64 2
  %451 = load double* %450, align 8
  %452 = load i32* %i, align 4
  %453 = sext i32 %452 to i64
  %454 = load i32* %j, align 4
  %455 = sext i32 %454 to i64
  %456 = load i32* %1, align 4
  %457 = sext i32 %456 to i64
  %458 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %457
  %459 = getelementptr inbounds [23 x [23 x [5 x double]]]* %458, i32 0, i64 %455
  %460 = getelementptr inbounds [23 x [5 x double]]* %459, i32 0, i64 %453
  %461 = getelementptr inbounds [5 x double]* %460, i32 0, i64 2
  %462 = load double* %461, align 8
  %463 = fmul double %451, %462
  %464 = fmul double %440, %463
  %465 = fadd double %421, %464
  %466 = load double* @tx1, align 8
  %467 = load double* %c34, align 8
  %468 = load double* %c1345, align 8
  %469 = fsub double %467, %468
  %470 = fmul double %466, %469
  %471 = load double* @ty1, align 8
  %472 = load double* %c34, align 8
  %473 = load double* %c1345, align 8
  %474 = fsub double %472, %473
  %475 = fmul double %471, %474
  %476 = fadd double %470, %475
  %477 = load double* @tz1, align 8
  %478 = load double* %r43, align 8
  %479 = load double* %c34, align 8
  %480 = fmul double %478, %479
  %481 = load double* %c1345, align 8
  %482 = fsub double %480, %481
  %483 = fmul double %477, %482
  %484 = fadd double %476, %483
  %485 = load i32* %i, align 4
  %486 = sext i32 %485 to i64
  %487 = load i32* %j, align 4
  %488 = sext i32 %487 to i64
  %489 = load i32* %1, align 4
  %490 = sext i32 %489 to i64
  %491 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %490
  %492 = getelementptr inbounds [23 x [23 x [5 x double]]]* %491, i32 0, i64 %488
  %493 = getelementptr inbounds [23 x [5 x double]]* %492, i32 0, i64 %486
  %494 = getelementptr inbounds [5 x double]* %493, i32 0, i64 3
  %495 = load double* %494, align 8
  %496 = load i32* %i, align 4
  %497 = sext i32 %496 to i64
  %498 = load i32* %j, align 4
  %499 = sext i32 %498 to i64
  %500 = load i32* %1, align 4
  %501 = sext i32 %500 to i64
  %502 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %501
  %503 = getelementptr inbounds [23 x [23 x [5 x double]]]* %502, i32 0, i64 %499
  %504 = getelementptr inbounds [23 x [5 x double]]* %503, i32 0, i64 %497
  %505 = getelementptr inbounds [5 x double]* %504, i32 0, i64 3
  %506 = load double* %505, align 8
  %507 = fmul double %495, %506
  %508 = fmul double %484, %507
  %509 = fadd double %465, %508
  %510 = load double* %tmp3, align 8
  %511 = fmul double %509, %510
  %512 = load double* @tx1, align 8
  %513 = load double* @ty1, align 8
  %514 = fadd double %512, %513
  %515 = load double* @tz1, align 8
  %516 = fadd double %514, %515
  %517 = load double* %c1345, align 8
  %518 = fmul double %516, %517
  %519 = load double* %tmp2, align 8
  %520 = fmul double %518, %519
  %521 = load i32* %i, align 4
  %522 = sext i32 %521 to i64
  %523 = load i32* %j, align 4
  %524 = sext i32 %523 to i64
  %525 = load i32* %1, align 4
  %526 = sext i32 %525 to i64
  %527 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %526
  %528 = getelementptr inbounds [23 x [23 x [5 x double]]]* %527, i32 0, i64 %524
  %529 = getelementptr inbounds [23 x [5 x double]]* %528, i32 0, i64 %522
  %530 = getelementptr inbounds [5 x double]* %529, i32 0, i64 4
  %531 = load double* %530, align 8
  %532 = fmul double %520, %531
  %533 = fadd double %511, %532
  %534 = fmul double %378, %533
  %535 = load i32* %i, align 4
  %536 = sext i32 %535 to i64
  %537 = load i32* %j, align 4
  %538 = sext i32 %537 to i64
  %539 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %538
  %540 = getelementptr inbounds [23 x [5 x [5 x double]]]* %539, i32 0, i64 %536
  %541 = getelementptr inbounds [5 x [5 x double]]* %540, i32 0, i64 0
  %542 = getelementptr inbounds [5 x double]* %541, i32 0, i64 4
  store double %534, double* %542, align 8
  %543 = load double* @dt, align 8
  %544 = fmul double %543, 2.000000e+00
  %545 = load double* @tx1, align 8
  %546 = load double* %r43, align 8
  %547 = load double* %c34, align 8
  %548 = fmul double %546, %547
  %549 = load double* %c1345, align 8
  %550 = fsub double %548, %549
  %551 = fmul double %545, %550
  %552 = load double* @ty1, align 8
  %553 = load double* %c34, align 8
  %554 = load double* %c1345, align 8
  %555 = fsub double %553, %554
  %556 = fmul double %552, %555
  %557 = fadd double %551, %556
  %558 = load double* @tz1, align 8
  %559 = load double* %c34, align 8
  %560 = load double* %c1345, align 8
  %561 = fsub double %559, %560
  %562 = fmul double %558, %561
  %563 = fadd double %557, %562
  %564 = fmul double %544, %563
  %565 = load double* %tmp2, align 8
  %566 = fmul double %564, %565
  %567 = load i32* %i, align 4
  %568 = sext i32 %567 to i64
  %569 = load i32* %j, align 4
  %570 = sext i32 %569 to i64
  %571 = load i32* %1, align 4
  %572 = sext i32 %571 to i64
  %573 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %572
  %574 = getelementptr inbounds [23 x [23 x [5 x double]]]* %573, i32 0, i64 %570
  %575 = getelementptr inbounds [23 x [5 x double]]* %574, i32 0, i64 %568
  %576 = getelementptr inbounds [5 x double]* %575, i32 0, i64 1
  %577 = load double* %576, align 8
  %578 = fmul double %566, %577
  %579 = load i32* %i, align 4
  %580 = sext i32 %579 to i64
  %581 = load i32* %j, align 4
  %582 = sext i32 %581 to i64
  %583 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %582
  %584 = getelementptr inbounds [23 x [5 x [5 x double]]]* %583, i32 0, i64 %580
  %585 = getelementptr inbounds [5 x [5 x double]]* %584, i32 0, i64 1
  %586 = getelementptr inbounds [5 x double]* %585, i32 0, i64 4
  store double %578, double* %586, align 8
  %587 = load double* @dt, align 8
  %588 = fmul double %587, 2.000000e+00
  %589 = load double* @tx1, align 8
  %590 = load double* %c34, align 8
  %591 = load double* %c1345, align 8
  %592 = fsub double %590, %591
  %593 = fmul double %589, %592
  %594 = load double* @ty1, align 8
  %595 = load double* %r43, align 8
  %596 = load double* %c34, align 8
  %597 = fmul double %595, %596
  %598 = load double* %c1345, align 8
  %599 = fsub double %597, %598
  %600 = fmul double %594, %599
  %601 = fadd double %593, %600
  %602 = load double* @tz1, align 8
  %603 = load double* %c34, align 8
  %604 = load double* %c1345, align 8
  %605 = fsub double %603, %604
  %606 = fmul double %602, %605
  %607 = fadd double %601, %606
  %608 = fmul double %588, %607
  %609 = load double* %tmp2, align 8
  %610 = fmul double %608, %609
  %611 = load i32* %i, align 4
  %612 = sext i32 %611 to i64
  %613 = load i32* %j, align 4
  %614 = sext i32 %613 to i64
  %615 = load i32* %1, align 4
  %616 = sext i32 %615 to i64
  %617 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %616
  %618 = getelementptr inbounds [23 x [23 x [5 x double]]]* %617, i32 0, i64 %614
  %619 = getelementptr inbounds [23 x [5 x double]]* %618, i32 0, i64 %612
  %620 = getelementptr inbounds [5 x double]* %619, i32 0, i64 2
  %621 = load double* %620, align 8
  %622 = fmul double %610, %621
  %623 = load i32* %i, align 4
  %624 = sext i32 %623 to i64
  %625 = load i32* %j, align 4
  %626 = sext i32 %625 to i64
  %627 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %626
  %628 = getelementptr inbounds [23 x [5 x [5 x double]]]* %627, i32 0, i64 %624
  %629 = getelementptr inbounds [5 x [5 x double]]* %628, i32 0, i64 2
  %630 = getelementptr inbounds [5 x double]* %629, i32 0, i64 4
  store double %622, double* %630, align 8
  %631 = load double* @dt, align 8
  %632 = fmul double %631, 2.000000e+00
  %633 = load double* @tx1, align 8
  %634 = load double* %c34, align 8
  %635 = load double* %c1345, align 8
  %636 = fsub double %634, %635
  %637 = fmul double %633, %636
  %638 = load double* @ty1, align 8
  %639 = load double* %c34, align 8
  %640 = load double* %c1345, align 8
  %641 = fsub double %639, %640
  %642 = fmul double %638, %641
  %643 = fadd double %637, %642
  %644 = load double* @tz1, align 8
  %645 = load double* %r43, align 8
  %646 = load double* %c34, align 8
  %647 = fmul double %645, %646
  %648 = load double* %c1345, align 8
  %649 = fsub double %647, %648
  %650 = fmul double %644, %649
  %651 = fadd double %643, %650
  %652 = fmul double %632, %651
  %653 = load double* %tmp2, align 8
  %654 = fmul double %652, %653
  %655 = load i32* %i, align 4
  %656 = sext i32 %655 to i64
  %657 = load i32* %j, align 4
  %658 = sext i32 %657 to i64
  %659 = load i32* %1, align 4
  %660 = sext i32 %659 to i64
  %661 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %660
  %662 = getelementptr inbounds [23 x [23 x [5 x double]]]* %661, i32 0, i64 %658
  %663 = getelementptr inbounds [23 x [5 x double]]* %662, i32 0, i64 %656
  %664 = getelementptr inbounds [5 x double]* %663, i32 0, i64 3
  %665 = load double* %664, align 8
  %666 = fmul double %654, %665
  %667 = load i32* %i, align 4
  %668 = sext i32 %667 to i64
  %669 = load i32* %j, align 4
  %670 = sext i32 %669 to i64
  %671 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %670
  %672 = getelementptr inbounds [23 x [5 x [5 x double]]]* %671, i32 0, i64 %668
  %673 = getelementptr inbounds [5 x [5 x double]]* %672, i32 0, i64 3
  %674 = getelementptr inbounds [5 x double]* %673, i32 0, i64 4
  store double %666, double* %674, align 8
  %675 = load double* @dt, align 8
  %676 = fmul double %675, 2.000000e+00
  %677 = load double* @tx1, align 8
  %678 = load double* @ty1, align 8
  %679 = fadd double %677, %678
  %680 = load double* @tz1, align 8
  %681 = fadd double %679, %680
  %682 = fmul double %676, %681
  %683 = load double* %c1345, align 8
  %684 = fmul double %682, %683
  %685 = load double* %tmp1, align 8
  %686 = fmul double %684, %685
  %687 = fadd double 1.000000e+00, %686
  %688 = load double* @dt, align 8
  %689 = fmul double %688, 2.000000e+00
  %690 = load double* @tx1, align 8
  %691 = load double* @dx5, align 8
  %692 = fmul double %690, %691
  %693 = load double* @ty1, align 8
  %694 = load double* @dy5, align 8
  %695 = fmul double %693, %694
  %696 = fadd double %692, %695
  %697 = load double* @tz1, align 8
  %698 = load double* @dz5, align 8
  %699 = fmul double %697, %698
  %700 = fadd double %696, %699
  %701 = fmul double %689, %700
  %702 = fadd double %687, %701
  %703 = load i32* %i, align 4
  %704 = sext i32 %703 to i64
  %705 = load i32* %j, align 4
  %706 = sext i32 %705 to i64
  %707 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %706
  %708 = getelementptr inbounds [23 x [5 x [5 x double]]]* %707, i32 0, i64 %704
  %709 = getelementptr inbounds [5 x [5 x double]]* %708, i32 0, i64 4
  %710 = getelementptr inbounds [5 x double]* %709, i32 0, i64 4
  store double %702, double* %710, align 8
  %711 = load i32* %i, align 4
  %712 = add nsw i32 %711, 1
  %713 = sext i32 %712 to i64
  %714 = load i32* %j, align 4
  %715 = sext i32 %714 to i64
  %716 = load i32* %1, align 4
  %717 = sext i32 %716 to i64
  %718 = getelementptr inbounds [22 x [23 x [23 x double]]]* @rho_i, i32 0, i64 %717
  %719 = getelementptr inbounds [23 x [23 x double]]* %718, i32 0, i64 %715
  %720 = getelementptr inbounds [23 x double]* %719, i32 0, i64 %713
  %721 = load double* %720, align 8
  store double %721, double* %tmp1, align 8
  %722 = load double* %tmp1, align 8
  %723 = load double* %tmp1, align 8
  %724 = fmul double %722, %723
  store double %724, double* %tmp2, align 8
  %725 = load double* %tmp1, align 8
  %726 = load double* %tmp2, align 8
  %727 = fmul double %725, %726
  store double %727, double* %tmp3, align 8
  %728 = load double* @dt, align 8
  %729 = fsub double -0.000000e+00, %728
  %730 = load double* @tx1, align 8
  %731 = fmul double %729, %730
  %732 = load double* @dx1, align 8
  %733 = fmul double %731, %732
  %734 = load i32* %i, align 4
  %735 = sext i32 %734 to i64
  %736 = load i32* %j, align 4
  %737 = sext i32 %736 to i64
  %738 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %737
  %739 = getelementptr inbounds [23 x [5 x [5 x double]]]* %738, i32 0, i64 %735
  %740 = getelementptr inbounds [5 x [5 x double]]* %739, i32 0, i64 0
  %741 = getelementptr inbounds [5 x double]* %740, i32 0, i64 0
  store double %733, double* %741, align 8
  %742 = load double* @dt, align 8
  %743 = load double* @tx2, align 8
  %744 = fmul double %742, %743
  %745 = load i32* %i, align 4
  %746 = sext i32 %745 to i64
  %747 = load i32* %j, align 4
  %748 = sext i32 %747 to i64
  %749 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %748
  %750 = getelementptr inbounds [23 x [5 x [5 x double]]]* %749, i32 0, i64 %746
  %751 = getelementptr inbounds [5 x [5 x double]]* %750, i32 0, i64 1
  %752 = getelementptr inbounds [5 x double]* %751, i32 0, i64 0
  store double %744, double* %752, align 8
  %753 = load i32* %i, align 4
  %754 = sext i32 %753 to i64
  %755 = load i32* %j, align 4
  %756 = sext i32 %755 to i64
  %757 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %756
  %758 = getelementptr inbounds [23 x [5 x [5 x double]]]* %757, i32 0, i64 %754
  %759 = getelementptr inbounds [5 x [5 x double]]* %758, i32 0, i64 2
  %760 = getelementptr inbounds [5 x double]* %759, i32 0, i64 0
  store double 0.000000e+00, double* %760, align 8
  %761 = load i32* %i, align 4
  %762 = sext i32 %761 to i64
  %763 = load i32* %j, align 4
  %764 = sext i32 %763 to i64
  %765 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %764
  %766 = getelementptr inbounds [23 x [5 x [5 x double]]]* %765, i32 0, i64 %762
  %767 = getelementptr inbounds [5 x [5 x double]]* %766, i32 0, i64 3
  %768 = getelementptr inbounds [5 x double]* %767, i32 0, i64 0
  store double 0.000000e+00, double* %768, align 8
  %769 = load i32* %i, align 4
  %770 = sext i32 %769 to i64
  %771 = load i32* %j, align 4
  %772 = sext i32 %771 to i64
  %773 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %772
  %774 = getelementptr inbounds [23 x [5 x [5 x double]]]* %773, i32 0, i64 %770
  %775 = getelementptr inbounds [5 x [5 x double]]* %774, i32 0, i64 4
  %776 = getelementptr inbounds [5 x double]* %775, i32 0, i64 0
  store double 0.000000e+00, double* %776, align 8
  %777 = load double* @dt, align 8
  %778 = load double* @tx2, align 8
  %779 = fmul double %777, %778
  %780 = load i32* %i, align 4
  %781 = add nsw i32 %780, 1
  %782 = sext i32 %781 to i64
  %783 = load i32* %j, align 4
  %784 = sext i32 %783 to i64
  %785 = load i32* %1, align 4
  %786 = sext i32 %785 to i64
  %787 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %786
  %788 = getelementptr inbounds [23 x [23 x [5 x double]]]* %787, i32 0, i64 %784
  %789 = getelementptr inbounds [23 x [5 x double]]* %788, i32 0, i64 %782
  %790 = getelementptr inbounds [5 x double]* %789, i32 0, i64 1
  %791 = load double* %790, align 8
  %792 = load double* %tmp1, align 8
  %793 = fmul double %791, %792
  %794 = fsub double -0.000000e+00, %793
  %795 = load i32* %i, align 4
  %796 = add nsw i32 %795, 1
  %797 = sext i32 %796 to i64
  %798 = load i32* %j, align 4
  %799 = sext i32 %798 to i64
  %800 = load i32* %1, align 4
  %801 = sext i32 %800 to i64
  %802 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %801
  %803 = getelementptr inbounds [23 x [23 x [5 x double]]]* %802, i32 0, i64 %799
  %804 = getelementptr inbounds [23 x [5 x double]]* %803, i32 0, i64 %797
  %805 = getelementptr inbounds [5 x double]* %804, i32 0, i64 1
  %806 = load double* %805, align 8
  %807 = load double* %tmp1, align 8
  %808 = fmul double %806, %807
  %809 = fmul double %794, %808
  %810 = load i32* %i, align 4
  %811 = add nsw i32 %810, 1
  %812 = sext i32 %811 to i64
  %813 = load i32* %j, align 4
  %814 = sext i32 %813 to i64
  %815 = load i32* %1, align 4
  %816 = sext i32 %815 to i64
  %817 = getelementptr inbounds [22 x [23 x [23 x double]]]* @qs, i32 0, i64 %816
  %818 = getelementptr inbounds [23 x [23 x double]]* %817, i32 0, i64 %814
  %819 = getelementptr inbounds [23 x double]* %818, i32 0, i64 %812
  %820 = load double* %819, align 8
  %821 = fmul double 4.000000e-01, %820
  %822 = load double* %tmp1, align 8
  %823 = fmul double %821, %822
  %824 = fadd double %809, %823
  %825 = fmul double %779, %824
  %826 = load double* @dt, align 8
  %827 = load double* @tx1, align 8
  %828 = fmul double %826, %827
  %829 = load double* %r43, align 8
  %830 = fsub double -0.000000e+00, %829
  %831 = load double* %c34, align 8
  %832 = fmul double %830, %831
  %833 = load double* %tmp2, align 8
  %834 = fmul double %832, %833
  %835 = load i32* %i, align 4
  %836 = add nsw i32 %835, 1
  %837 = sext i32 %836 to i64
  %838 = load i32* %j, align 4
  %839 = sext i32 %838 to i64
  %840 = load i32* %1, align 4
  %841 = sext i32 %840 to i64
  %842 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %841
  %843 = getelementptr inbounds [23 x [23 x [5 x double]]]* %842, i32 0, i64 %839
  %844 = getelementptr inbounds [23 x [5 x double]]* %843, i32 0, i64 %837
  %845 = getelementptr inbounds [5 x double]* %844, i32 0, i64 1
  %846 = load double* %845, align 8
  %847 = fmul double %834, %846
  %848 = fmul double %828, %847
  %849 = fsub double %825, %848
  %850 = load i32* %i, align 4
  %851 = sext i32 %850 to i64
  %852 = load i32* %j, align 4
  %853 = sext i32 %852 to i64
  %854 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %853
  %855 = getelementptr inbounds [23 x [5 x [5 x double]]]* %854, i32 0, i64 %851
  %856 = getelementptr inbounds [5 x [5 x double]]* %855, i32 0, i64 0
  %857 = getelementptr inbounds [5 x double]* %856, i32 0, i64 1
  store double %849, double* %857, align 8
  %858 = load double* @dt, align 8
  %859 = load double* @tx2, align 8
  %860 = fmul double %858, %859
  %861 = load i32* %i, align 4
  %862 = add nsw i32 %861, 1
  %863 = sext i32 %862 to i64
  %864 = load i32* %j, align 4
  %865 = sext i32 %864 to i64
  %866 = load i32* %1, align 4
  %867 = sext i32 %866 to i64
  %868 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %867
  %869 = getelementptr inbounds [23 x [23 x [5 x double]]]* %868, i32 0, i64 %865
  %870 = getelementptr inbounds [23 x [5 x double]]* %869, i32 0, i64 %863
  %871 = getelementptr inbounds [5 x double]* %870, i32 0, i64 1
  %872 = load double* %871, align 8
  %873 = load double* %tmp1, align 8
  %874 = fmul double %872, %873
  %875 = fmul double 1.600000e+00, %874
  %876 = fmul double %860, %875
  %877 = load double* @dt, align 8
  %878 = load double* @tx1, align 8
  %879 = fmul double %877, %878
  %880 = load double* %r43, align 8
  %881 = load double* %c34, align 8
  %882 = fmul double %880, %881
  %883 = load double* %tmp1, align 8
  %884 = fmul double %882, %883
  %885 = fmul double %879, %884
  %886 = fsub double %876, %885
  %887 = load double* @dt, align 8
  %888 = load double* @tx1, align 8
  %889 = fmul double %887, %888
  %890 = load double* @dx2, align 8
  %891 = fmul double %889, %890
  %892 = fsub double %886, %891
  %893 = load i32* %i, align 4
  %894 = sext i32 %893 to i64
  %895 = load i32* %j, align 4
  %896 = sext i32 %895 to i64
  %897 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %896
  %898 = getelementptr inbounds [23 x [5 x [5 x double]]]* %897, i32 0, i64 %894
  %899 = getelementptr inbounds [5 x [5 x double]]* %898, i32 0, i64 1
  %900 = getelementptr inbounds [5 x double]* %899, i32 0, i64 1
  store double %892, double* %900, align 8
  %901 = load double* @dt, align 8
  %902 = load double* @tx2, align 8
  %903 = fmul double %901, %902
  %904 = load i32* %i, align 4
  %905 = add nsw i32 %904, 1
  %906 = sext i32 %905 to i64
  %907 = load i32* %j, align 4
  %908 = sext i32 %907 to i64
  %909 = load i32* %1, align 4
  %910 = sext i32 %909 to i64
  %911 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %910
  %912 = getelementptr inbounds [23 x [23 x [5 x double]]]* %911, i32 0, i64 %908
  %913 = getelementptr inbounds [23 x [5 x double]]* %912, i32 0, i64 %906
  %914 = getelementptr inbounds [5 x double]* %913, i32 0, i64 2
  %915 = load double* %914, align 8
  %916 = load double* %tmp1, align 8
  %917 = fmul double %915, %916
  %918 = fmul double -4.000000e-01, %917
  %919 = fmul double %903, %918
  %920 = load i32* %i, align 4
  %921 = sext i32 %920 to i64
  %922 = load i32* %j, align 4
  %923 = sext i32 %922 to i64
  %924 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %923
  %925 = getelementptr inbounds [23 x [5 x [5 x double]]]* %924, i32 0, i64 %921
  %926 = getelementptr inbounds [5 x [5 x double]]* %925, i32 0, i64 2
  %927 = getelementptr inbounds [5 x double]* %926, i32 0, i64 1
  store double %919, double* %927, align 8
  %928 = load double* @dt, align 8
  %929 = load double* @tx2, align 8
  %930 = fmul double %928, %929
  %931 = load i32* %i, align 4
  %932 = add nsw i32 %931, 1
  %933 = sext i32 %932 to i64
  %934 = load i32* %j, align 4
  %935 = sext i32 %934 to i64
  %936 = load i32* %1, align 4
  %937 = sext i32 %936 to i64
  %938 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %937
  %939 = getelementptr inbounds [23 x [23 x [5 x double]]]* %938, i32 0, i64 %935
  %940 = getelementptr inbounds [23 x [5 x double]]* %939, i32 0, i64 %933
  %941 = getelementptr inbounds [5 x double]* %940, i32 0, i64 3
  %942 = load double* %941, align 8
  %943 = load double* %tmp1, align 8
  %944 = fmul double %942, %943
  %945 = fmul double -4.000000e-01, %944
  %946 = fmul double %930, %945
  %947 = load i32* %i, align 4
  %948 = sext i32 %947 to i64
  %949 = load i32* %j, align 4
  %950 = sext i32 %949 to i64
  %951 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %950
  %952 = getelementptr inbounds [23 x [5 x [5 x double]]]* %951, i32 0, i64 %948
  %953 = getelementptr inbounds [5 x [5 x double]]* %952, i32 0, i64 3
  %954 = getelementptr inbounds [5 x double]* %953, i32 0, i64 1
  store double %946, double* %954, align 8
  %955 = load double* @dt, align 8
  %956 = load double* @tx2, align 8
  %957 = fmul double %955, %956
  %958 = fmul double %957, 4.000000e-01
  %959 = load i32* %i, align 4
  %960 = sext i32 %959 to i64
  %961 = load i32* %j, align 4
  %962 = sext i32 %961 to i64
  %963 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %962
  %964 = getelementptr inbounds [23 x [5 x [5 x double]]]* %963, i32 0, i64 %960
  %965 = getelementptr inbounds [5 x [5 x double]]* %964, i32 0, i64 4
  %966 = getelementptr inbounds [5 x double]* %965, i32 0, i64 1
  store double %958, double* %966, align 8
  %967 = load double* @dt, align 8
  %968 = load double* @tx2, align 8
  %969 = fmul double %967, %968
  %970 = load i32* %i, align 4
  %971 = add nsw i32 %970, 1
  %972 = sext i32 %971 to i64
  %973 = load i32* %j, align 4
  %974 = sext i32 %973 to i64
  %975 = load i32* %1, align 4
  %976 = sext i32 %975 to i64
  %977 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %976
  %978 = getelementptr inbounds [23 x [23 x [5 x double]]]* %977, i32 0, i64 %974
  %979 = getelementptr inbounds [23 x [5 x double]]* %978, i32 0, i64 %972
  %980 = getelementptr inbounds [5 x double]* %979, i32 0, i64 1
  %981 = load double* %980, align 8
  %982 = load i32* %i, align 4
  %983 = add nsw i32 %982, 1
  %984 = sext i32 %983 to i64
  %985 = load i32* %j, align 4
  %986 = sext i32 %985 to i64
  %987 = load i32* %1, align 4
  %988 = sext i32 %987 to i64
  %989 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %988
  %990 = getelementptr inbounds [23 x [23 x [5 x double]]]* %989, i32 0, i64 %986
  %991 = getelementptr inbounds [23 x [5 x double]]* %990, i32 0, i64 %984
  %992 = getelementptr inbounds [5 x double]* %991, i32 0, i64 2
  %993 = load double* %992, align 8
  %994 = fmul double %981, %993
  %995 = fsub double -0.000000e+00, %994
  %996 = load double* %tmp2, align 8
  %997 = fmul double %995, %996
  %998 = fmul double %969, %997
  %999 = load double* @dt, align 8
  %1000 = load double* @tx1, align 8
  %1001 = fmul double %999, %1000
  %1002 = load double* %c34, align 8
  %1003 = fsub double -0.000000e+00, %1002
  %1004 = load double* %tmp2, align 8
  %1005 = fmul double %1003, %1004
  %1006 = load i32* %i, align 4
  %1007 = add nsw i32 %1006, 1
  %1008 = sext i32 %1007 to i64
  %1009 = load i32* %j, align 4
  %1010 = sext i32 %1009 to i64
  %1011 = load i32* %1, align 4
  %1012 = sext i32 %1011 to i64
  %1013 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1012
  %1014 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1013, i32 0, i64 %1010
  %1015 = getelementptr inbounds [23 x [5 x double]]* %1014, i32 0, i64 %1008
  %1016 = getelementptr inbounds [5 x double]* %1015, i32 0, i64 2
  %1017 = load double* %1016, align 8
  %1018 = fmul double %1005, %1017
  %1019 = fmul double %1001, %1018
  %1020 = fsub double %998, %1019
  %1021 = load i32* %i, align 4
  %1022 = sext i32 %1021 to i64
  %1023 = load i32* %j, align 4
  %1024 = sext i32 %1023 to i64
  %1025 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %1024
  %1026 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1025, i32 0, i64 %1022
  %1027 = getelementptr inbounds [5 x [5 x double]]* %1026, i32 0, i64 0
  %1028 = getelementptr inbounds [5 x double]* %1027, i32 0, i64 2
  store double %1020, double* %1028, align 8
  %1029 = load double* @dt, align 8
  %1030 = load double* @tx2, align 8
  %1031 = fmul double %1029, %1030
  %1032 = load i32* %i, align 4
  %1033 = add nsw i32 %1032, 1
  %1034 = sext i32 %1033 to i64
  %1035 = load i32* %j, align 4
  %1036 = sext i32 %1035 to i64
  %1037 = load i32* %1, align 4
  %1038 = sext i32 %1037 to i64
  %1039 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1038
  %1040 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1039, i32 0, i64 %1036
  %1041 = getelementptr inbounds [23 x [5 x double]]* %1040, i32 0, i64 %1034
  %1042 = getelementptr inbounds [5 x double]* %1041, i32 0, i64 2
  %1043 = load double* %1042, align 8
  %1044 = load double* %tmp1, align 8
  %1045 = fmul double %1043, %1044
  %1046 = fmul double %1031, %1045
  %1047 = load i32* %i, align 4
  %1048 = sext i32 %1047 to i64
  %1049 = load i32* %j, align 4
  %1050 = sext i32 %1049 to i64
  %1051 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %1050
  %1052 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1051, i32 0, i64 %1048
  %1053 = getelementptr inbounds [5 x [5 x double]]* %1052, i32 0, i64 1
  %1054 = getelementptr inbounds [5 x double]* %1053, i32 0, i64 2
  store double %1046, double* %1054, align 8
  %1055 = load double* @dt, align 8
  %1056 = load double* @tx2, align 8
  %1057 = fmul double %1055, %1056
  %1058 = load i32* %i, align 4
  %1059 = add nsw i32 %1058, 1
  %1060 = sext i32 %1059 to i64
  %1061 = load i32* %j, align 4
  %1062 = sext i32 %1061 to i64
  %1063 = load i32* %1, align 4
  %1064 = sext i32 %1063 to i64
  %1065 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1064
  %1066 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1065, i32 0, i64 %1062
  %1067 = getelementptr inbounds [23 x [5 x double]]* %1066, i32 0, i64 %1060
  %1068 = getelementptr inbounds [5 x double]* %1067, i32 0, i64 1
  %1069 = load double* %1068, align 8
  %1070 = load double* %tmp1, align 8
  %1071 = fmul double %1069, %1070
  %1072 = fmul double %1057, %1071
  %1073 = load double* @dt, align 8
  %1074 = load double* @tx1, align 8
  %1075 = fmul double %1073, %1074
  %1076 = load double* %c34, align 8
  %1077 = load double* %tmp1, align 8
  %1078 = fmul double %1076, %1077
  %1079 = fmul double %1075, %1078
  %1080 = fsub double %1072, %1079
  %1081 = load double* @dt, align 8
  %1082 = load double* @tx1, align 8
  %1083 = fmul double %1081, %1082
  %1084 = load double* @dx3, align 8
  %1085 = fmul double %1083, %1084
  %1086 = fsub double %1080, %1085
  %1087 = load i32* %i, align 4
  %1088 = sext i32 %1087 to i64
  %1089 = load i32* %j, align 4
  %1090 = sext i32 %1089 to i64
  %1091 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %1090
  %1092 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1091, i32 0, i64 %1088
  %1093 = getelementptr inbounds [5 x [5 x double]]* %1092, i32 0, i64 2
  %1094 = getelementptr inbounds [5 x double]* %1093, i32 0, i64 2
  store double %1086, double* %1094, align 8
  %1095 = load i32* %i, align 4
  %1096 = sext i32 %1095 to i64
  %1097 = load i32* %j, align 4
  %1098 = sext i32 %1097 to i64
  %1099 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %1098
  %1100 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1099, i32 0, i64 %1096
  %1101 = getelementptr inbounds [5 x [5 x double]]* %1100, i32 0, i64 3
  %1102 = getelementptr inbounds [5 x double]* %1101, i32 0, i64 2
  store double 0.000000e+00, double* %1102, align 8
  %1103 = load i32* %i, align 4
  %1104 = sext i32 %1103 to i64
  %1105 = load i32* %j, align 4
  %1106 = sext i32 %1105 to i64
  %1107 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %1106
  %1108 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1107, i32 0, i64 %1104
  %1109 = getelementptr inbounds [5 x [5 x double]]* %1108, i32 0, i64 4
  %1110 = getelementptr inbounds [5 x double]* %1109, i32 0, i64 2
  store double 0.000000e+00, double* %1110, align 8
  %1111 = load double* @dt, align 8
  %1112 = load double* @tx2, align 8
  %1113 = fmul double %1111, %1112
  %1114 = load i32* %i, align 4
  %1115 = add nsw i32 %1114, 1
  %1116 = sext i32 %1115 to i64
  %1117 = load i32* %j, align 4
  %1118 = sext i32 %1117 to i64
  %1119 = load i32* %1, align 4
  %1120 = sext i32 %1119 to i64
  %1121 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1120
  %1122 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1121, i32 0, i64 %1118
  %1123 = getelementptr inbounds [23 x [5 x double]]* %1122, i32 0, i64 %1116
  %1124 = getelementptr inbounds [5 x double]* %1123, i32 0, i64 1
  %1125 = load double* %1124, align 8
  %1126 = load i32* %i, align 4
  %1127 = add nsw i32 %1126, 1
  %1128 = sext i32 %1127 to i64
  %1129 = load i32* %j, align 4
  %1130 = sext i32 %1129 to i64
  %1131 = load i32* %1, align 4
  %1132 = sext i32 %1131 to i64
  %1133 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1132
  %1134 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1133, i32 0, i64 %1130
  %1135 = getelementptr inbounds [23 x [5 x double]]* %1134, i32 0, i64 %1128
  %1136 = getelementptr inbounds [5 x double]* %1135, i32 0, i64 3
  %1137 = load double* %1136, align 8
  %1138 = fmul double %1125, %1137
  %1139 = fsub double -0.000000e+00, %1138
  %1140 = load double* %tmp2, align 8
  %1141 = fmul double %1139, %1140
  %1142 = fmul double %1113, %1141
  %1143 = load double* @dt, align 8
  %1144 = load double* @tx1, align 8
  %1145 = fmul double %1143, %1144
  %1146 = load double* %c34, align 8
  %1147 = fsub double -0.000000e+00, %1146
  %1148 = load double* %tmp2, align 8
  %1149 = fmul double %1147, %1148
  %1150 = load i32* %i, align 4
  %1151 = add nsw i32 %1150, 1
  %1152 = sext i32 %1151 to i64
  %1153 = load i32* %j, align 4
  %1154 = sext i32 %1153 to i64
  %1155 = load i32* %1, align 4
  %1156 = sext i32 %1155 to i64
  %1157 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1156
  %1158 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1157, i32 0, i64 %1154
  %1159 = getelementptr inbounds [23 x [5 x double]]* %1158, i32 0, i64 %1152
  %1160 = getelementptr inbounds [5 x double]* %1159, i32 0, i64 3
  %1161 = load double* %1160, align 8
  %1162 = fmul double %1149, %1161
  %1163 = fmul double %1145, %1162
  %1164 = fsub double %1142, %1163
  %1165 = load i32* %i, align 4
  %1166 = sext i32 %1165 to i64
  %1167 = load i32* %j, align 4
  %1168 = sext i32 %1167 to i64
  %1169 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %1168
  %1170 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1169, i32 0, i64 %1166
  %1171 = getelementptr inbounds [5 x [5 x double]]* %1170, i32 0, i64 0
  %1172 = getelementptr inbounds [5 x double]* %1171, i32 0, i64 3
  store double %1164, double* %1172, align 8
  %1173 = load double* @dt, align 8
  %1174 = load double* @tx2, align 8
  %1175 = fmul double %1173, %1174
  %1176 = load i32* %i, align 4
  %1177 = add nsw i32 %1176, 1
  %1178 = sext i32 %1177 to i64
  %1179 = load i32* %j, align 4
  %1180 = sext i32 %1179 to i64
  %1181 = load i32* %1, align 4
  %1182 = sext i32 %1181 to i64
  %1183 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1182
  %1184 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1183, i32 0, i64 %1180
  %1185 = getelementptr inbounds [23 x [5 x double]]* %1184, i32 0, i64 %1178
  %1186 = getelementptr inbounds [5 x double]* %1185, i32 0, i64 3
  %1187 = load double* %1186, align 8
  %1188 = load double* %tmp1, align 8
  %1189 = fmul double %1187, %1188
  %1190 = fmul double %1175, %1189
  %1191 = load i32* %i, align 4
  %1192 = sext i32 %1191 to i64
  %1193 = load i32* %j, align 4
  %1194 = sext i32 %1193 to i64
  %1195 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %1194
  %1196 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1195, i32 0, i64 %1192
  %1197 = getelementptr inbounds [5 x [5 x double]]* %1196, i32 0, i64 1
  %1198 = getelementptr inbounds [5 x double]* %1197, i32 0, i64 3
  store double %1190, double* %1198, align 8
  %1199 = load i32* %i, align 4
  %1200 = sext i32 %1199 to i64
  %1201 = load i32* %j, align 4
  %1202 = sext i32 %1201 to i64
  %1203 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %1202
  %1204 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1203, i32 0, i64 %1200
  %1205 = getelementptr inbounds [5 x [5 x double]]* %1204, i32 0, i64 2
  %1206 = getelementptr inbounds [5 x double]* %1205, i32 0, i64 3
  store double 0.000000e+00, double* %1206, align 8
  %1207 = load double* @dt, align 8
  %1208 = load double* @tx2, align 8
  %1209 = fmul double %1207, %1208
  %1210 = load i32* %i, align 4
  %1211 = add nsw i32 %1210, 1
  %1212 = sext i32 %1211 to i64
  %1213 = load i32* %j, align 4
  %1214 = sext i32 %1213 to i64
  %1215 = load i32* %1, align 4
  %1216 = sext i32 %1215 to i64
  %1217 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1216
  %1218 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1217, i32 0, i64 %1214
  %1219 = getelementptr inbounds [23 x [5 x double]]* %1218, i32 0, i64 %1212
  %1220 = getelementptr inbounds [5 x double]* %1219, i32 0, i64 1
  %1221 = load double* %1220, align 8
  %1222 = load double* %tmp1, align 8
  %1223 = fmul double %1221, %1222
  %1224 = fmul double %1209, %1223
  %1225 = load double* @dt, align 8
  %1226 = load double* @tx1, align 8
  %1227 = fmul double %1225, %1226
  %1228 = load double* %c34, align 8
  %1229 = load double* %tmp1, align 8
  %1230 = fmul double %1228, %1229
  %1231 = fmul double %1227, %1230
  %1232 = fsub double %1224, %1231
  %1233 = load double* @dt, align 8
  %1234 = load double* @tx1, align 8
  %1235 = fmul double %1233, %1234
  %1236 = load double* @dx4, align 8
  %1237 = fmul double %1235, %1236
  %1238 = fsub double %1232, %1237
  %1239 = load i32* %i, align 4
  %1240 = sext i32 %1239 to i64
  %1241 = load i32* %j, align 4
  %1242 = sext i32 %1241 to i64
  %1243 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %1242
  %1244 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1243, i32 0, i64 %1240
  %1245 = getelementptr inbounds [5 x [5 x double]]* %1244, i32 0, i64 3
  %1246 = getelementptr inbounds [5 x double]* %1245, i32 0, i64 3
  store double %1238, double* %1246, align 8
  %1247 = load i32* %i, align 4
  %1248 = sext i32 %1247 to i64
  %1249 = load i32* %j, align 4
  %1250 = sext i32 %1249 to i64
  %1251 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %1250
  %1252 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1251, i32 0, i64 %1248
  %1253 = getelementptr inbounds [5 x [5 x double]]* %1252, i32 0, i64 4
  %1254 = getelementptr inbounds [5 x double]* %1253, i32 0, i64 3
  store double 0.000000e+00, double* %1254, align 8
  %1255 = load double* @dt, align 8
  %1256 = load double* @tx2, align 8
  %1257 = fmul double %1255, %1256
  %1258 = load i32* %i, align 4
  %1259 = add nsw i32 %1258, 1
  %1260 = sext i32 %1259 to i64
  %1261 = load i32* %j, align 4
  %1262 = sext i32 %1261 to i64
  %1263 = load i32* %1, align 4
  %1264 = sext i32 %1263 to i64
  %1265 = getelementptr inbounds [22 x [23 x [23 x double]]]* @qs, i32 0, i64 %1264
  %1266 = getelementptr inbounds [23 x [23 x double]]* %1265, i32 0, i64 %1262
  %1267 = getelementptr inbounds [23 x double]* %1266, i32 0, i64 %1260
  %1268 = load double* %1267, align 8
  %1269 = fmul double 8.000000e-01, %1268
  %1270 = load i32* %i, align 4
  %1271 = add nsw i32 %1270, 1
  %1272 = sext i32 %1271 to i64
  %1273 = load i32* %j, align 4
  %1274 = sext i32 %1273 to i64
  %1275 = load i32* %1, align 4
  %1276 = sext i32 %1275 to i64
  %1277 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1276
  %1278 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1277, i32 0, i64 %1274
  %1279 = getelementptr inbounds [23 x [5 x double]]* %1278, i32 0, i64 %1272
  %1280 = getelementptr inbounds [5 x double]* %1279, i32 0, i64 4
  %1281 = load double* %1280, align 8
  %1282 = fmul double 1.400000e+00, %1281
  %1283 = fsub double %1269, %1282
  %1284 = load i32* %i, align 4
  %1285 = add nsw i32 %1284, 1
  %1286 = sext i32 %1285 to i64
  %1287 = load i32* %j, align 4
  %1288 = sext i32 %1287 to i64
  %1289 = load i32* %1, align 4
  %1290 = sext i32 %1289 to i64
  %1291 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1290
  %1292 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1291, i32 0, i64 %1288
  %1293 = getelementptr inbounds [23 x [5 x double]]* %1292, i32 0, i64 %1286
  %1294 = getelementptr inbounds [5 x double]* %1293, i32 0, i64 1
  %1295 = load double* %1294, align 8
  %1296 = load double* %tmp2, align 8
  %1297 = fmul double %1295, %1296
  %1298 = fmul double %1283, %1297
  %1299 = fmul double %1257, %1298
  %1300 = load double* @dt, align 8
  %1301 = load double* @tx1, align 8
  %1302 = fmul double %1300, %1301
  %1303 = load double* %r43, align 8
  %1304 = load double* %c34, align 8
  %1305 = fmul double %1303, %1304
  %1306 = load double* %c1345, align 8
  %1307 = fsub double %1305, %1306
  %1308 = fsub double -0.000000e+00, %1307
  %1309 = load double* %tmp3, align 8
  %1310 = fmul double %1308, %1309
  %1311 = load i32* %i, align 4
  %1312 = add nsw i32 %1311, 1
  %1313 = sext i32 %1312 to i64
  %1314 = load i32* %j, align 4
  %1315 = sext i32 %1314 to i64
  %1316 = load i32* %1, align 4
  %1317 = sext i32 %1316 to i64
  %1318 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1317
  %1319 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1318, i32 0, i64 %1315
  %1320 = getelementptr inbounds [23 x [5 x double]]* %1319, i32 0, i64 %1313
  %1321 = getelementptr inbounds [5 x double]* %1320, i32 0, i64 1
  %1322 = load double* %1321, align 8
  %1323 = load i32* %i, align 4
  %1324 = add nsw i32 %1323, 1
  %1325 = sext i32 %1324 to i64
  %1326 = load i32* %j, align 4
  %1327 = sext i32 %1326 to i64
  %1328 = load i32* %1, align 4
  %1329 = sext i32 %1328 to i64
  %1330 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1329
  %1331 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1330, i32 0, i64 %1327
  %1332 = getelementptr inbounds [23 x [5 x double]]* %1331, i32 0, i64 %1325
  %1333 = getelementptr inbounds [5 x double]* %1332, i32 0, i64 1
  %1334 = load double* %1333, align 8
  %1335 = fmul double %1322, %1334
  %1336 = fmul double %1310, %1335
  %1337 = load double* %c34, align 8
  %1338 = load double* %c1345, align 8
  %1339 = fsub double %1337, %1338
  %1340 = load double* %tmp3, align 8
  %1341 = fmul double %1339, %1340
  %1342 = load i32* %i, align 4
  %1343 = add nsw i32 %1342, 1
  %1344 = sext i32 %1343 to i64
  %1345 = load i32* %j, align 4
  %1346 = sext i32 %1345 to i64
  %1347 = load i32* %1, align 4
  %1348 = sext i32 %1347 to i64
  %1349 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1348
  %1350 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1349, i32 0, i64 %1346
  %1351 = getelementptr inbounds [23 x [5 x double]]* %1350, i32 0, i64 %1344
  %1352 = getelementptr inbounds [5 x double]* %1351, i32 0, i64 2
  %1353 = load double* %1352, align 8
  %1354 = load i32* %i, align 4
  %1355 = add nsw i32 %1354, 1
  %1356 = sext i32 %1355 to i64
  %1357 = load i32* %j, align 4
  %1358 = sext i32 %1357 to i64
  %1359 = load i32* %1, align 4
  %1360 = sext i32 %1359 to i64
  %1361 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1360
  %1362 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1361, i32 0, i64 %1358
  %1363 = getelementptr inbounds [23 x [5 x double]]* %1362, i32 0, i64 %1356
  %1364 = getelementptr inbounds [5 x double]* %1363, i32 0, i64 2
  %1365 = load double* %1364, align 8
  %1366 = fmul double %1353, %1365
  %1367 = fmul double %1341, %1366
  %1368 = fsub double %1336, %1367
  %1369 = load double* %c34, align 8
  %1370 = load double* %c1345, align 8
  %1371 = fsub double %1369, %1370
  %1372 = load double* %tmp3, align 8
  %1373 = fmul double %1371, %1372
  %1374 = load i32* %i, align 4
  %1375 = add nsw i32 %1374, 1
  %1376 = sext i32 %1375 to i64
  %1377 = load i32* %j, align 4
  %1378 = sext i32 %1377 to i64
  %1379 = load i32* %1, align 4
  %1380 = sext i32 %1379 to i64
  %1381 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1380
  %1382 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1381, i32 0, i64 %1378
  %1383 = getelementptr inbounds [23 x [5 x double]]* %1382, i32 0, i64 %1376
  %1384 = getelementptr inbounds [5 x double]* %1383, i32 0, i64 3
  %1385 = load double* %1384, align 8
  %1386 = load i32* %i, align 4
  %1387 = add nsw i32 %1386, 1
  %1388 = sext i32 %1387 to i64
  %1389 = load i32* %j, align 4
  %1390 = sext i32 %1389 to i64
  %1391 = load i32* %1, align 4
  %1392 = sext i32 %1391 to i64
  %1393 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1392
  %1394 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1393, i32 0, i64 %1390
  %1395 = getelementptr inbounds [23 x [5 x double]]* %1394, i32 0, i64 %1388
  %1396 = getelementptr inbounds [5 x double]* %1395, i32 0, i64 3
  %1397 = load double* %1396, align 8
  %1398 = fmul double %1385, %1397
  %1399 = fmul double %1373, %1398
  %1400 = fsub double %1368, %1399
  %1401 = load double* %c1345, align 8
  %1402 = load double* %tmp2, align 8
  %1403 = fmul double %1401, %1402
  %1404 = load i32* %i, align 4
  %1405 = add nsw i32 %1404, 1
  %1406 = sext i32 %1405 to i64
  %1407 = load i32* %j, align 4
  %1408 = sext i32 %1407 to i64
  %1409 = load i32* %1, align 4
  %1410 = sext i32 %1409 to i64
  %1411 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1410
  %1412 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1411, i32 0, i64 %1408
  %1413 = getelementptr inbounds [23 x [5 x double]]* %1412, i32 0, i64 %1406
  %1414 = getelementptr inbounds [5 x double]* %1413, i32 0, i64 4
  %1415 = load double* %1414, align 8
  %1416 = fmul double %1403, %1415
  %1417 = fsub double %1400, %1416
  %1418 = fmul double %1302, %1417
  %1419 = fsub double %1299, %1418
  %1420 = load i32* %i, align 4
  %1421 = sext i32 %1420 to i64
  %1422 = load i32* %j, align 4
  %1423 = sext i32 %1422 to i64
  %1424 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %1423
  %1425 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1424, i32 0, i64 %1421
  %1426 = getelementptr inbounds [5 x [5 x double]]* %1425, i32 0, i64 0
  %1427 = getelementptr inbounds [5 x double]* %1426, i32 0, i64 4
  store double %1419, double* %1427, align 8
  %1428 = load double* @dt, align 8
  %1429 = load double* @tx2, align 8
  %1430 = fmul double %1428, %1429
  %1431 = load i32* %i, align 4
  %1432 = add nsw i32 %1431, 1
  %1433 = sext i32 %1432 to i64
  %1434 = load i32* %j, align 4
  %1435 = sext i32 %1434 to i64
  %1436 = load i32* %1, align 4
  %1437 = sext i32 %1436 to i64
  %1438 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1437
  %1439 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1438, i32 0, i64 %1435
  %1440 = getelementptr inbounds [23 x [5 x double]]* %1439, i32 0, i64 %1433
  %1441 = getelementptr inbounds [5 x double]* %1440, i32 0, i64 4
  %1442 = load double* %1441, align 8
  %1443 = load double* %tmp1, align 8
  %1444 = fmul double %1442, %1443
  %1445 = fmul double 1.400000e+00, %1444
  %1446 = load i32* %i, align 4
  %1447 = add nsw i32 %1446, 1
  %1448 = sext i32 %1447 to i64
  %1449 = load i32* %j, align 4
  %1450 = sext i32 %1449 to i64
  %1451 = load i32* %1, align 4
  %1452 = sext i32 %1451 to i64
  %1453 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1452
  %1454 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1453, i32 0, i64 %1450
  %1455 = getelementptr inbounds [23 x [5 x double]]* %1454, i32 0, i64 %1448
  %1456 = getelementptr inbounds [5 x double]* %1455, i32 0, i64 1
  %1457 = load double* %1456, align 8
  %1458 = load i32* %i, align 4
  %1459 = add nsw i32 %1458, 1
  %1460 = sext i32 %1459 to i64
  %1461 = load i32* %j, align 4
  %1462 = sext i32 %1461 to i64
  %1463 = load i32* %1, align 4
  %1464 = sext i32 %1463 to i64
  %1465 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1464
  %1466 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1465, i32 0, i64 %1462
  %1467 = getelementptr inbounds [23 x [5 x double]]* %1466, i32 0, i64 %1460
  %1468 = getelementptr inbounds [5 x double]* %1467, i32 0, i64 1
  %1469 = load double* %1468, align 8
  %1470 = fmul double %1457, %1469
  %1471 = load double* %tmp2, align 8
  %1472 = fmul double %1470, %1471
  %1473 = load i32* %i, align 4
  %1474 = add nsw i32 %1473, 1
  %1475 = sext i32 %1474 to i64
  %1476 = load i32* %j, align 4
  %1477 = sext i32 %1476 to i64
  %1478 = load i32* %1, align 4
  %1479 = sext i32 %1478 to i64
  %1480 = getelementptr inbounds [22 x [23 x [23 x double]]]* @qs, i32 0, i64 %1479
  %1481 = getelementptr inbounds [23 x [23 x double]]* %1480, i32 0, i64 %1477
  %1482 = getelementptr inbounds [23 x double]* %1481, i32 0, i64 %1475
  %1483 = load double* %1482, align 8
  %1484 = load double* %tmp1, align 8
  %1485 = fmul double %1483, %1484
  %1486 = fadd double %1472, %1485
  %1487 = fmul double 4.000000e-01, %1486
  %1488 = fsub double %1445, %1487
  %1489 = fmul double %1430, %1488
  %1490 = load double* @dt, align 8
  %1491 = load double* @tx1, align 8
  %1492 = fmul double %1490, %1491
  %1493 = load double* %r43, align 8
  %1494 = load double* %c34, align 8
  %1495 = fmul double %1493, %1494
  %1496 = load double* %c1345, align 8
  %1497 = fsub double %1495, %1496
  %1498 = fmul double %1492, %1497
  %1499 = load double* %tmp2, align 8
  %1500 = fmul double %1498, %1499
  %1501 = load i32* %i, align 4
  %1502 = add nsw i32 %1501, 1
  %1503 = sext i32 %1502 to i64
  %1504 = load i32* %j, align 4
  %1505 = sext i32 %1504 to i64
  %1506 = load i32* %1, align 4
  %1507 = sext i32 %1506 to i64
  %1508 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1507
  %1509 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1508, i32 0, i64 %1505
  %1510 = getelementptr inbounds [23 x [5 x double]]* %1509, i32 0, i64 %1503
  %1511 = getelementptr inbounds [5 x double]* %1510, i32 0, i64 1
  %1512 = load double* %1511, align 8
  %1513 = fmul double %1500, %1512
  %1514 = fsub double %1489, %1513
  %1515 = load i32* %i, align 4
  %1516 = sext i32 %1515 to i64
  %1517 = load i32* %j, align 4
  %1518 = sext i32 %1517 to i64
  %1519 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %1518
  %1520 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1519, i32 0, i64 %1516
  %1521 = getelementptr inbounds [5 x [5 x double]]* %1520, i32 0, i64 1
  %1522 = getelementptr inbounds [5 x double]* %1521, i32 0, i64 4
  store double %1514, double* %1522, align 8
  %1523 = load double* @dt, align 8
  %1524 = load double* @tx2, align 8
  %1525 = fmul double %1523, %1524
  %1526 = load i32* %i, align 4
  %1527 = add nsw i32 %1526, 1
  %1528 = sext i32 %1527 to i64
  %1529 = load i32* %j, align 4
  %1530 = sext i32 %1529 to i64
  %1531 = load i32* %1, align 4
  %1532 = sext i32 %1531 to i64
  %1533 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1532
  %1534 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1533, i32 0, i64 %1530
  %1535 = getelementptr inbounds [23 x [5 x double]]* %1534, i32 0, i64 %1528
  %1536 = getelementptr inbounds [5 x double]* %1535, i32 0, i64 2
  %1537 = load double* %1536, align 8
  %1538 = load i32* %i, align 4
  %1539 = add nsw i32 %1538, 1
  %1540 = sext i32 %1539 to i64
  %1541 = load i32* %j, align 4
  %1542 = sext i32 %1541 to i64
  %1543 = load i32* %1, align 4
  %1544 = sext i32 %1543 to i64
  %1545 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1544
  %1546 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1545, i32 0, i64 %1542
  %1547 = getelementptr inbounds [23 x [5 x double]]* %1546, i32 0, i64 %1540
  %1548 = getelementptr inbounds [5 x double]* %1547, i32 0, i64 1
  %1549 = load double* %1548, align 8
  %1550 = fmul double %1537, %1549
  %1551 = fmul double -4.000000e-01, %1550
  %1552 = load double* %tmp2, align 8
  %1553 = fmul double %1551, %1552
  %1554 = fmul double %1525, %1553
  %1555 = load double* @dt, align 8
  %1556 = load double* @tx1, align 8
  %1557 = fmul double %1555, %1556
  %1558 = load double* %c34, align 8
  %1559 = load double* %c1345, align 8
  %1560 = fsub double %1558, %1559
  %1561 = fmul double %1557, %1560
  %1562 = load double* %tmp2, align 8
  %1563 = fmul double %1561, %1562
  %1564 = load i32* %i, align 4
  %1565 = add nsw i32 %1564, 1
  %1566 = sext i32 %1565 to i64
  %1567 = load i32* %j, align 4
  %1568 = sext i32 %1567 to i64
  %1569 = load i32* %1, align 4
  %1570 = sext i32 %1569 to i64
  %1571 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1570
  %1572 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1571, i32 0, i64 %1568
  %1573 = getelementptr inbounds [23 x [5 x double]]* %1572, i32 0, i64 %1566
  %1574 = getelementptr inbounds [5 x double]* %1573, i32 0, i64 2
  %1575 = load double* %1574, align 8
  %1576 = fmul double %1563, %1575
  %1577 = fsub double %1554, %1576
  %1578 = load i32* %i, align 4
  %1579 = sext i32 %1578 to i64
  %1580 = load i32* %j, align 4
  %1581 = sext i32 %1580 to i64
  %1582 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %1581
  %1583 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1582, i32 0, i64 %1579
  %1584 = getelementptr inbounds [5 x [5 x double]]* %1583, i32 0, i64 2
  %1585 = getelementptr inbounds [5 x double]* %1584, i32 0, i64 4
  store double %1577, double* %1585, align 8
  %1586 = load double* @dt, align 8
  %1587 = load double* @tx2, align 8
  %1588 = fmul double %1586, %1587
  %1589 = load i32* %i, align 4
  %1590 = add nsw i32 %1589, 1
  %1591 = sext i32 %1590 to i64
  %1592 = load i32* %j, align 4
  %1593 = sext i32 %1592 to i64
  %1594 = load i32* %1, align 4
  %1595 = sext i32 %1594 to i64
  %1596 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1595
  %1597 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1596, i32 0, i64 %1593
  %1598 = getelementptr inbounds [23 x [5 x double]]* %1597, i32 0, i64 %1591
  %1599 = getelementptr inbounds [5 x double]* %1598, i32 0, i64 3
  %1600 = load double* %1599, align 8
  %1601 = load i32* %i, align 4
  %1602 = add nsw i32 %1601, 1
  %1603 = sext i32 %1602 to i64
  %1604 = load i32* %j, align 4
  %1605 = sext i32 %1604 to i64
  %1606 = load i32* %1, align 4
  %1607 = sext i32 %1606 to i64
  %1608 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1607
  %1609 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1608, i32 0, i64 %1605
  %1610 = getelementptr inbounds [23 x [5 x double]]* %1609, i32 0, i64 %1603
  %1611 = getelementptr inbounds [5 x double]* %1610, i32 0, i64 1
  %1612 = load double* %1611, align 8
  %1613 = fmul double %1600, %1612
  %1614 = fmul double -4.000000e-01, %1613
  %1615 = load double* %tmp2, align 8
  %1616 = fmul double %1614, %1615
  %1617 = fmul double %1588, %1616
  %1618 = load double* @dt, align 8
  %1619 = load double* @tx1, align 8
  %1620 = fmul double %1618, %1619
  %1621 = load double* %c34, align 8
  %1622 = load double* %c1345, align 8
  %1623 = fsub double %1621, %1622
  %1624 = fmul double %1620, %1623
  %1625 = load double* %tmp2, align 8
  %1626 = fmul double %1624, %1625
  %1627 = load i32* %i, align 4
  %1628 = add nsw i32 %1627, 1
  %1629 = sext i32 %1628 to i64
  %1630 = load i32* %j, align 4
  %1631 = sext i32 %1630 to i64
  %1632 = load i32* %1, align 4
  %1633 = sext i32 %1632 to i64
  %1634 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1633
  %1635 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1634, i32 0, i64 %1631
  %1636 = getelementptr inbounds [23 x [5 x double]]* %1635, i32 0, i64 %1629
  %1637 = getelementptr inbounds [5 x double]* %1636, i32 0, i64 3
  %1638 = load double* %1637, align 8
  %1639 = fmul double %1626, %1638
  %1640 = fsub double %1617, %1639
  %1641 = load i32* %i, align 4
  %1642 = sext i32 %1641 to i64
  %1643 = load i32* %j, align 4
  %1644 = sext i32 %1643 to i64
  %1645 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %1644
  %1646 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1645, i32 0, i64 %1642
  %1647 = getelementptr inbounds [5 x [5 x double]]* %1646, i32 0, i64 3
  %1648 = getelementptr inbounds [5 x double]* %1647, i32 0, i64 4
  store double %1640, double* %1648, align 8
  %1649 = load double* @dt, align 8
  %1650 = load double* @tx2, align 8
  %1651 = fmul double %1649, %1650
  %1652 = load i32* %i, align 4
  %1653 = add nsw i32 %1652, 1
  %1654 = sext i32 %1653 to i64
  %1655 = load i32* %j, align 4
  %1656 = sext i32 %1655 to i64
  %1657 = load i32* %1, align 4
  %1658 = sext i32 %1657 to i64
  %1659 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1658
  %1660 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1659, i32 0, i64 %1656
  %1661 = getelementptr inbounds [23 x [5 x double]]* %1660, i32 0, i64 %1654
  %1662 = getelementptr inbounds [5 x double]* %1661, i32 0, i64 1
  %1663 = load double* %1662, align 8
  %1664 = load double* %tmp1, align 8
  %1665 = fmul double %1663, %1664
  %1666 = fmul double 1.400000e+00, %1665
  %1667 = fmul double %1651, %1666
  %1668 = load double* @dt, align 8
  %1669 = load double* @tx1, align 8
  %1670 = fmul double %1668, %1669
  %1671 = load double* %c1345, align 8
  %1672 = fmul double %1670, %1671
  %1673 = load double* %tmp1, align 8
  %1674 = fmul double %1672, %1673
  %1675 = fsub double %1667, %1674
  %1676 = load double* @dt, align 8
  %1677 = load double* @tx1, align 8
  %1678 = fmul double %1676, %1677
  %1679 = load double* @dx5, align 8
  %1680 = fmul double %1678, %1679
  %1681 = fsub double %1675, %1680
  %1682 = load i32* %i, align 4
  %1683 = sext i32 %1682 to i64
  %1684 = load i32* %j, align 4
  %1685 = sext i32 %1684 to i64
  %1686 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %1685
  %1687 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1686, i32 0, i64 %1683
  %1688 = getelementptr inbounds [5 x [5 x double]]* %1687, i32 0, i64 4
  %1689 = getelementptr inbounds [5 x double]* %1688, i32 0, i64 4
  store double %1681, double* %1689, align 8
  %1690 = load i32* %i, align 4
  %1691 = sext i32 %1690 to i64
  %1692 = load i32* %j, align 4
  %1693 = add nsw i32 %1692, 1
  %1694 = sext i32 %1693 to i64
  %1695 = load i32* %1, align 4
  %1696 = sext i32 %1695 to i64
  %1697 = getelementptr inbounds [22 x [23 x [23 x double]]]* @rho_i, i32 0, i64 %1696
  %1698 = getelementptr inbounds [23 x [23 x double]]* %1697, i32 0, i64 %1694
  %1699 = getelementptr inbounds [23 x double]* %1698, i32 0, i64 %1691
  %1700 = load double* %1699, align 8
  store double %1700, double* %tmp1, align 8
  %1701 = load double* %tmp1, align 8
  %1702 = load double* %tmp1, align 8
  %1703 = fmul double %1701, %1702
  store double %1703, double* %tmp2, align 8
  %1704 = load double* %tmp1, align 8
  %1705 = load double* %tmp2, align 8
  %1706 = fmul double %1704, %1705
  store double %1706, double* %tmp3, align 8
  %1707 = load double* @dt, align 8
  %1708 = fsub double -0.000000e+00, %1707
  %1709 = load double* @ty1, align 8
  %1710 = fmul double %1708, %1709
  %1711 = load double* @dy1, align 8
  %1712 = fmul double %1710, %1711
  %1713 = load i32* %i, align 4
  %1714 = sext i32 %1713 to i64
  %1715 = load i32* %j, align 4
  %1716 = sext i32 %1715 to i64
  %1717 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %1716
  %1718 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1717, i32 0, i64 %1714
  %1719 = getelementptr inbounds [5 x [5 x double]]* %1718, i32 0, i64 0
  %1720 = getelementptr inbounds [5 x double]* %1719, i32 0, i64 0
  store double %1712, double* %1720, align 8
  %1721 = load i32* %i, align 4
  %1722 = sext i32 %1721 to i64
  %1723 = load i32* %j, align 4
  %1724 = sext i32 %1723 to i64
  %1725 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %1724
  %1726 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1725, i32 0, i64 %1722
  %1727 = getelementptr inbounds [5 x [5 x double]]* %1726, i32 0, i64 1
  %1728 = getelementptr inbounds [5 x double]* %1727, i32 0, i64 0
  store double 0.000000e+00, double* %1728, align 8
  %1729 = load double* @dt, align 8
  %1730 = load double* @ty2, align 8
  %1731 = fmul double %1729, %1730
  %1732 = load i32* %i, align 4
  %1733 = sext i32 %1732 to i64
  %1734 = load i32* %j, align 4
  %1735 = sext i32 %1734 to i64
  %1736 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %1735
  %1737 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1736, i32 0, i64 %1733
  %1738 = getelementptr inbounds [5 x [5 x double]]* %1737, i32 0, i64 2
  %1739 = getelementptr inbounds [5 x double]* %1738, i32 0, i64 0
  store double %1731, double* %1739, align 8
  %1740 = load i32* %i, align 4
  %1741 = sext i32 %1740 to i64
  %1742 = load i32* %j, align 4
  %1743 = sext i32 %1742 to i64
  %1744 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %1743
  %1745 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1744, i32 0, i64 %1741
  %1746 = getelementptr inbounds [5 x [5 x double]]* %1745, i32 0, i64 3
  %1747 = getelementptr inbounds [5 x double]* %1746, i32 0, i64 0
  store double 0.000000e+00, double* %1747, align 8
  %1748 = load i32* %i, align 4
  %1749 = sext i32 %1748 to i64
  %1750 = load i32* %j, align 4
  %1751 = sext i32 %1750 to i64
  %1752 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %1751
  %1753 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1752, i32 0, i64 %1749
  %1754 = getelementptr inbounds [5 x [5 x double]]* %1753, i32 0, i64 4
  %1755 = getelementptr inbounds [5 x double]* %1754, i32 0, i64 0
  store double 0.000000e+00, double* %1755, align 8
  %1756 = load double* @dt, align 8
  %1757 = load double* @ty2, align 8
  %1758 = fmul double %1756, %1757
  %1759 = load i32* %i, align 4
  %1760 = sext i32 %1759 to i64
  %1761 = load i32* %j, align 4
  %1762 = add nsw i32 %1761, 1
  %1763 = sext i32 %1762 to i64
  %1764 = load i32* %1, align 4
  %1765 = sext i32 %1764 to i64
  %1766 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1765
  %1767 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1766, i32 0, i64 %1763
  %1768 = getelementptr inbounds [23 x [5 x double]]* %1767, i32 0, i64 %1760
  %1769 = getelementptr inbounds [5 x double]* %1768, i32 0, i64 1
  %1770 = load double* %1769, align 8
  %1771 = load i32* %i, align 4
  %1772 = sext i32 %1771 to i64
  %1773 = load i32* %j, align 4
  %1774 = add nsw i32 %1773, 1
  %1775 = sext i32 %1774 to i64
  %1776 = load i32* %1, align 4
  %1777 = sext i32 %1776 to i64
  %1778 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1777
  %1779 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1778, i32 0, i64 %1775
  %1780 = getelementptr inbounds [23 x [5 x double]]* %1779, i32 0, i64 %1772
  %1781 = getelementptr inbounds [5 x double]* %1780, i32 0, i64 2
  %1782 = load double* %1781, align 8
  %1783 = fmul double %1770, %1782
  %1784 = fsub double -0.000000e+00, %1783
  %1785 = load double* %tmp2, align 8
  %1786 = fmul double %1784, %1785
  %1787 = fmul double %1758, %1786
  %1788 = load double* @dt, align 8
  %1789 = load double* @ty1, align 8
  %1790 = fmul double %1788, %1789
  %1791 = load double* %c34, align 8
  %1792 = fsub double -0.000000e+00, %1791
  %1793 = load double* %tmp2, align 8
  %1794 = fmul double %1792, %1793
  %1795 = load i32* %i, align 4
  %1796 = sext i32 %1795 to i64
  %1797 = load i32* %j, align 4
  %1798 = add nsw i32 %1797, 1
  %1799 = sext i32 %1798 to i64
  %1800 = load i32* %1, align 4
  %1801 = sext i32 %1800 to i64
  %1802 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1801
  %1803 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1802, i32 0, i64 %1799
  %1804 = getelementptr inbounds [23 x [5 x double]]* %1803, i32 0, i64 %1796
  %1805 = getelementptr inbounds [5 x double]* %1804, i32 0, i64 1
  %1806 = load double* %1805, align 8
  %1807 = fmul double %1794, %1806
  %1808 = fmul double %1790, %1807
  %1809 = fsub double %1787, %1808
  %1810 = load i32* %i, align 4
  %1811 = sext i32 %1810 to i64
  %1812 = load i32* %j, align 4
  %1813 = sext i32 %1812 to i64
  %1814 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %1813
  %1815 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1814, i32 0, i64 %1811
  %1816 = getelementptr inbounds [5 x [5 x double]]* %1815, i32 0, i64 0
  %1817 = getelementptr inbounds [5 x double]* %1816, i32 0, i64 1
  store double %1809, double* %1817, align 8
  %1818 = load double* @dt, align 8
  %1819 = load double* @ty2, align 8
  %1820 = fmul double %1818, %1819
  %1821 = load i32* %i, align 4
  %1822 = sext i32 %1821 to i64
  %1823 = load i32* %j, align 4
  %1824 = add nsw i32 %1823, 1
  %1825 = sext i32 %1824 to i64
  %1826 = load i32* %1, align 4
  %1827 = sext i32 %1826 to i64
  %1828 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1827
  %1829 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1828, i32 0, i64 %1825
  %1830 = getelementptr inbounds [23 x [5 x double]]* %1829, i32 0, i64 %1822
  %1831 = getelementptr inbounds [5 x double]* %1830, i32 0, i64 2
  %1832 = load double* %1831, align 8
  %1833 = load double* %tmp1, align 8
  %1834 = fmul double %1832, %1833
  %1835 = fmul double %1820, %1834
  %1836 = load double* @dt, align 8
  %1837 = load double* @ty1, align 8
  %1838 = fmul double %1836, %1837
  %1839 = load double* %c34, align 8
  %1840 = load double* %tmp1, align 8
  %1841 = fmul double %1839, %1840
  %1842 = fmul double %1838, %1841
  %1843 = fsub double %1835, %1842
  %1844 = load double* @dt, align 8
  %1845 = load double* @ty1, align 8
  %1846 = fmul double %1844, %1845
  %1847 = load double* @dy2, align 8
  %1848 = fmul double %1846, %1847
  %1849 = fsub double %1843, %1848
  %1850 = load i32* %i, align 4
  %1851 = sext i32 %1850 to i64
  %1852 = load i32* %j, align 4
  %1853 = sext i32 %1852 to i64
  %1854 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %1853
  %1855 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1854, i32 0, i64 %1851
  %1856 = getelementptr inbounds [5 x [5 x double]]* %1855, i32 0, i64 1
  %1857 = getelementptr inbounds [5 x double]* %1856, i32 0, i64 1
  store double %1849, double* %1857, align 8
  %1858 = load double* @dt, align 8
  %1859 = load double* @ty2, align 8
  %1860 = fmul double %1858, %1859
  %1861 = load i32* %i, align 4
  %1862 = sext i32 %1861 to i64
  %1863 = load i32* %j, align 4
  %1864 = add nsw i32 %1863, 1
  %1865 = sext i32 %1864 to i64
  %1866 = load i32* %1, align 4
  %1867 = sext i32 %1866 to i64
  %1868 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1867
  %1869 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1868, i32 0, i64 %1865
  %1870 = getelementptr inbounds [23 x [5 x double]]* %1869, i32 0, i64 %1862
  %1871 = getelementptr inbounds [5 x double]* %1870, i32 0, i64 1
  %1872 = load double* %1871, align 8
  %1873 = load double* %tmp1, align 8
  %1874 = fmul double %1872, %1873
  %1875 = fmul double %1860, %1874
  %1876 = load i32* %i, align 4
  %1877 = sext i32 %1876 to i64
  %1878 = load i32* %j, align 4
  %1879 = sext i32 %1878 to i64
  %1880 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %1879
  %1881 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1880, i32 0, i64 %1877
  %1882 = getelementptr inbounds [5 x [5 x double]]* %1881, i32 0, i64 2
  %1883 = getelementptr inbounds [5 x double]* %1882, i32 0, i64 1
  store double %1875, double* %1883, align 8
  %1884 = load i32* %i, align 4
  %1885 = sext i32 %1884 to i64
  %1886 = load i32* %j, align 4
  %1887 = sext i32 %1886 to i64
  %1888 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %1887
  %1889 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1888, i32 0, i64 %1885
  %1890 = getelementptr inbounds [5 x [5 x double]]* %1889, i32 0, i64 3
  %1891 = getelementptr inbounds [5 x double]* %1890, i32 0, i64 1
  store double 0.000000e+00, double* %1891, align 8
  %1892 = load i32* %i, align 4
  %1893 = sext i32 %1892 to i64
  %1894 = load i32* %j, align 4
  %1895 = sext i32 %1894 to i64
  %1896 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %1895
  %1897 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1896, i32 0, i64 %1893
  %1898 = getelementptr inbounds [5 x [5 x double]]* %1897, i32 0, i64 4
  %1899 = getelementptr inbounds [5 x double]* %1898, i32 0, i64 1
  store double 0.000000e+00, double* %1899, align 8
  %1900 = load double* @dt, align 8
  %1901 = load double* @ty2, align 8
  %1902 = fmul double %1900, %1901
  %1903 = load i32* %i, align 4
  %1904 = sext i32 %1903 to i64
  %1905 = load i32* %j, align 4
  %1906 = add nsw i32 %1905, 1
  %1907 = sext i32 %1906 to i64
  %1908 = load i32* %1, align 4
  %1909 = sext i32 %1908 to i64
  %1910 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1909
  %1911 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1910, i32 0, i64 %1907
  %1912 = getelementptr inbounds [23 x [5 x double]]* %1911, i32 0, i64 %1904
  %1913 = getelementptr inbounds [5 x double]* %1912, i32 0, i64 2
  %1914 = load double* %1913, align 8
  %1915 = load double* %tmp1, align 8
  %1916 = fmul double %1914, %1915
  %1917 = fsub double -0.000000e+00, %1916
  %1918 = load i32* %i, align 4
  %1919 = sext i32 %1918 to i64
  %1920 = load i32* %j, align 4
  %1921 = add nsw i32 %1920, 1
  %1922 = sext i32 %1921 to i64
  %1923 = load i32* %1, align 4
  %1924 = sext i32 %1923 to i64
  %1925 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1924
  %1926 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1925, i32 0, i64 %1922
  %1927 = getelementptr inbounds [23 x [5 x double]]* %1926, i32 0, i64 %1919
  %1928 = getelementptr inbounds [5 x double]* %1927, i32 0, i64 2
  %1929 = load double* %1928, align 8
  %1930 = load double* %tmp1, align 8
  %1931 = fmul double %1929, %1930
  %1932 = fmul double %1917, %1931
  %1933 = load i32* %i, align 4
  %1934 = sext i32 %1933 to i64
  %1935 = load i32* %j, align 4
  %1936 = add nsw i32 %1935, 1
  %1937 = sext i32 %1936 to i64
  %1938 = load i32* %1, align 4
  %1939 = sext i32 %1938 to i64
  %1940 = getelementptr inbounds [22 x [23 x [23 x double]]]* @qs, i32 0, i64 %1939
  %1941 = getelementptr inbounds [23 x [23 x double]]* %1940, i32 0, i64 %1937
  %1942 = getelementptr inbounds [23 x double]* %1941, i32 0, i64 %1934
  %1943 = load double* %1942, align 8
  %1944 = load double* %tmp1, align 8
  %1945 = fmul double %1943, %1944
  %1946 = fmul double 4.000000e-01, %1945
  %1947 = fadd double %1932, %1946
  %1948 = fmul double %1902, %1947
  %1949 = load double* @dt, align 8
  %1950 = load double* @ty1, align 8
  %1951 = fmul double %1949, %1950
  %1952 = load double* %r43, align 8
  %1953 = fsub double -0.000000e+00, %1952
  %1954 = load double* %c34, align 8
  %1955 = fmul double %1953, %1954
  %1956 = load double* %tmp2, align 8
  %1957 = fmul double %1955, %1956
  %1958 = load i32* %i, align 4
  %1959 = sext i32 %1958 to i64
  %1960 = load i32* %j, align 4
  %1961 = add nsw i32 %1960, 1
  %1962 = sext i32 %1961 to i64
  %1963 = load i32* %1, align 4
  %1964 = sext i32 %1963 to i64
  %1965 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1964
  %1966 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1965, i32 0, i64 %1962
  %1967 = getelementptr inbounds [23 x [5 x double]]* %1966, i32 0, i64 %1959
  %1968 = getelementptr inbounds [5 x double]* %1967, i32 0, i64 2
  %1969 = load double* %1968, align 8
  %1970 = fmul double %1957, %1969
  %1971 = fmul double %1951, %1970
  %1972 = fsub double %1948, %1971
  %1973 = load i32* %i, align 4
  %1974 = sext i32 %1973 to i64
  %1975 = load i32* %j, align 4
  %1976 = sext i32 %1975 to i64
  %1977 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %1976
  %1978 = getelementptr inbounds [23 x [5 x [5 x double]]]* %1977, i32 0, i64 %1974
  %1979 = getelementptr inbounds [5 x [5 x double]]* %1978, i32 0, i64 0
  %1980 = getelementptr inbounds [5 x double]* %1979, i32 0, i64 2
  store double %1972, double* %1980, align 8
  %1981 = load double* @dt, align 8
  %1982 = load double* @ty2, align 8
  %1983 = fmul double %1981, %1982
  %1984 = load i32* %i, align 4
  %1985 = sext i32 %1984 to i64
  %1986 = load i32* %j, align 4
  %1987 = add nsw i32 %1986, 1
  %1988 = sext i32 %1987 to i64
  %1989 = load i32* %1, align 4
  %1990 = sext i32 %1989 to i64
  %1991 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1990
  %1992 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1991, i32 0, i64 %1988
  %1993 = getelementptr inbounds [23 x [5 x double]]* %1992, i32 0, i64 %1985
  %1994 = getelementptr inbounds [5 x double]* %1993, i32 0, i64 1
  %1995 = load double* %1994, align 8
  %1996 = load double* %tmp1, align 8
  %1997 = fmul double %1995, %1996
  %1998 = fmul double -4.000000e-01, %1997
  %1999 = fmul double %1983, %1998
  %2000 = load i32* %i, align 4
  %2001 = sext i32 %2000 to i64
  %2002 = load i32* %j, align 4
  %2003 = sext i32 %2002 to i64
  %2004 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %2003
  %2005 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2004, i32 0, i64 %2001
  %2006 = getelementptr inbounds [5 x [5 x double]]* %2005, i32 0, i64 1
  %2007 = getelementptr inbounds [5 x double]* %2006, i32 0, i64 2
  store double %1999, double* %2007, align 8
  %2008 = load double* @dt, align 8
  %2009 = load double* @ty2, align 8
  %2010 = fmul double %2008, %2009
  %2011 = load i32* %i, align 4
  %2012 = sext i32 %2011 to i64
  %2013 = load i32* %j, align 4
  %2014 = add nsw i32 %2013, 1
  %2015 = sext i32 %2014 to i64
  %2016 = load i32* %1, align 4
  %2017 = sext i32 %2016 to i64
  %2018 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2017
  %2019 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2018, i32 0, i64 %2015
  %2020 = getelementptr inbounds [23 x [5 x double]]* %2019, i32 0, i64 %2012
  %2021 = getelementptr inbounds [5 x double]* %2020, i32 0, i64 2
  %2022 = load double* %2021, align 8
  %2023 = load double* %tmp1, align 8
  %2024 = fmul double %2022, %2023
  %2025 = fmul double 1.600000e+00, %2024
  %2026 = fmul double %2010, %2025
  %2027 = load double* @dt, align 8
  %2028 = load double* @ty1, align 8
  %2029 = fmul double %2027, %2028
  %2030 = load double* %r43, align 8
  %2031 = load double* %c34, align 8
  %2032 = fmul double %2030, %2031
  %2033 = load double* %tmp1, align 8
  %2034 = fmul double %2032, %2033
  %2035 = fmul double %2029, %2034
  %2036 = fsub double %2026, %2035
  %2037 = load double* @dt, align 8
  %2038 = load double* @ty1, align 8
  %2039 = fmul double %2037, %2038
  %2040 = load double* @dy3, align 8
  %2041 = fmul double %2039, %2040
  %2042 = fsub double %2036, %2041
  %2043 = load i32* %i, align 4
  %2044 = sext i32 %2043 to i64
  %2045 = load i32* %j, align 4
  %2046 = sext i32 %2045 to i64
  %2047 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %2046
  %2048 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2047, i32 0, i64 %2044
  %2049 = getelementptr inbounds [5 x [5 x double]]* %2048, i32 0, i64 2
  %2050 = getelementptr inbounds [5 x double]* %2049, i32 0, i64 2
  store double %2042, double* %2050, align 8
  %2051 = load double* @dt, align 8
  %2052 = load double* @ty2, align 8
  %2053 = fmul double %2051, %2052
  %2054 = load i32* %i, align 4
  %2055 = sext i32 %2054 to i64
  %2056 = load i32* %j, align 4
  %2057 = add nsw i32 %2056, 1
  %2058 = sext i32 %2057 to i64
  %2059 = load i32* %1, align 4
  %2060 = sext i32 %2059 to i64
  %2061 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2060
  %2062 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2061, i32 0, i64 %2058
  %2063 = getelementptr inbounds [23 x [5 x double]]* %2062, i32 0, i64 %2055
  %2064 = getelementptr inbounds [5 x double]* %2063, i32 0, i64 3
  %2065 = load double* %2064, align 8
  %2066 = load double* %tmp1, align 8
  %2067 = fmul double %2065, %2066
  %2068 = fmul double -4.000000e-01, %2067
  %2069 = fmul double %2053, %2068
  %2070 = load i32* %i, align 4
  %2071 = sext i32 %2070 to i64
  %2072 = load i32* %j, align 4
  %2073 = sext i32 %2072 to i64
  %2074 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %2073
  %2075 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2074, i32 0, i64 %2071
  %2076 = getelementptr inbounds [5 x [5 x double]]* %2075, i32 0, i64 3
  %2077 = getelementptr inbounds [5 x double]* %2076, i32 0, i64 2
  store double %2069, double* %2077, align 8
  %2078 = load double* @dt, align 8
  %2079 = load double* @ty2, align 8
  %2080 = fmul double %2078, %2079
  %2081 = fmul double %2080, 4.000000e-01
  %2082 = load i32* %i, align 4
  %2083 = sext i32 %2082 to i64
  %2084 = load i32* %j, align 4
  %2085 = sext i32 %2084 to i64
  %2086 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %2085
  %2087 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2086, i32 0, i64 %2083
  %2088 = getelementptr inbounds [5 x [5 x double]]* %2087, i32 0, i64 4
  %2089 = getelementptr inbounds [5 x double]* %2088, i32 0, i64 2
  store double %2081, double* %2089, align 8
  %2090 = load double* @dt, align 8
  %2091 = load double* @ty2, align 8
  %2092 = fmul double %2090, %2091
  %2093 = load i32* %i, align 4
  %2094 = sext i32 %2093 to i64
  %2095 = load i32* %j, align 4
  %2096 = add nsw i32 %2095, 1
  %2097 = sext i32 %2096 to i64
  %2098 = load i32* %1, align 4
  %2099 = sext i32 %2098 to i64
  %2100 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2099
  %2101 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2100, i32 0, i64 %2097
  %2102 = getelementptr inbounds [23 x [5 x double]]* %2101, i32 0, i64 %2094
  %2103 = getelementptr inbounds [5 x double]* %2102, i32 0, i64 2
  %2104 = load double* %2103, align 8
  %2105 = load i32* %i, align 4
  %2106 = sext i32 %2105 to i64
  %2107 = load i32* %j, align 4
  %2108 = add nsw i32 %2107, 1
  %2109 = sext i32 %2108 to i64
  %2110 = load i32* %1, align 4
  %2111 = sext i32 %2110 to i64
  %2112 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2111
  %2113 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2112, i32 0, i64 %2109
  %2114 = getelementptr inbounds [23 x [5 x double]]* %2113, i32 0, i64 %2106
  %2115 = getelementptr inbounds [5 x double]* %2114, i32 0, i64 3
  %2116 = load double* %2115, align 8
  %2117 = fmul double %2104, %2116
  %2118 = fsub double -0.000000e+00, %2117
  %2119 = load double* %tmp2, align 8
  %2120 = fmul double %2118, %2119
  %2121 = fmul double %2092, %2120
  %2122 = load double* @dt, align 8
  %2123 = load double* @ty1, align 8
  %2124 = fmul double %2122, %2123
  %2125 = load double* %c34, align 8
  %2126 = fsub double -0.000000e+00, %2125
  %2127 = load double* %tmp2, align 8
  %2128 = fmul double %2126, %2127
  %2129 = load i32* %i, align 4
  %2130 = sext i32 %2129 to i64
  %2131 = load i32* %j, align 4
  %2132 = add nsw i32 %2131, 1
  %2133 = sext i32 %2132 to i64
  %2134 = load i32* %1, align 4
  %2135 = sext i32 %2134 to i64
  %2136 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2135
  %2137 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2136, i32 0, i64 %2133
  %2138 = getelementptr inbounds [23 x [5 x double]]* %2137, i32 0, i64 %2130
  %2139 = getelementptr inbounds [5 x double]* %2138, i32 0, i64 3
  %2140 = load double* %2139, align 8
  %2141 = fmul double %2128, %2140
  %2142 = fmul double %2124, %2141
  %2143 = fsub double %2121, %2142
  %2144 = load i32* %i, align 4
  %2145 = sext i32 %2144 to i64
  %2146 = load i32* %j, align 4
  %2147 = sext i32 %2146 to i64
  %2148 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %2147
  %2149 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2148, i32 0, i64 %2145
  %2150 = getelementptr inbounds [5 x [5 x double]]* %2149, i32 0, i64 0
  %2151 = getelementptr inbounds [5 x double]* %2150, i32 0, i64 3
  store double %2143, double* %2151, align 8
  %2152 = load i32* %i, align 4
  %2153 = sext i32 %2152 to i64
  %2154 = load i32* %j, align 4
  %2155 = sext i32 %2154 to i64
  %2156 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %2155
  %2157 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2156, i32 0, i64 %2153
  %2158 = getelementptr inbounds [5 x [5 x double]]* %2157, i32 0, i64 1
  %2159 = getelementptr inbounds [5 x double]* %2158, i32 0, i64 3
  store double 0.000000e+00, double* %2159, align 8
  %2160 = load double* @dt, align 8
  %2161 = load double* @ty2, align 8
  %2162 = fmul double %2160, %2161
  %2163 = load i32* %i, align 4
  %2164 = sext i32 %2163 to i64
  %2165 = load i32* %j, align 4
  %2166 = add nsw i32 %2165, 1
  %2167 = sext i32 %2166 to i64
  %2168 = load i32* %1, align 4
  %2169 = sext i32 %2168 to i64
  %2170 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2169
  %2171 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2170, i32 0, i64 %2167
  %2172 = getelementptr inbounds [23 x [5 x double]]* %2171, i32 0, i64 %2164
  %2173 = getelementptr inbounds [5 x double]* %2172, i32 0, i64 3
  %2174 = load double* %2173, align 8
  %2175 = load double* %tmp1, align 8
  %2176 = fmul double %2174, %2175
  %2177 = fmul double %2162, %2176
  %2178 = load i32* %i, align 4
  %2179 = sext i32 %2178 to i64
  %2180 = load i32* %j, align 4
  %2181 = sext i32 %2180 to i64
  %2182 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %2181
  %2183 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2182, i32 0, i64 %2179
  %2184 = getelementptr inbounds [5 x [5 x double]]* %2183, i32 0, i64 2
  %2185 = getelementptr inbounds [5 x double]* %2184, i32 0, i64 3
  store double %2177, double* %2185, align 8
  %2186 = load double* @dt, align 8
  %2187 = load double* @ty2, align 8
  %2188 = fmul double %2186, %2187
  %2189 = load i32* %i, align 4
  %2190 = sext i32 %2189 to i64
  %2191 = load i32* %j, align 4
  %2192 = add nsw i32 %2191, 1
  %2193 = sext i32 %2192 to i64
  %2194 = load i32* %1, align 4
  %2195 = sext i32 %2194 to i64
  %2196 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2195
  %2197 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2196, i32 0, i64 %2193
  %2198 = getelementptr inbounds [23 x [5 x double]]* %2197, i32 0, i64 %2190
  %2199 = getelementptr inbounds [5 x double]* %2198, i32 0, i64 2
  %2200 = load double* %2199, align 8
  %2201 = load double* %tmp1, align 8
  %2202 = fmul double %2200, %2201
  %2203 = fmul double %2188, %2202
  %2204 = load double* @dt, align 8
  %2205 = load double* @ty1, align 8
  %2206 = fmul double %2204, %2205
  %2207 = load double* %c34, align 8
  %2208 = load double* %tmp1, align 8
  %2209 = fmul double %2207, %2208
  %2210 = fmul double %2206, %2209
  %2211 = fsub double %2203, %2210
  %2212 = load double* @dt, align 8
  %2213 = load double* @ty1, align 8
  %2214 = fmul double %2212, %2213
  %2215 = load double* @dy4, align 8
  %2216 = fmul double %2214, %2215
  %2217 = fsub double %2211, %2216
  %2218 = load i32* %i, align 4
  %2219 = sext i32 %2218 to i64
  %2220 = load i32* %j, align 4
  %2221 = sext i32 %2220 to i64
  %2222 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %2221
  %2223 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2222, i32 0, i64 %2219
  %2224 = getelementptr inbounds [5 x [5 x double]]* %2223, i32 0, i64 3
  %2225 = getelementptr inbounds [5 x double]* %2224, i32 0, i64 3
  store double %2217, double* %2225, align 8
  %2226 = load i32* %i, align 4
  %2227 = sext i32 %2226 to i64
  %2228 = load i32* %j, align 4
  %2229 = sext i32 %2228 to i64
  %2230 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %2229
  %2231 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2230, i32 0, i64 %2227
  %2232 = getelementptr inbounds [5 x [5 x double]]* %2231, i32 0, i64 4
  %2233 = getelementptr inbounds [5 x double]* %2232, i32 0, i64 3
  store double 0.000000e+00, double* %2233, align 8
  %2234 = load double* @dt, align 8
  %2235 = load double* @ty2, align 8
  %2236 = fmul double %2234, %2235
  %2237 = load i32* %i, align 4
  %2238 = sext i32 %2237 to i64
  %2239 = load i32* %j, align 4
  %2240 = add nsw i32 %2239, 1
  %2241 = sext i32 %2240 to i64
  %2242 = load i32* %1, align 4
  %2243 = sext i32 %2242 to i64
  %2244 = getelementptr inbounds [22 x [23 x [23 x double]]]* @qs, i32 0, i64 %2243
  %2245 = getelementptr inbounds [23 x [23 x double]]* %2244, i32 0, i64 %2241
  %2246 = getelementptr inbounds [23 x double]* %2245, i32 0, i64 %2238
  %2247 = load double* %2246, align 8
  %2248 = fmul double 8.000000e-01, %2247
  %2249 = load i32* %i, align 4
  %2250 = sext i32 %2249 to i64
  %2251 = load i32* %j, align 4
  %2252 = add nsw i32 %2251, 1
  %2253 = sext i32 %2252 to i64
  %2254 = load i32* %1, align 4
  %2255 = sext i32 %2254 to i64
  %2256 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2255
  %2257 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2256, i32 0, i64 %2253
  %2258 = getelementptr inbounds [23 x [5 x double]]* %2257, i32 0, i64 %2250
  %2259 = getelementptr inbounds [5 x double]* %2258, i32 0, i64 4
  %2260 = load double* %2259, align 8
  %2261 = fmul double 1.400000e+00, %2260
  %2262 = fsub double %2248, %2261
  %2263 = load i32* %i, align 4
  %2264 = sext i32 %2263 to i64
  %2265 = load i32* %j, align 4
  %2266 = add nsw i32 %2265, 1
  %2267 = sext i32 %2266 to i64
  %2268 = load i32* %1, align 4
  %2269 = sext i32 %2268 to i64
  %2270 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2269
  %2271 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2270, i32 0, i64 %2267
  %2272 = getelementptr inbounds [23 x [5 x double]]* %2271, i32 0, i64 %2264
  %2273 = getelementptr inbounds [5 x double]* %2272, i32 0, i64 2
  %2274 = load double* %2273, align 8
  %2275 = load double* %tmp2, align 8
  %2276 = fmul double %2274, %2275
  %2277 = fmul double %2262, %2276
  %2278 = fmul double %2236, %2277
  %2279 = load double* @dt, align 8
  %2280 = load double* @ty1, align 8
  %2281 = fmul double %2279, %2280
  %2282 = load double* %c34, align 8
  %2283 = load double* %c1345, align 8
  %2284 = fsub double %2282, %2283
  %2285 = fsub double -0.000000e+00, %2284
  %2286 = load double* %tmp3, align 8
  %2287 = fmul double %2285, %2286
  %2288 = load i32* %i, align 4
  %2289 = sext i32 %2288 to i64
  %2290 = load i32* %j, align 4
  %2291 = add nsw i32 %2290, 1
  %2292 = sext i32 %2291 to i64
  %2293 = load i32* %1, align 4
  %2294 = sext i32 %2293 to i64
  %2295 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2294
  %2296 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2295, i32 0, i64 %2292
  %2297 = getelementptr inbounds [23 x [5 x double]]* %2296, i32 0, i64 %2289
  %2298 = getelementptr inbounds [5 x double]* %2297, i32 0, i64 1
  %2299 = load double* %2298, align 8
  %2300 = load i32* %i, align 4
  %2301 = sext i32 %2300 to i64
  %2302 = load i32* %j, align 4
  %2303 = add nsw i32 %2302, 1
  %2304 = sext i32 %2303 to i64
  %2305 = load i32* %1, align 4
  %2306 = sext i32 %2305 to i64
  %2307 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2306
  %2308 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2307, i32 0, i64 %2304
  %2309 = getelementptr inbounds [23 x [5 x double]]* %2308, i32 0, i64 %2301
  %2310 = getelementptr inbounds [5 x double]* %2309, i32 0, i64 1
  %2311 = load double* %2310, align 8
  %2312 = fmul double %2299, %2311
  %2313 = fmul double %2287, %2312
  %2314 = load double* %r43, align 8
  %2315 = load double* %c34, align 8
  %2316 = fmul double %2314, %2315
  %2317 = load double* %c1345, align 8
  %2318 = fsub double %2316, %2317
  %2319 = load double* %tmp3, align 8
  %2320 = fmul double %2318, %2319
  %2321 = load i32* %i, align 4
  %2322 = sext i32 %2321 to i64
  %2323 = load i32* %j, align 4
  %2324 = add nsw i32 %2323, 1
  %2325 = sext i32 %2324 to i64
  %2326 = load i32* %1, align 4
  %2327 = sext i32 %2326 to i64
  %2328 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2327
  %2329 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2328, i32 0, i64 %2325
  %2330 = getelementptr inbounds [23 x [5 x double]]* %2329, i32 0, i64 %2322
  %2331 = getelementptr inbounds [5 x double]* %2330, i32 0, i64 2
  %2332 = load double* %2331, align 8
  %2333 = load i32* %i, align 4
  %2334 = sext i32 %2333 to i64
  %2335 = load i32* %j, align 4
  %2336 = add nsw i32 %2335, 1
  %2337 = sext i32 %2336 to i64
  %2338 = load i32* %1, align 4
  %2339 = sext i32 %2338 to i64
  %2340 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2339
  %2341 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2340, i32 0, i64 %2337
  %2342 = getelementptr inbounds [23 x [5 x double]]* %2341, i32 0, i64 %2334
  %2343 = getelementptr inbounds [5 x double]* %2342, i32 0, i64 2
  %2344 = load double* %2343, align 8
  %2345 = fmul double %2332, %2344
  %2346 = fmul double %2320, %2345
  %2347 = fsub double %2313, %2346
  %2348 = load double* %c34, align 8
  %2349 = load double* %c1345, align 8
  %2350 = fsub double %2348, %2349
  %2351 = load double* %tmp3, align 8
  %2352 = fmul double %2350, %2351
  %2353 = load i32* %i, align 4
  %2354 = sext i32 %2353 to i64
  %2355 = load i32* %j, align 4
  %2356 = add nsw i32 %2355, 1
  %2357 = sext i32 %2356 to i64
  %2358 = load i32* %1, align 4
  %2359 = sext i32 %2358 to i64
  %2360 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2359
  %2361 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2360, i32 0, i64 %2357
  %2362 = getelementptr inbounds [23 x [5 x double]]* %2361, i32 0, i64 %2354
  %2363 = getelementptr inbounds [5 x double]* %2362, i32 0, i64 3
  %2364 = load double* %2363, align 8
  %2365 = load i32* %i, align 4
  %2366 = sext i32 %2365 to i64
  %2367 = load i32* %j, align 4
  %2368 = add nsw i32 %2367, 1
  %2369 = sext i32 %2368 to i64
  %2370 = load i32* %1, align 4
  %2371 = sext i32 %2370 to i64
  %2372 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2371
  %2373 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2372, i32 0, i64 %2369
  %2374 = getelementptr inbounds [23 x [5 x double]]* %2373, i32 0, i64 %2366
  %2375 = getelementptr inbounds [5 x double]* %2374, i32 0, i64 3
  %2376 = load double* %2375, align 8
  %2377 = fmul double %2364, %2376
  %2378 = fmul double %2352, %2377
  %2379 = fsub double %2347, %2378
  %2380 = load double* %c1345, align 8
  %2381 = load double* %tmp2, align 8
  %2382 = fmul double %2380, %2381
  %2383 = load i32* %i, align 4
  %2384 = sext i32 %2383 to i64
  %2385 = load i32* %j, align 4
  %2386 = add nsw i32 %2385, 1
  %2387 = sext i32 %2386 to i64
  %2388 = load i32* %1, align 4
  %2389 = sext i32 %2388 to i64
  %2390 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2389
  %2391 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2390, i32 0, i64 %2387
  %2392 = getelementptr inbounds [23 x [5 x double]]* %2391, i32 0, i64 %2384
  %2393 = getelementptr inbounds [5 x double]* %2392, i32 0, i64 4
  %2394 = load double* %2393, align 8
  %2395 = fmul double %2382, %2394
  %2396 = fsub double %2379, %2395
  %2397 = fmul double %2281, %2396
  %2398 = fsub double %2278, %2397
  %2399 = load i32* %i, align 4
  %2400 = sext i32 %2399 to i64
  %2401 = load i32* %j, align 4
  %2402 = sext i32 %2401 to i64
  %2403 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %2402
  %2404 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2403, i32 0, i64 %2400
  %2405 = getelementptr inbounds [5 x [5 x double]]* %2404, i32 0, i64 0
  %2406 = getelementptr inbounds [5 x double]* %2405, i32 0, i64 4
  store double %2398, double* %2406, align 8
  %2407 = load double* @dt, align 8
  %2408 = load double* @ty2, align 8
  %2409 = fmul double %2407, %2408
  %2410 = load i32* %i, align 4
  %2411 = sext i32 %2410 to i64
  %2412 = load i32* %j, align 4
  %2413 = add nsw i32 %2412, 1
  %2414 = sext i32 %2413 to i64
  %2415 = load i32* %1, align 4
  %2416 = sext i32 %2415 to i64
  %2417 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2416
  %2418 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2417, i32 0, i64 %2414
  %2419 = getelementptr inbounds [23 x [5 x double]]* %2418, i32 0, i64 %2411
  %2420 = getelementptr inbounds [5 x double]* %2419, i32 0, i64 1
  %2421 = load double* %2420, align 8
  %2422 = load i32* %i, align 4
  %2423 = sext i32 %2422 to i64
  %2424 = load i32* %j, align 4
  %2425 = add nsw i32 %2424, 1
  %2426 = sext i32 %2425 to i64
  %2427 = load i32* %1, align 4
  %2428 = sext i32 %2427 to i64
  %2429 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2428
  %2430 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2429, i32 0, i64 %2426
  %2431 = getelementptr inbounds [23 x [5 x double]]* %2430, i32 0, i64 %2423
  %2432 = getelementptr inbounds [5 x double]* %2431, i32 0, i64 2
  %2433 = load double* %2432, align 8
  %2434 = fmul double %2421, %2433
  %2435 = fmul double -4.000000e-01, %2434
  %2436 = load double* %tmp2, align 8
  %2437 = fmul double %2435, %2436
  %2438 = fmul double %2409, %2437
  %2439 = load double* @dt, align 8
  %2440 = load double* @ty1, align 8
  %2441 = fmul double %2439, %2440
  %2442 = load double* %c34, align 8
  %2443 = load double* %c1345, align 8
  %2444 = fsub double %2442, %2443
  %2445 = fmul double %2441, %2444
  %2446 = load double* %tmp2, align 8
  %2447 = fmul double %2445, %2446
  %2448 = load i32* %i, align 4
  %2449 = sext i32 %2448 to i64
  %2450 = load i32* %j, align 4
  %2451 = add nsw i32 %2450, 1
  %2452 = sext i32 %2451 to i64
  %2453 = load i32* %1, align 4
  %2454 = sext i32 %2453 to i64
  %2455 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2454
  %2456 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2455, i32 0, i64 %2452
  %2457 = getelementptr inbounds [23 x [5 x double]]* %2456, i32 0, i64 %2449
  %2458 = getelementptr inbounds [5 x double]* %2457, i32 0, i64 1
  %2459 = load double* %2458, align 8
  %2460 = fmul double %2447, %2459
  %2461 = fsub double %2438, %2460
  %2462 = load i32* %i, align 4
  %2463 = sext i32 %2462 to i64
  %2464 = load i32* %j, align 4
  %2465 = sext i32 %2464 to i64
  %2466 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %2465
  %2467 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2466, i32 0, i64 %2463
  %2468 = getelementptr inbounds [5 x [5 x double]]* %2467, i32 0, i64 1
  %2469 = getelementptr inbounds [5 x double]* %2468, i32 0, i64 4
  store double %2461, double* %2469, align 8
  %2470 = load double* @dt, align 8
  %2471 = load double* @ty2, align 8
  %2472 = fmul double %2470, %2471
  %2473 = load i32* %i, align 4
  %2474 = sext i32 %2473 to i64
  %2475 = load i32* %j, align 4
  %2476 = add nsw i32 %2475, 1
  %2477 = sext i32 %2476 to i64
  %2478 = load i32* %1, align 4
  %2479 = sext i32 %2478 to i64
  %2480 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2479
  %2481 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2480, i32 0, i64 %2477
  %2482 = getelementptr inbounds [23 x [5 x double]]* %2481, i32 0, i64 %2474
  %2483 = getelementptr inbounds [5 x double]* %2482, i32 0, i64 4
  %2484 = load double* %2483, align 8
  %2485 = load double* %tmp1, align 8
  %2486 = fmul double %2484, %2485
  %2487 = fmul double 1.400000e+00, %2486
  %2488 = load i32* %i, align 4
  %2489 = sext i32 %2488 to i64
  %2490 = load i32* %j, align 4
  %2491 = add nsw i32 %2490, 1
  %2492 = sext i32 %2491 to i64
  %2493 = load i32* %1, align 4
  %2494 = sext i32 %2493 to i64
  %2495 = getelementptr inbounds [22 x [23 x [23 x double]]]* @qs, i32 0, i64 %2494
  %2496 = getelementptr inbounds [23 x [23 x double]]* %2495, i32 0, i64 %2492
  %2497 = getelementptr inbounds [23 x double]* %2496, i32 0, i64 %2489
  %2498 = load double* %2497, align 8
  %2499 = load double* %tmp1, align 8
  %2500 = fmul double %2498, %2499
  %2501 = load i32* %i, align 4
  %2502 = sext i32 %2501 to i64
  %2503 = load i32* %j, align 4
  %2504 = add nsw i32 %2503, 1
  %2505 = sext i32 %2504 to i64
  %2506 = load i32* %1, align 4
  %2507 = sext i32 %2506 to i64
  %2508 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2507
  %2509 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2508, i32 0, i64 %2505
  %2510 = getelementptr inbounds [23 x [5 x double]]* %2509, i32 0, i64 %2502
  %2511 = getelementptr inbounds [5 x double]* %2510, i32 0, i64 2
  %2512 = load double* %2511, align 8
  %2513 = load i32* %i, align 4
  %2514 = sext i32 %2513 to i64
  %2515 = load i32* %j, align 4
  %2516 = add nsw i32 %2515, 1
  %2517 = sext i32 %2516 to i64
  %2518 = load i32* %1, align 4
  %2519 = sext i32 %2518 to i64
  %2520 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2519
  %2521 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2520, i32 0, i64 %2517
  %2522 = getelementptr inbounds [23 x [5 x double]]* %2521, i32 0, i64 %2514
  %2523 = getelementptr inbounds [5 x double]* %2522, i32 0, i64 2
  %2524 = load double* %2523, align 8
  %2525 = fmul double %2512, %2524
  %2526 = load double* %tmp2, align 8
  %2527 = fmul double %2525, %2526
  %2528 = fadd double %2500, %2527
  %2529 = fmul double 4.000000e-01, %2528
  %2530 = fsub double %2487, %2529
  %2531 = fmul double %2472, %2530
  %2532 = load double* @dt, align 8
  %2533 = load double* @ty1, align 8
  %2534 = fmul double %2532, %2533
  %2535 = load double* %r43, align 8
  %2536 = load double* %c34, align 8
  %2537 = fmul double %2535, %2536
  %2538 = load double* %c1345, align 8
  %2539 = fsub double %2537, %2538
  %2540 = fmul double %2534, %2539
  %2541 = load double* %tmp2, align 8
  %2542 = fmul double %2540, %2541
  %2543 = load i32* %i, align 4
  %2544 = sext i32 %2543 to i64
  %2545 = load i32* %j, align 4
  %2546 = add nsw i32 %2545, 1
  %2547 = sext i32 %2546 to i64
  %2548 = load i32* %1, align 4
  %2549 = sext i32 %2548 to i64
  %2550 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2549
  %2551 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2550, i32 0, i64 %2547
  %2552 = getelementptr inbounds [23 x [5 x double]]* %2551, i32 0, i64 %2544
  %2553 = getelementptr inbounds [5 x double]* %2552, i32 0, i64 2
  %2554 = load double* %2553, align 8
  %2555 = fmul double %2542, %2554
  %2556 = fsub double %2531, %2555
  %2557 = load i32* %i, align 4
  %2558 = sext i32 %2557 to i64
  %2559 = load i32* %j, align 4
  %2560 = sext i32 %2559 to i64
  %2561 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %2560
  %2562 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2561, i32 0, i64 %2558
  %2563 = getelementptr inbounds [5 x [5 x double]]* %2562, i32 0, i64 2
  %2564 = getelementptr inbounds [5 x double]* %2563, i32 0, i64 4
  store double %2556, double* %2564, align 8
  %2565 = load double* @dt, align 8
  %2566 = load double* @ty2, align 8
  %2567 = fmul double %2565, %2566
  %2568 = load i32* %i, align 4
  %2569 = sext i32 %2568 to i64
  %2570 = load i32* %j, align 4
  %2571 = add nsw i32 %2570, 1
  %2572 = sext i32 %2571 to i64
  %2573 = load i32* %1, align 4
  %2574 = sext i32 %2573 to i64
  %2575 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2574
  %2576 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2575, i32 0, i64 %2572
  %2577 = getelementptr inbounds [23 x [5 x double]]* %2576, i32 0, i64 %2569
  %2578 = getelementptr inbounds [5 x double]* %2577, i32 0, i64 2
  %2579 = load double* %2578, align 8
  %2580 = load i32* %i, align 4
  %2581 = sext i32 %2580 to i64
  %2582 = load i32* %j, align 4
  %2583 = add nsw i32 %2582, 1
  %2584 = sext i32 %2583 to i64
  %2585 = load i32* %1, align 4
  %2586 = sext i32 %2585 to i64
  %2587 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2586
  %2588 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2587, i32 0, i64 %2584
  %2589 = getelementptr inbounds [23 x [5 x double]]* %2588, i32 0, i64 %2581
  %2590 = getelementptr inbounds [5 x double]* %2589, i32 0, i64 3
  %2591 = load double* %2590, align 8
  %2592 = fmul double %2579, %2591
  %2593 = fmul double -4.000000e-01, %2592
  %2594 = load double* %tmp2, align 8
  %2595 = fmul double %2593, %2594
  %2596 = fmul double %2567, %2595
  %2597 = load double* @dt, align 8
  %2598 = load double* @ty1, align 8
  %2599 = fmul double %2597, %2598
  %2600 = load double* %c34, align 8
  %2601 = load double* %c1345, align 8
  %2602 = fsub double %2600, %2601
  %2603 = fmul double %2599, %2602
  %2604 = load double* %tmp2, align 8
  %2605 = fmul double %2603, %2604
  %2606 = load i32* %i, align 4
  %2607 = sext i32 %2606 to i64
  %2608 = load i32* %j, align 4
  %2609 = add nsw i32 %2608, 1
  %2610 = sext i32 %2609 to i64
  %2611 = load i32* %1, align 4
  %2612 = sext i32 %2611 to i64
  %2613 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2612
  %2614 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2613, i32 0, i64 %2610
  %2615 = getelementptr inbounds [23 x [5 x double]]* %2614, i32 0, i64 %2607
  %2616 = getelementptr inbounds [5 x double]* %2615, i32 0, i64 3
  %2617 = load double* %2616, align 8
  %2618 = fmul double %2605, %2617
  %2619 = fsub double %2596, %2618
  %2620 = load i32* %i, align 4
  %2621 = sext i32 %2620 to i64
  %2622 = load i32* %j, align 4
  %2623 = sext i32 %2622 to i64
  %2624 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %2623
  %2625 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2624, i32 0, i64 %2621
  %2626 = getelementptr inbounds [5 x [5 x double]]* %2625, i32 0, i64 3
  %2627 = getelementptr inbounds [5 x double]* %2626, i32 0, i64 4
  store double %2619, double* %2627, align 8
  %2628 = load double* @dt, align 8
  %2629 = load double* @ty2, align 8
  %2630 = fmul double %2628, %2629
  %2631 = load i32* %i, align 4
  %2632 = sext i32 %2631 to i64
  %2633 = load i32* %j, align 4
  %2634 = add nsw i32 %2633, 1
  %2635 = sext i32 %2634 to i64
  %2636 = load i32* %1, align 4
  %2637 = sext i32 %2636 to i64
  %2638 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2637
  %2639 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2638, i32 0, i64 %2635
  %2640 = getelementptr inbounds [23 x [5 x double]]* %2639, i32 0, i64 %2632
  %2641 = getelementptr inbounds [5 x double]* %2640, i32 0, i64 2
  %2642 = load double* %2641, align 8
  %2643 = load double* %tmp1, align 8
  %2644 = fmul double %2642, %2643
  %2645 = fmul double 1.400000e+00, %2644
  %2646 = fmul double %2630, %2645
  %2647 = load double* @dt, align 8
  %2648 = load double* @ty1, align 8
  %2649 = fmul double %2647, %2648
  %2650 = load double* %c1345, align 8
  %2651 = fmul double %2649, %2650
  %2652 = load double* %tmp1, align 8
  %2653 = fmul double %2651, %2652
  %2654 = fsub double %2646, %2653
  %2655 = load double* @dt, align 8
  %2656 = load double* @ty1, align 8
  %2657 = fmul double %2655, %2656
  %2658 = load double* @dy5, align 8
  %2659 = fmul double %2657, %2658
  %2660 = fsub double %2654, %2659
  %2661 = load i32* %i, align 4
  %2662 = sext i32 %2661 to i64
  %2663 = load i32* %j, align 4
  %2664 = sext i32 %2663 to i64
  %2665 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %2664
  %2666 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2665, i32 0, i64 %2662
  %2667 = getelementptr inbounds [5 x [5 x double]]* %2666, i32 0, i64 4
  %2668 = getelementptr inbounds [5 x double]* %2667, i32 0, i64 4
  store double %2660, double* %2668, align 8
  %2669 = load i32* %i, align 4
  %2670 = sext i32 %2669 to i64
  %2671 = load i32* %j, align 4
  %2672 = sext i32 %2671 to i64
  %2673 = load i32* %1, align 4
  %2674 = add nsw i32 %2673, 1
  %2675 = sext i32 %2674 to i64
  %2676 = getelementptr inbounds [22 x [23 x [23 x double]]]* @rho_i, i32 0, i64 %2675
  %2677 = getelementptr inbounds [23 x [23 x double]]* %2676, i32 0, i64 %2672
  %2678 = getelementptr inbounds [23 x double]* %2677, i32 0, i64 %2670
  %2679 = load double* %2678, align 8
  store double %2679, double* %tmp1, align 8
  %2680 = load double* %tmp1, align 8
  %2681 = load double* %tmp1, align 8
  %2682 = fmul double %2680, %2681
  store double %2682, double* %tmp2, align 8
  %2683 = load double* %tmp1, align 8
  %2684 = load double* %tmp2, align 8
  %2685 = fmul double %2683, %2684
  store double %2685, double* %tmp3, align 8
  %2686 = load double* @dt, align 8
  %2687 = fsub double -0.000000e+00, %2686
  %2688 = load double* @tz1, align 8
  %2689 = fmul double %2687, %2688
  %2690 = load double* @dz1, align 8
  %2691 = fmul double %2689, %2690
  %2692 = load i32* %i, align 4
  %2693 = sext i32 %2692 to i64
  %2694 = load i32* %j, align 4
  %2695 = sext i32 %2694 to i64
  %2696 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %2695
  %2697 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2696, i32 0, i64 %2693
  %2698 = getelementptr inbounds [5 x [5 x double]]* %2697, i32 0, i64 0
  %2699 = getelementptr inbounds [5 x double]* %2698, i32 0, i64 0
  store double %2691, double* %2699, align 8
  %2700 = load i32* %i, align 4
  %2701 = sext i32 %2700 to i64
  %2702 = load i32* %j, align 4
  %2703 = sext i32 %2702 to i64
  %2704 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %2703
  %2705 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2704, i32 0, i64 %2701
  %2706 = getelementptr inbounds [5 x [5 x double]]* %2705, i32 0, i64 1
  %2707 = getelementptr inbounds [5 x double]* %2706, i32 0, i64 0
  store double 0.000000e+00, double* %2707, align 8
  %2708 = load i32* %i, align 4
  %2709 = sext i32 %2708 to i64
  %2710 = load i32* %j, align 4
  %2711 = sext i32 %2710 to i64
  %2712 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %2711
  %2713 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2712, i32 0, i64 %2709
  %2714 = getelementptr inbounds [5 x [5 x double]]* %2713, i32 0, i64 2
  %2715 = getelementptr inbounds [5 x double]* %2714, i32 0, i64 0
  store double 0.000000e+00, double* %2715, align 8
  %2716 = load double* @dt, align 8
  %2717 = load double* @tz2, align 8
  %2718 = fmul double %2716, %2717
  %2719 = load i32* %i, align 4
  %2720 = sext i32 %2719 to i64
  %2721 = load i32* %j, align 4
  %2722 = sext i32 %2721 to i64
  %2723 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %2722
  %2724 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2723, i32 0, i64 %2720
  %2725 = getelementptr inbounds [5 x [5 x double]]* %2724, i32 0, i64 3
  %2726 = getelementptr inbounds [5 x double]* %2725, i32 0, i64 0
  store double %2718, double* %2726, align 8
  %2727 = load i32* %i, align 4
  %2728 = sext i32 %2727 to i64
  %2729 = load i32* %j, align 4
  %2730 = sext i32 %2729 to i64
  %2731 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %2730
  %2732 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2731, i32 0, i64 %2728
  %2733 = getelementptr inbounds [5 x [5 x double]]* %2732, i32 0, i64 4
  %2734 = getelementptr inbounds [5 x double]* %2733, i32 0, i64 0
  store double 0.000000e+00, double* %2734, align 8
  %2735 = load double* @dt, align 8
  %2736 = load double* @tz2, align 8
  %2737 = fmul double %2735, %2736
  %2738 = load i32* %i, align 4
  %2739 = sext i32 %2738 to i64
  %2740 = load i32* %j, align 4
  %2741 = sext i32 %2740 to i64
  %2742 = load i32* %1, align 4
  %2743 = add nsw i32 %2742, 1
  %2744 = sext i32 %2743 to i64
  %2745 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2744
  %2746 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2745, i32 0, i64 %2741
  %2747 = getelementptr inbounds [23 x [5 x double]]* %2746, i32 0, i64 %2739
  %2748 = getelementptr inbounds [5 x double]* %2747, i32 0, i64 1
  %2749 = load double* %2748, align 8
  %2750 = load i32* %i, align 4
  %2751 = sext i32 %2750 to i64
  %2752 = load i32* %j, align 4
  %2753 = sext i32 %2752 to i64
  %2754 = load i32* %1, align 4
  %2755 = add nsw i32 %2754, 1
  %2756 = sext i32 %2755 to i64
  %2757 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2756
  %2758 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2757, i32 0, i64 %2753
  %2759 = getelementptr inbounds [23 x [5 x double]]* %2758, i32 0, i64 %2751
  %2760 = getelementptr inbounds [5 x double]* %2759, i32 0, i64 3
  %2761 = load double* %2760, align 8
  %2762 = fmul double %2749, %2761
  %2763 = fsub double -0.000000e+00, %2762
  %2764 = load double* %tmp2, align 8
  %2765 = fmul double %2763, %2764
  %2766 = fmul double %2737, %2765
  %2767 = load double* @dt, align 8
  %2768 = load double* @tz1, align 8
  %2769 = fmul double %2767, %2768
  %2770 = load double* %c34, align 8
  %2771 = fsub double -0.000000e+00, %2770
  %2772 = load double* %tmp2, align 8
  %2773 = fmul double %2771, %2772
  %2774 = load i32* %i, align 4
  %2775 = sext i32 %2774 to i64
  %2776 = load i32* %j, align 4
  %2777 = sext i32 %2776 to i64
  %2778 = load i32* %1, align 4
  %2779 = add nsw i32 %2778, 1
  %2780 = sext i32 %2779 to i64
  %2781 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2780
  %2782 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2781, i32 0, i64 %2777
  %2783 = getelementptr inbounds [23 x [5 x double]]* %2782, i32 0, i64 %2775
  %2784 = getelementptr inbounds [5 x double]* %2783, i32 0, i64 1
  %2785 = load double* %2784, align 8
  %2786 = fmul double %2773, %2785
  %2787 = fmul double %2769, %2786
  %2788 = fsub double %2766, %2787
  %2789 = load i32* %i, align 4
  %2790 = sext i32 %2789 to i64
  %2791 = load i32* %j, align 4
  %2792 = sext i32 %2791 to i64
  %2793 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %2792
  %2794 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2793, i32 0, i64 %2790
  %2795 = getelementptr inbounds [5 x [5 x double]]* %2794, i32 0, i64 0
  %2796 = getelementptr inbounds [5 x double]* %2795, i32 0, i64 1
  store double %2788, double* %2796, align 8
  %2797 = load double* @dt, align 8
  %2798 = load double* @tz2, align 8
  %2799 = fmul double %2797, %2798
  %2800 = load i32* %i, align 4
  %2801 = sext i32 %2800 to i64
  %2802 = load i32* %j, align 4
  %2803 = sext i32 %2802 to i64
  %2804 = load i32* %1, align 4
  %2805 = add nsw i32 %2804, 1
  %2806 = sext i32 %2805 to i64
  %2807 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2806
  %2808 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2807, i32 0, i64 %2803
  %2809 = getelementptr inbounds [23 x [5 x double]]* %2808, i32 0, i64 %2801
  %2810 = getelementptr inbounds [5 x double]* %2809, i32 0, i64 3
  %2811 = load double* %2810, align 8
  %2812 = load double* %tmp1, align 8
  %2813 = fmul double %2811, %2812
  %2814 = fmul double %2799, %2813
  %2815 = load double* @dt, align 8
  %2816 = load double* @tz1, align 8
  %2817 = fmul double %2815, %2816
  %2818 = load double* %c34, align 8
  %2819 = fmul double %2817, %2818
  %2820 = load double* %tmp1, align 8
  %2821 = fmul double %2819, %2820
  %2822 = fsub double %2814, %2821
  %2823 = load double* @dt, align 8
  %2824 = load double* @tz1, align 8
  %2825 = fmul double %2823, %2824
  %2826 = load double* @dz2, align 8
  %2827 = fmul double %2825, %2826
  %2828 = fsub double %2822, %2827
  %2829 = load i32* %i, align 4
  %2830 = sext i32 %2829 to i64
  %2831 = load i32* %j, align 4
  %2832 = sext i32 %2831 to i64
  %2833 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %2832
  %2834 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2833, i32 0, i64 %2830
  %2835 = getelementptr inbounds [5 x [5 x double]]* %2834, i32 0, i64 1
  %2836 = getelementptr inbounds [5 x double]* %2835, i32 0, i64 1
  store double %2828, double* %2836, align 8
  %2837 = load i32* %i, align 4
  %2838 = sext i32 %2837 to i64
  %2839 = load i32* %j, align 4
  %2840 = sext i32 %2839 to i64
  %2841 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %2840
  %2842 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2841, i32 0, i64 %2838
  %2843 = getelementptr inbounds [5 x [5 x double]]* %2842, i32 0, i64 2
  %2844 = getelementptr inbounds [5 x double]* %2843, i32 0, i64 1
  store double 0.000000e+00, double* %2844, align 8
  %2845 = load double* @dt, align 8
  %2846 = load double* @tz2, align 8
  %2847 = fmul double %2845, %2846
  %2848 = load i32* %i, align 4
  %2849 = sext i32 %2848 to i64
  %2850 = load i32* %j, align 4
  %2851 = sext i32 %2850 to i64
  %2852 = load i32* %1, align 4
  %2853 = add nsw i32 %2852, 1
  %2854 = sext i32 %2853 to i64
  %2855 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2854
  %2856 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2855, i32 0, i64 %2851
  %2857 = getelementptr inbounds [23 x [5 x double]]* %2856, i32 0, i64 %2849
  %2858 = getelementptr inbounds [5 x double]* %2857, i32 0, i64 1
  %2859 = load double* %2858, align 8
  %2860 = load double* %tmp1, align 8
  %2861 = fmul double %2859, %2860
  %2862 = fmul double %2847, %2861
  %2863 = load i32* %i, align 4
  %2864 = sext i32 %2863 to i64
  %2865 = load i32* %j, align 4
  %2866 = sext i32 %2865 to i64
  %2867 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %2866
  %2868 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2867, i32 0, i64 %2864
  %2869 = getelementptr inbounds [5 x [5 x double]]* %2868, i32 0, i64 3
  %2870 = getelementptr inbounds [5 x double]* %2869, i32 0, i64 1
  store double %2862, double* %2870, align 8
  %2871 = load i32* %i, align 4
  %2872 = sext i32 %2871 to i64
  %2873 = load i32* %j, align 4
  %2874 = sext i32 %2873 to i64
  %2875 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %2874
  %2876 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2875, i32 0, i64 %2872
  %2877 = getelementptr inbounds [5 x [5 x double]]* %2876, i32 0, i64 4
  %2878 = getelementptr inbounds [5 x double]* %2877, i32 0, i64 1
  store double 0.000000e+00, double* %2878, align 8
  %2879 = load double* @dt, align 8
  %2880 = load double* @tz2, align 8
  %2881 = fmul double %2879, %2880
  %2882 = load i32* %i, align 4
  %2883 = sext i32 %2882 to i64
  %2884 = load i32* %j, align 4
  %2885 = sext i32 %2884 to i64
  %2886 = load i32* %1, align 4
  %2887 = add nsw i32 %2886, 1
  %2888 = sext i32 %2887 to i64
  %2889 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2888
  %2890 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2889, i32 0, i64 %2885
  %2891 = getelementptr inbounds [23 x [5 x double]]* %2890, i32 0, i64 %2883
  %2892 = getelementptr inbounds [5 x double]* %2891, i32 0, i64 2
  %2893 = load double* %2892, align 8
  %2894 = load i32* %i, align 4
  %2895 = sext i32 %2894 to i64
  %2896 = load i32* %j, align 4
  %2897 = sext i32 %2896 to i64
  %2898 = load i32* %1, align 4
  %2899 = add nsw i32 %2898, 1
  %2900 = sext i32 %2899 to i64
  %2901 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2900
  %2902 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2901, i32 0, i64 %2897
  %2903 = getelementptr inbounds [23 x [5 x double]]* %2902, i32 0, i64 %2895
  %2904 = getelementptr inbounds [5 x double]* %2903, i32 0, i64 3
  %2905 = load double* %2904, align 8
  %2906 = fmul double %2893, %2905
  %2907 = fsub double -0.000000e+00, %2906
  %2908 = load double* %tmp2, align 8
  %2909 = fmul double %2907, %2908
  %2910 = fmul double %2881, %2909
  %2911 = load double* @dt, align 8
  %2912 = load double* @tz1, align 8
  %2913 = fmul double %2911, %2912
  %2914 = load double* %c34, align 8
  %2915 = fsub double -0.000000e+00, %2914
  %2916 = load double* %tmp2, align 8
  %2917 = fmul double %2915, %2916
  %2918 = load i32* %i, align 4
  %2919 = sext i32 %2918 to i64
  %2920 = load i32* %j, align 4
  %2921 = sext i32 %2920 to i64
  %2922 = load i32* %1, align 4
  %2923 = add nsw i32 %2922, 1
  %2924 = sext i32 %2923 to i64
  %2925 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2924
  %2926 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2925, i32 0, i64 %2921
  %2927 = getelementptr inbounds [23 x [5 x double]]* %2926, i32 0, i64 %2919
  %2928 = getelementptr inbounds [5 x double]* %2927, i32 0, i64 2
  %2929 = load double* %2928, align 8
  %2930 = fmul double %2917, %2929
  %2931 = fmul double %2913, %2930
  %2932 = fsub double %2910, %2931
  %2933 = load i32* %i, align 4
  %2934 = sext i32 %2933 to i64
  %2935 = load i32* %j, align 4
  %2936 = sext i32 %2935 to i64
  %2937 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %2936
  %2938 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2937, i32 0, i64 %2934
  %2939 = getelementptr inbounds [5 x [5 x double]]* %2938, i32 0, i64 0
  %2940 = getelementptr inbounds [5 x double]* %2939, i32 0, i64 2
  store double %2932, double* %2940, align 8
  %2941 = load i32* %i, align 4
  %2942 = sext i32 %2941 to i64
  %2943 = load i32* %j, align 4
  %2944 = sext i32 %2943 to i64
  %2945 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %2944
  %2946 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2945, i32 0, i64 %2942
  %2947 = getelementptr inbounds [5 x [5 x double]]* %2946, i32 0, i64 1
  %2948 = getelementptr inbounds [5 x double]* %2947, i32 0, i64 2
  store double 0.000000e+00, double* %2948, align 8
  %2949 = load double* @dt, align 8
  %2950 = load double* @tz2, align 8
  %2951 = fmul double %2949, %2950
  %2952 = load i32* %i, align 4
  %2953 = sext i32 %2952 to i64
  %2954 = load i32* %j, align 4
  %2955 = sext i32 %2954 to i64
  %2956 = load i32* %1, align 4
  %2957 = add nsw i32 %2956, 1
  %2958 = sext i32 %2957 to i64
  %2959 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2958
  %2960 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2959, i32 0, i64 %2955
  %2961 = getelementptr inbounds [23 x [5 x double]]* %2960, i32 0, i64 %2953
  %2962 = getelementptr inbounds [5 x double]* %2961, i32 0, i64 3
  %2963 = load double* %2962, align 8
  %2964 = load double* %tmp1, align 8
  %2965 = fmul double %2963, %2964
  %2966 = fmul double %2951, %2965
  %2967 = load double* @dt, align 8
  %2968 = load double* @tz1, align 8
  %2969 = fmul double %2967, %2968
  %2970 = load double* %c34, align 8
  %2971 = load double* %tmp1, align 8
  %2972 = fmul double %2970, %2971
  %2973 = fmul double %2969, %2972
  %2974 = fsub double %2966, %2973
  %2975 = load double* @dt, align 8
  %2976 = load double* @tz1, align 8
  %2977 = fmul double %2975, %2976
  %2978 = load double* @dz3, align 8
  %2979 = fmul double %2977, %2978
  %2980 = fsub double %2974, %2979
  %2981 = load i32* %i, align 4
  %2982 = sext i32 %2981 to i64
  %2983 = load i32* %j, align 4
  %2984 = sext i32 %2983 to i64
  %2985 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %2984
  %2986 = getelementptr inbounds [23 x [5 x [5 x double]]]* %2985, i32 0, i64 %2982
  %2987 = getelementptr inbounds [5 x [5 x double]]* %2986, i32 0, i64 2
  %2988 = getelementptr inbounds [5 x double]* %2987, i32 0, i64 2
  store double %2980, double* %2988, align 8
  %2989 = load double* @dt, align 8
  %2990 = load double* @tz2, align 8
  %2991 = fmul double %2989, %2990
  %2992 = load i32* %i, align 4
  %2993 = sext i32 %2992 to i64
  %2994 = load i32* %j, align 4
  %2995 = sext i32 %2994 to i64
  %2996 = load i32* %1, align 4
  %2997 = add nsw i32 %2996, 1
  %2998 = sext i32 %2997 to i64
  %2999 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2998
  %3000 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2999, i32 0, i64 %2995
  %3001 = getelementptr inbounds [23 x [5 x double]]* %3000, i32 0, i64 %2993
  %3002 = getelementptr inbounds [5 x double]* %3001, i32 0, i64 2
  %3003 = load double* %3002, align 8
  %3004 = load double* %tmp1, align 8
  %3005 = fmul double %3003, %3004
  %3006 = fmul double %2991, %3005
  %3007 = load i32* %i, align 4
  %3008 = sext i32 %3007 to i64
  %3009 = load i32* %j, align 4
  %3010 = sext i32 %3009 to i64
  %3011 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %3010
  %3012 = getelementptr inbounds [23 x [5 x [5 x double]]]* %3011, i32 0, i64 %3008
  %3013 = getelementptr inbounds [5 x [5 x double]]* %3012, i32 0, i64 3
  %3014 = getelementptr inbounds [5 x double]* %3013, i32 0, i64 2
  store double %3006, double* %3014, align 8
  %3015 = load i32* %i, align 4
  %3016 = sext i32 %3015 to i64
  %3017 = load i32* %j, align 4
  %3018 = sext i32 %3017 to i64
  %3019 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %3018
  %3020 = getelementptr inbounds [23 x [5 x [5 x double]]]* %3019, i32 0, i64 %3016
  %3021 = getelementptr inbounds [5 x [5 x double]]* %3020, i32 0, i64 4
  %3022 = getelementptr inbounds [5 x double]* %3021, i32 0, i64 2
  store double 0.000000e+00, double* %3022, align 8
  %3023 = load double* @dt, align 8
  %3024 = load double* @tz2, align 8
  %3025 = fmul double %3023, %3024
  %3026 = load i32* %i, align 4
  %3027 = sext i32 %3026 to i64
  %3028 = load i32* %j, align 4
  %3029 = sext i32 %3028 to i64
  %3030 = load i32* %1, align 4
  %3031 = add nsw i32 %3030, 1
  %3032 = sext i32 %3031 to i64
  %3033 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3032
  %3034 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3033, i32 0, i64 %3029
  %3035 = getelementptr inbounds [23 x [5 x double]]* %3034, i32 0, i64 %3027
  %3036 = getelementptr inbounds [5 x double]* %3035, i32 0, i64 3
  %3037 = load double* %3036, align 8
  %3038 = load double* %tmp1, align 8
  %3039 = fmul double %3037, %3038
  %3040 = fsub double -0.000000e+00, %3039
  %3041 = load i32* %i, align 4
  %3042 = sext i32 %3041 to i64
  %3043 = load i32* %j, align 4
  %3044 = sext i32 %3043 to i64
  %3045 = load i32* %1, align 4
  %3046 = add nsw i32 %3045, 1
  %3047 = sext i32 %3046 to i64
  %3048 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3047
  %3049 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3048, i32 0, i64 %3044
  %3050 = getelementptr inbounds [23 x [5 x double]]* %3049, i32 0, i64 %3042
  %3051 = getelementptr inbounds [5 x double]* %3050, i32 0, i64 3
  %3052 = load double* %3051, align 8
  %3053 = load double* %tmp1, align 8
  %3054 = fmul double %3052, %3053
  %3055 = fmul double %3040, %3054
  %3056 = load i32* %i, align 4
  %3057 = sext i32 %3056 to i64
  %3058 = load i32* %j, align 4
  %3059 = sext i32 %3058 to i64
  %3060 = load i32* %1, align 4
  %3061 = add nsw i32 %3060, 1
  %3062 = sext i32 %3061 to i64
  %3063 = getelementptr inbounds [22 x [23 x [23 x double]]]* @qs, i32 0, i64 %3062
  %3064 = getelementptr inbounds [23 x [23 x double]]* %3063, i32 0, i64 %3059
  %3065 = getelementptr inbounds [23 x double]* %3064, i32 0, i64 %3057
  %3066 = load double* %3065, align 8
  %3067 = load double* %tmp1, align 8
  %3068 = fmul double %3066, %3067
  %3069 = fmul double 4.000000e-01, %3068
  %3070 = fadd double %3055, %3069
  %3071 = fmul double %3025, %3070
  %3072 = load double* @dt, align 8
  %3073 = load double* @tz1, align 8
  %3074 = fmul double %3072, %3073
  %3075 = load double* %r43, align 8
  %3076 = fsub double -0.000000e+00, %3075
  %3077 = load double* %c34, align 8
  %3078 = fmul double %3076, %3077
  %3079 = load double* %tmp2, align 8
  %3080 = fmul double %3078, %3079
  %3081 = load i32* %i, align 4
  %3082 = sext i32 %3081 to i64
  %3083 = load i32* %j, align 4
  %3084 = sext i32 %3083 to i64
  %3085 = load i32* %1, align 4
  %3086 = add nsw i32 %3085, 1
  %3087 = sext i32 %3086 to i64
  %3088 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3087
  %3089 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3088, i32 0, i64 %3084
  %3090 = getelementptr inbounds [23 x [5 x double]]* %3089, i32 0, i64 %3082
  %3091 = getelementptr inbounds [5 x double]* %3090, i32 0, i64 3
  %3092 = load double* %3091, align 8
  %3093 = fmul double %3080, %3092
  %3094 = fmul double %3074, %3093
  %3095 = fsub double %3071, %3094
  %3096 = load i32* %i, align 4
  %3097 = sext i32 %3096 to i64
  %3098 = load i32* %j, align 4
  %3099 = sext i32 %3098 to i64
  %3100 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %3099
  %3101 = getelementptr inbounds [23 x [5 x [5 x double]]]* %3100, i32 0, i64 %3097
  %3102 = getelementptr inbounds [5 x [5 x double]]* %3101, i32 0, i64 0
  %3103 = getelementptr inbounds [5 x double]* %3102, i32 0, i64 3
  store double %3095, double* %3103, align 8
  %3104 = load double* @dt, align 8
  %3105 = load double* @tz2, align 8
  %3106 = fmul double %3104, %3105
  %3107 = load i32* %i, align 4
  %3108 = sext i32 %3107 to i64
  %3109 = load i32* %j, align 4
  %3110 = sext i32 %3109 to i64
  %3111 = load i32* %1, align 4
  %3112 = add nsw i32 %3111, 1
  %3113 = sext i32 %3112 to i64
  %3114 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3113
  %3115 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3114, i32 0, i64 %3110
  %3116 = getelementptr inbounds [23 x [5 x double]]* %3115, i32 0, i64 %3108
  %3117 = getelementptr inbounds [5 x double]* %3116, i32 0, i64 1
  %3118 = load double* %3117, align 8
  %3119 = load double* %tmp1, align 8
  %3120 = fmul double %3118, %3119
  %3121 = fmul double -4.000000e-01, %3120
  %3122 = fmul double %3106, %3121
  %3123 = load i32* %i, align 4
  %3124 = sext i32 %3123 to i64
  %3125 = load i32* %j, align 4
  %3126 = sext i32 %3125 to i64
  %3127 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %3126
  %3128 = getelementptr inbounds [23 x [5 x [5 x double]]]* %3127, i32 0, i64 %3124
  %3129 = getelementptr inbounds [5 x [5 x double]]* %3128, i32 0, i64 1
  %3130 = getelementptr inbounds [5 x double]* %3129, i32 0, i64 3
  store double %3122, double* %3130, align 8
  %3131 = load double* @dt, align 8
  %3132 = load double* @tz2, align 8
  %3133 = fmul double %3131, %3132
  %3134 = load i32* %i, align 4
  %3135 = sext i32 %3134 to i64
  %3136 = load i32* %j, align 4
  %3137 = sext i32 %3136 to i64
  %3138 = load i32* %1, align 4
  %3139 = add nsw i32 %3138, 1
  %3140 = sext i32 %3139 to i64
  %3141 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3140
  %3142 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3141, i32 0, i64 %3137
  %3143 = getelementptr inbounds [23 x [5 x double]]* %3142, i32 0, i64 %3135
  %3144 = getelementptr inbounds [5 x double]* %3143, i32 0, i64 2
  %3145 = load double* %3144, align 8
  %3146 = load double* %tmp1, align 8
  %3147 = fmul double %3145, %3146
  %3148 = fmul double -4.000000e-01, %3147
  %3149 = fmul double %3133, %3148
  %3150 = load i32* %i, align 4
  %3151 = sext i32 %3150 to i64
  %3152 = load i32* %j, align 4
  %3153 = sext i32 %3152 to i64
  %3154 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %3153
  %3155 = getelementptr inbounds [23 x [5 x [5 x double]]]* %3154, i32 0, i64 %3151
  %3156 = getelementptr inbounds [5 x [5 x double]]* %3155, i32 0, i64 2
  %3157 = getelementptr inbounds [5 x double]* %3156, i32 0, i64 3
  store double %3149, double* %3157, align 8
  %3158 = load double* @dt, align 8
  %3159 = load double* @tz2, align 8
  %3160 = fmul double %3158, %3159
  %3161 = fmul double %3160, 1.600000e+00
  %3162 = load i32* %i, align 4
  %3163 = sext i32 %3162 to i64
  %3164 = load i32* %j, align 4
  %3165 = sext i32 %3164 to i64
  %3166 = load i32* %1, align 4
  %3167 = add nsw i32 %3166, 1
  %3168 = sext i32 %3167 to i64
  %3169 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3168
  %3170 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3169, i32 0, i64 %3165
  %3171 = getelementptr inbounds [23 x [5 x double]]* %3170, i32 0, i64 %3163
  %3172 = getelementptr inbounds [5 x double]* %3171, i32 0, i64 3
  %3173 = load double* %3172, align 8
  %3174 = load double* %tmp1, align 8
  %3175 = fmul double %3173, %3174
  %3176 = fmul double %3161, %3175
  %3177 = load double* @dt, align 8
  %3178 = load double* @tz1, align 8
  %3179 = fmul double %3177, %3178
  %3180 = load double* %r43, align 8
  %3181 = load double* %c34, align 8
  %3182 = fmul double %3180, %3181
  %3183 = load double* %tmp1, align 8
  %3184 = fmul double %3182, %3183
  %3185 = fmul double %3179, %3184
  %3186 = fsub double %3176, %3185
  %3187 = load double* @dt, align 8
  %3188 = load double* @tz1, align 8
  %3189 = fmul double %3187, %3188
  %3190 = load double* @dz4, align 8
  %3191 = fmul double %3189, %3190
  %3192 = fsub double %3186, %3191
  %3193 = load i32* %i, align 4
  %3194 = sext i32 %3193 to i64
  %3195 = load i32* %j, align 4
  %3196 = sext i32 %3195 to i64
  %3197 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %3196
  %3198 = getelementptr inbounds [23 x [5 x [5 x double]]]* %3197, i32 0, i64 %3194
  %3199 = getelementptr inbounds [5 x [5 x double]]* %3198, i32 0, i64 3
  %3200 = getelementptr inbounds [5 x double]* %3199, i32 0, i64 3
  store double %3192, double* %3200, align 8
  %3201 = load double* @dt, align 8
  %3202 = load double* @tz2, align 8
  %3203 = fmul double %3201, %3202
  %3204 = fmul double %3203, 4.000000e-01
  %3205 = load i32* %i, align 4
  %3206 = sext i32 %3205 to i64
  %3207 = load i32* %j, align 4
  %3208 = sext i32 %3207 to i64
  %3209 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %3208
  %3210 = getelementptr inbounds [23 x [5 x [5 x double]]]* %3209, i32 0, i64 %3206
  %3211 = getelementptr inbounds [5 x [5 x double]]* %3210, i32 0, i64 4
  %3212 = getelementptr inbounds [5 x double]* %3211, i32 0, i64 3
  store double %3204, double* %3212, align 8
  %3213 = load double* @dt, align 8
  %3214 = load double* @tz2, align 8
  %3215 = fmul double %3213, %3214
  %3216 = load i32* %i, align 4
  %3217 = sext i32 %3216 to i64
  %3218 = load i32* %j, align 4
  %3219 = sext i32 %3218 to i64
  %3220 = load i32* %1, align 4
  %3221 = add nsw i32 %3220, 1
  %3222 = sext i32 %3221 to i64
  %3223 = getelementptr inbounds [22 x [23 x [23 x double]]]* @qs, i32 0, i64 %3222
  %3224 = getelementptr inbounds [23 x [23 x double]]* %3223, i32 0, i64 %3219
  %3225 = getelementptr inbounds [23 x double]* %3224, i32 0, i64 %3217
  %3226 = load double* %3225, align 8
  %3227 = fmul double 8.000000e-01, %3226
  %3228 = load i32* %i, align 4
  %3229 = sext i32 %3228 to i64
  %3230 = load i32* %j, align 4
  %3231 = sext i32 %3230 to i64
  %3232 = load i32* %1, align 4
  %3233 = add nsw i32 %3232, 1
  %3234 = sext i32 %3233 to i64
  %3235 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3234
  %3236 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3235, i32 0, i64 %3231
  %3237 = getelementptr inbounds [23 x [5 x double]]* %3236, i32 0, i64 %3229
  %3238 = getelementptr inbounds [5 x double]* %3237, i32 0, i64 4
  %3239 = load double* %3238, align 8
  %3240 = fmul double 1.400000e+00, %3239
  %3241 = fsub double %3227, %3240
  %3242 = load i32* %i, align 4
  %3243 = sext i32 %3242 to i64
  %3244 = load i32* %j, align 4
  %3245 = sext i32 %3244 to i64
  %3246 = load i32* %1, align 4
  %3247 = add nsw i32 %3246, 1
  %3248 = sext i32 %3247 to i64
  %3249 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3248
  %3250 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3249, i32 0, i64 %3245
  %3251 = getelementptr inbounds [23 x [5 x double]]* %3250, i32 0, i64 %3243
  %3252 = getelementptr inbounds [5 x double]* %3251, i32 0, i64 3
  %3253 = load double* %3252, align 8
  %3254 = load double* %tmp2, align 8
  %3255 = fmul double %3253, %3254
  %3256 = fmul double %3241, %3255
  %3257 = fmul double %3215, %3256
  %3258 = load double* @dt, align 8
  %3259 = load double* @tz1, align 8
  %3260 = fmul double %3258, %3259
  %3261 = load double* %c34, align 8
  %3262 = load double* %c1345, align 8
  %3263 = fsub double %3261, %3262
  %3264 = fsub double -0.000000e+00, %3263
  %3265 = load double* %tmp3, align 8
  %3266 = fmul double %3264, %3265
  %3267 = load i32* %i, align 4
  %3268 = sext i32 %3267 to i64
  %3269 = load i32* %j, align 4
  %3270 = sext i32 %3269 to i64
  %3271 = load i32* %1, align 4
  %3272 = add nsw i32 %3271, 1
  %3273 = sext i32 %3272 to i64
  %3274 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3273
  %3275 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3274, i32 0, i64 %3270
  %3276 = getelementptr inbounds [23 x [5 x double]]* %3275, i32 0, i64 %3268
  %3277 = getelementptr inbounds [5 x double]* %3276, i32 0, i64 1
  %3278 = load double* %3277, align 8
  %3279 = load i32* %i, align 4
  %3280 = sext i32 %3279 to i64
  %3281 = load i32* %j, align 4
  %3282 = sext i32 %3281 to i64
  %3283 = load i32* %1, align 4
  %3284 = add nsw i32 %3283, 1
  %3285 = sext i32 %3284 to i64
  %3286 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3285
  %3287 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3286, i32 0, i64 %3282
  %3288 = getelementptr inbounds [23 x [5 x double]]* %3287, i32 0, i64 %3280
  %3289 = getelementptr inbounds [5 x double]* %3288, i32 0, i64 1
  %3290 = load double* %3289, align 8
  %3291 = fmul double %3278, %3290
  %3292 = fmul double %3266, %3291
  %3293 = load double* %c34, align 8
  %3294 = load double* %c1345, align 8
  %3295 = fsub double %3293, %3294
  %3296 = load double* %tmp3, align 8
  %3297 = fmul double %3295, %3296
  %3298 = load i32* %i, align 4
  %3299 = sext i32 %3298 to i64
  %3300 = load i32* %j, align 4
  %3301 = sext i32 %3300 to i64
  %3302 = load i32* %1, align 4
  %3303 = add nsw i32 %3302, 1
  %3304 = sext i32 %3303 to i64
  %3305 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3304
  %3306 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3305, i32 0, i64 %3301
  %3307 = getelementptr inbounds [23 x [5 x double]]* %3306, i32 0, i64 %3299
  %3308 = getelementptr inbounds [5 x double]* %3307, i32 0, i64 2
  %3309 = load double* %3308, align 8
  %3310 = load i32* %i, align 4
  %3311 = sext i32 %3310 to i64
  %3312 = load i32* %j, align 4
  %3313 = sext i32 %3312 to i64
  %3314 = load i32* %1, align 4
  %3315 = add nsw i32 %3314, 1
  %3316 = sext i32 %3315 to i64
  %3317 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3316
  %3318 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3317, i32 0, i64 %3313
  %3319 = getelementptr inbounds [23 x [5 x double]]* %3318, i32 0, i64 %3311
  %3320 = getelementptr inbounds [5 x double]* %3319, i32 0, i64 2
  %3321 = load double* %3320, align 8
  %3322 = fmul double %3309, %3321
  %3323 = fmul double %3297, %3322
  %3324 = fsub double %3292, %3323
  %3325 = load double* %r43, align 8
  %3326 = load double* %c34, align 8
  %3327 = fmul double %3325, %3326
  %3328 = load double* %c1345, align 8
  %3329 = fsub double %3327, %3328
  %3330 = load double* %tmp3, align 8
  %3331 = fmul double %3329, %3330
  %3332 = load i32* %i, align 4
  %3333 = sext i32 %3332 to i64
  %3334 = load i32* %j, align 4
  %3335 = sext i32 %3334 to i64
  %3336 = load i32* %1, align 4
  %3337 = add nsw i32 %3336, 1
  %3338 = sext i32 %3337 to i64
  %3339 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3338
  %3340 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3339, i32 0, i64 %3335
  %3341 = getelementptr inbounds [23 x [5 x double]]* %3340, i32 0, i64 %3333
  %3342 = getelementptr inbounds [5 x double]* %3341, i32 0, i64 3
  %3343 = load double* %3342, align 8
  %3344 = load i32* %i, align 4
  %3345 = sext i32 %3344 to i64
  %3346 = load i32* %j, align 4
  %3347 = sext i32 %3346 to i64
  %3348 = load i32* %1, align 4
  %3349 = add nsw i32 %3348, 1
  %3350 = sext i32 %3349 to i64
  %3351 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3350
  %3352 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3351, i32 0, i64 %3347
  %3353 = getelementptr inbounds [23 x [5 x double]]* %3352, i32 0, i64 %3345
  %3354 = getelementptr inbounds [5 x double]* %3353, i32 0, i64 3
  %3355 = load double* %3354, align 8
  %3356 = fmul double %3343, %3355
  %3357 = fmul double %3331, %3356
  %3358 = fsub double %3324, %3357
  %3359 = load double* %c1345, align 8
  %3360 = load double* %tmp2, align 8
  %3361 = fmul double %3359, %3360
  %3362 = load i32* %i, align 4
  %3363 = sext i32 %3362 to i64
  %3364 = load i32* %j, align 4
  %3365 = sext i32 %3364 to i64
  %3366 = load i32* %1, align 4
  %3367 = add nsw i32 %3366, 1
  %3368 = sext i32 %3367 to i64
  %3369 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3368
  %3370 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3369, i32 0, i64 %3365
  %3371 = getelementptr inbounds [23 x [5 x double]]* %3370, i32 0, i64 %3363
  %3372 = getelementptr inbounds [5 x double]* %3371, i32 0, i64 4
  %3373 = load double* %3372, align 8
  %3374 = fmul double %3361, %3373
  %3375 = fsub double %3358, %3374
  %3376 = fmul double %3260, %3375
  %3377 = fsub double %3257, %3376
  %3378 = load i32* %i, align 4
  %3379 = sext i32 %3378 to i64
  %3380 = load i32* %j, align 4
  %3381 = sext i32 %3380 to i64
  %3382 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %3381
  %3383 = getelementptr inbounds [23 x [5 x [5 x double]]]* %3382, i32 0, i64 %3379
  %3384 = getelementptr inbounds [5 x [5 x double]]* %3383, i32 0, i64 0
  %3385 = getelementptr inbounds [5 x double]* %3384, i32 0, i64 4
  store double %3377, double* %3385, align 8
  %3386 = load double* @dt, align 8
  %3387 = load double* @tz2, align 8
  %3388 = fmul double %3386, %3387
  %3389 = load i32* %i, align 4
  %3390 = sext i32 %3389 to i64
  %3391 = load i32* %j, align 4
  %3392 = sext i32 %3391 to i64
  %3393 = load i32* %1, align 4
  %3394 = add nsw i32 %3393, 1
  %3395 = sext i32 %3394 to i64
  %3396 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3395
  %3397 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3396, i32 0, i64 %3392
  %3398 = getelementptr inbounds [23 x [5 x double]]* %3397, i32 0, i64 %3390
  %3399 = getelementptr inbounds [5 x double]* %3398, i32 0, i64 1
  %3400 = load double* %3399, align 8
  %3401 = load i32* %i, align 4
  %3402 = sext i32 %3401 to i64
  %3403 = load i32* %j, align 4
  %3404 = sext i32 %3403 to i64
  %3405 = load i32* %1, align 4
  %3406 = add nsw i32 %3405, 1
  %3407 = sext i32 %3406 to i64
  %3408 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3407
  %3409 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3408, i32 0, i64 %3404
  %3410 = getelementptr inbounds [23 x [5 x double]]* %3409, i32 0, i64 %3402
  %3411 = getelementptr inbounds [5 x double]* %3410, i32 0, i64 3
  %3412 = load double* %3411, align 8
  %3413 = fmul double %3400, %3412
  %3414 = fmul double -4.000000e-01, %3413
  %3415 = load double* %tmp2, align 8
  %3416 = fmul double %3414, %3415
  %3417 = fmul double %3388, %3416
  %3418 = load double* @dt, align 8
  %3419 = load double* @tz1, align 8
  %3420 = fmul double %3418, %3419
  %3421 = load double* %c34, align 8
  %3422 = load double* %c1345, align 8
  %3423 = fsub double %3421, %3422
  %3424 = fmul double %3420, %3423
  %3425 = load double* %tmp2, align 8
  %3426 = fmul double %3424, %3425
  %3427 = load i32* %i, align 4
  %3428 = sext i32 %3427 to i64
  %3429 = load i32* %j, align 4
  %3430 = sext i32 %3429 to i64
  %3431 = load i32* %1, align 4
  %3432 = add nsw i32 %3431, 1
  %3433 = sext i32 %3432 to i64
  %3434 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3433
  %3435 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3434, i32 0, i64 %3430
  %3436 = getelementptr inbounds [23 x [5 x double]]* %3435, i32 0, i64 %3428
  %3437 = getelementptr inbounds [5 x double]* %3436, i32 0, i64 1
  %3438 = load double* %3437, align 8
  %3439 = fmul double %3426, %3438
  %3440 = fsub double %3417, %3439
  %3441 = load i32* %i, align 4
  %3442 = sext i32 %3441 to i64
  %3443 = load i32* %j, align 4
  %3444 = sext i32 %3443 to i64
  %3445 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %3444
  %3446 = getelementptr inbounds [23 x [5 x [5 x double]]]* %3445, i32 0, i64 %3442
  %3447 = getelementptr inbounds [5 x [5 x double]]* %3446, i32 0, i64 1
  %3448 = getelementptr inbounds [5 x double]* %3447, i32 0, i64 4
  store double %3440, double* %3448, align 8
  %3449 = load double* @dt, align 8
  %3450 = load double* @tz2, align 8
  %3451 = fmul double %3449, %3450
  %3452 = load i32* %i, align 4
  %3453 = sext i32 %3452 to i64
  %3454 = load i32* %j, align 4
  %3455 = sext i32 %3454 to i64
  %3456 = load i32* %1, align 4
  %3457 = add nsw i32 %3456, 1
  %3458 = sext i32 %3457 to i64
  %3459 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3458
  %3460 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3459, i32 0, i64 %3455
  %3461 = getelementptr inbounds [23 x [5 x double]]* %3460, i32 0, i64 %3453
  %3462 = getelementptr inbounds [5 x double]* %3461, i32 0, i64 2
  %3463 = load double* %3462, align 8
  %3464 = load i32* %i, align 4
  %3465 = sext i32 %3464 to i64
  %3466 = load i32* %j, align 4
  %3467 = sext i32 %3466 to i64
  %3468 = load i32* %1, align 4
  %3469 = add nsw i32 %3468, 1
  %3470 = sext i32 %3469 to i64
  %3471 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3470
  %3472 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3471, i32 0, i64 %3467
  %3473 = getelementptr inbounds [23 x [5 x double]]* %3472, i32 0, i64 %3465
  %3474 = getelementptr inbounds [5 x double]* %3473, i32 0, i64 3
  %3475 = load double* %3474, align 8
  %3476 = fmul double %3463, %3475
  %3477 = fmul double -4.000000e-01, %3476
  %3478 = load double* %tmp2, align 8
  %3479 = fmul double %3477, %3478
  %3480 = fmul double %3451, %3479
  %3481 = load double* @dt, align 8
  %3482 = load double* @tz1, align 8
  %3483 = fmul double %3481, %3482
  %3484 = load double* %c34, align 8
  %3485 = load double* %c1345, align 8
  %3486 = fsub double %3484, %3485
  %3487 = fmul double %3483, %3486
  %3488 = load double* %tmp2, align 8
  %3489 = fmul double %3487, %3488
  %3490 = load i32* %i, align 4
  %3491 = sext i32 %3490 to i64
  %3492 = load i32* %j, align 4
  %3493 = sext i32 %3492 to i64
  %3494 = load i32* %1, align 4
  %3495 = add nsw i32 %3494, 1
  %3496 = sext i32 %3495 to i64
  %3497 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3496
  %3498 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3497, i32 0, i64 %3493
  %3499 = getelementptr inbounds [23 x [5 x double]]* %3498, i32 0, i64 %3491
  %3500 = getelementptr inbounds [5 x double]* %3499, i32 0, i64 2
  %3501 = load double* %3500, align 8
  %3502 = fmul double %3489, %3501
  %3503 = fsub double %3480, %3502
  %3504 = load i32* %i, align 4
  %3505 = sext i32 %3504 to i64
  %3506 = load i32* %j, align 4
  %3507 = sext i32 %3506 to i64
  %3508 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %3507
  %3509 = getelementptr inbounds [23 x [5 x [5 x double]]]* %3508, i32 0, i64 %3505
  %3510 = getelementptr inbounds [5 x [5 x double]]* %3509, i32 0, i64 2
  %3511 = getelementptr inbounds [5 x double]* %3510, i32 0, i64 4
  store double %3503, double* %3511, align 8
  %3512 = load double* @dt, align 8
  %3513 = load double* @tz2, align 8
  %3514 = fmul double %3512, %3513
  %3515 = load i32* %i, align 4
  %3516 = sext i32 %3515 to i64
  %3517 = load i32* %j, align 4
  %3518 = sext i32 %3517 to i64
  %3519 = load i32* %1, align 4
  %3520 = add nsw i32 %3519, 1
  %3521 = sext i32 %3520 to i64
  %3522 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3521
  %3523 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3522, i32 0, i64 %3518
  %3524 = getelementptr inbounds [23 x [5 x double]]* %3523, i32 0, i64 %3516
  %3525 = getelementptr inbounds [5 x double]* %3524, i32 0, i64 4
  %3526 = load double* %3525, align 8
  %3527 = load double* %tmp1, align 8
  %3528 = fmul double %3526, %3527
  %3529 = fmul double 1.400000e+00, %3528
  %3530 = load i32* %i, align 4
  %3531 = sext i32 %3530 to i64
  %3532 = load i32* %j, align 4
  %3533 = sext i32 %3532 to i64
  %3534 = load i32* %1, align 4
  %3535 = add nsw i32 %3534, 1
  %3536 = sext i32 %3535 to i64
  %3537 = getelementptr inbounds [22 x [23 x [23 x double]]]* @qs, i32 0, i64 %3536
  %3538 = getelementptr inbounds [23 x [23 x double]]* %3537, i32 0, i64 %3533
  %3539 = getelementptr inbounds [23 x double]* %3538, i32 0, i64 %3531
  %3540 = load double* %3539, align 8
  %3541 = load double* %tmp1, align 8
  %3542 = fmul double %3540, %3541
  %3543 = load i32* %i, align 4
  %3544 = sext i32 %3543 to i64
  %3545 = load i32* %j, align 4
  %3546 = sext i32 %3545 to i64
  %3547 = load i32* %1, align 4
  %3548 = add nsw i32 %3547, 1
  %3549 = sext i32 %3548 to i64
  %3550 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3549
  %3551 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3550, i32 0, i64 %3546
  %3552 = getelementptr inbounds [23 x [5 x double]]* %3551, i32 0, i64 %3544
  %3553 = getelementptr inbounds [5 x double]* %3552, i32 0, i64 3
  %3554 = load double* %3553, align 8
  %3555 = load i32* %i, align 4
  %3556 = sext i32 %3555 to i64
  %3557 = load i32* %j, align 4
  %3558 = sext i32 %3557 to i64
  %3559 = load i32* %1, align 4
  %3560 = add nsw i32 %3559, 1
  %3561 = sext i32 %3560 to i64
  %3562 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3561
  %3563 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3562, i32 0, i64 %3558
  %3564 = getelementptr inbounds [23 x [5 x double]]* %3563, i32 0, i64 %3556
  %3565 = getelementptr inbounds [5 x double]* %3564, i32 0, i64 3
  %3566 = load double* %3565, align 8
  %3567 = fmul double %3554, %3566
  %3568 = load double* %tmp2, align 8
  %3569 = fmul double %3567, %3568
  %3570 = fadd double %3542, %3569
  %3571 = fmul double 4.000000e-01, %3570
  %3572 = fsub double %3529, %3571
  %3573 = fmul double %3514, %3572
  %3574 = load double* @dt, align 8
  %3575 = load double* @tz1, align 8
  %3576 = fmul double %3574, %3575
  %3577 = load double* %r43, align 8
  %3578 = load double* %c34, align 8
  %3579 = fmul double %3577, %3578
  %3580 = load double* %c1345, align 8
  %3581 = fsub double %3579, %3580
  %3582 = fmul double %3576, %3581
  %3583 = load double* %tmp2, align 8
  %3584 = fmul double %3582, %3583
  %3585 = load i32* %i, align 4
  %3586 = sext i32 %3585 to i64
  %3587 = load i32* %j, align 4
  %3588 = sext i32 %3587 to i64
  %3589 = load i32* %1, align 4
  %3590 = add nsw i32 %3589, 1
  %3591 = sext i32 %3590 to i64
  %3592 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3591
  %3593 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3592, i32 0, i64 %3588
  %3594 = getelementptr inbounds [23 x [5 x double]]* %3593, i32 0, i64 %3586
  %3595 = getelementptr inbounds [5 x double]* %3594, i32 0, i64 3
  %3596 = load double* %3595, align 8
  %3597 = fmul double %3584, %3596
  %3598 = fsub double %3573, %3597
  %3599 = load i32* %i, align 4
  %3600 = sext i32 %3599 to i64
  %3601 = load i32* %j, align 4
  %3602 = sext i32 %3601 to i64
  %3603 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %3602
  %3604 = getelementptr inbounds [23 x [5 x [5 x double]]]* %3603, i32 0, i64 %3600
  %3605 = getelementptr inbounds [5 x [5 x double]]* %3604, i32 0, i64 3
  %3606 = getelementptr inbounds [5 x double]* %3605, i32 0, i64 4
  store double %3598, double* %3606, align 8
  %3607 = load double* @dt, align 8
  %3608 = load double* @tz2, align 8
  %3609 = fmul double %3607, %3608
  %3610 = load i32* %i, align 4
  %3611 = sext i32 %3610 to i64
  %3612 = load i32* %j, align 4
  %3613 = sext i32 %3612 to i64
  %3614 = load i32* %1, align 4
  %3615 = add nsw i32 %3614, 1
  %3616 = sext i32 %3615 to i64
  %3617 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %3616
  %3618 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3617, i32 0, i64 %3613
  %3619 = getelementptr inbounds [23 x [5 x double]]* %3618, i32 0, i64 %3611
  %3620 = getelementptr inbounds [5 x double]* %3619, i32 0, i64 3
  %3621 = load double* %3620, align 8
  %3622 = load double* %tmp1, align 8
  %3623 = fmul double %3621, %3622
  %3624 = fmul double 1.400000e+00, %3623
  %3625 = fmul double %3609, %3624
  %3626 = load double* @dt, align 8
  %3627 = load double* @tz1, align 8
  %3628 = fmul double %3626, %3627
  %3629 = load double* %c1345, align 8
  %3630 = fmul double %3628, %3629
  %3631 = load double* %tmp1, align 8
  %3632 = fmul double %3630, %3631
  %3633 = fsub double %3625, %3632
  %3634 = load double* @dt, align 8
  %3635 = load double* @tz1, align 8
  %3636 = fmul double %3634, %3635
  %3637 = load double* @dz5, align 8
  %3638 = fmul double %3636, %3637
  %3639 = fsub double %3633, %3638
  %3640 = load i32* %i, align 4
  %3641 = sext i32 %3640 to i64
  %3642 = load i32* %j, align 4
  %3643 = sext i32 %3642 to i64
  %3644 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %3643
  %3645 = getelementptr inbounds [23 x [5 x [5 x double]]]* %3644, i32 0, i64 %3641
  %3646 = getelementptr inbounds [5 x [5 x double]]* %3645, i32 0, i64 4
  %3647 = getelementptr inbounds [5 x double]* %3646, i32 0, i64 4
  store double %3639, double* %3647, align 8
  br label %3648

; <label>:3648                                    ; preds = %13
  %3649 = load i32* %i, align 4
  %3650 = add nsw i32 %3649, 1
  store i32 %3650, i32* %i, align 4
  br label %9

; <label>:3651                                    ; preds = %9
  br label %3652

; <label>:3652                                    ; preds = %3651
  %3653 = load i32* %j, align 4
  %3654 = add nsw i32 %3653, 1
  store i32 %3654, i32* %j, align 4
  br label %3

; <label>:3655                                    ; preds = %3
  ret void
}

; Function Attrs: nounwind uwtable
define void @l2norm(i32 %ldx, i32 %ldy, i32 %ldz, i32 %nx0, i32 %ny0, i32 %nz0, i32 %ist, i32 %iend, i32 %jst, i32 %jend, [5 x double]* %v, double* %sum) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca [5 x double]*, align 8
  %12 = alloca double*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %m = alloca i32, align 4
  store i32 %ldx, i32* %1, align 4
  store i32 %ldy, i32* %2, align 4
  store i32 %ldz, i32* %3, align 4
  store i32 %nx0, i32* %4, align 4
  store i32 %ny0, i32* %5, align 4
  store i32 %nz0, i32* %6, align 4
  store i32 %ist, i32* %7, align 4
  store i32 %iend, i32* %8, align 4
  store i32 %jst, i32* %9, align 4
  store i32 %jend, i32* %10, align 4
  store [5 x double]* %v, [5 x double]** %11, align 8
  store double* %sum, double** %12, align 8
  %13 = load i32* %2, align 4
  %14 = sdiv i32 %13, 2
  %15 = mul nsw i32 %14, 2
  %16 = add nsw i32 %15, 1
  %17 = zext i32 %16 to i64
  %18 = load i32* %1, align 4
  %19 = sdiv i32 %18, 2
  %20 = mul nsw i32 %19, 2
  %21 = add nsw i32 %20, 1
  %22 = zext i32 %21 to i64
  store i32 0, i32* %m, align 4
  br label %23

; <label>:23                                      ; preds = %31, %0
  %24 = load i32* %m, align 4
  %25 = icmp slt i32 %24, 5
  br i1 %25, label %26, label %34

; <label>:26                                      ; preds = %23
  %27 = load i32* %m, align 4
  %28 = sext i32 %27 to i64
  %29 = load double** %12, align 8
  %30 = getelementptr inbounds double* %29, i64 %28
  store double 0.000000e+00, double* %30, align 8
  br label %31

; <label>:31                                      ; preds = %26
  %32 = load i32* %m, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %m, align 4
  br label %23

; <label>:34                                      ; preds = %23
  store i32 1, i32* %k, align 4
  br label %35

; <label>:35                                      ; preds = %114, %34
  %36 = load i32* %k, align 4
  %37 = load i32* %6, align 4
  %38 = sub nsw i32 %37, 1
  %39 = icmp slt i32 %36, %38
  br i1 %39, label %40, label %117

; <label>:40                                      ; preds = %35
  %41 = load i32* %9, align 4
  store i32 %41, i32* %j, align 4
  br label %42

; <label>:42                                      ; preds = %110, %40
  %43 = load i32* %j, align 4
  %44 = load i32* %10, align 4
  %45 = icmp slt i32 %43, %44
  br i1 %45, label %46, label %113

; <label>:46                                      ; preds = %42
  %47 = load i32* %7, align 4
  store i32 %47, i32* %i, align 4
  br label %48

; <label>:48                                      ; preds = %106, %46
  %49 = load i32* %i, align 4
  %50 = load i32* %8, align 4
  %51 = icmp slt i32 %49, %50
  br i1 %51, label %52, label %109

; <label>:52                                      ; preds = %48
  store i32 0, i32* %m, align 4
  br label %53

; <label>:53                                      ; preds = %102, %52
  %54 = load i32* %m, align 4
  %55 = icmp slt i32 %54, 5
  br i1 %55, label %56, label %105

; <label>:56                                      ; preds = %53
  %57 = load i32* %m, align 4
  %58 = sext i32 %57 to i64
  %59 = load double** %12, align 8
  %60 = getelementptr inbounds double* %59, i64 %58
  %61 = load double* %60, align 8
  %62 = load i32* %m, align 4
  %63 = sext i32 %62 to i64
  %64 = load i32* %i, align 4
  %65 = sext i32 %64 to i64
  %66 = load i32* %j, align 4
  %67 = sext i32 %66 to i64
  %68 = load i32* %k, align 4
  %69 = sext i32 %68 to i64
  %70 = load [5 x double]** %11, align 8
  %71 = mul nuw i64 %17, %22
  %72 = mul nsw i64 %69, %71
  %73 = getelementptr inbounds [5 x double]* %70, i64 %72
  %74 = mul nsw i64 %67, %22
  %75 = getelementptr inbounds [5 x double]* %73, i64 %74
  %76 = getelementptr inbounds [5 x double]* %75, i64 %65
  %77 = getelementptr inbounds [5 x double]* %76, i32 0, i64 %63
  %78 = load double* %77, align 8
  %79 = load i32* %m, align 4
  %80 = sext i32 %79 to i64
  %81 = load i32* %i, align 4
  %82 = sext i32 %81 to i64
  %83 = load i32* %j, align 4
  %84 = sext i32 %83 to i64
  %85 = load i32* %k, align 4
  %86 = sext i32 %85 to i64
  %87 = load [5 x double]** %11, align 8
  %88 = mul nuw i64 %17, %22
  %89 = mul nsw i64 %86, %88
  %90 = getelementptr inbounds [5 x double]* %87, i64 %89
  %91 = mul nsw i64 %84, %22
  %92 = getelementptr inbounds [5 x double]* %90, i64 %91
  %93 = getelementptr inbounds [5 x double]* %92, i64 %82
  %94 = getelementptr inbounds [5 x double]* %93, i32 0, i64 %80
  %95 = load double* %94, align 8
  %96 = fmul double %78, %95
  %97 = fadd double %61, %96
  %98 = load i32* %m, align 4
  %99 = sext i32 %98 to i64
  %100 = load double** %12, align 8
  %101 = getelementptr inbounds double* %100, i64 %99
  store double %97, double* %101, align 8
  br label %102

; <label>:102                                     ; preds = %56
  %103 = load i32* %m, align 4
  %104 = add nsw i32 %103, 1
  store i32 %104, i32* %m, align 4
  br label %53

; <label>:105                                     ; preds = %53
  br label %106

; <label>:106                                     ; preds = %105
  %107 = load i32* %i, align 4
  %108 = add nsw i32 %107, 1
  store i32 %108, i32* %i, align 4
  br label %48

; <label>:109                                     ; preds = %48
  br label %110

; <label>:110                                     ; preds = %109
  %111 = load i32* %j, align 4
  %112 = add nsw i32 %111, 1
  store i32 %112, i32* %j, align 4
  br label %42

; <label>:113                                     ; preds = %42
  br label %114

; <label>:114                                     ; preds = %113
  %115 = load i32* %k, align 4
  %116 = add nsw i32 %115, 1
  store i32 %116, i32* %k, align 4
  br label %35

; <label>:117                                     ; preds = %35
  store i32 0, i32* %m, align 4
  br label %118

; <label>:118                                     ; preds = %142, %117
  %119 = load i32* %m, align 4
  %120 = icmp slt i32 %119, 5
  br i1 %120, label %121, label %145

; <label>:121                                     ; preds = %118
  %122 = load i32* %m, align 4
  %123 = sext i32 %122 to i64
  %124 = load double** %12, align 8
  %125 = getelementptr inbounds double* %124, i64 %123
  %126 = load double* %125, align 8
  %127 = load i32* %4, align 4
  %128 = sub nsw i32 %127, 2
  %129 = load i32* %5, align 4
  %130 = sub nsw i32 %129, 2
  %131 = mul nsw i32 %128, %130
  %132 = load i32* %6, align 4
  %133 = sub nsw i32 %132, 2
  %134 = mul nsw i32 %131, %133
  %135 = sitofp i32 %134 to double
  %136 = fdiv double %126, %135
  %137 = call double @sqrt(double %136) #6
  %138 = load i32* %m, align 4
  %139 = sext i32 %138 to i64
  %140 = load double** %12, align 8
  %141 = getelementptr inbounds double* %140, i64 %139
  store double %137, double* %141, align 8
  br label %142

; <label>:142                                     ; preds = %121
  %143 = load i32* %m, align 4
  %144 = add nsw i32 %143, 1
  store i32 %144, i32* %m, align 4
  br label %118

; <label>:145                                     ; preds = %118
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i8**, align 8
  %Class = alloca i8, align 1
  %verified = alloca i32, align 4
  %mflops = alloca double, align 8
  %t = alloca double, align 8
  %tmax = alloca double, align 8
  %trecs = alloca [12 x double], align 16
  %i = alloca i32, align 4
  %t_names = alloca [12 x i8*], align 16
  %fp = alloca %struct._IO_FILE*, align 8
  store i32 0, i32* %1
  store i32 %argc, i32* %2, align 4
  store i8** %argv, i8*** %3, align 8
  %4 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([11 x i8]* @.str20, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str121, i32 0, i32 0))
  store %struct._IO_FILE* %4, %struct._IO_FILE** %fp, align 8
  %5 = icmp ne %struct._IO_FILE* %4, null
  br i1 %5, label %6, label %20

; <label>:6                                       ; preds = %0
  store i32 1, i32* @timeron, align 4
  %7 = getelementptr inbounds [12 x i8*]* %t_names, i32 0, i64 1
  store i8* getelementptr inbounds ([6 x i8]* @.str222, i32 0, i32 0), i8** %7, align 8
  %8 = getelementptr inbounds [12 x i8*]* %t_names, i32 0, i64 2
  store i8* getelementptr inbounds ([5 x i8]* @.str323, i32 0, i32 0), i8** %8, align 8
  %9 = getelementptr inbounds [12 x i8*]* %t_names, i32 0, i64 3
  store i8* getelementptr inbounds ([5 x i8]* @.str424, i32 0, i32 0), i8** %9, align 8
  %10 = getelementptr inbounds [12 x i8*]* %t_names, i32 0, i64 4
  store i8* getelementptr inbounds ([5 x i8]* @.str525, i32 0, i32 0), i8** %10, align 8
  %11 = getelementptr inbounds [12 x i8*]* %t_names, i32 0, i64 5
  store i8* getelementptr inbounds ([4 x i8]* @.str626, i32 0, i32 0), i8** %11, align 8
  %12 = getelementptr inbounds [12 x i8*]* %t_names, i32 0, i64 6
  store i8* getelementptr inbounds ([6 x i8]* @.str727, i32 0, i32 0), i8** %12, align 8
  %13 = getelementptr inbounds [12 x i8*]* %t_names, i32 0, i64 7
  store i8* getelementptr inbounds ([5 x i8]* @.str828, i32 0, i32 0), i8** %13, align 8
  %14 = getelementptr inbounds [12 x i8*]* %t_names, i32 0, i64 8
  store i8* getelementptr inbounds ([5 x i8]* @.str929, i32 0, i32 0), i8** %14, align 8
  %15 = getelementptr inbounds [12 x i8*]* %t_names, i32 0, i64 9
  store i8* getelementptr inbounds ([5 x i8]* @.str1030, i32 0, i32 0), i8** %15, align 8
  %16 = getelementptr inbounds [12 x i8*]* %t_names, i32 0, i64 10
  store i8* getelementptr inbounds ([4 x i8]* @.str1131, i32 0, i32 0), i8** %16, align 8
  %17 = getelementptr inbounds [12 x i8*]* %t_names, i32 0, i64 11
  store i8* getelementptr inbounds ([7 x i8]* @.str1232, i32 0, i32 0), i8** %17, align 8
  %18 = load %struct._IO_FILE** %fp, align 8
  %19 = call i32 @fclose(%struct._IO_FILE* %18)
  br label %21

; <label>:20                                      ; preds = %0
  store i32 0, i32* @timeron, align 4
  br label %21

; <label>:21                                      ; preds = %20, %6
  call void (...)* bitcast (void ()* @read_input to void (...)*)()
  call void (...)* bitcast (void ()* @domain to void (...)*)()
  call void (...)* bitcast (void ()* @setcoeff to void (...)*)()
  call void (...)* bitcast (void ()* @setbv to void (...)*)()
  call void (...)* bitcast (void ()* @setiv to void (...)*)()
  call void (...)* bitcast (void ()* @erhs to void (...)*)()
  call void @ssor(i32 1)
  call void (...)* bitcast (void ()* @setbv to void (...)*)()
  call void (...)* bitcast (void ()* @setiv to void (...)*)()
  %22 = load i32* @itmax, align 4
  call void @ssor(i32 %22)
  call void (...)* bitcast (void ()* @error to void (...)*)()
  call void (...)* bitcast (void ()* @pintgr to void (...)*)()
  %23 = load double* @frc, align 8
  call void @verify(double* getelementptr inbounds ([5 x double]* @rsdnm, i32 0, i32 0), double* getelementptr inbounds ([5 x double]* @errnm, i32 0, i32 0), double %23, i8* %Class, i32* %verified)
  %24 = load i32* @itmax, align 4
  %25 = sitofp i32 %24 to double
  %26 = load i32* @nx0, align 4
  %27 = sitofp i32 %26 to double
  %28 = fmul double 1.984770e+03, %27
  %29 = load i32* @ny0, align 4
  %30 = sitofp i32 %29 to double
  %31 = fmul double %28, %30
  %32 = load i32* @nz0, align 4
  %33 = sitofp i32 %32 to double
  %34 = fmul double %31, %33
  %35 = load i32* @nx0, align 4
  %36 = load i32* @ny0, align 4
  %37 = add nsw i32 %35, %36
  %38 = load i32* @nz0, align 4
  %39 = add nsw i32 %37, %38
  %40 = sitofp i32 %39 to double
  %41 = fdiv double %40, 3.000000e+00
  %42 = call double @pow(double %41, double 2.000000e+00) #6
  %43 = fmul double 1.092330e+04, %42
  %44 = fsub double %34, %43
  %45 = load i32* @nx0, align 4
  %46 = load i32* @ny0, align 4
  %47 = add nsw i32 %45, %46
  %48 = load i32* @nz0, align 4
  %49 = add nsw i32 %47, %48
  %50 = sitofp i32 %49 to double
  %51 = fmul double 2.777090e+04, %50
  %52 = fdiv double %51, 3.000000e+00
  %53 = fadd double %44, %52
  %54 = fsub double %53, 1.440100e+05
  %55 = fmul double %25, %54
  %56 = load double* @maxtime, align 8
  %57 = fmul double %56, 1.000000e+06
  %58 = fdiv double %55, %57
  store double %58, double* %mflops, align 8
  %59 = load i8* %Class, align 1
  %60 = load i32* @nx0, align 4
  %61 = load i32* @ny0, align 4
  %62 = load i32* @nz0, align 4
  %63 = load i32* @itmax, align 4
  %64 = load double* @maxtime, align 8
  %65 = load double* %mflops, align 8
  %66 = load i32* %verified, align 4
  call void @print_results(i8* getelementptr inbounds ([3 x i8]* @.str1341, i32 0, i32 0), i8 signext %59, i32 %60, i32 %61, i32 %62, i32 %63, double %64, double %65, i8* getelementptr inbounds ([25 x i8]* @.str1442, i32 0, i32 0), i32 %66, i8* getelementptr inbounds ([6 x i8]* @.str1543, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @.str1644, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8]* @.str17, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str18, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @.str2045, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str21, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str22, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str23, i32 0, i32 0))
  %67 = load i32* @timeron, align 4
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %69, label %143

; <label>:69                                      ; preds = %21
  store i32 1, i32* %i, align 4
  br label %70

; <label>:70                                      ; preds = %79, %69
  %71 = load i32* %i, align 4
  %72 = icmp sle i32 %71, 11
  br i1 %72, label %73, label %82

; <label>:73                                      ; preds = %70
  %74 = load i32* %i, align 4
  %75 = call double @timer_read(i32 %74)
  %76 = load i32* %i, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds [12 x double]* %trecs, i32 0, i64 %77
  store double %75, double* %78, align 8
  br label %79

; <label>:79                                      ; preds = %73
  %80 = load i32* %i, align 4
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %i, align 4
  br label %70

; <label>:82                                      ; preds = %70
  %83 = load double* @maxtime, align 8
  store double %83, double* %tmax, align 8
  %84 = load double* %tmax, align 8
  %85 = fcmp oeq double %84, 0.000000e+00
  br i1 %85, label %86, label %87

; <label>:86                                      ; preds = %82
  store double 1.000000e+00, double* %tmax, align 8
  br label %87

; <label>:87                                      ; preds = %86, %82
  %88 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([27 x i8]* @.str24, i32 0, i32 0))
  store i32 1, i32* %i, align 4
  br label %89

; <label>:89                                      ; preds = %139, %87
  %90 = load i32* %i, align 4
  %91 = icmp sle i32 %90, 11
  br i1 %91, label %92, label %142

; <label>:92                                      ; preds = %89
  %93 = load i32* %i, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds [12 x i8*]* %t_names, i32 0, i64 %94
  %96 = load i8** %95, align 8
  %97 = load i32* %i, align 4
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds [12 x double]* %trecs, i32 0, i64 %98
  %100 = load double* %99, align 8
  %101 = load i32* %i, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds [12 x double]* %trecs, i32 0, i64 %102
  %104 = load double* %103, align 8
  %105 = fmul double %104, 1.000000e+02
  %106 = load double* %tmax, align 8
  %107 = fdiv double %105, %106
  %108 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([25 x i8]* @.str25, i32 0, i32 0), i8* %96, double %100, double %107)
  %109 = load i32* %i, align 4
  %110 = icmp eq i32 %109, 5
  br i1 %110, label %111, label %138

; <label>:111                                     ; preds = %92
  %112 = getelementptr inbounds [12 x double]* %trecs, i32 0, i64 2
  %113 = load double* %112, align 8
  %114 = getelementptr inbounds [12 x double]* %trecs, i32 0, i64 3
  %115 = load double* %114, align 8
  %116 = fadd double %113, %115
  %117 = getelementptr inbounds [12 x double]* %trecs, i32 0, i64 4
  %118 = load double* %117, align 8
  %119 = fadd double %116, %118
  store double %119, double* %t, align 8
  %120 = load double* %t, align 8
  %121 = load double* %t, align 8
  %122 = fmul double %121, 1.000000e+02
  %123 = load double* %tmax, align 8
  %124 = fdiv double %122, %123
  %125 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str26, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str27, i32 0, i32 0), double %120, double %124)
  %126 = load i32* %i, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds [12 x double]* %trecs, i32 0, i64 %127
  %129 = load double* %128, align 8
  %130 = load double* %t, align 8
  %131 = fsub double %129, %130
  store double %131, double* %t, align 8
  %132 = load double* %t, align 8
  %133 = load double* %t, align 8
  %134 = fmul double %133, 1.000000e+02
  %135 = load double* %tmax, align 8
  %136 = fdiv double %134, %135
  %137 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str26, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str28, i32 0, i32 0), double %132, double %136)
  br label %138

; <label>:138                                     ; preds = %111, %92
  br label %139

; <label>:139                                     ; preds = %138
  %140 = load i32* %i, align 4
  %141 = add nsw i32 %140, 1
  store i32 %141, i32* %i, align 4
  br label %89

; <label>:142                                     ; preds = %89
  br label %143

; <label>:143                                     ; preds = %142, %21
  ret i32 0
}

declare %struct._IO_FILE* @fopen(i8*, i8*) #1

declare i32 @fclose(%struct._IO_FILE*) #1

; Function Attrs: nounwind
declare double @pow(double, double) #3

; Function Attrs: nounwind uwtable
define void @pintgr() #0 {
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %ibeg = alloca i32, align 4
  %ifin = alloca i32, align 4
  %ifin1 = alloca i32, align 4
  %jbeg = alloca i32, align 4
  %jfin = alloca i32, align 4
  %jfin1 = alloca i32, align 4
  %phi1 = alloca [24 x [24 x double]], align 16
  %phi2 = alloca [24 x [24 x double]], align 16
  %frc1 = alloca double, align 8
  %frc2 = alloca double, align 8
  %frc3 = alloca double, align 8
  %1 = load i32* @ii1, align 4
  store i32 %1, i32* %ibeg, align 4
  %2 = load i32* @ii2, align 4
  store i32 %2, i32* %ifin, align 4
  %3 = load i32* @ji1, align 4
  store i32 %3, i32* %jbeg, align 4
  %4 = load i32* @ji2, align 4
  store i32 %4, i32* %jfin, align 4
  %5 = load i32* %ifin, align 4
  %6 = sub nsw i32 %5, 1
  store i32 %6, i32* %ifin1, align 4
  %7 = load i32* %jfin, align 4
  %8 = sub nsw i32 %7, 1
  store i32 %8, i32* %jfin1, align 4
  store i32 0, i32* %k, align 4
  br label %9

; <label>:9                                       ; preds = %33, %0
  %10 = load i32* %k, align 4
  %11 = icmp sle i32 %10, 23
  br i1 %11, label %12, label %36

; <label>:12                                      ; preds = %9
  store i32 0, i32* %i, align 4
  br label %13

; <label>:13                                      ; preds = %29, %12
  %14 = load i32* %i, align 4
  %15 = icmp sle i32 %14, 23
  br i1 %15, label %16, label %32

; <label>:16                                      ; preds = %13
  %17 = load i32* %i, align 4
  %18 = sext i32 %17 to i64
  %19 = load i32* %k, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [24 x [24 x double]]* %phi1, i32 0, i64 %20
  %22 = getelementptr inbounds [24 x double]* %21, i32 0, i64 %18
  store double 0.000000e+00, double* %22, align 8
  %23 = load i32* %i, align 4
  %24 = sext i32 %23 to i64
  %25 = load i32* %k, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [24 x [24 x double]]* %phi2, i32 0, i64 %26
  %28 = getelementptr inbounds [24 x double]* %27, i32 0, i64 %24
  store double 0.000000e+00, double* %28, align 8
  br label %29

; <label>:29                                      ; preds = %16
  %30 = load i32* %i, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %i, align 4
  br label %13

; <label>:32                                      ; preds = %13
  br label %33

; <label>:33                                      ; preds = %32
  %34 = load i32* %k, align 4
  %35 = add nsw i32 %34, 1
  store i32 %35, i32* %k, align 4
  br label %9

; <label>:36                                      ; preds = %9
  %37 = load i32* %jbeg, align 4
  store i32 %37, i32* %j, align 4
  br label %38

; <label>:38                                      ; preds = %262, %36
  %39 = load i32* %j, align 4
  %40 = load i32* %jfin, align 4
  %41 = icmp slt i32 %39, %40
  br i1 %41, label %42, label %265

; <label>:42                                      ; preds = %38
  %43 = load i32* %ibeg, align 4
  store i32 %43, i32* %i, align 4
  br label %44

; <label>:44                                      ; preds = %258, %42
  %45 = load i32* %i, align 4
  %46 = load i32* %ifin, align 4
  %47 = icmp slt i32 %45, %46
  br i1 %47, label %48, label %261

; <label>:48                                      ; preds = %44
  %49 = load i32* @ki1, align 4
  store i32 %49, i32* %k, align 4
  %50 = load i32* %i, align 4
  %51 = sext i32 %50 to i64
  %52 = load i32* %j, align 4
  %53 = sext i32 %52 to i64
  %54 = load i32* %k, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %55
  %57 = getelementptr inbounds [23 x [23 x [5 x double]]]* %56, i32 0, i64 %53
  %58 = getelementptr inbounds [23 x [5 x double]]* %57, i32 0, i64 %51
  %59 = getelementptr inbounds [5 x double]* %58, i32 0, i64 4
  %60 = load double* %59, align 8
  %61 = load i32* %i, align 4
  %62 = sext i32 %61 to i64
  %63 = load i32* %j, align 4
  %64 = sext i32 %63 to i64
  %65 = load i32* %k, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %66
  %68 = getelementptr inbounds [23 x [23 x [5 x double]]]* %67, i32 0, i64 %64
  %69 = getelementptr inbounds [23 x [5 x double]]* %68, i32 0, i64 %62
  %70 = getelementptr inbounds [5 x double]* %69, i32 0, i64 1
  %71 = load double* %70, align 8
  %72 = load i32* %i, align 4
  %73 = sext i32 %72 to i64
  %74 = load i32* %j, align 4
  %75 = sext i32 %74 to i64
  %76 = load i32* %k, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %77
  %79 = getelementptr inbounds [23 x [23 x [5 x double]]]* %78, i32 0, i64 %75
  %80 = getelementptr inbounds [23 x [5 x double]]* %79, i32 0, i64 %73
  %81 = getelementptr inbounds [5 x double]* %80, i32 0, i64 1
  %82 = load double* %81, align 8
  %83 = fmul double %71, %82
  %84 = load i32* %i, align 4
  %85 = sext i32 %84 to i64
  %86 = load i32* %j, align 4
  %87 = sext i32 %86 to i64
  %88 = load i32* %k, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %89
  %91 = getelementptr inbounds [23 x [23 x [5 x double]]]* %90, i32 0, i64 %87
  %92 = getelementptr inbounds [23 x [5 x double]]* %91, i32 0, i64 %85
  %93 = getelementptr inbounds [5 x double]* %92, i32 0, i64 2
  %94 = load double* %93, align 8
  %95 = load i32* %i, align 4
  %96 = sext i32 %95 to i64
  %97 = load i32* %j, align 4
  %98 = sext i32 %97 to i64
  %99 = load i32* %k, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %100
  %102 = getelementptr inbounds [23 x [23 x [5 x double]]]* %101, i32 0, i64 %98
  %103 = getelementptr inbounds [23 x [5 x double]]* %102, i32 0, i64 %96
  %104 = getelementptr inbounds [5 x double]* %103, i32 0, i64 2
  %105 = load double* %104, align 8
  %106 = fmul double %94, %105
  %107 = fadd double %83, %106
  %108 = load i32* %i, align 4
  %109 = sext i32 %108 to i64
  %110 = load i32* %j, align 4
  %111 = sext i32 %110 to i64
  %112 = load i32* %k, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %113
  %115 = getelementptr inbounds [23 x [23 x [5 x double]]]* %114, i32 0, i64 %111
  %116 = getelementptr inbounds [23 x [5 x double]]* %115, i32 0, i64 %109
  %117 = getelementptr inbounds [5 x double]* %116, i32 0, i64 3
  %118 = load double* %117, align 8
  %119 = load i32* %i, align 4
  %120 = sext i32 %119 to i64
  %121 = load i32* %j, align 4
  %122 = sext i32 %121 to i64
  %123 = load i32* %k, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %124
  %126 = getelementptr inbounds [23 x [23 x [5 x double]]]* %125, i32 0, i64 %122
  %127 = getelementptr inbounds [23 x [5 x double]]* %126, i32 0, i64 %120
  %128 = getelementptr inbounds [5 x double]* %127, i32 0, i64 3
  %129 = load double* %128, align 8
  %130 = fmul double %118, %129
  %131 = fadd double %107, %130
  %132 = fmul double 5.000000e-01, %131
  %133 = load i32* %i, align 4
  %134 = sext i32 %133 to i64
  %135 = load i32* %j, align 4
  %136 = sext i32 %135 to i64
  %137 = load i32* %k, align 4
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %138
  %140 = getelementptr inbounds [23 x [23 x [5 x double]]]* %139, i32 0, i64 %136
  %141 = getelementptr inbounds [23 x [5 x double]]* %140, i32 0, i64 %134
  %142 = getelementptr inbounds [5 x double]* %141, i32 0, i64 0
  %143 = load double* %142, align 8
  %144 = fdiv double %132, %143
  %145 = fsub double %60, %144
  %146 = fmul double 4.000000e-01, %145
  %147 = load i32* %i, align 4
  %148 = sext i32 %147 to i64
  %149 = load i32* %j, align 4
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds [24 x [24 x double]]* %phi1, i32 0, i64 %150
  %152 = getelementptr inbounds [24 x double]* %151, i32 0, i64 %148
  store double %146, double* %152, align 8
  %153 = load i32* @ki2, align 4
  %154 = sub nsw i32 %153, 1
  store i32 %154, i32* %k, align 4
  %155 = load i32* %i, align 4
  %156 = sext i32 %155 to i64
  %157 = load i32* %j, align 4
  %158 = sext i32 %157 to i64
  %159 = load i32* %k, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %160
  %162 = getelementptr inbounds [23 x [23 x [5 x double]]]* %161, i32 0, i64 %158
  %163 = getelementptr inbounds [23 x [5 x double]]* %162, i32 0, i64 %156
  %164 = getelementptr inbounds [5 x double]* %163, i32 0, i64 4
  %165 = load double* %164, align 8
  %166 = load i32* %i, align 4
  %167 = sext i32 %166 to i64
  %168 = load i32* %j, align 4
  %169 = sext i32 %168 to i64
  %170 = load i32* %k, align 4
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %171
  %173 = getelementptr inbounds [23 x [23 x [5 x double]]]* %172, i32 0, i64 %169
  %174 = getelementptr inbounds [23 x [5 x double]]* %173, i32 0, i64 %167
  %175 = getelementptr inbounds [5 x double]* %174, i32 0, i64 1
  %176 = load double* %175, align 8
  %177 = load i32* %i, align 4
  %178 = sext i32 %177 to i64
  %179 = load i32* %j, align 4
  %180 = sext i32 %179 to i64
  %181 = load i32* %k, align 4
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %182
  %184 = getelementptr inbounds [23 x [23 x [5 x double]]]* %183, i32 0, i64 %180
  %185 = getelementptr inbounds [23 x [5 x double]]* %184, i32 0, i64 %178
  %186 = getelementptr inbounds [5 x double]* %185, i32 0, i64 1
  %187 = load double* %186, align 8
  %188 = fmul double %176, %187
  %189 = load i32* %i, align 4
  %190 = sext i32 %189 to i64
  %191 = load i32* %j, align 4
  %192 = sext i32 %191 to i64
  %193 = load i32* %k, align 4
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %194
  %196 = getelementptr inbounds [23 x [23 x [5 x double]]]* %195, i32 0, i64 %192
  %197 = getelementptr inbounds [23 x [5 x double]]* %196, i32 0, i64 %190
  %198 = getelementptr inbounds [5 x double]* %197, i32 0, i64 2
  %199 = load double* %198, align 8
  %200 = load i32* %i, align 4
  %201 = sext i32 %200 to i64
  %202 = load i32* %j, align 4
  %203 = sext i32 %202 to i64
  %204 = load i32* %k, align 4
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %205
  %207 = getelementptr inbounds [23 x [23 x [5 x double]]]* %206, i32 0, i64 %203
  %208 = getelementptr inbounds [23 x [5 x double]]* %207, i32 0, i64 %201
  %209 = getelementptr inbounds [5 x double]* %208, i32 0, i64 2
  %210 = load double* %209, align 8
  %211 = fmul double %199, %210
  %212 = fadd double %188, %211
  %213 = load i32* %i, align 4
  %214 = sext i32 %213 to i64
  %215 = load i32* %j, align 4
  %216 = sext i32 %215 to i64
  %217 = load i32* %k, align 4
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %218
  %220 = getelementptr inbounds [23 x [23 x [5 x double]]]* %219, i32 0, i64 %216
  %221 = getelementptr inbounds [23 x [5 x double]]* %220, i32 0, i64 %214
  %222 = getelementptr inbounds [5 x double]* %221, i32 0, i64 3
  %223 = load double* %222, align 8
  %224 = load i32* %i, align 4
  %225 = sext i32 %224 to i64
  %226 = load i32* %j, align 4
  %227 = sext i32 %226 to i64
  %228 = load i32* %k, align 4
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %229
  %231 = getelementptr inbounds [23 x [23 x [5 x double]]]* %230, i32 0, i64 %227
  %232 = getelementptr inbounds [23 x [5 x double]]* %231, i32 0, i64 %225
  %233 = getelementptr inbounds [5 x double]* %232, i32 0, i64 3
  %234 = load double* %233, align 8
  %235 = fmul double %223, %234
  %236 = fadd double %212, %235
  %237 = fmul double 5.000000e-01, %236
  %238 = load i32* %i, align 4
  %239 = sext i32 %238 to i64
  %240 = load i32* %j, align 4
  %241 = sext i32 %240 to i64
  %242 = load i32* %k, align 4
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %243
  %245 = getelementptr inbounds [23 x [23 x [5 x double]]]* %244, i32 0, i64 %241
  %246 = getelementptr inbounds [23 x [5 x double]]* %245, i32 0, i64 %239
  %247 = getelementptr inbounds [5 x double]* %246, i32 0, i64 0
  %248 = load double* %247, align 8
  %249 = fdiv double %237, %248
  %250 = fsub double %165, %249
  %251 = fmul double 4.000000e-01, %250
  %252 = load i32* %i, align 4
  %253 = sext i32 %252 to i64
  %254 = load i32* %j, align 4
  %255 = sext i32 %254 to i64
  %256 = getelementptr inbounds [24 x [24 x double]]* %phi2, i32 0, i64 %255
  %257 = getelementptr inbounds [24 x double]* %256, i32 0, i64 %253
  store double %251, double* %257, align 8
  br label %258

; <label>:258                                     ; preds = %48
  %259 = load i32* %i, align 4
  %260 = add nsw i32 %259, 1
  store i32 %260, i32* %i, align 4
  br label %44

; <label>:261                                     ; preds = %44
  br label %262

; <label>:262                                     ; preds = %261
  %263 = load i32* %j, align 4
  %264 = add nsw i32 %263, 1
  store i32 %264, i32* %j, align 4
  br label %38

; <label>:265                                     ; preds = %38
  store double 0.000000e+00, double* %frc1, align 8
  %266 = load i32* %jbeg, align 4
  store i32 %266, i32* %j, align 4
  br label %267

; <label>:267                                     ; preds = %355, %265
  %268 = load i32* %j, align 4
  %269 = load i32* %jfin1, align 4
  %270 = icmp slt i32 %268, %269
  br i1 %270, label %271, label %358

; <label>:271                                     ; preds = %267
  %272 = load i32* %ibeg, align 4
  store i32 %272, i32* %i, align 4
  br label %273

; <label>:273                                     ; preds = %351, %271
  %274 = load i32* %i, align 4
  %275 = load i32* %ifin1, align 4
  %276 = icmp slt i32 %274, %275
  br i1 %276, label %277, label %354

; <label>:277                                     ; preds = %273
  %278 = load double* %frc1, align 8
  %279 = load i32* %i, align 4
  %280 = sext i32 %279 to i64
  %281 = load i32* %j, align 4
  %282 = sext i32 %281 to i64
  %283 = getelementptr inbounds [24 x [24 x double]]* %phi1, i32 0, i64 %282
  %284 = getelementptr inbounds [24 x double]* %283, i32 0, i64 %280
  %285 = load double* %284, align 8
  %286 = load i32* %i, align 4
  %287 = add nsw i32 %286, 1
  %288 = sext i32 %287 to i64
  %289 = load i32* %j, align 4
  %290 = sext i32 %289 to i64
  %291 = getelementptr inbounds [24 x [24 x double]]* %phi1, i32 0, i64 %290
  %292 = getelementptr inbounds [24 x double]* %291, i32 0, i64 %288
  %293 = load double* %292, align 8
  %294 = fadd double %285, %293
  %295 = load i32* %i, align 4
  %296 = sext i32 %295 to i64
  %297 = load i32* %j, align 4
  %298 = add nsw i32 %297, 1
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds [24 x [24 x double]]* %phi1, i32 0, i64 %299
  %301 = getelementptr inbounds [24 x double]* %300, i32 0, i64 %296
  %302 = load double* %301, align 8
  %303 = fadd double %294, %302
  %304 = load i32* %i, align 4
  %305 = add nsw i32 %304, 1
  %306 = sext i32 %305 to i64
  %307 = load i32* %j, align 4
  %308 = add nsw i32 %307, 1
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds [24 x [24 x double]]* %phi1, i32 0, i64 %309
  %311 = getelementptr inbounds [24 x double]* %310, i32 0, i64 %306
  %312 = load double* %311, align 8
  %313 = fadd double %303, %312
  %314 = load i32* %i, align 4
  %315 = sext i32 %314 to i64
  %316 = load i32* %j, align 4
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds [24 x [24 x double]]* %phi2, i32 0, i64 %317
  %319 = getelementptr inbounds [24 x double]* %318, i32 0, i64 %315
  %320 = load double* %319, align 8
  %321 = fadd double %313, %320
  %322 = load i32* %i, align 4
  %323 = add nsw i32 %322, 1
  %324 = sext i32 %323 to i64
  %325 = load i32* %j, align 4
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds [24 x [24 x double]]* %phi2, i32 0, i64 %326
  %328 = getelementptr inbounds [24 x double]* %327, i32 0, i64 %324
  %329 = load double* %328, align 8
  %330 = fadd double %321, %329
  %331 = load i32* %i, align 4
  %332 = sext i32 %331 to i64
  %333 = load i32* %j, align 4
  %334 = add nsw i32 %333, 1
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds [24 x [24 x double]]* %phi2, i32 0, i64 %335
  %337 = getelementptr inbounds [24 x double]* %336, i32 0, i64 %332
  %338 = load double* %337, align 8
  %339 = fadd double %330, %338
  %340 = load i32* %i, align 4
  %341 = add nsw i32 %340, 1
  %342 = sext i32 %341 to i64
  %343 = load i32* %j, align 4
  %344 = add nsw i32 %343, 1
  %345 = sext i32 %344 to i64
  %346 = getelementptr inbounds [24 x [24 x double]]* %phi2, i32 0, i64 %345
  %347 = getelementptr inbounds [24 x double]* %346, i32 0, i64 %342
  %348 = load double* %347, align 8
  %349 = fadd double %339, %348
  %350 = fadd double %278, %349
  store double %350, double* %frc1, align 8
  br label %351

; <label>:351                                     ; preds = %277
  %352 = load i32* %i, align 4
  %353 = add nsw i32 %352, 1
  store i32 %353, i32* %i, align 4
  br label %273

; <label>:354                                     ; preds = %273
  br label %355

; <label>:355                                     ; preds = %354
  %356 = load i32* %j, align 4
  %357 = add nsw i32 %356, 1
  store i32 %357, i32* %j, align 4
  br label %267

; <label>:358                                     ; preds = %267
  %359 = load double* @dxi, align 8
  %360 = load double* @deta, align 8
  %361 = fmul double %359, %360
  %362 = load double* %frc1, align 8
  %363 = fmul double %361, %362
  store double %363, double* %frc1, align 8
  store i32 0, i32* %k, align 4
  br label %364

; <label>:364                                     ; preds = %388, %358
  %365 = load i32* %k, align 4
  %366 = icmp sle i32 %365, 23
  br i1 %366, label %367, label %391

; <label>:367                                     ; preds = %364
  store i32 0, i32* %i, align 4
  br label %368

; <label>:368                                     ; preds = %384, %367
  %369 = load i32* %i, align 4
  %370 = icmp sle i32 %369, 23
  br i1 %370, label %371, label %387

; <label>:371                                     ; preds = %368
  %372 = load i32* %i, align 4
  %373 = sext i32 %372 to i64
  %374 = load i32* %k, align 4
  %375 = sext i32 %374 to i64
  %376 = getelementptr inbounds [24 x [24 x double]]* %phi1, i32 0, i64 %375
  %377 = getelementptr inbounds [24 x double]* %376, i32 0, i64 %373
  store double 0.000000e+00, double* %377, align 8
  %378 = load i32* %i, align 4
  %379 = sext i32 %378 to i64
  %380 = load i32* %k, align 4
  %381 = sext i32 %380 to i64
  %382 = getelementptr inbounds [24 x [24 x double]]* %phi2, i32 0, i64 %381
  %383 = getelementptr inbounds [24 x double]* %382, i32 0, i64 %379
  store double 0.000000e+00, double* %383, align 8
  br label %384

; <label>:384                                     ; preds = %371
  %385 = load i32* %i, align 4
  %386 = add nsw i32 %385, 1
  store i32 %386, i32* %i, align 4
  br label %368

; <label>:387                                     ; preds = %368
  br label %388

; <label>:388                                     ; preds = %387
  %389 = load i32* %k, align 4
  %390 = add nsw i32 %389, 1
  store i32 %390, i32* %k, align 4
  br label %364

; <label>:391                                     ; preds = %364
  %392 = load i32* %jbeg, align 4
  %393 = load i32* @ji1, align 4
  %394 = icmp eq i32 %392, %393
  br i1 %394, label %395, label %519

; <label>:395                                     ; preds = %391
  %396 = load i32* @ki1, align 4
  store i32 %396, i32* %k, align 4
  br label %397

; <label>:397                                     ; preds = %515, %395
  %398 = load i32* %k, align 4
  %399 = load i32* @ki2, align 4
  %400 = icmp slt i32 %398, %399
  br i1 %400, label %401, label %518

; <label>:401                                     ; preds = %397
  %402 = load i32* %ibeg, align 4
  store i32 %402, i32* %i, align 4
  br label %403

; <label>:403                                     ; preds = %511, %401
  %404 = load i32* %i, align 4
  %405 = load i32* %ifin, align 4
  %406 = icmp slt i32 %404, %405
  br i1 %406, label %407, label %514

; <label>:407                                     ; preds = %403
  %408 = load i32* %i, align 4
  %409 = sext i32 %408 to i64
  %410 = load i32* %jbeg, align 4
  %411 = sext i32 %410 to i64
  %412 = load i32* %k, align 4
  %413 = sext i32 %412 to i64
  %414 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %413
  %415 = getelementptr inbounds [23 x [23 x [5 x double]]]* %414, i32 0, i64 %411
  %416 = getelementptr inbounds [23 x [5 x double]]* %415, i32 0, i64 %409
  %417 = getelementptr inbounds [5 x double]* %416, i32 0, i64 4
  %418 = load double* %417, align 8
  %419 = load i32* %i, align 4
  %420 = sext i32 %419 to i64
  %421 = load i32* %jbeg, align 4
  %422 = sext i32 %421 to i64
  %423 = load i32* %k, align 4
  %424 = sext i32 %423 to i64
  %425 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %424
  %426 = getelementptr inbounds [23 x [23 x [5 x double]]]* %425, i32 0, i64 %422
  %427 = getelementptr inbounds [23 x [5 x double]]* %426, i32 0, i64 %420
  %428 = getelementptr inbounds [5 x double]* %427, i32 0, i64 1
  %429 = load double* %428, align 8
  %430 = load i32* %i, align 4
  %431 = sext i32 %430 to i64
  %432 = load i32* %jbeg, align 4
  %433 = sext i32 %432 to i64
  %434 = load i32* %k, align 4
  %435 = sext i32 %434 to i64
  %436 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %435
  %437 = getelementptr inbounds [23 x [23 x [5 x double]]]* %436, i32 0, i64 %433
  %438 = getelementptr inbounds [23 x [5 x double]]* %437, i32 0, i64 %431
  %439 = getelementptr inbounds [5 x double]* %438, i32 0, i64 1
  %440 = load double* %439, align 8
  %441 = fmul double %429, %440
  %442 = load i32* %i, align 4
  %443 = sext i32 %442 to i64
  %444 = load i32* %jbeg, align 4
  %445 = sext i32 %444 to i64
  %446 = load i32* %k, align 4
  %447 = sext i32 %446 to i64
  %448 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %447
  %449 = getelementptr inbounds [23 x [23 x [5 x double]]]* %448, i32 0, i64 %445
  %450 = getelementptr inbounds [23 x [5 x double]]* %449, i32 0, i64 %443
  %451 = getelementptr inbounds [5 x double]* %450, i32 0, i64 2
  %452 = load double* %451, align 8
  %453 = load i32* %i, align 4
  %454 = sext i32 %453 to i64
  %455 = load i32* %jbeg, align 4
  %456 = sext i32 %455 to i64
  %457 = load i32* %k, align 4
  %458 = sext i32 %457 to i64
  %459 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %458
  %460 = getelementptr inbounds [23 x [23 x [5 x double]]]* %459, i32 0, i64 %456
  %461 = getelementptr inbounds [23 x [5 x double]]* %460, i32 0, i64 %454
  %462 = getelementptr inbounds [5 x double]* %461, i32 0, i64 2
  %463 = load double* %462, align 8
  %464 = fmul double %452, %463
  %465 = fadd double %441, %464
  %466 = load i32* %i, align 4
  %467 = sext i32 %466 to i64
  %468 = load i32* %jbeg, align 4
  %469 = sext i32 %468 to i64
  %470 = load i32* %k, align 4
  %471 = sext i32 %470 to i64
  %472 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %471
  %473 = getelementptr inbounds [23 x [23 x [5 x double]]]* %472, i32 0, i64 %469
  %474 = getelementptr inbounds [23 x [5 x double]]* %473, i32 0, i64 %467
  %475 = getelementptr inbounds [5 x double]* %474, i32 0, i64 3
  %476 = load double* %475, align 8
  %477 = load i32* %i, align 4
  %478 = sext i32 %477 to i64
  %479 = load i32* %jbeg, align 4
  %480 = sext i32 %479 to i64
  %481 = load i32* %k, align 4
  %482 = sext i32 %481 to i64
  %483 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %482
  %484 = getelementptr inbounds [23 x [23 x [5 x double]]]* %483, i32 0, i64 %480
  %485 = getelementptr inbounds [23 x [5 x double]]* %484, i32 0, i64 %478
  %486 = getelementptr inbounds [5 x double]* %485, i32 0, i64 3
  %487 = load double* %486, align 8
  %488 = fmul double %476, %487
  %489 = fadd double %465, %488
  %490 = fmul double 5.000000e-01, %489
  %491 = load i32* %i, align 4
  %492 = sext i32 %491 to i64
  %493 = load i32* %jbeg, align 4
  %494 = sext i32 %493 to i64
  %495 = load i32* %k, align 4
  %496 = sext i32 %495 to i64
  %497 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %496
  %498 = getelementptr inbounds [23 x [23 x [5 x double]]]* %497, i32 0, i64 %494
  %499 = getelementptr inbounds [23 x [5 x double]]* %498, i32 0, i64 %492
  %500 = getelementptr inbounds [5 x double]* %499, i32 0, i64 0
  %501 = load double* %500, align 8
  %502 = fdiv double %490, %501
  %503 = fsub double %418, %502
  %504 = fmul double 4.000000e-01, %503
  %505 = load i32* %i, align 4
  %506 = sext i32 %505 to i64
  %507 = load i32* %k, align 4
  %508 = sext i32 %507 to i64
  %509 = getelementptr inbounds [24 x [24 x double]]* %phi1, i32 0, i64 %508
  %510 = getelementptr inbounds [24 x double]* %509, i32 0, i64 %506
  store double %504, double* %510, align 8
  br label %511

; <label>:511                                     ; preds = %407
  %512 = load i32* %i, align 4
  %513 = add nsw i32 %512, 1
  store i32 %513, i32* %i, align 4
  br label %403

; <label>:514                                     ; preds = %403
  br label %515

; <label>:515                                     ; preds = %514
  %516 = load i32* %k, align 4
  %517 = add nsw i32 %516, 1
  store i32 %517, i32* %k, align 4
  br label %397

; <label>:518                                     ; preds = %397
  br label %519

; <label>:519                                     ; preds = %518, %391
  %520 = load i32* %jfin, align 4
  %521 = load i32* @ji2, align 4
  %522 = icmp eq i32 %520, %521
  br i1 %522, label %523, label %655

; <label>:523                                     ; preds = %519
  %524 = load i32* @ki1, align 4
  store i32 %524, i32* %k, align 4
  br label %525

; <label>:525                                     ; preds = %651, %523
  %526 = load i32* %k, align 4
  %527 = load i32* @ki2, align 4
  %528 = icmp slt i32 %526, %527
  br i1 %528, label %529, label %654

; <label>:529                                     ; preds = %525
  %530 = load i32* %ibeg, align 4
  store i32 %530, i32* %i, align 4
  br label %531

; <label>:531                                     ; preds = %647, %529
  %532 = load i32* %i, align 4
  %533 = load i32* %ifin, align 4
  %534 = icmp slt i32 %532, %533
  br i1 %534, label %535, label %650

; <label>:535                                     ; preds = %531
  %536 = load i32* %i, align 4
  %537 = sext i32 %536 to i64
  %538 = load i32* %jfin, align 4
  %539 = sub nsw i32 %538, 1
  %540 = sext i32 %539 to i64
  %541 = load i32* %k, align 4
  %542 = sext i32 %541 to i64
  %543 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %542
  %544 = getelementptr inbounds [23 x [23 x [5 x double]]]* %543, i32 0, i64 %540
  %545 = getelementptr inbounds [23 x [5 x double]]* %544, i32 0, i64 %537
  %546 = getelementptr inbounds [5 x double]* %545, i32 0, i64 4
  %547 = load double* %546, align 8
  %548 = load i32* %i, align 4
  %549 = sext i32 %548 to i64
  %550 = load i32* %jfin, align 4
  %551 = sub nsw i32 %550, 1
  %552 = sext i32 %551 to i64
  %553 = load i32* %k, align 4
  %554 = sext i32 %553 to i64
  %555 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %554
  %556 = getelementptr inbounds [23 x [23 x [5 x double]]]* %555, i32 0, i64 %552
  %557 = getelementptr inbounds [23 x [5 x double]]* %556, i32 0, i64 %549
  %558 = getelementptr inbounds [5 x double]* %557, i32 0, i64 1
  %559 = load double* %558, align 8
  %560 = load i32* %i, align 4
  %561 = sext i32 %560 to i64
  %562 = load i32* %jfin, align 4
  %563 = sub nsw i32 %562, 1
  %564 = sext i32 %563 to i64
  %565 = load i32* %k, align 4
  %566 = sext i32 %565 to i64
  %567 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %566
  %568 = getelementptr inbounds [23 x [23 x [5 x double]]]* %567, i32 0, i64 %564
  %569 = getelementptr inbounds [23 x [5 x double]]* %568, i32 0, i64 %561
  %570 = getelementptr inbounds [5 x double]* %569, i32 0, i64 1
  %571 = load double* %570, align 8
  %572 = fmul double %559, %571
  %573 = load i32* %i, align 4
  %574 = sext i32 %573 to i64
  %575 = load i32* %jfin, align 4
  %576 = sub nsw i32 %575, 1
  %577 = sext i32 %576 to i64
  %578 = load i32* %k, align 4
  %579 = sext i32 %578 to i64
  %580 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %579
  %581 = getelementptr inbounds [23 x [23 x [5 x double]]]* %580, i32 0, i64 %577
  %582 = getelementptr inbounds [23 x [5 x double]]* %581, i32 0, i64 %574
  %583 = getelementptr inbounds [5 x double]* %582, i32 0, i64 2
  %584 = load double* %583, align 8
  %585 = load i32* %i, align 4
  %586 = sext i32 %585 to i64
  %587 = load i32* %jfin, align 4
  %588 = sub nsw i32 %587, 1
  %589 = sext i32 %588 to i64
  %590 = load i32* %k, align 4
  %591 = sext i32 %590 to i64
  %592 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %591
  %593 = getelementptr inbounds [23 x [23 x [5 x double]]]* %592, i32 0, i64 %589
  %594 = getelementptr inbounds [23 x [5 x double]]* %593, i32 0, i64 %586
  %595 = getelementptr inbounds [5 x double]* %594, i32 0, i64 2
  %596 = load double* %595, align 8
  %597 = fmul double %584, %596
  %598 = fadd double %572, %597
  %599 = load i32* %i, align 4
  %600 = sext i32 %599 to i64
  %601 = load i32* %jfin, align 4
  %602 = sub nsw i32 %601, 1
  %603 = sext i32 %602 to i64
  %604 = load i32* %k, align 4
  %605 = sext i32 %604 to i64
  %606 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %605
  %607 = getelementptr inbounds [23 x [23 x [5 x double]]]* %606, i32 0, i64 %603
  %608 = getelementptr inbounds [23 x [5 x double]]* %607, i32 0, i64 %600
  %609 = getelementptr inbounds [5 x double]* %608, i32 0, i64 3
  %610 = load double* %609, align 8
  %611 = load i32* %i, align 4
  %612 = sext i32 %611 to i64
  %613 = load i32* %jfin, align 4
  %614 = sub nsw i32 %613, 1
  %615 = sext i32 %614 to i64
  %616 = load i32* %k, align 4
  %617 = sext i32 %616 to i64
  %618 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %617
  %619 = getelementptr inbounds [23 x [23 x [5 x double]]]* %618, i32 0, i64 %615
  %620 = getelementptr inbounds [23 x [5 x double]]* %619, i32 0, i64 %612
  %621 = getelementptr inbounds [5 x double]* %620, i32 0, i64 3
  %622 = load double* %621, align 8
  %623 = fmul double %610, %622
  %624 = fadd double %598, %623
  %625 = fmul double 5.000000e-01, %624
  %626 = load i32* %i, align 4
  %627 = sext i32 %626 to i64
  %628 = load i32* %jfin, align 4
  %629 = sub nsw i32 %628, 1
  %630 = sext i32 %629 to i64
  %631 = load i32* %k, align 4
  %632 = sext i32 %631 to i64
  %633 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %632
  %634 = getelementptr inbounds [23 x [23 x [5 x double]]]* %633, i32 0, i64 %630
  %635 = getelementptr inbounds [23 x [5 x double]]* %634, i32 0, i64 %627
  %636 = getelementptr inbounds [5 x double]* %635, i32 0, i64 0
  %637 = load double* %636, align 8
  %638 = fdiv double %625, %637
  %639 = fsub double %547, %638
  %640 = fmul double 4.000000e-01, %639
  %641 = load i32* %i, align 4
  %642 = sext i32 %641 to i64
  %643 = load i32* %k, align 4
  %644 = sext i32 %643 to i64
  %645 = getelementptr inbounds [24 x [24 x double]]* %phi2, i32 0, i64 %644
  %646 = getelementptr inbounds [24 x double]* %645, i32 0, i64 %642
  store double %640, double* %646, align 8
  br label %647

; <label>:647                                     ; preds = %535
  %648 = load i32* %i, align 4
  %649 = add nsw i32 %648, 1
  store i32 %649, i32* %i, align 4
  br label %531

; <label>:650                                     ; preds = %531
  br label %651

; <label>:651                                     ; preds = %650
  %652 = load i32* %k, align 4
  %653 = add nsw i32 %652, 1
  store i32 %653, i32* %k, align 4
  br label %525

; <label>:654                                     ; preds = %525
  br label %655

; <label>:655                                     ; preds = %654, %519
  store double 0.000000e+00, double* %frc2, align 8
  %656 = load i32* @ki1, align 4
  store i32 %656, i32* %k, align 4
  br label %657

; <label>:657                                     ; preds = %746, %655
  %658 = load i32* %k, align 4
  %659 = load i32* @ki2, align 4
  %660 = sub nsw i32 %659, 1
  %661 = icmp slt i32 %658, %660
  br i1 %661, label %662, label %749

; <label>:662                                     ; preds = %657
  %663 = load i32* %ibeg, align 4
  store i32 %663, i32* %i, align 4
  br label %664

; <label>:664                                     ; preds = %742, %662
  %665 = load i32* %i, align 4
  %666 = load i32* %ifin1, align 4
  %667 = icmp slt i32 %665, %666
  br i1 %667, label %668, label %745

; <label>:668                                     ; preds = %664
  %669 = load double* %frc2, align 8
  %670 = load i32* %i, align 4
  %671 = sext i32 %670 to i64
  %672 = load i32* %k, align 4
  %673 = sext i32 %672 to i64
  %674 = getelementptr inbounds [24 x [24 x double]]* %phi1, i32 0, i64 %673
  %675 = getelementptr inbounds [24 x double]* %674, i32 0, i64 %671
  %676 = load double* %675, align 8
  %677 = load i32* %i, align 4
  %678 = add nsw i32 %677, 1
  %679 = sext i32 %678 to i64
  %680 = load i32* %k, align 4
  %681 = sext i32 %680 to i64
  %682 = getelementptr inbounds [24 x [24 x double]]* %phi1, i32 0, i64 %681
  %683 = getelementptr inbounds [24 x double]* %682, i32 0, i64 %679
  %684 = load double* %683, align 8
  %685 = fadd double %676, %684
  %686 = load i32* %i, align 4
  %687 = sext i32 %686 to i64
  %688 = load i32* %k, align 4
  %689 = add nsw i32 %688, 1
  %690 = sext i32 %689 to i64
  %691 = getelementptr inbounds [24 x [24 x double]]* %phi1, i32 0, i64 %690
  %692 = getelementptr inbounds [24 x double]* %691, i32 0, i64 %687
  %693 = load double* %692, align 8
  %694 = fadd double %685, %693
  %695 = load i32* %i, align 4
  %696 = add nsw i32 %695, 1
  %697 = sext i32 %696 to i64
  %698 = load i32* %k, align 4
  %699 = add nsw i32 %698, 1
  %700 = sext i32 %699 to i64
  %701 = getelementptr inbounds [24 x [24 x double]]* %phi1, i32 0, i64 %700
  %702 = getelementptr inbounds [24 x double]* %701, i32 0, i64 %697
  %703 = load double* %702, align 8
  %704 = fadd double %694, %703
  %705 = load i32* %i, align 4
  %706 = sext i32 %705 to i64
  %707 = load i32* %k, align 4
  %708 = sext i32 %707 to i64
  %709 = getelementptr inbounds [24 x [24 x double]]* %phi2, i32 0, i64 %708
  %710 = getelementptr inbounds [24 x double]* %709, i32 0, i64 %706
  %711 = load double* %710, align 8
  %712 = fadd double %704, %711
  %713 = load i32* %i, align 4
  %714 = add nsw i32 %713, 1
  %715 = sext i32 %714 to i64
  %716 = load i32* %k, align 4
  %717 = sext i32 %716 to i64
  %718 = getelementptr inbounds [24 x [24 x double]]* %phi2, i32 0, i64 %717
  %719 = getelementptr inbounds [24 x double]* %718, i32 0, i64 %715
  %720 = load double* %719, align 8
  %721 = fadd double %712, %720
  %722 = load i32* %i, align 4
  %723 = sext i32 %722 to i64
  %724 = load i32* %k, align 4
  %725 = add nsw i32 %724, 1
  %726 = sext i32 %725 to i64
  %727 = getelementptr inbounds [24 x [24 x double]]* %phi2, i32 0, i64 %726
  %728 = getelementptr inbounds [24 x double]* %727, i32 0, i64 %723
  %729 = load double* %728, align 8
  %730 = fadd double %721, %729
  %731 = load i32* %i, align 4
  %732 = add nsw i32 %731, 1
  %733 = sext i32 %732 to i64
  %734 = load i32* %k, align 4
  %735 = add nsw i32 %734, 1
  %736 = sext i32 %735 to i64
  %737 = getelementptr inbounds [24 x [24 x double]]* %phi2, i32 0, i64 %736
  %738 = getelementptr inbounds [24 x double]* %737, i32 0, i64 %733
  %739 = load double* %738, align 8
  %740 = fadd double %730, %739
  %741 = fadd double %669, %740
  store double %741, double* %frc2, align 8
  br label %742

; <label>:742                                     ; preds = %668
  %743 = load i32* %i, align 4
  %744 = add nsw i32 %743, 1
  store i32 %744, i32* %i, align 4
  br label %664

; <label>:745                                     ; preds = %664
  br label %746

; <label>:746                                     ; preds = %745
  %747 = load i32* %k, align 4
  %748 = add nsw i32 %747, 1
  store i32 %748, i32* %k, align 4
  br label %657

; <label>:749                                     ; preds = %657
  %750 = load double* @dxi, align 8
  %751 = load double* @dzeta, align 8
  %752 = fmul double %750, %751
  %753 = load double* %frc2, align 8
  %754 = fmul double %752, %753
  store double %754, double* %frc2, align 8
  store i32 0, i32* %k, align 4
  br label %755

; <label>:755                                     ; preds = %779, %749
  %756 = load i32* %k, align 4
  %757 = icmp sle i32 %756, 23
  br i1 %757, label %758, label %782

; <label>:758                                     ; preds = %755
  store i32 0, i32* %i, align 4
  br label %759

; <label>:759                                     ; preds = %775, %758
  %760 = load i32* %i, align 4
  %761 = icmp sle i32 %760, 23
  br i1 %761, label %762, label %778

; <label>:762                                     ; preds = %759
  %763 = load i32* %i, align 4
  %764 = sext i32 %763 to i64
  %765 = load i32* %k, align 4
  %766 = sext i32 %765 to i64
  %767 = getelementptr inbounds [24 x [24 x double]]* %phi1, i32 0, i64 %766
  %768 = getelementptr inbounds [24 x double]* %767, i32 0, i64 %764
  store double 0.000000e+00, double* %768, align 8
  %769 = load i32* %i, align 4
  %770 = sext i32 %769 to i64
  %771 = load i32* %k, align 4
  %772 = sext i32 %771 to i64
  %773 = getelementptr inbounds [24 x [24 x double]]* %phi2, i32 0, i64 %772
  %774 = getelementptr inbounds [24 x double]* %773, i32 0, i64 %770
  store double 0.000000e+00, double* %774, align 8
  br label %775

; <label>:775                                     ; preds = %762
  %776 = load i32* %i, align 4
  %777 = add nsw i32 %776, 1
  store i32 %777, i32* %i, align 4
  br label %759

; <label>:778                                     ; preds = %759
  br label %779

; <label>:779                                     ; preds = %778
  %780 = load i32* %k, align 4
  %781 = add nsw i32 %780, 1
  store i32 %781, i32* %k, align 4
  br label %755

; <label>:782                                     ; preds = %755
  %783 = load i32* %ibeg, align 4
  %784 = load i32* @ii1, align 4
  %785 = icmp eq i32 %783, %784
  br i1 %785, label %786, label %910

; <label>:786                                     ; preds = %782
  %787 = load i32* @ki1, align 4
  store i32 %787, i32* %k, align 4
  br label %788

; <label>:788                                     ; preds = %906, %786
  %789 = load i32* %k, align 4
  %790 = load i32* @ki2, align 4
  %791 = icmp slt i32 %789, %790
  br i1 %791, label %792, label %909

; <label>:792                                     ; preds = %788
  %793 = load i32* %jbeg, align 4
  store i32 %793, i32* %j, align 4
  br label %794

; <label>:794                                     ; preds = %902, %792
  %795 = load i32* %j, align 4
  %796 = load i32* %jfin, align 4
  %797 = icmp slt i32 %795, %796
  br i1 %797, label %798, label %905

; <label>:798                                     ; preds = %794
  %799 = load i32* %ibeg, align 4
  %800 = sext i32 %799 to i64
  %801 = load i32* %j, align 4
  %802 = sext i32 %801 to i64
  %803 = load i32* %k, align 4
  %804 = sext i32 %803 to i64
  %805 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %804
  %806 = getelementptr inbounds [23 x [23 x [5 x double]]]* %805, i32 0, i64 %802
  %807 = getelementptr inbounds [23 x [5 x double]]* %806, i32 0, i64 %800
  %808 = getelementptr inbounds [5 x double]* %807, i32 0, i64 4
  %809 = load double* %808, align 8
  %810 = load i32* %ibeg, align 4
  %811 = sext i32 %810 to i64
  %812 = load i32* %j, align 4
  %813 = sext i32 %812 to i64
  %814 = load i32* %k, align 4
  %815 = sext i32 %814 to i64
  %816 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %815
  %817 = getelementptr inbounds [23 x [23 x [5 x double]]]* %816, i32 0, i64 %813
  %818 = getelementptr inbounds [23 x [5 x double]]* %817, i32 0, i64 %811
  %819 = getelementptr inbounds [5 x double]* %818, i32 0, i64 1
  %820 = load double* %819, align 8
  %821 = load i32* %ibeg, align 4
  %822 = sext i32 %821 to i64
  %823 = load i32* %j, align 4
  %824 = sext i32 %823 to i64
  %825 = load i32* %k, align 4
  %826 = sext i32 %825 to i64
  %827 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %826
  %828 = getelementptr inbounds [23 x [23 x [5 x double]]]* %827, i32 0, i64 %824
  %829 = getelementptr inbounds [23 x [5 x double]]* %828, i32 0, i64 %822
  %830 = getelementptr inbounds [5 x double]* %829, i32 0, i64 1
  %831 = load double* %830, align 8
  %832 = fmul double %820, %831
  %833 = load i32* %ibeg, align 4
  %834 = sext i32 %833 to i64
  %835 = load i32* %j, align 4
  %836 = sext i32 %835 to i64
  %837 = load i32* %k, align 4
  %838 = sext i32 %837 to i64
  %839 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %838
  %840 = getelementptr inbounds [23 x [23 x [5 x double]]]* %839, i32 0, i64 %836
  %841 = getelementptr inbounds [23 x [5 x double]]* %840, i32 0, i64 %834
  %842 = getelementptr inbounds [5 x double]* %841, i32 0, i64 2
  %843 = load double* %842, align 8
  %844 = load i32* %ibeg, align 4
  %845 = sext i32 %844 to i64
  %846 = load i32* %j, align 4
  %847 = sext i32 %846 to i64
  %848 = load i32* %k, align 4
  %849 = sext i32 %848 to i64
  %850 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %849
  %851 = getelementptr inbounds [23 x [23 x [5 x double]]]* %850, i32 0, i64 %847
  %852 = getelementptr inbounds [23 x [5 x double]]* %851, i32 0, i64 %845
  %853 = getelementptr inbounds [5 x double]* %852, i32 0, i64 2
  %854 = load double* %853, align 8
  %855 = fmul double %843, %854
  %856 = fadd double %832, %855
  %857 = load i32* %ibeg, align 4
  %858 = sext i32 %857 to i64
  %859 = load i32* %j, align 4
  %860 = sext i32 %859 to i64
  %861 = load i32* %k, align 4
  %862 = sext i32 %861 to i64
  %863 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %862
  %864 = getelementptr inbounds [23 x [23 x [5 x double]]]* %863, i32 0, i64 %860
  %865 = getelementptr inbounds [23 x [5 x double]]* %864, i32 0, i64 %858
  %866 = getelementptr inbounds [5 x double]* %865, i32 0, i64 3
  %867 = load double* %866, align 8
  %868 = load i32* %ibeg, align 4
  %869 = sext i32 %868 to i64
  %870 = load i32* %j, align 4
  %871 = sext i32 %870 to i64
  %872 = load i32* %k, align 4
  %873 = sext i32 %872 to i64
  %874 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %873
  %875 = getelementptr inbounds [23 x [23 x [5 x double]]]* %874, i32 0, i64 %871
  %876 = getelementptr inbounds [23 x [5 x double]]* %875, i32 0, i64 %869
  %877 = getelementptr inbounds [5 x double]* %876, i32 0, i64 3
  %878 = load double* %877, align 8
  %879 = fmul double %867, %878
  %880 = fadd double %856, %879
  %881 = fmul double 5.000000e-01, %880
  %882 = load i32* %ibeg, align 4
  %883 = sext i32 %882 to i64
  %884 = load i32* %j, align 4
  %885 = sext i32 %884 to i64
  %886 = load i32* %k, align 4
  %887 = sext i32 %886 to i64
  %888 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %887
  %889 = getelementptr inbounds [23 x [23 x [5 x double]]]* %888, i32 0, i64 %885
  %890 = getelementptr inbounds [23 x [5 x double]]* %889, i32 0, i64 %883
  %891 = getelementptr inbounds [5 x double]* %890, i32 0, i64 0
  %892 = load double* %891, align 8
  %893 = fdiv double %881, %892
  %894 = fsub double %809, %893
  %895 = fmul double 4.000000e-01, %894
  %896 = load i32* %j, align 4
  %897 = sext i32 %896 to i64
  %898 = load i32* %k, align 4
  %899 = sext i32 %898 to i64
  %900 = getelementptr inbounds [24 x [24 x double]]* %phi1, i32 0, i64 %899
  %901 = getelementptr inbounds [24 x double]* %900, i32 0, i64 %897
  store double %895, double* %901, align 8
  br label %902

; <label>:902                                     ; preds = %798
  %903 = load i32* %j, align 4
  %904 = add nsw i32 %903, 1
  store i32 %904, i32* %j, align 4
  br label %794

; <label>:905                                     ; preds = %794
  br label %906

; <label>:906                                     ; preds = %905
  %907 = load i32* %k, align 4
  %908 = add nsw i32 %907, 1
  store i32 %908, i32* %k, align 4
  br label %788

; <label>:909                                     ; preds = %788
  br label %910

; <label>:910                                     ; preds = %909, %782
  %911 = load i32* %ifin, align 4
  %912 = load i32* @ii2, align 4
  %913 = icmp eq i32 %911, %912
  br i1 %913, label %914, label %1046

; <label>:914                                     ; preds = %910
  %915 = load i32* @ki1, align 4
  store i32 %915, i32* %k, align 4
  br label %916

; <label>:916                                     ; preds = %1042, %914
  %917 = load i32* %k, align 4
  %918 = load i32* @ki2, align 4
  %919 = icmp slt i32 %917, %918
  br i1 %919, label %920, label %1045

; <label>:920                                     ; preds = %916
  %921 = load i32* %jbeg, align 4
  store i32 %921, i32* %j, align 4
  br label %922

; <label>:922                                     ; preds = %1038, %920
  %923 = load i32* %j, align 4
  %924 = load i32* %jfin, align 4
  %925 = icmp slt i32 %923, %924
  br i1 %925, label %926, label %1041

; <label>:926                                     ; preds = %922
  %927 = load i32* %ifin, align 4
  %928 = sub nsw i32 %927, 1
  %929 = sext i32 %928 to i64
  %930 = load i32* %j, align 4
  %931 = sext i32 %930 to i64
  %932 = load i32* %k, align 4
  %933 = sext i32 %932 to i64
  %934 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %933
  %935 = getelementptr inbounds [23 x [23 x [5 x double]]]* %934, i32 0, i64 %931
  %936 = getelementptr inbounds [23 x [5 x double]]* %935, i32 0, i64 %929
  %937 = getelementptr inbounds [5 x double]* %936, i32 0, i64 4
  %938 = load double* %937, align 8
  %939 = load i32* %ifin, align 4
  %940 = sub nsw i32 %939, 1
  %941 = sext i32 %940 to i64
  %942 = load i32* %j, align 4
  %943 = sext i32 %942 to i64
  %944 = load i32* %k, align 4
  %945 = sext i32 %944 to i64
  %946 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %945
  %947 = getelementptr inbounds [23 x [23 x [5 x double]]]* %946, i32 0, i64 %943
  %948 = getelementptr inbounds [23 x [5 x double]]* %947, i32 0, i64 %941
  %949 = getelementptr inbounds [5 x double]* %948, i32 0, i64 1
  %950 = load double* %949, align 8
  %951 = load i32* %ifin, align 4
  %952 = sub nsw i32 %951, 1
  %953 = sext i32 %952 to i64
  %954 = load i32* %j, align 4
  %955 = sext i32 %954 to i64
  %956 = load i32* %k, align 4
  %957 = sext i32 %956 to i64
  %958 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %957
  %959 = getelementptr inbounds [23 x [23 x [5 x double]]]* %958, i32 0, i64 %955
  %960 = getelementptr inbounds [23 x [5 x double]]* %959, i32 0, i64 %953
  %961 = getelementptr inbounds [5 x double]* %960, i32 0, i64 1
  %962 = load double* %961, align 8
  %963 = fmul double %950, %962
  %964 = load i32* %ifin, align 4
  %965 = sub nsw i32 %964, 1
  %966 = sext i32 %965 to i64
  %967 = load i32* %j, align 4
  %968 = sext i32 %967 to i64
  %969 = load i32* %k, align 4
  %970 = sext i32 %969 to i64
  %971 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %970
  %972 = getelementptr inbounds [23 x [23 x [5 x double]]]* %971, i32 0, i64 %968
  %973 = getelementptr inbounds [23 x [5 x double]]* %972, i32 0, i64 %966
  %974 = getelementptr inbounds [5 x double]* %973, i32 0, i64 2
  %975 = load double* %974, align 8
  %976 = load i32* %ifin, align 4
  %977 = sub nsw i32 %976, 1
  %978 = sext i32 %977 to i64
  %979 = load i32* %j, align 4
  %980 = sext i32 %979 to i64
  %981 = load i32* %k, align 4
  %982 = sext i32 %981 to i64
  %983 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %982
  %984 = getelementptr inbounds [23 x [23 x [5 x double]]]* %983, i32 0, i64 %980
  %985 = getelementptr inbounds [23 x [5 x double]]* %984, i32 0, i64 %978
  %986 = getelementptr inbounds [5 x double]* %985, i32 0, i64 2
  %987 = load double* %986, align 8
  %988 = fmul double %975, %987
  %989 = fadd double %963, %988
  %990 = load i32* %ifin, align 4
  %991 = sub nsw i32 %990, 1
  %992 = sext i32 %991 to i64
  %993 = load i32* %j, align 4
  %994 = sext i32 %993 to i64
  %995 = load i32* %k, align 4
  %996 = sext i32 %995 to i64
  %997 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %996
  %998 = getelementptr inbounds [23 x [23 x [5 x double]]]* %997, i32 0, i64 %994
  %999 = getelementptr inbounds [23 x [5 x double]]* %998, i32 0, i64 %992
  %1000 = getelementptr inbounds [5 x double]* %999, i32 0, i64 3
  %1001 = load double* %1000, align 8
  %1002 = load i32* %ifin, align 4
  %1003 = sub nsw i32 %1002, 1
  %1004 = sext i32 %1003 to i64
  %1005 = load i32* %j, align 4
  %1006 = sext i32 %1005 to i64
  %1007 = load i32* %k, align 4
  %1008 = sext i32 %1007 to i64
  %1009 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1008
  %1010 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1009, i32 0, i64 %1006
  %1011 = getelementptr inbounds [23 x [5 x double]]* %1010, i32 0, i64 %1004
  %1012 = getelementptr inbounds [5 x double]* %1011, i32 0, i64 3
  %1013 = load double* %1012, align 8
  %1014 = fmul double %1001, %1013
  %1015 = fadd double %989, %1014
  %1016 = fmul double 5.000000e-01, %1015
  %1017 = load i32* %ifin, align 4
  %1018 = sub nsw i32 %1017, 1
  %1019 = sext i32 %1018 to i64
  %1020 = load i32* %j, align 4
  %1021 = sext i32 %1020 to i64
  %1022 = load i32* %k, align 4
  %1023 = sext i32 %1022 to i64
  %1024 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1023
  %1025 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1024, i32 0, i64 %1021
  %1026 = getelementptr inbounds [23 x [5 x double]]* %1025, i32 0, i64 %1019
  %1027 = getelementptr inbounds [5 x double]* %1026, i32 0, i64 0
  %1028 = load double* %1027, align 8
  %1029 = fdiv double %1016, %1028
  %1030 = fsub double %938, %1029
  %1031 = fmul double 4.000000e-01, %1030
  %1032 = load i32* %j, align 4
  %1033 = sext i32 %1032 to i64
  %1034 = load i32* %k, align 4
  %1035 = sext i32 %1034 to i64
  %1036 = getelementptr inbounds [24 x [24 x double]]* %phi2, i32 0, i64 %1035
  %1037 = getelementptr inbounds [24 x double]* %1036, i32 0, i64 %1033
  store double %1031, double* %1037, align 8
  br label %1038

; <label>:1038                                    ; preds = %926
  %1039 = load i32* %j, align 4
  %1040 = add nsw i32 %1039, 1
  store i32 %1040, i32* %j, align 4
  br label %922

; <label>:1041                                    ; preds = %922
  br label %1042

; <label>:1042                                    ; preds = %1041
  %1043 = load i32* %k, align 4
  %1044 = add nsw i32 %1043, 1
  store i32 %1044, i32* %k, align 4
  br label %916

; <label>:1045                                    ; preds = %916
  br label %1046

; <label>:1046                                    ; preds = %1045, %910
  store double 0.000000e+00, double* %frc3, align 8
  %1047 = load i32* @ki1, align 4
  store i32 %1047, i32* %k, align 4
  br label %1048

; <label>:1048                                    ; preds = %1137, %1046
  %1049 = load i32* %k, align 4
  %1050 = load i32* @ki2, align 4
  %1051 = sub nsw i32 %1050, 1
  %1052 = icmp slt i32 %1049, %1051
  br i1 %1052, label %1053, label %1140

; <label>:1053                                    ; preds = %1048
  %1054 = load i32* %jbeg, align 4
  store i32 %1054, i32* %j, align 4
  br label %1055

; <label>:1055                                    ; preds = %1133, %1053
  %1056 = load i32* %j, align 4
  %1057 = load i32* %jfin1, align 4
  %1058 = icmp slt i32 %1056, %1057
  br i1 %1058, label %1059, label %1136

; <label>:1059                                    ; preds = %1055
  %1060 = load double* %frc3, align 8
  %1061 = load i32* %j, align 4
  %1062 = sext i32 %1061 to i64
  %1063 = load i32* %k, align 4
  %1064 = sext i32 %1063 to i64
  %1065 = getelementptr inbounds [24 x [24 x double]]* %phi1, i32 0, i64 %1064
  %1066 = getelementptr inbounds [24 x double]* %1065, i32 0, i64 %1062
  %1067 = load double* %1066, align 8
  %1068 = load i32* %j, align 4
  %1069 = add nsw i32 %1068, 1
  %1070 = sext i32 %1069 to i64
  %1071 = load i32* %k, align 4
  %1072 = sext i32 %1071 to i64
  %1073 = getelementptr inbounds [24 x [24 x double]]* %phi1, i32 0, i64 %1072
  %1074 = getelementptr inbounds [24 x double]* %1073, i32 0, i64 %1070
  %1075 = load double* %1074, align 8
  %1076 = fadd double %1067, %1075
  %1077 = load i32* %j, align 4
  %1078 = sext i32 %1077 to i64
  %1079 = load i32* %k, align 4
  %1080 = add nsw i32 %1079, 1
  %1081 = sext i32 %1080 to i64
  %1082 = getelementptr inbounds [24 x [24 x double]]* %phi1, i32 0, i64 %1081
  %1083 = getelementptr inbounds [24 x double]* %1082, i32 0, i64 %1078
  %1084 = load double* %1083, align 8
  %1085 = fadd double %1076, %1084
  %1086 = load i32* %j, align 4
  %1087 = add nsw i32 %1086, 1
  %1088 = sext i32 %1087 to i64
  %1089 = load i32* %k, align 4
  %1090 = add nsw i32 %1089, 1
  %1091 = sext i32 %1090 to i64
  %1092 = getelementptr inbounds [24 x [24 x double]]* %phi1, i32 0, i64 %1091
  %1093 = getelementptr inbounds [24 x double]* %1092, i32 0, i64 %1088
  %1094 = load double* %1093, align 8
  %1095 = fadd double %1085, %1094
  %1096 = load i32* %j, align 4
  %1097 = sext i32 %1096 to i64
  %1098 = load i32* %k, align 4
  %1099 = sext i32 %1098 to i64
  %1100 = getelementptr inbounds [24 x [24 x double]]* %phi2, i32 0, i64 %1099
  %1101 = getelementptr inbounds [24 x double]* %1100, i32 0, i64 %1097
  %1102 = load double* %1101, align 8
  %1103 = fadd double %1095, %1102
  %1104 = load i32* %j, align 4
  %1105 = add nsw i32 %1104, 1
  %1106 = sext i32 %1105 to i64
  %1107 = load i32* %k, align 4
  %1108 = sext i32 %1107 to i64
  %1109 = getelementptr inbounds [24 x [24 x double]]* %phi2, i32 0, i64 %1108
  %1110 = getelementptr inbounds [24 x double]* %1109, i32 0, i64 %1106
  %1111 = load double* %1110, align 8
  %1112 = fadd double %1103, %1111
  %1113 = load i32* %j, align 4
  %1114 = sext i32 %1113 to i64
  %1115 = load i32* %k, align 4
  %1116 = add nsw i32 %1115, 1
  %1117 = sext i32 %1116 to i64
  %1118 = getelementptr inbounds [24 x [24 x double]]* %phi2, i32 0, i64 %1117
  %1119 = getelementptr inbounds [24 x double]* %1118, i32 0, i64 %1114
  %1120 = load double* %1119, align 8
  %1121 = fadd double %1112, %1120
  %1122 = load i32* %j, align 4
  %1123 = add nsw i32 %1122, 1
  %1124 = sext i32 %1123 to i64
  %1125 = load i32* %k, align 4
  %1126 = add nsw i32 %1125, 1
  %1127 = sext i32 %1126 to i64
  %1128 = getelementptr inbounds [24 x [24 x double]]* %phi2, i32 0, i64 %1127
  %1129 = getelementptr inbounds [24 x double]* %1128, i32 0, i64 %1124
  %1130 = load double* %1129, align 8
  %1131 = fadd double %1121, %1130
  %1132 = fadd double %1060, %1131
  store double %1132, double* %frc3, align 8
  br label %1133

; <label>:1133                                    ; preds = %1059
  %1134 = load i32* %j, align 4
  %1135 = add nsw i32 %1134, 1
  store i32 %1135, i32* %j, align 4
  br label %1055

; <label>:1136                                    ; preds = %1055
  br label %1137

; <label>:1137                                    ; preds = %1136
  %1138 = load i32* %k, align 4
  %1139 = add nsw i32 %1138, 1
  store i32 %1139, i32* %k, align 4
  br label %1048

; <label>:1140                                    ; preds = %1048
  %1141 = load double* @deta, align 8
  %1142 = load double* @dzeta, align 8
  %1143 = fmul double %1141, %1142
  %1144 = load double* %frc3, align 8
  %1145 = fmul double %1143, %1144
  store double %1145, double* %frc3, align 8
  %1146 = load double* %frc1, align 8
  %1147 = load double* %frc2, align 8
  %1148 = fadd double %1146, %1147
  %1149 = load double* %frc3, align 8
  %1150 = fadd double %1148, %1149
  %1151 = fmul double 2.500000e-01, %1150
  store double %1151, double* @frc, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @print_results(i8* %name, i8 signext %class, i32 %n1, i32 %n2, i32 %n3, i32 %niter, double %t, double %mops, i8* %optype, i32 %verified, i8* %npbversion, i8* %compiletime, i8* %cs1, i8* %cs2, i8* %cs3, i8* %cs4, i8* %cs5, i8* %cs6, i8* %cs7) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i8, align 1
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %size = alloca [16 x i8], align 16
  %j = alloca i32, align 4
  store i8* %name, i8** %1, align 8
  store i8 %class, i8* %2, align 1
  store i32 %n1, i32* %3, align 4
  store i32 %n2, i32* %4, align 4
  store i32 %n3, i32* %5, align 4
  store i32 %niter, i32* %6, align 4
  store double %t, double* %7, align 8
  store double %mops, double* %8, align 8
  store i8* %optype, i8** %9, align 8
  store i32 %verified, i32* %10, align 4
  store i8* %npbversion, i8** %11, align 8
  store i8* %compiletime, i8** %12, align 8
  store i8* %cs1, i8** %13, align 8
  store i8* %cs2, i8** %14, align 8
  store i8* %cs3, i8** %15, align 8
  store i8* %cs4, i8** %16, align 8
  store i8* %cs5, i8** %17, align 8
  store i8* %cs6, i8** %18, align 8
  store i8* %cs7, i8** %19, align 8
  %20 = load i8** %1, align 8
  %21 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([28 x i8]* @.str148, i32 0, i32 0), i8* %20)
  %22 = load i8* %2, align 1
  %23 = sext i8 %22 to i32
  %24 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str1149, i32 0, i32 0), i32 %23)
  %25 = load i32* %4, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %71

; <label>:27                                      ; preds = %0
  %28 = load i32* %5, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %71

; <label>:30                                      ; preds = %27
  %31 = load i8** %1, align 8
  %32 = getelementptr inbounds i8* %31, i64 0
  %33 = load i8* %32, align 1
  %34 = sext i8 %33 to i32
  %35 = icmp eq i32 %34, 69
  br i1 %35, label %36, label %67

; <label>:36                                      ; preds = %30
  %37 = load i8** %1, align 8
  %38 = getelementptr inbounds i8* %37, i64 1
  %39 = load i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %40, 80
  br i1 %41, label %42, label %67

; <label>:42                                      ; preds = %36
  %43 = getelementptr inbounds [16 x i8]* %size, i32 0, i32 0
  %44 = load i32* %3, align 4
  %45 = sitofp i32 %44 to double
  %46 = call double @pow(double 2.000000e+00, double %45) #6
  %47 = call i32 (i8*, i8*, ...)* @sprintf(i8* %43, i8* getelementptr inbounds ([8 x i8]* @.str2150, i32 0, i32 0), double %46) #6
  store i32 14, i32* %j, align 4
  %48 = load i32* %j, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [16 x i8]* %size, i32 0, i64 %49
  %51 = load i8* %50, align 1
  %52 = sext i8 %51 to i32
  %53 = icmp eq i32 %52, 46
  br i1 %53, label %54, label %60

; <label>:54                                      ; preds = %42
  %55 = load i32* %j, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [16 x i8]* %size, i32 0, i64 %56
  store i8 32, i8* %57, align 1
  %58 = load i32* %j, align 4
  %59 = add nsw i32 %58, -1
  store i32 %59, i32* %j, align 4
  br label %60

; <label>:60                                      ; preds = %54, %42
  %61 = load i32* %j, align 4
  %62 = add nsw i32 %61, 1
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [16 x i8]* %size, i32 0, i64 %63
  store i8 0, i8* %64, align 1
  %65 = getelementptr inbounds [16 x i8]* %size, i32 0, i32 0
  %66 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([34 x i8]* @.str3151, i32 0, i32 0), i8* %65)
  br label %70

; <label>:67                                      ; preds = %36, %30
  %68 = load i32* %3, align 4
  %69 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str4152, i32 0, i32 0), i32 %68)
  br label %70

; <label>:70                                      ; preds = %67, %60
  br label %76

; <label>:71                                      ; preds = %27, %0
  %72 = load i32* %3, align 4
  %73 = load i32* %4, align 4
  %74 = load i32* %5, align 4
  %75 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([42 x i8]* @.str5153, i32 0, i32 0), i32 %72, i32 %73, i32 %74)
  br label %76

; <label>:76                                      ; preds = %71, %70
  %77 = load i32* %6, align 4
  %78 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str6154, i32 0, i32 0), i32 %77)
  %79 = load i8** %9, align 8
  %80 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([25 x i8]* @.str7155, i32 0, i32 0), i8* %79)
  %81 = load i32* %10, align 4
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %83, label %85

; <label>:83                                      ; preds = %76
  %84 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str8156, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str9157, i32 0, i32 0))
  br label %87

; <label>:85                                      ; preds = %76
  %86 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str8156, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str10158, i32 0, i32 0))
  br label %87

; <label>:87                                      ; preds = %85, %83
  %88 = load i8** %11, align 8
  %89 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str11159, i32 0, i32 0), i8* %88)
  %90 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([195 x i8]* @.str12160, i32 0, i32 0))
  ret void
}

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define double @randlc(double* %x, double %a) #0 {
  %1 = alloca double*, align 8
  %2 = alloca double, align 8
  %r23 = alloca double, align 8
  %r46 = alloca double, align 8
  %t23 = alloca double, align 8
  %t46 = alloca double, align 8
  %t1 = alloca double, align 8
  %t2 = alloca double, align 8
  %t3 = alloca double, align 8
  %t4 = alloca double, align 8
  %a1 = alloca double, align 8
  %a2 = alloca double, align 8
  %x1 = alloca double, align 8
  %x2 = alloca double, align 8
  %z = alloca double, align 8
  %r = alloca double, align 8
  store double* %x, double** %1, align 8
  store double %a, double* %2, align 8
  store double 0x3E80000000000000, double* %r23, align 8
  store double 0x3D10000000000000, double* %r46, align 8
  store double 8.388608e+06, double* %t23, align 8
  store double 0x42D0000000000000, double* %t46, align 8
  %3 = load double* %2, align 8
  %4 = fmul double 0x3E80000000000000, %3
  store double %4, double* %t1, align 8
  %5 = load double* %t1, align 8
  %6 = fptosi double %5 to i32
  %7 = sitofp i32 %6 to double
  store double %7, double* %a1, align 8
  %8 = load double* %2, align 8
  %9 = load double* %a1, align 8
  %10 = fmul double 8.388608e+06, %9
  %11 = fsub double %8, %10
  store double %11, double* %a2, align 8
  %12 = load double** %1, align 8
  %13 = load double* %12, align 8
  %14 = fmul double 0x3E80000000000000, %13
  store double %14, double* %t1, align 8
  %15 = load double* %t1, align 8
  %16 = fptosi double %15 to i32
  %17 = sitofp i32 %16 to double
  store double %17, double* %x1, align 8
  %18 = load double** %1, align 8
  %19 = load double* %18, align 8
  %20 = load double* %x1, align 8
  %21 = fmul double 8.388608e+06, %20
  %22 = fsub double %19, %21
  store double %22, double* %x2, align 8
  %23 = load double* %a1, align 8
  %24 = load double* %x2, align 8
  %25 = fmul double %23, %24
  %26 = load double* %a2, align 8
  %27 = load double* %x1, align 8
  %28 = fmul double %26, %27
  %29 = fadd double %25, %28
  store double %29, double* %t1, align 8
  %30 = load double* %t1, align 8
  %31 = fmul double 0x3E80000000000000, %30
  %32 = fptosi double %31 to i32
  %33 = sitofp i32 %32 to double
  store double %33, double* %t2, align 8
  %34 = load double* %t1, align 8
  %35 = load double* %t2, align 8
  %36 = fmul double 8.388608e+06, %35
  %37 = fsub double %34, %36
  store double %37, double* %z, align 8
  %38 = load double* %z, align 8
  %39 = fmul double 8.388608e+06, %38
  %40 = load double* %a2, align 8
  %41 = load double* %x2, align 8
  %42 = fmul double %40, %41
  %43 = fadd double %39, %42
  store double %43, double* %t3, align 8
  %44 = load double* %t3, align 8
  %45 = fmul double 0x3D10000000000000, %44
  %46 = fptosi double %45 to i32
  %47 = sitofp i32 %46 to double
  store double %47, double* %t4, align 8
  %48 = load double* %t3, align 8
  %49 = load double* %t4, align 8
  %50 = fmul double 0x42D0000000000000, %49
  %51 = fsub double %48, %50
  %52 = load double** %1, align 8
  store double %51, double* %52, align 8
  %53 = load double** %1, align 8
  %54 = load double* %53, align 8
  %55 = fmul double 0x3D10000000000000, %54
  store double %55, double* %r, align 8
  %56 = load double* %r, align 8
  ret double %56
}

; Function Attrs: nounwind uwtable
define void @vranlc(i32 %n, double* %x, double %a, double* %y) #0 {
  %1 = alloca i32, align 4
  %2 = alloca double*, align 8
  %3 = alloca double, align 8
  %4 = alloca double*, align 8
  %r23 = alloca double, align 8
  %r46 = alloca double, align 8
  %t23 = alloca double, align 8
  %t46 = alloca double, align 8
  %t1 = alloca double, align 8
  %t2 = alloca double, align 8
  %t3 = alloca double, align 8
  %t4 = alloca double, align 8
  %a1 = alloca double, align 8
  %a2 = alloca double, align 8
  %x1 = alloca double, align 8
  %x2 = alloca double, align 8
  %z = alloca double, align 8
  %i = alloca i32, align 4
  store i32 %n, i32* %1, align 4
  store double* %x, double** %2, align 8
  store double %a, double* %3, align 8
  store double* %y, double** %4, align 8
  store double 0x3E80000000000000, double* %r23, align 8
  store double 0x3D10000000000000, double* %r46, align 8
  store double 8.388608e+06, double* %t23, align 8
  store double 0x42D0000000000000, double* %t46, align 8
  %5 = load double* %3, align 8
  %6 = fmul double 0x3E80000000000000, %5
  store double %6, double* %t1, align 8
  %7 = load double* %t1, align 8
  %8 = fptosi double %7 to i32
  %9 = sitofp i32 %8 to double
  store double %9, double* %a1, align 8
  %10 = load double* %3, align 8
  %11 = load double* %a1, align 8
  %12 = fmul double 8.388608e+06, %11
  %13 = fsub double %10, %12
  store double %13, double* %a2, align 8
  store i32 0, i32* %i, align 4
  br label %14

; <label>:14                                      ; preds = %67, %0
  %15 = load i32* %i, align 4
  %16 = load i32* %1, align 4
  %17 = icmp slt i32 %15, %16
  br i1 %17, label %18, label %70

; <label>:18                                      ; preds = %14
  %19 = load double** %2, align 8
  %20 = load double* %19, align 8
  %21 = fmul double 0x3E80000000000000, %20
  store double %21, double* %t1, align 8
  %22 = load double* %t1, align 8
  %23 = fptosi double %22 to i32
  %24 = sitofp i32 %23 to double
  store double %24, double* %x1, align 8
  %25 = load double** %2, align 8
  %26 = load double* %25, align 8
  %27 = load double* %x1, align 8
  %28 = fmul double 8.388608e+06, %27
  %29 = fsub double %26, %28
  store double %29, double* %x2, align 8
  %30 = load double* %a1, align 8
  %31 = load double* %x2, align 8
  %32 = fmul double %30, %31
  %33 = load double* %a2, align 8
  %34 = load double* %x1, align 8
  %35 = fmul double %33, %34
  %36 = fadd double %32, %35
  store double %36, double* %t1, align 8
  %37 = load double* %t1, align 8
  %38 = fmul double 0x3E80000000000000, %37
  %39 = fptosi double %38 to i32
  %40 = sitofp i32 %39 to double
  store double %40, double* %t2, align 8
  %41 = load double* %t1, align 8
  %42 = load double* %t2, align 8
  %43 = fmul double 8.388608e+06, %42
  %44 = fsub double %41, %43
  store double %44, double* %z, align 8
  %45 = load double* %z, align 8
  %46 = fmul double 8.388608e+06, %45
  %47 = load double* %a2, align 8
  %48 = load double* %x2, align 8
  %49 = fmul double %47, %48
  %50 = fadd double %46, %49
  store double %50, double* %t3, align 8
  %51 = load double* %t3, align 8
  %52 = fmul double 0x3D10000000000000, %51
  %53 = fptosi double %52 to i32
  %54 = sitofp i32 %53 to double
  store double %54, double* %t4, align 8
  %55 = load double* %t3, align 8
  %56 = load double* %t4, align 8
  %57 = fmul double 0x42D0000000000000, %56
  %58 = fsub double %55, %57
  %59 = load double** %2, align 8
  store double %58, double* %59, align 8
  %60 = load double** %2, align 8
  %61 = load double* %60, align 8
  %62 = fmul double 0x3D10000000000000, %61
  %63 = load i32* %i, align 4
  %64 = sext i32 %63 to i64
  %65 = load double** %4, align 8
  %66 = getelementptr inbounds double* %65, i64 %64
  store double %62, double* %66, align 8
  br label %67

; <label>:67                                      ; preds = %18
  %68 = load i32* %i, align 4
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %i, align 4
  br label %14

; <label>:70                                      ; preds = %14
  ret void
}

; Function Attrs: nounwind uwtable
define void @read_input() #0 {
  %fp = alloca %struct._IO_FILE*, align 8
  %result = alloca i32, align 4
  %1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([59 x i8]* @.str163, i32 0, i32 0))
  %2 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([13 x i8]* @.str1164, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str2165, i32 0, i32 0))
  store %struct._IO_FILE* %2, %struct._IO_FILE** %fp, align 8
  %3 = icmp ne %struct._IO_FILE* %2, null
  br i1 %3, label %4, label %116

; <label>:4                                       ; preds = %0
  %5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str3166, i32 0, i32 0))
  br label %6

; <label>:6                                       ; preds = %10, %4
  %7 = load %struct._IO_FILE** %fp, align 8
  %8 = call i32 @fgetc(%struct._IO_FILE* %7)
  %9 = icmp ne i32 %8, 10
  br i1 %9, label %10, label %11

; <label>:10                                      ; preds = %6
  br label %6

; <label>:11                                      ; preds = %6
  br label %12

; <label>:12                                      ; preds = %16, %11
  %13 = load %struct._IO_FILE** %fp, align 8
  %14 = call i32 @fgetc(%struct._IO_FILE* %13)
  %15 = icmp ne i32 %14, 10
  br i1 %15, label %16, label %17

; <label>:16                                      ; preds = %12
  br label %12

; <label>:17                                      ; preds = %12
  %18 = load %struct._IO_FILE** %fp, align 8
  %19 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([5 x i8]* @.str4167, i32 0, i32 0), i32* @ipr, i32* @inorm)
  store i32 %19, i32* %result, align 4
  br label %20

; <label>:20                                      ; preds = %24, %17
  %21 = load %struct._IO_FILE** %fp, align 8
  %22 = call i32 @fgetc(%struct._IO_FILE* %21)
  %23 = icmp ne i32 %22, 10
  br i1 %23, label %24, label %25

; <label>:24                                      ; preds = %20
  br label %20

; <label>:25                                      ; preds = %20
  br label %26

; <label>:26                                      ; preds = %30, %25
  %27 = load %struct._IO_FILE** %fp, align 8
  %28 = call i32 @fgetc(%struct._IO_FILE* %27)
  %29 = icmp ne i32 %28, 10
  br i1 %29, label %30, label %31

; <label>:30                                      ; preds = %26
  br label %26

; <label>:31                                      ; preds = %26
  br label %32

; <label>:32                                      ; preds = %36, %31
  %33 = load %struct._IO_FILE** %fp, align 8
  %34 = call i32 @fgetc(%struct._IO_FILE* %33)
  %35 = icmp ne i32 %34, 10
  br i1 %35, label %36, label %37

; <label>:36                                      ; preds = %32
  br label %32

; <label>:37                                      ; preds = %32
  %38 = load %struct._IO_FILE** %fp, align 8
  %39 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([3 x i8]* @.str5168, i32 0, i32 0), i32* @itmax)
  store i32 %39, i32* %result, align 4
  br label %40

; <label>:40                                      ; preds = %44, %37
  %41 = load %struct._IO_FILE** %fp, align 8
  %42 = call i32 @fgetc(%struct._IO_FILE* %41)
  %43 = icmp ne i32 %42, 10
  br i1 %43, label %44, label %45

; <label>:44                                      ; preds = %40
  br label %40

; <label>:45                                      ; preds = %40
  br label %46

; <label>:46                                      ; preds = %50, %45
  %47 = load %struct._IO_FILE** %fp, align 8
  %48 = call i32 @fgetc(%struct._IO_FILE* %47)
  %49 = icmp ne i32 %48, 10
  br i1 %49, label %50, label %51

; <label>:50                                      ; preds = %46
  br label %46

; <label>:51                                      ; preds = %46
  br label %52

; <label>:52                                      ; preds = %56, %51
  %53 = load %struct._IO_FILE** %fp, align 8
  %54 = call i32 @fgetc(%struct._IO_FILE* %53)
  %55 = icmp ne i32 %54, 10
  br i1 %55, label %56, label %57

; <label>:56                                      ; preds = %52
  br label %52

; <label>:57                                      ; preds = %52
  %58 = load %struct._IO_FILE** %fp, align 8
  %59 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %58, i8* getelementptr inbounds ([4 x i8]* @.str6169, i32 0, i32 0), double* @dt)
  store i32 %59, i32* %result, align 4
  br label %60

; <label>:60                                      ; preds = %64, %57
  %61 = load %struct._IO_FILE** %fp, align 8
  %62 = call i32 @fgetc(%struct._IO_FILE* %61)
  %63 = icmp ne i32 %62, 10
  br i1 %63, label %64, label %65

; <label>:64                                      ; preds = %60
  br label %60

; <label>:65                                      ; preds = %60
  br label %66

; <label>:66                                      ; preds = %70, %65
  %67 = load %struct._IO_FILE** %fp, align 8
  %68 = call i32 @fgetc(%struct._IO_FILE* %67)
  %69 = icmp ne i32 %68, 10
  br i1 %69, label %70, label %71

; <label>:70                                      ; preds = %66
  br label %66

; <label>:71                                      ; preds = %66
  br label %72

; <label>:72                                      ; preds = %76, %71
  %73 = load %struct._IO_FILE** %fp, align 8
  %74 = call i32 @fgetc(%struct._IO_FILE* %73)
  %75 = icmp ne i32 %74, 10
  br i1 %75, label %76, label %77

; <label>:76                                      ; preds = %72
  br label %72

; <label>:77                                      ; preds = %72
  %78 = load %struct._IO_FILE** %fp, align 8
  %79 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %78, i8* getelementptr inbounds ([4 x i8]* @.str6169, i32 0, i32 0), double* @omega)
  store i32 %79, i32* %result, align 4
  br label %80

; <label>:80                                      ; preds = %84, %77
  %81 = load %struct._IO_FILE** %fp, align 8
  %82 = call i32 @fgetc(%struct._IO_FILE* %81)
  %83 = icmp ne i32 %82, 10
  br i1 %83, label %84, label %85

; <label>:84                                      ; preds = %80
  br label %80

; <label>:85                                      ; preds = %80
  br label %86

; <label>:86                                      ; preds = %90, %85
  %87 = load %struct._IO_FILE** %fp, align 8
  %88 = call i32 @fgetc(%struct._IO_FILE* %87)
  %89 = icmp ne i32 %88, 10
  br i1 %89, label %90, label %91

; <label>:90                                      ; preds = %86
  br label %86

; <label>:91                                      ; preds = %86
  br label %92

; <label>:92                                      ; preds = %96, %91
  %93 = load %struct._IO_FILE** %fp, align 8
  %94 = call i32 @fgetc(%struct._IO_FILE* %93)
  %95 = icmp ne i32 %94, 10
  br i1 %95, label %96, label %97

; <label>:96                                      ; preds = %92
  br label %92

; <label>:97                                      ; preds = %92
  %98 = load %struct._IO_FILE** %fp, align 8
  %99 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %98, i8* getelementptr inbounds ([16 x i8]* @.str7170, i32 0, i32 0), double* getelementptr inbounds ([5 x double]* @tolrsd, i32 0, i64 0), double* getelementptr inbounds ([5 x double]* @tolrsd, i32 0, i64 1), double* getelementptr inbounds ([5 x double]* @tolrsd, i32 0, i64 2), double* getelementptr inbounds ([5 x double]* @tolrsd, i32 0, i64 3), double* getelementptr inbounds ([5 x double]* @tolrsd, i32 0, i64 4))
  store i32 %99, i32* %result, align 4
  br label %100

; <label>:100                                     ; preds = %104, %97
  %101 = load %struct._IO_FILE** %fp, align 8
  %102 = call i32 @fgetc(%struct._IO_FILE* %101)
  %103 = icmp ne i32 %102, 10
  br i1 %103, label %104, label %105

; <label>:104                                     ; preds = %100
  br label %100

; <label>:105                                     ; preds = %100
  br label %106

; <label>:106                                     ; preds = %110, %105
  %107 = load %struct._IO_FILE** %fp, align 8
  %108 = call i32 @fgetc(%struct._IO_FILE* %107)
  %109 = icmp ne i32 %108, 10
  br i1 %109, label %110, label %111

; <label>:110                                     ; preds = %106
  br label %106

; <label>:111                                     ; preds = %106
  %112 = load %struct._IO_FILE** %fp, align 8
  %113 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %112, i8* getelementptr inbounds ([7 x i8]* @.str8171, i32 0, i32 0), i32* @nx0, i32* @ny0, i32* @nz0)
  store i32 %113, i32* %result, align 4
  %114 = load %struct._IO_FILE** %fp, align 8
  %115 = call i32 @fclose(%struct._IO_FILE* %114)
  br label %117

; <label>:116                                     ; preds = %0
  store i32 1, i32* @ipr, align 4
  store i32 300, i32* @inorm, align 4
  store i32 300, i32* @itmax, align 4
  store double 1.500000e-03, double* @dt, align 8
  store double 1.200000e+00, double* @omega, align 8
  store double 1.000000e-08, double* getelementptr inbounds ([5 x double]* @tolrsd, i32 0, i64 0), align 8
  store double 1.000000e-08, double* getelementptr inbounds ([5 x double]* @tolrsd, i32 0, i64 1), align 8
  store double 1.000000e-08, double* getelementptr inbounds ([5 x double]* @tolrsd, i32 0, i64 2), align 8
  store double 1.000000e-08, double* getelementptr inbounds ([5 x double]* @tolrsd, i32 0, i64 3), align 8
  store double 1.000000e-08, double* getelementptr inbounds ([5 x double]* @tolrsd, i32 0, i64 4), align 8
  store i32 22, i32* @nx0, align 4
  store i32 22, i32* @ny0, align 4
  store i32 22, i32* @nz0, align 4
  br label %117

; <label>:117                                     ; preds = %116, %111
  %118 = load i32* @nx0, align 4
  %119 = icmp slt i32 %118, 4
  br i1 %119, label %126, label %120

; <label>:120                                     ; preds = %117
  %121 = load i32* @ny0, align 4
  %122 = icmp slt i32 %121, 4
  br i1 %122, label %126, label %123

; <label>:123                                     ; preds = %120
  %124 = load i32* @nz0, align 4
  %125 = icmp slt i32 %124, 4
  br i1 %125, label %126, label %128

; <label>:126                                     ; preds = %123, %120, %117
  %127 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([86 x i8]* @.str9172, i32 0, i32 0))
  call void @exit(i32 1) #5
  unreachable

; <label>:128                                     ; preds = %123
  %129 = load i32* @nx0, align 4
  %130 = icmp sgt i32 %129, 22
  br i1 %130, label %137, label %131

; <label>:131                                     ; preds = %128
  %132 = load i32* @ny0, align 4
  %133 = icmp sgt i32 %132, 22
  br i1 %133, label %137, label %134

; <label>:134                                     ; preds = %131
  %135 = load i32* @nz0, align 4
  %136 = icmp sgt i32 %135, 22
  br i1 %136, label %137, label %139

; <label>:137                                     ; preds = %134, %131, %128
  %138 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([115 x i8]* @.str10173, i32 0, i32 0))
  call void @exit(i32 1) #5
  unreachable

; <label>:139                                     ; preds = %134
  %140 = load i32* @nx0, align 4
  %141 = load i32* @ny0, align 4
  %142 = load i32* @nz0, align 4
  %143 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([20 x i8]* @.str11174, i32 0, i32 0), i32 %140, i32 %141, i32 %142)
  %144 = load i32* @itmax, align 4
  %145 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([18 x i8]* @.str12175, i32 0, i32 0), i32 %144)
  %146 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str13176, i32 0, i32 0))
  ret void
}

declare i32 @fgetc(%struct._IO_FILE*) #1

declare i32 @__isoc99_fscanf(%struct._IO_FILE*, i8*, ...) #1

; Function Attrs: nounwind uwtable
define void @rhs() #0 {
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %m = alloca i32, align 4
  %q = alloca double, align 8
  %tmp = alloca double, align 8
  %utmp = alloca [22 x [6 x double]], align 16
  %rtmp = alloca [22 x [5 x double]], align 16
  %u21 = alloca double, align 8
  %u31 = alloca double, align 8
  %u41 = alloca double, align 8
  %u21i = alloca double, align 8
  %u31i = alloca double, align 8
  %u41i = alloca double, align 8
  %u51i = alloca double, align 8
  %u21j = alloca double, align 8
  %u31j = alloca double, align 8
  %u41j = alloca double, align 8
  %u51j = alloca double, align 8
  %u21k = alloca double, align 8
  %u31k = alloca double, align 8
  %u41k = alloca double, align 8
  %u51k = alloca double, align 8
  %u21im1 = alloca double, align 8
  %u31im1 = alloca double, align 8
  %u41im1 = alloca double, align 8
  %u51im1 = alloca double, align 8
  %u21jm1 = alloca double, align 8
  %u31jm1 = alloca double, align 8
  %u41jm1 = alloca double, align 8
  %u51jm1 = alloca double, align 8
  %u21km1 = alloca double, align 8
  %u31km1 = alloca double, align 8
  %u41km1 = alloca double, align 8
  %u51km1 = alloca double, align 8
  %1 = load i32* @timeron, align 4
  %2 = icmp ne i32 %1, 0
  br i1 %2, label %3, label %4

; <label>:3                                       ; preds = %0
  call void @timer_start(i32 5)
  br label %4

; <label>:4                                       ; preds = %3, %0
  store i32 0, i32* %k, align 4
  br label %5

; <label>:5                                       ; preds = %167, %4
  %6 = load i32* %k, align 4
  %7 = load i32* @nz, align 4
  %8 = icmp slt i32 %6, %7
  br i1 %8, label %9, label %170

; <label>:9                                       ; preds = %5
  store i32 0, i32* %j, align 4
  br label %10

; <label>:10                                      ; preds = %163, %9
  %11 = load i32* %j, align 4
  %12 = load i32* @ny, align 4
  %13 = icmp slt i32 %11, %12
  br i1 %13, label %14, label %166

; <label>:14                                      ; preds = %10
  store i32 0, i32* %i, align 4
  br label %15

; <label>:15                                      ; preds = %159, %14
  %16 = load i32* %i, align 4
  %17 = load i32* @nx, align 4
  %18 = icmp slt i32 %16, %17
  br i1 %18, label %19, label %162

; <label>:19                                      ; preds = %15
  store i32 0, i32* %m, align 4
  br label %20

; <label>:20                                      ; preds = %50, %19
  %21 = load i32* %m, align 4
  %22 = icmp slt i32 %21, 5
  br i1 %22, label %23, label %53

; <label>:23                                      ; preds = %20
  %24 = load i32* %m, align 4
  %25 = sext i32 %24 to i64
  %26 = load i32* %i, align 4
  %27 = sext i32 %26 to i64
  %28 = load i32* %j, align 4
  %29 = sext i32 %28 to i64
  %30 = load i32* %k, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @frct, i32 0, i64 %31
  %33 = getelementptr inbounds [23 x [23 x [5 x double]]]* %32, i32 0, i64 %29
  %34 = getelementptr inbounds [23 x [5 x double]]* %33, i32 0, i64 %27
  %35 = getelementptr inbounds [5 x double]* %34, i32 0, i64 %25
  %36 = load double* %35, align 8
  %37 = fsub double -0.000000e+00, %36
  %38 = load i32* %m, align 4
  %39 = sext i32 %38 to i64
  %40 = load i32* %i, align 4
  %41 = sext i32 %40 to i64
  %42 = load i32* %j, align 4
  %43 = sext i32 %42 to i64
  %44 = load i32* %k, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %45
  %47 = getelementptr inbounds [23 x [23 x [5 x double]]]* %46, i32 0, i64 %43
  %48 = getelementptr inbounds [23 x [5 x double]]* %47, i32 0, i64 %41
  %49 = getelementptr inbounds [5 x double]* %48, i32 0, i64 %39
  store double %37, double* %49, align 8
  br label %50

; <label>:50                                      ; preds = %23
  %51 = load i32* %m, align 4
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %m, align 4
  br label %20

; <label>:53                                      ; preds = %20
  %54 = load i32* %i, align 4
  %55 = sext i32 %54 to i64
  %56 = load i32* %j, align 4
  %57 = sext i32 %56 to i64
  %58 = load i32* %k, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %59
  %61 = getelementptr inbounds [23 x [23 x [5 x double]]]* %60, i32 0, i64 %57
  %62 = getelementptr inbounds [23 x [5 x double]]* %61, i32 0, i64 %55
  %63 = getelementptr inbounds [5 x double]* %62, i32 0, i64 0
  %64 = load double* %63, align 8
  %65 = fdiv double 1.000000e+00, %64
  store double %65, double* %tmp, align 8
  %66 = load double* %tmp, align 8
  %67 = load i32* %i, align 4
  %68 = sext i32 %67 to i64
  %69 = load i32* %j, align 4
  %70 = sext i32 %69 to i64
  %71 = load i32* %k, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds [22 x [23 x [23 x double]]]* @rho_i, i32 0, i64 %72
  %74 = getelementptr inbounds [23 x [23 x double]]* %73, i32 0, i64 %70
  %75 = getelementptr inbounds [23 x double]* %74, i32 0, i64 %68
  store double %66, double* %75, align 8
  %76 = load i32* %i, align 4
  %77 = sext i32 %76 to i64
  %78 = load i32* %j, align 4
  %79 = sext i32 %78 to i64
  %80 = load i32* %k, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %81
  %83 = getelementptr inbounds [23 x [23 x [5 x double]]]* %82, i32 0, i64 %79
  %84 = getelementptr inbounds [23 x [5 x double]]* %83, i32 0, i64 %77
  %85 = getelementptr inbounds [5 x double]* %84, i32 0, i64 1
  %86 = load double* %85, align 8
  %87 = load i32* %i, align 4
  %88 = sext i32 %87 to i64
  %89 = load i32* %j, align 4
  %90 = sext i32 %89 to i64
  %91 = load i32* %k, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %92
  %94 = getelementptr inbounds [23 x [23 x [5 x double]]]* %93, i32 0, i64 %90
  %95 = getelementptr inbounds [23 x [5 x double]]* %94, i32 0, i64 %88
  %96 = getelementptr inbounds [5 x double]* %95, i32 0, i64 1
  %97 = load double* %96, align 8
  %98 = fmul double %86, %97
  %99 = load i32* %i, align 4
  %100 = sext i32 %99 to i64
  %101 = load i32* %j, align 4
  %102 = sext i32 %101 to i64
  %103 = load i32* %k, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %104
  %106 = getelementptr inbounds [23 x [23 x [5 x double]]]* %105, i32 0, i64 %102
  %107 = getelementptr inbounds [23 x [5 x double]]* %106, i32 0, i64 %100
  %108 = getelementptr inbounds [5 x double]* %107, i32 0, i64 2
  %109 = load double* %108, align 8
  %110 = load i32* %i, align 4
  %111 = sext i32 %110 to i64
  %112 = load i32* %j, align 4
  %113 = sext i32 %112 to i64
  %114 = load i32* %k, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %115
  %117 = getelementptr inbounds [23 x [23 x [5 x double]]]* %116, i32 0, i64 %113
  %118 = getelementptr inbounds [23 x [5 x double]]* %117, i32 0, i64 %111
  %119 = getelementptr inbounds [5 x double]* %118, i32 0, i64 2
  %120 = load double* %119, align 8
  %121 = fmul double %109, %120
  %122 = fadd double %98, %121
  %123 = load i32* %i, align 4
  %124 = sext i32 %123 to i64
  %125 = load i32* %j, align 4
  %126 = sext i32 %125 to i64
  %127 = load i32* %k, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %128
  %130 = getelementptr inbounds [23 x [23 x [5 x double]]]* %129, i32 0, i64 %126
  %131 = getelementptr inbounds [23 x [5 x double]]* %130, i32 0, i64 %124
  %132 = getelementptr inbounds [5 x double]* %131, i32 0, i64 3
  %133 = load double* %132, align 8
  %134 = load i32* %i, align 4
  %135 = sext i32 %134 to i64
  %136 = load i32* %j, align 4
  %137 = sext i32 %136 to i64
  %138 = load i32* %k, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %139
  %141 = getelementptr inbounds [23 x [23 x [5 x double]]]* %140, i32 0, i64 %137
  %142 = getelementptr inbounds [23 x [5 x double]]* %141, i32 0, i64 %135
  %143 = getelementptr inbounds [5 x double]* %142, i32 0, i64 3
  %144 = load double* %143, align 8
  %145 = fmul double %133, %144
  %146 = fadd double %122, %145
  %147 = fmul double 5.000000e-01, %146
  %148 = load double* %tmp, align 8
  %149 = fmul double %147, %148
  %150 = load i32* %i, align 4
  %151 = sext i32 %150 to i64
  %152 = load i32* %j, align 4
  %153 = sext i32 %152 to i64
  %154 = load i32* %k, align 4
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds [22 x [23 x [23 x double]]]* @qs, i32 0, i64 %155
  %157 = getelementptr inbounds [23 x [23 x double]]* %156, i32 0, i64 %153
  %158 = getelementptr inbounds [23 x double]* %157, i32 0, i64 %151
  store double %149, double* %158, align 8
  br label %159

; <label>:159                                     ; preds = %53
  %160 = load i32* %i, align 4
  %161 = add nsw i32 %160, 1
  store i32 %161, i32* %i, align 4
  br label %15

; <label>:162                                     ; preds = %15
  br label %163

; <label>:163                                     ; preds = %162
  %164 = load i32* %j, align 4
  %165 = add nsw i32 %164, 1
  store i32 %165, i32* %j, align 4
  br label %10

; <label>:166                                     ; preds = %10
  br label %167

; <label>:167                                     ; preds = %166
  %168 = load i32* %k, align 4
  %169 = add nsw i32 %168, 1
  store i32 %169, i32* %k, align 4
  br label %5

; <label>:170                                     ; preds = %5
  %171 = load i32* @timeron, align 4
  %172 = icmp ne i32 %171, 0
  br i1 %172, label %173, label %174

; <label>:173                                     ; preds = %170
  call void @timer_start(i32 2)
  br label %174

; <label>:174                                     ; preds = %173, %170
  store i32 1, i32* %k, align 4
  br label %175

; <label>:175                                     ; preds = %1451, %174
  %176 = load i32* %k, align 4
  %177 = load i32* @nz, align 4
  %178 = sub nsw i32 %177, 1
  %179 = icmp slt i32 %176, %178
  br i1 %179, label %180, label %1454

; <label>:180                                     ; preds = %175
  %181 = load i32* @jst, align 4
  store i32 %181, i32* %j, align 4
  br label %182

; <label>:182                                     ; preds = %1447, %180
  %183 = load i32* %j, align 4
  %184 = load i32* @jend, align 4
  %185 = icmp slt i32 %183, %184
  br i1 %185, label %186, label %1450

; <label>:186                                     ; preds = %182
  store i32 0, i32* %i, align 4
  br label %187

; <label>:187                                     ; preds = %326, %186
  %188 = load i32* %i, align 4
  %189 = load i32* @nx, align 4
  %190 = icmp slt i32 %188, %189
  br i1 %190, label %191, label %329

; <label>:191                                     ; preds = %187
  %192 = load i32* %i, align 4
  %193 = sext i32 %192 to i64
  %194 = load i32* %j, align 4
  %195 = sext i32 %194 to i64
  %196 = load i32* %k, align 4
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %197
  %199 = getelementptr inbounds [23 x [23 x [5 x double]]]* %198, i32 0, i64 %195
  %200 = getelementptr inbounds [23 x [5 x double]]* %199, i32 0, i64 %193
  %201 = getelementptr inbounds [5 x double]* %200, i32 0, i64 1
  %202 = load double* %201, align 8
  %203 = load i32* %i, align 4
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %204
  %206 = getelementptr inbounds [5 x double]* %205, i32 0, i64 0
  store double %202, double* %206, align 8
  %207 = load i32* %i, align 4
  %208 = sext i32 %207 to i64
  %209 = load i32* %j, align 4
  %210 = sext i32 %209 to i64
  %211 = load i32* %k, align 4
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %212
  %214 = getelementptr inbounds [23 x [23 x [5 x double]]]* %213, i32 0, i64 %210
  %215 = getelementptr inbounds [23 x [5 x double]]* %214, i32 0, i64 %208
  %216 = getelementptr inbounds [5 x double]* %215, i32 0, i64 1
  %217 = load double* %216, align 8
  %218 = load i32* %i, align 4
  %219 = sext i32 %218 to i64
  %220 = load i32* %j, align 4
  %221 = sext i32 %220 to i64
  %222 = load i32* %k, align 4
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds [22 x [23 x [23 x double]]]* @rho_i, i32 0, i64 %223
  %225 = getelementptr inbounds [23 x [23 x double]]* %224, i32 0, i64 %221
  %226 = getelementptr inbounds [23 x double]* %225, i32 0, i64 %219
  %227 = load double* %226, align 8
  %228 = fmul double %217, %227
  store double %228, double* %u21, align 8
  %229 = load i32* %i, align 4
  %230 = sext i32 %229 to i64
  %231 = load i32* %j, align 4
  %232 = sext i32 %231 to i64
  %233 = load i32* %k, align 4
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds [22 x [23 x [23 x double]]]* @qs, i32 0, i64 %234
  %236 = getelementptr inbounds [23 x [23 x double]]* %235, i32 0, i64 %232
  %237 = getelementptr inbounds [23 x double]* %236, i32 0, i64 %230
  %238 = load double* %237, align 8
  store double %238, double* %q, align 8
  %239 = load i32* %i, align 4
  %240 = sext i32 %239 to i64
  %241 = load i32* %j, align 4
  %242 = sext i32 %241 to i64
  %243 = load i32* %k, align 4
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %244
  %246 = getelementptr inbounds [23 x [23 x [5 x double]]]* %245, i32 0, i64 %242
  %247 = getelementptr inbounds [23 x [5 x double]]* %246, i32 0, i64 %240
  %248 = getelementptr inbounds [5 x double]* %247, i32 0, i64 1
  %249 = load double* %248, align 8
  %250 = load double* %u21, align 8
  %251 = fmul double %249, %250
  %252 = load i32* %i, align 4
  %253 = sext i32 %252 to i64
  %254 = load i32* %j, align 4
  %255 = sext i32 %254 to i64
  %256 = load i32* %k, align 4
  %257 = sext i32 %256 to i64
  %258 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %257
  %259 = getelementptr inbounds [23 x [23 x [5 x double]]]* %258, i32 0, i64 %255
  %260 = getelementptr inbounds [23 x [5 x double]]* %259, i32 0, i64 %253
  %261 = getelementptr inbounds [5 x double]* %260, i32 0, i64 4
  %262 = load double* %261, align 8
  %263 = load double* %q, align 8
  %264 = fsub double %262, %263
  %265 = fmul double 4.000000e-01, %264
  %266 = fadd double %251, %265
  %267 = load i32* %i, align 4
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %268
  %270 = getelementptr inbounds [5 x double]* %269, i32 0, i64 1
  store double %266, double* %270, align 8
  %271 = load i32* %i, align 4
  %272 = sext i32 %271 to i64
  %273 = load i32* %j, align 4
  %274 = sext i32 %273 to i64
  %275 = load i32* %k, align 4
  %276 = sext i32 %275 to i64
  %277 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %276
  %278 = getelementptr inbounds [23 x [23 x [5 x double]]]* %277, i32 0, i64 %274
  %279 = getelementptr inbounds [23 x [5 x double]]* %278, i32 0, i64 %272
  %280 = getelementptr inbounds [5 x double]* %279, i32 0, i64 2
  %281 = load double* %280, align 8
  %282 = load double* %u21, align 8
  %283 = fmul double %281, %282
  %284 = load i32* %i, align 4
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %285
  %287 = getelementptr inbounds [5 x double]* %286, i32 0, i64 2
  store double %283, double* %287, align 8
  %288 = load i32* %i, align 4
  %289 = sext i32 %288 to i64
  %290 = load i32* %j, align 4
  %291 = sext i32 %290 to i64
  %292 = load i32* %k, align 4
  %293 = sext i32 %292 to i64
  %294 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %293
  %295 = getelementptr inbounds [23 x [23 x [5 x double]]]* %294, i32 0, i64 %291
  %296 = getelementptr inbounds [23 x [5 x double]]* %295, i32 0, i64 %289
  %297 = getelementptr inbounds [5 x double]* %296, i32 0, i64 3
  %298 = load double* %297, align 8
  %299 = load double* %u21, align 8
  %300 = fmul double %298, %299
  %301 = load i32* %i, align 4
  %302 = sext i32 %301 to i64
  %303 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %302
  %304 = getelementptr inbounds [5 x double]* %303, i32 0, i64 3
  store double %300, double* %304, align 8
  %305 = load i32* %i, align 4
  %306 = sext i32 %305 to i64
  %307 = load i32* %j, align 4
  %308 = sext i32 %307 to i64
  %309 = load i32* %k, align 4
  %310 = sext i32 %309 to i64
  %311 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %310
  %312 = getelementptr inbounds [23 x [23 x [5 x double]]]* %311, i32 0, i64 %308
  %313 = getelementptr inbounds [23 x [5 x double]]* %312, i32 0, i64 %306
  %314 = getelementptr inbounds [5 x double]* %313, i32 0, i64 4
  %315 = load double* %314, align 8
  %316 = fmul double 1.400000e+00, %315
  %317 = load double* %q, align 8
  %318 = fmul double 4.000000e-01, %317
  %319 = fsub double %316, %318
  %320 = load double* %u21, align 8
  %321 = fmul double %319, %320
  %322 = load i32* %i, align 4
  %323 = sext i32 %322 to i64
  %324 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %323
  %325 = getelementptr inbounds [5 x double]* %324, i32 0, i64 4
  store double %321, double* %325, align 8
  br label %326

; <label>:326                                     ; preds = %191
  %327 = load i32* %i, align 4
  %328 = add nsw i32 %327, 1
  store i32 %328, i32* %i, align 4
  br label %187

; <label>:329                                     ; preds = %187
  %330 = load i32* @ist, align 4
  store i32 %330, i32* %i, align 4
  br label %331

; <label>:331                                     ; preds = %389, %329
  %332 = load i32* %i, align 4
  %333 = load i32* @iend, align 4
  %334 = icmp slt i32 %332, %333
  br i1 %334, label %335, label %392

; <label>:335                                     ; preds = %331
  store i32 0, i32* %m, align 4
  br label %336

; <label>:336                                     ; preds = %385, %335
  %337 = load i32* %m, align 4
  %338 = icmp slt i32 %337, 5
  br i1 %338, label %339, label %388

; <label>:339                                     ; preds = %336
  %340 = load i32* %m, align 4
  %341 = sext i32 %340 to i64
  %342 = load i32* %i, align 4
  %343 = sext i32 %342 to i64
  %344 = load i32* %j, align 4
  %345 = sext i32 %344 to i64
  %346 = load i32* %k, align 4
  %347 = sext i32 %346 to i64
  %348 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %347
  %349 = getelementptr inbounds [23 x [23 x [5 x double]]]* %348, i32 0, i64 %345
  %350 = getelementptr inbounds [23 x [5 x double]]* %349, i32 0, i64 %343
  %351 = getelementptr inbounds [5 x double]* %350, i32 0, i64 %341
  %352 = load double* %351, align 8
  %353 = load double* @tx2, align 8
  %354 = load i32* %m, align 4
  %355 = sext i32 %354 to i64
  %356 = load i32* %i, align 4
  %357 = add nsw i32 %356, 1
  %358 = sext i32 %357 to i64
  %359 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %358
  %360 = getelementptr inbounds [5 x double]* %359, i32 0, i64 %355
  %361 = load double* %360, align 8
  %362 = load i32* %m, align 4
  %363 = sext i32 %362 to i64
  %364 = load i32* %i, align 4
  %365 = sub nsw i32 %364, 1
  %366 = sext i32 %365 to i64
  %367 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %366
  %368 = getelementptr inbounds [5 x double]* %367, i32 0, i64 %363
  %369 = load double* %368, align 8
  %370 = fsub double %361, %369
  %371 = fmul double %353, %370
  %372 = fsub double %352, %371
  %373 = load i32* %m, align 4
  %374 = sext i32 %373 to i64
  %375 = load i32* %i, align 4
  %376 = sext i32 %375 to i64
  %377 = load i32* %j, align 4
  %378 = sext i32 %377 to i64
  %379 = load i32* %k, align 4
  %380 = sext i32 %379 to i64
  %381 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %380
  %382 = getelementptr inbounds [23 x [23 x [5 x double]]]* %381, i32 0, i64 %378
  %383 = getelementptr inbounds [23 x [5 x double]]* %382, i32 0, i64 %376
  %384 = getelementptr inbounds [5 x double]* %383, i32 0, i64 %374
  store double %372, double* %384, align 8
  br label %385

; <label>:385                                     ; preds = %339
  %386 = load i32* %m, align 4
  %387 = add nsw i32 %386, 1
  store i32 %387, i32* %m, align 4
  br label %336

; <label>:388                                     ; preds = %336
  br label %389

; <label>:389                                     ; preds = %388
  %390 = load i32* %i, align 4
  %391 = add nsw i32 %390, 1
  store i32 %391, i32* %i, align 4
  br label %331

; <label>:392                                     ; preds = %331
  %393 = load i32* @ist, align 4
  store i32 %393, i32* %i, align 4
  br label %394

; <label>:394                                     ; preds = %604, %392
  %395 = load i32* %i, align 4
  %396 = load i32* @nx, align 4
  %397 = icmp slt i32 %395, %396
  br i1 %397, label %398, label %607

; <label>:398                                     ; preds = %394
  %399 = load i32* %i, align 4
  %400 = sext i32 %399 to i64
  %401 = load i32* %j, align 4
  %402 = sext i32 %401 to i64
  %403 = load i32* %k, align 4
  %404 = sext i32 %403 to i64
  %405 = getelementptr inbounds [22 x [23 x [23 x double]]]* @rho_i, i32 0, i64 %404
  %406 = getelementptr inbounds [23 x [23 x double]]* %405, i32 0, i64 %402
  %407 = getelementptr inbounds [23 x double]* %406, i32 0, i64 %400
  %408 = load double* %407, align 8
  store double %408, double* %tmp, align 8
  %409 = load double* %tmp, align 8
  %410 = load i32* %i, align 4
  %411 = sext i32 %410 to i64
  %412 = load i32* %j, align 4
  %413 = sext i32 %412 to i64
  %414 = load i32* %k, align 4
  %415 = sext i32 %414 to i64
  %416 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %415
  %417 = getelementptr inbounds [23 x [23 x [5 x double]]]* %416, i32 0, i64 %413
  %418 = getelementptr inbounds [23 x [5 x double]]* %417, i32 0, i64 %411
  %419 = getelementptr inbounds [5 x double]* %418, i32 0, i64 1
  %420 = load double* %419, align 8
  %421 = fmul double %409, %420
  store double %421, double* %u21i, align 8
  %422 = load double* %tmp, align 8
  %423 = load i32* %i, align 4
  %424 = sext i32 %423 to i64
  %425 = load i32* %j, align 4
  %426 = sext i32 %425 to i64
  %427 = load i32* %k, align 4
  %428 = sext i32 %427 to i64
  %429 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %428
  %430 = getelementptr inbounds [23 x [23 x [5 x double]]]* %429, i32 0, i64 %426
  %431 = getelementptr inbounds [23 x [5 x double]]* %430, i32 0, i64 %424
  %432 = getelementptr inbounds [5 x double]* %431, i32 0, i64 2
  %433 = load double* %432, align 8
  %434 = fmul double %422, %433
  store double %434, double* %u31i, align 8
  %435 = load double* %tmp, align 8
  %436 = load i32* %i, align 4
  %437 = sext i32 %436 to i64
  %438 = load i32* %j, align 4
  %439 = sext i32 %438 to i64
  %440 = load i32* %k, align 4
  %441 = sext i32 %440 to i64
  %442 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %441
  %443 = getelementptr inbounds [23 x [23 x [5 x double]]]* %442, i32 0, i64 %439
  %444 = getelementptr inbounds [23 x [5 x double]]* %443, i32 0, i64 %437
  %445 = getelementptr inbounds [5 x double]* %444, i32 0, i64 3
  %446 = load double* %445, align 8
  %447 = fmul double %435, %446
  store double %447, double* %u41i, align 8
  %448 = load double* %tmp, align 8
  %449 = load i32* %i, align 4
  %450 = sext i32 %449 to i64
  %451 = load i32* %j, align 4
  %452 = sext i32 %451 to i64
  %453 = load i32* %k, align 4
  %454 = sext i32 %453 to i64
  %455 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %454
  %456 = getelementptr inbounds [23 x [23 x [5 x double]]]* %455, i32 0, i64 %452
  %457 = getelementptr inbounds [23 x [5 x double]]* %456, i32 0, i64 %450
  %458 = getelementptr inbounds [5 x double]* %457, i32 0, i64 4
  %459 = load double* %458, align 8
  %460 = fmul double %448, %459
  store double %460, double* %u51i, align 8
  %461 = load i32* %i, align 4
  %462 = sub nsw i32 %461, 1
  %463 = sext i32 %462 to i64
  %464 = load i32* %j, align 4
  %465 = sext i32 %464 to i64
  %466 = load i32* %k, align 4
  %467 = sext i32 %466 to i64
  %468 = getelementptr inbounds [22 x [23 x [23 x double]]]* @rho_i, i32 0, i64 %467
  %469 = getelementptr inbounds [23 x [23 x double]]* %468, i32 0, i64 %465
  %470 = getelementptr inbounds [23 x double]* %469, i32 0, i64 %463
  %471 = load double* %470, align 8
  store double %471, double* %tmp, align 8
  %472 = load double* %tmp, align 8
  %473 = load i32* %i, align 4
  %474 = sub nsw i32 %473, 1
  %475 = sext i32 %474 to i64
  %476 = load i32* %j, align 4
  %477 = sext i32 %476 to i64
  %478 = load i32* %k, align 4
  %479 = sext i32 %478 to i64
  %480 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %479
  %481 = getelementptr inbounds [23 x [23 x [5 x double]]]* %480, i32 0, i64 %477
  %482 = getelementptr inbounds [23 x [5 x double]]* %481, i32 0, i64 %475
  %483 = getelementptr inbounds [5 x double]* %482, i32 0, i64 1
  %484 = load double* %483, align 8
  %485 = fmul double %472, %484
  store double %485, double* %u21im1, align 8
  %486 = load double* %tmp, align 8
  %487 = load i32* %i, align 4
  %488 = sub nsw i32 %487, 1
  %489 = sext i32 %488 to i64
  %490 = load i32* %j, align 4
  %491 = sext i32 %490 to i64
  %492 = load i32* %k, align 4
  %493 = sext i32 %492 to i64
  %494 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %493
  %495 = getelementptr inbounds [23 x [23 x [5 x double]]]* %494, i32 0, i64 %491
  %496 = getelementptr inbounds [23 x [5 x double]]* %495, i32 0, i64 %489
  %497 = getelementptr inbounds [5 x double]* %496, i32 0, i64 2
  %498 = load double* %497, align 8
  %499 = fmul double %486, %498
  store double %499, double* %u31im1, align 8
  %500 = load double* %tmp, align 8
  %501 = load i32* %i, align 4
  %502 = sub nsw i32 %501, 1
  %503 = sext i32 %502 to i64
  %504 = load i32* %j, align 4
  %505 = sext i32 %504 to i64
  %506 = load i32* %k, align 4
  %507 = sext i32 %506 to i64
  %508 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %507
  %509 = getelementptr inbounds [23 x [23 x [5 x double]]]* %508, i32 0, i64 %505
  %510 = getelementptr inbounds [23 x [5 x double]]* %509, i32 0, i64 %503
  %511 = getelementptr inbounds [5 x double]* %510, i32 0, i64 3
  %512 = load double* %511, align 8
  %513 = fmul double %500, %512
  store double %513, double* %u41im1, align 8
  %514 = load double* %tmp, align 8
  %515 = load i32* %i, align 4
  %516 = sub nsw i32 %515, 1
  %517 = sext i32 %516 to i64
  %518 = load i32* %j, align 4
  %519 = sext i32 %518 to i64
  %520 = load i32* %k, align 4
  %521 = sext i32 %520 to i64
  %522 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %521
  %523 = getelementptr inbounds [23 x [23 x [5 x double]]]* %522, i32 0, i64 %519
  %524 = getelementptr inbounds [23 x [5 x double]]* %523, i32 0, i64 %517
  %525 = getelementptr inbounds [5 x double]* %524, i32 0, i64 4
  %526 = load double* %525, align 8
  %527 = fmul double %514, %526
  store double %527, double* %u51im1, align 8
  %528 = load double* @tx3, align 8
  %529 = fmul double 0x3FF5555555555555, %528
  %530 = load double* %u21i, align 8
  %531 = load double* %u21im1, align 8
  %532 = fsub double %530, %531
  %533 = fmul double %529, %532
  %534 = load i32* %i, align 4
  %535 = sext i32 %534 to i64
  %536 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %535
  %537 = getelementptr inbounds [5 x double]* %536, i32 0, i64 1
  store double %533, double* %537, align 8
  %538 = load double* @tx3, align 8
  %539 = load double* %u31i, align 8
  %540 = load double* %u31im1, align 8
  %541 = fsub double %539, %540
  %542 = fmul double %538, %541
  %543 = load i32* %i, align 4
  %544 = sext i32 %543 to i64
  %545 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %544
  %546 = getelementptr inbounds [5 x double]* %545, i32 0, i64 2
  store double %542, double* %546, align 8
  %547 = load double* @tx3, align 8
  %548 = load double* %u41i, align 8
  %549 = load double* %u41im1, align 8
  %550 = fsub double %548, %549
  %551 = fmul double %547, %550
  %552 = load i32* %i, align 4
  %553 = sext i32 %552 to i64
  %554 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %553
  %555 = getelementptr inbounds [5 x double]* %554, i32 0, i64 3
  store double %551, double* %555, align 8
  %556 = load double* @tx3, align 8
  %557 = fmul double 0xBFDEB851EB851EB6, %556
  %558 = load double* %u21i, align 8
  %559 = load double* %u21i, align 8
  %560 = fmul double %558, %559
  %561 = load double* %u31i, align 8
  %562 = load double* %u31i, align 8
  %563 = fmul double %561, %562
  %564 = fadd double %560, %563
  %565 = load double* %u41i, align 8
  %566 = load double* %u41i, align 8
  %567 = fmul double %565, %566
  %568 = fadd double %564, %567
  %569 = load double* %u21im1, align 8
  %570 = load double* %u21im1, align 8
  %571 = fmul double %569, %570
  %572 = load double* %u31im1, align 8
  %573 = load double* %u31im1, align 8
  %574 = fmul double %572, %573
  %575 = fadd double %571, %574
  %576 = load double* %u41im1, align 8
  %577 = load double* %u41im1, align 8
  %578 = fmul double %576, %577
  %579 = fadd double %575, %578
  %580 = fsub double %568, %579
  %581 = fmul double %557, %580
  %582 = load double* @tx3, align 8
  %583 = fmul double 0x3FC5555555555555, %582
  %584 = load double* %u21i, align 8
  %585 = load double* %u21i, align 8
  %586 = fmul double %584, %585
  %587 = load double* %u21im1, align 8
  %588 = load double* %u21im1, align 8
  %589 = fmul double %587, %588
  %590 = fsub double %586, %589
  %591 = fmul double %583, %590
  %592 = fadd double %581, %591
  %593 = load double* @tx3, align 8
  %594 = fmul double 0x3FFF5C28F5C28F5B, %593
  %595 = load double* %u51i, align 8
  %596 = load double* %u51im1, align 8
  %597 = fsub double %595, %596
  %598 = fmul double %594, %597
  %599 = fadd double %592, %598
  %600 = load i32* %i, align 4
  %601 = sext i32 %600 to i64
  %602 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %601
  %603 = getelementptr inbounds [5 x double]* %602, i32 0, i64 4
  store double %599, double* %603, align 8
  br label %604

; <label>:604                                     ; preds = %398
  %605 = load i32* %i, align 4
  %606 = add nsw i32 %605, 1
  store i32 %606, i32* %i, align 4
  br label %394

; <label>:607                                     ; preds = %394
  %608 = load i32* @ist, align 4
  store i32 %608, i32* %i, align 4
  br label %609

; <label>:609                                     ; preds = %1002, %607
  %610 = load i32* %i, align 4
  %611 = load i32* @iend, align 4
  %612 = icmp slt i32 %610, %611
  br i1 %612, label %613, label %1005

; <label>:613                                     ; preds = %609
  %614 = load i32* %i, align 4
  %615 = sext i32 %614 to i64
  %616 = load i32* %j, align 4
  %617 = sext i32 %616 to i64
  %618 = load i32* %k, align 4
  %619 = sext i32 %618 to i64
  %620 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %619
  %621 = getelementptr inbounds [23 x [23 x [5 x double]]]* %620, i32 0, i64 %617
  %622 = getelementptr inbounds [23 x [5 x double]]* %621, i32 0, i64 %615
  %623 = getelementptr inbounds [5 x double]* %622, i32 0, i64 0
  %624 = load double* %623, align 8
  %625 = load double* @dx1, align 8
  %626 = load double* @tx1, align 8
  %627 = fmul double %625, %626
  %628 = load i32* %i, align 4
  %629 = sub nsw i32 %628, 1
  %630 = sext i32 %629 to i64
  %631 = load i32* %j, align 4
  %632 = sext i32 %631 to i64
  %633 = load i32* %k, align 4
  %634 = sext i32 %633 to i64
  %635 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %634
  %636 = getelementptr inbounds [23 x [23 x [5 x double]]]* %635, i32 0, i64 %632
  %637 = getelementptr inbounds [23 x [5 x double]]* %636, i32 0, i64 %630
  %638 = getelementptr inbounds [5 x double]* %637, i32 0, i64 0
  %639 = load double* %638, align 8
  %640 = load i32* %i, align 4
  %641 = sext i32 %640 to i64
  %642 = load i32* %j, align 4
  %643 = sext i32 %642 to i64
  %644 = load i32* %k, align 4
  %645 = sext i32 %644 to i64
  %646 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %645
  %647 = getelementptr inbounds [23 x [23 x [5 x double]]]* %646, i32 0, i64 %643
  %648 = getelementptr inbounds [23 x [5 x double]]* %647, i32 0, i64 %641
  %649 = getelementptr inbounds [5 x double]* %648, i32 0, i64 0
  %650 = load double* %649, align 8
  %651 = fmul double 2.000000e+00, %650
  %652 = fsub double %639, %651
  %653 = load i32* %i, align 4
  %654 = add nsw i32 %653, 1
  %655 = sext i32 %654 to i64
  %656 = load i32* %j, align 4
  %657 = sext i32 %656 to i64
  %658 = load i32* %k, align 4
  %659 = sext i32 %658 to i64
  %660 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %659
  %661 = getelementptr inbounds [23 x [23 x [5 x double]]]* %660, i32 0, i64 %657
  %662 = getelementptr inbounds [23 x [5 x double]]* %661, i32 0, i64 %655
  %663 = getelementptr inbounds [5 x double]* %662, i32 0, i64 0
  %664 = load double* %663, align 8
  %665 = fadd double %652, %664
  %666 = fmul double %627, %665
  %667 = fadd double %624, %666
  %668 = load i32* %i, align 4
  %669 = sext i32 %668 to i64
  %670 = load i32* %j, align 4
  %671 = sext i32 %670 to i64
  %672 = load i32* %k, align 4
  %673 = sext i32 %672 to i64
  %674 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %673
  %675 = getelementptr inbounds [23 x [23 x [5 x double]]]* %674, i32 0, i64 %671
  %676 = getelementptr inbounds [23 x [5 x double]]* %675, i32 0, i64 %669
  %677 = getelementptr inbounds [5 x double]* %676, i32 0, i64 0
  store double %667, double* %677, align 8
  %678 = load i32* %i, align 4
  %679 = sext i32 %678 to i64
  %680 = load i32* %j, align 4
  %681 = sext i32 %680 to i64
  %682 = load i32* %k, align 4
  %683 = sext i32 %682 to i64
  %684 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %683
  %685 = getelementptr inbounds [23 x [23 x [5 x double]]]* %684, i32 0, i64 %681
  %686 = getelementptr inbounds [23 x [5 x double]]* %685, i32 0, i64 %679
  %687 = getelementptr inbounds [5 x double]* %686, i32 0, i64 1
  %688 = load double* %687, align 8
  %689 = load double* @tx3, align 8
  %690 = fmul double %689, 1.000000e-01
  %691 = fmul double %690, 1.000000e+00
  %692 = load i32* %i, align 4
  %693 = add nsw i32 %692, 1
  %694 = sext i32 %693 to i64
  %695 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %694
  %696 = getelementptr inbounds [5 x double]* %695, i32 0, i64 1
  %697 = load double* %696, align 8
  %698 = load i32* %i, align 4
  %699 = sext i32 %698 to i64
  %700 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %699
  %701 = getelementptr inbounds [5 x double]* %700, i32 0, i64 1
  %702 = load double* %701, align 8
  %703 = fsub double %697, %702
  %704 = fmul double %691, %703
  %705 = fadd double %688, %704
  %706 = load double* @dx2, align 8
  %707 = load double* @tx1, align 8
  %708 = fmul double %706, %707
  %709 = load i32* %i, align 4
  %710 = sub nsw i32 %709, 1
  %711 = sext i32 %710 to i64
  %712 = load i32* %j, align 4
  %713 = sext i32 %712 to i64
  %714 = load i32* %k, align 4
  %715 = sext i32 %714 to i64
  %716 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %715
  %717 = getelementptr inbounds [23 x [23 x [5 x double]]]* %716, i32 0, i64 %713
  %718 = getelementptr inbounds [23 x [5 x double]]* %717, i32 0, i64 %711
  %719 = getelementptr inbounds [5 x double]* %718, i32 0, i64 1
  %720 = load double* %719, align 8
  %721 = load i32* %i, align 4
  %722 = sext i32 %721 to i64
  %723 = load i32* %j, align 4
  %724 = sext i32 %723 to i64
  %725 = load i32* %k, align 4
  %726 = sext i32 %725 to i64
  %727 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %726
  %728 = getelementptr inbounds [23 x [23 x [5 x double]]]* %727, i32 0, i64 %724
  %729 = getelementptr inbounds [23 x [5 x double]]* %728, i32 0, i64 %722
  %730 = getelementptr inbounds [5 x double]* %729, i32 0, i64 1
  %731 = load double* %730, align 8
  %732 = fmul double 2.000000e+00, %731
  %733 = fsub double %720, %732
  %734 = load i32* %i, align 4
  %735 = add nsw i32 %734, 1
  %736 = sext i32 %735 to i64
  %737 = load i32* %j, align 4
  %738 = sext i32 %737 to i64
  %739 = load i32* %k, align 4
  %740 = sext i32 %739 to i64
  %741 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %740
  %742 = getelementptr inbounds [23 x [23 x [5 x double]]]* %741, i32 0, i64 %738
  %743 = getelementptr inbounds [23 x [5 x double]]* %742, i32 0, i64 %736
  %744 = getelementptr inbounds [5 x double]* %743, i32 0, i64 1
  %745 = load double* %744, align 8
  %746 = fadd double %733, %745
  %747 = fmul double %708, %746
  %748 = fadd double %705, %747
  %749 = load i32* %i, align 4
  %750 = sext i32 %749 to i64
  %751 = load i32* %j, align 4
  %752 = sext i32 %751 to i64
  %753 = load i32* %k, align 4
  %754 = sext i32 %753 to i64
  %755 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %754
  %756 = getelementptr inbounds [23 x [23 x [5 x double]]]* %755, i32 0, i64 %752
  %757 = getelementptr inbounds [23 x [5 x double]]* %756, i32 0, i64 %750
  %758 = getelementptr inbounds [5 x double]* %757, i32 0, i64 1
  store double %748, double* %758, align 8
  %759 = load i32* %i, align 4
  %760 = sext i32 %759 to i64
  %761 = load i32* %j, align 4
  %762 = sext i32 %761 to i64
  %763 = load i32* %k, align 4
  %764 = sext i32 %763 to i64
  %765 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %764
  %766 = getelementptr inbounds [23 x [23 x [5 x double]]]* %765, i32 0, i64 %762
  %767 = getelementptr inbounds [23 x [5 x double]]* %766, i32 0, i64 %760
  %768 = getelementptr inbounds [5 x double]* %767, i32 0, i64 2
  %769 = load double* %768, align 8
  %770 = load double* @tx3, align 8
  %771 = fmul double %770, 1.000000e-01
  %772 = fmul double %771, 1.000000e+00
  %773 = load i32* %i, align 4
  %774 = add nsw i32 %773, 1
  %775 = sext i32 %774 to i64
  %776 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %775
  %777 = getelementptr inbounds [5 x double]* %776, i32 0, i64 2
  %778 = load double* %777, align 8
  %779 = load i32* %i, align 4
  %780 = sext i32 %779 to i64
  %781 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %780
  %782 = getelementptr inbounds [5 x double]* %781, i32 0, i64 2
  %783 = load double* %782, align 8
  %784 = fsub double %778, %783
  %785 = fmul double %772, %784
  %786 = fadd double %769, %785
  %787 = load double* @dx3, align 8
  %788 = load double* @tx1, align 8
  %789 = fmul double %787, %788
  %790 = load i32* %i, align 4
  %791 = sub nsw i32 %790, 1
  %792 = sext i32 %791 to i64
  %793 = load i32* %j, align 4
  %794 = sext i32 %793 to i64
  %795 = load i32* %k, align 4
  %796 = sext i32 %795 to i64
  %797 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %796
  %798 = getelementptr inbounds [23 x [23 x [5 x double]]]* %797, i32 0, i64 %794
  %799 = getelementptr inbounds [23 x [5 x double]]* %798, i32 0, i64 %792
  %800 = getelementptr inbounds [5 x double]* %799, i32 0, i64 2
  %801 = load double* %800, align 8
  %802 = load i32* %i, align 4
  %803 = sext i32 %802 to i64
  %804 = load i32* %j, align 4
  %805 = sext i32 %804 to i64
  %806 = load i32* %k, align 4
  %807 = sext i32 %806 to i64
  %808 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %807
  %809 = getelementptr inbounds [23 x [23 x [5 x double]]]* %808, i32 0, i64 %805
  %810 = getelementptr inbounds [23 x [5 x double]]* %809, i32 0, i64 %803
  %811 = getelementptr inbounds [5 x double]* %810, i32 0, i64 2
  %812 = load double* %811, align 8
  %813 = fmul double 2.000000e+00, %812
  %814 = fsub double %801, %813
  %815 = load i32* %i, align 4
  %816 = add nsw i32 %815, 1
  %817 = sext i32 %816 to i64
  %818 = load i32* %j, align 4
  %819 = sext i32 %818 to i64
  %820 = load i32* %k, align 4
  %821 = sext i32 %820 to i64
  %822 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %821
  %823 = getelementptr inbounds [23 x [23 x [5 x double]]]* %822, i32 0, i64 %819
  %824 = getelementptr inbounds [23 x [5 x double]]* %823, i32 0, i64 %817
  %825 = getelementptr inbounds [5 x double]* %824, i32 0, i64 2
  %826 = load double* %825, align 8
  %827 = fadd double %814, %826
  %828 = fmul double %789, %827
  %829 = fadd double %786, %828
  %830 = load i32* %i, align 4
  %831 = sext i32 %830 to i64
  %832 = load i32* %j, align 4
  %833 = sext i32 %832 to i64
  %834 = load i32* %k, align 4
  %835 = sext i32 %834 to i64
  %836 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %835
  %837 = getelementptr inbounds [23 x [23 x [5 x double]]]* %836, i32 0, i64 %833
  %838 = getelementptr inbounds [23 x [5 x double]]* %837, i32 0, i64 %831
  %839 = getelementptr inbounds [5 x double]* %838, i32 0, i64 2
  store double %829, double* %839, align 8
  %840 = load i32* %i, align 4
  %841 = sext i32 %840 to i64
  %842 = load i32* %j, align 4
  %843 = sext i32 %842 to i64
  %844 = load i32* %k, align 4
  %845 = sext i32 %844 to i64
  %846 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %845
  %847 = getelementptr inbounds [23 x [23 x [5 x double]]]* %846, i32 0, i64 %843
  %848 = getelementptr inbounds [23 x [5 x double]]* %847, i32 0, i64 %841
  %849 = getelementptr inbounds [5 x double]* %848, i32 0, i64 3
  %850 = load double* %849, align 8
  %851 = load double* @tx3, align 8
  %852 = fmul double %851, 1.000000e-01
  %853 = fmul double %852, 1.000000e+00
  %854 = load i32* %i, align 4
  %855 = add nsw i32 %854, 1
  %856 = sext i32 %855 to i64
  %857 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %856
  %858 = getelementptr inbounds [5 x double]* %857, i32 0, i64 3
  %859 = load double* %858, align 8
  %860 = load i32* %i, align 4
  %861 = sext i32 %860 to i64
  %862 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %861
  %863 = getelementptr inbounds [5 x double]* %862, i32 0, i64 3
  %864 = load double* %863, align 8
  %865 = fsub double %859, %864
  %866 = fmul double %853, %865
  %867 = fadd double %850, %866
  %868 = load double* @dx4, align 8
  %869 = load double* @tx1, align 8
  %870 = fmul double %868, %869
  %871 = load i32* %i, align 4
  %872 = sub nsw i32 %871, 1
  %873 = sext i32 %872 to i64
  %874 = load i32* %j, align 4
  %875 = sext i32 %874 to i64
  %876 = load i32* %k, align 4
  %877 = sext i32 %876 to i64
  %878 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %877
  %879 = getelementptr inbounds [23 x [23 x [5 x double]]]* %878, i32 0, i64 %875
  %880 = getelementptr inbounds [23 x [5 x double]]* %879, i32 0, i64 %873
  %881 = getelementptr inbounds [5 x double]* %880, i32 0, i64 3
  %882 = load double* %881, align 8
  %883 = load i32* %i, align 4
  %884 = sext i32 %883 to i64
  %885 = load i32* %j, align 4
  %886 = sext i32 %885 to i64
  %887 = load i32* %k, align 4
  %888 = sext i32 %887 to i64
  %889 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %888
  %890 = getelementptr inbounds [23 x [23 x [5 x double]]]* %889, i32 0, i64 %886
  %891 = getelementptr inbounds [23 x [5 x double]]* %890, i32 0, i64 %884
  %892 = getelementptr inbounds [5 x double]* %891, i32 0, i64 3
  %893 = load double* %892, align 8
  %894 = fmul double 2.000000e+00, %893
  %895 = fsub double %882, %894
  %896 = load i32* %i, align 4
  %897 = add nsw i32 %896, 1
  %898 = sext i32 %897 to i64
  %899 = load i32* %j, align 4
  %900 = sext i32 %899 to i64
  %901 = load i32* %k, align 4
  %902 = sext i32 %901 to i64
  %903 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %902
  %904 = getelementptr inbounds [23 x [23 x [5 x double]]]* %903, i32 0, i64 %900
  %905 = getelementptr inbounds [23 x [5 x double]]* %904, i32 0, i64 %898
  %906 = getelementptr inbounds [5 x double]* %905, i32 0, i64 3
  %907 = load double* %906, align 8
  %908 = fadd double %895, %907
  %909 = fmul double %870, %908
  %910 = fadd double %867, %909
  %911 = load i32* %i, align 4
  %912 = sext i32 %911 to i64
  %913 = load i32* %j, align 4
  %914 = sext i32 %913 to i64
  %915 = load i32* %k, align 4
  %916 = sext i32 %915 to i64
  %917 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %916
  %918 = getelementptr inbounds [23 x [23 x [5 x double]]]* %917, i32 0, i64 %914
  %919 = getelementptr inbounds [23 x [5 x double]]* %918, i32 0, i64 %912
  %920 = getelementptr inbounds [5 x double]* %919, i32 0, i64 3
  store double %910, double* %920, align 8
  %921 = load i32* %i, align 4
  %922 = sext i32 %921 to i64
  %923 = load i32* %j, align 4
  %924 = sext i32 %923 to i64
  %925 = load i32* %k, align 4
  %926 = sext i32 %925 to i64
  %927 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %926
  %928 = getelementptr inbounds [23 x [23 x [5 x double]]]* %927, i32 0, i64 %924
  %929 = getelementptr inbounds [23 x [5 x double]]* %928, i32 0, i64 %922
  %930 = getelementptr inbounds [5 x double]* %929, i32 0, i64 4
  %931 = load double* %930, align 8
  %932 = load double* @tx3, align 8
  %933 = fmul double %932, 1.000000e-01
  %934 = fmul double %933, 1.000000e+00
  %935 = load i32* %i, align 4
  %936 = add nsw i32 %935, 1
  %937 = sext i32 %936 to i64
  %938 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %937
  %939 = getelementptr inbounds [5 x double]* %938, i32 0, i64 4
  %940 = load double* %939, align 8
  %941 = load i32* %i, align 4
  %942 = sext i32 %941 to i64
  %943 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %942
  %944 = getelementptr inbounds [5 x double]* %943, i32 0, i64 4
  %945 = load double* %944, align 8
  %946 = fsub double %940, %945
  %947 = fmul double %934, %946
  %948 = fadd double %931, %947
  %949 = load double* @dx5, align 8
  %950 = load double* @tx1, align 8
  %951 = fmul double %949, %950
  %952 = load i32* %i, align 4
  %953 = sub nsw i32 %952, 1
  %954 = sext i32 %953 to i64
  %955 = load i32* %j, align 4
  %956 = sext i32 %955 to i64
  %957 = load i32* %k, align 4
  %958 = sext i32 %957 to i64
  %959 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %958
  %960 = getelementptr inbounds [23 x [23 x [5 x double]]]* %959, i32 0, i64 %956
  %961 = getelementptr inbounds [23 x [5 x double]]* %960, i32 0, i64 %954
  %962 = getelementptr inbounds [5 x double]* %961, i32 0, i64 4
  %963 = load double* %962, align 8
  %964 = load i32* %i, align 4
  %965 = sext i32 %964 to i64
  %966 = load i32* %j, align 4
  %967 = sext i32 %966 to i64
  %968 = load i32* %k, align 4
  %969 = sext i32 %968 to i64
  %970 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %969
  %971 = getelementptr inbounds [23 x [23 x [5 x double]]]* %970, i32 0, i64 %967
  %972 = getelementptr inbounds [23 x [5 x double]]* %971, i32 0, i64 %965
  %973 = getelementptr inbounds [5 x double]* %972, i32 0, i64 4
  %974 = load double* %973, align 8
  %975 = fmul double 2.000000e+00, %974
  %976 = fsub double %963, %975
  %977 = load i32* %i, align 4
  %978 = add nsw i32 %977, 1
  %979 = sext i32 %978 to i64
  %980 = load i32* %j, align 4
  %981 = sext i32 %980 to i64
  %982 = load i32* %k, align 4
  %983 = sext i32 %982 to i64
  %984 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %983
  %985 = getelementptr inbounds [23 x [23 x [5 x double]]]* %984, i32 0, i64 %981
  %986 = getelementptr inbounds [23 x [5 x double]]* %985, i32 0, i64 %979
  %987 = getelementptr inbounds [5 x double]* %986, i32 0, i64 4
  %988 = load double* %987, align 8
  %989 = fadd double %976, %988
  %990 = fmul double %951, %989
  %991 = fadd double %948, %990
  %992 = load i32* %i, align 4
  %993 = sext i32 %992 to i64
  %994 = load i32* %j, align 4
  %995 = sext i32 %994 to i64
  %996 = load i32* %k, align 4
  %997 = sext i32 %996 to i64
  %998 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %997
  %999 = getelementptr inbounds [23 x [23 x [5 x double]]]* %998, i32 0, i64 %995
  %1000 = getelementptr inbounds [23 x [5 x double]]* %999, i32 0, i64 %993
  %1001 = getelementptr inbounds [5 x double]* %1000, i32 0, i64 4
  store double %991, double* %1001, align 8
  br label %1002

; <label>:1002                                    ; preds = %613
  %1003 = load i32* %i, align 4
  %1004 = add nsw i32 %1003, 1
  store i32 %1004, i32* %i, align 4
  br label %609

; <label>:1005                                    ; preds = %609
  store i32 0, i32* %m, align 4
  br label %1006

; <label>:1006                                    ; preds = %1145, %1005
  %1007 = load i32* %m, align 4
  %1008 = icmp slt i32 %1007, 5
  br i1 %1008, label %1009, label %1148

; <label>:1009                                    ; preds = %1006
  %1010 = load i32* %m, align 4
  %1011 = sext i32 %1010 to i64
  %1012 = load i32* %j, align 4
  %1013 = sext i32 %1012 to i64
  %1014 = load i32* %k, align 4
  %1015 = sext i32 %1014 to i64
  %1016 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1015
  %1017 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1016, i32 0, i64 %1013
  %1018 = getelementptr inbounds [23 x [5 x double]]* %1017, i32 0, i64 1
  %1019 = getelementptr inbounds [5 x double]* %1018, i32 0, i64 %1011
  %1020 = load double* %1019, align 8
  %1021 = load double* @dssp, align 8
  %1022 = load i32* %m, align 4
  %1023 = sext i32 %1022 to i64
  %1024 = load i32* %j, align 4
  %1025 = sext i32 %1024 to i64
  %1026 = load i32* %k, align 4
  %1027 = sext i32 %1026 to i64
  %1028 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1027
  %1029 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1028, i32 0, i64 %1025
  %1030 = getelementptr inbounds [23 x [5 x double]]* %1029, i32 0, i64 1
  %1031 = getelementptr inbounds [5 x double]* %1030, i32 0, i64 %1023
  %1032 = load double* %1031, align 8
  %1033 = fmul double 5.000000e+00, %1032
  %1034 = load i32* %m, align 4
  %1035 = sext i32 %1034 to i64
  %1036 = load i32* %j, align 4
  %1037 = sext i32 %1036 to i64
  %1038 = load i32* %k, align 4
  %1039 = sext i32 %1038 to i64
  %1040 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1039
  %1041 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1040, i32 0, i64 %1037
  %1042 = getelementptr inbounds [23 x [5 x double]]* %1041, i32 0, i64 2
  %1043 = getelementptr inbounds [5 x double]* %1042, i32 0, i64 %1035
  %1044 = load double* %1043, align 8
  %1045 = fmul double 4.000000e+00, %1044
  %1046 = fsub double %1033, %1045
  %1047 = load i32* %m, align 4
  %1048 = sext i32 %1047 to i64
  %1049 = load i32* %j, align 4
  %1050 = sext i32 %1049 to i64
  %1051 = load i32* %k, align 4
  %1052 = sext i32 %1051 to i64
  %1053 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1052
  %1054 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1053, i32 0, i64 %1050
  %1055 = getelementptr inbounds [23 x [5 x double]]* %1054, i32 0, i64 3
  %1056 = getelementptr inbounds [5 x double]* %1055, i32 0, i64 %1048
  %1057 = load double* %1056, align 8
  %1058 = fadd double %1046, %1057
  %1059 = fmul double %1021, %1058
  %1060 = fsub double %1020, %1059
  %1061 = load i32* %m, align 4
  %1062 = sext i32 %1061 to i64
  %1063 = load i32* %j, align 4
  %1064 = sext i32 %1063 to i64
  %1065 = load i32* %k, align 4
  %1066 = sext i32 %1065 to i64
  %1067 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1066
  %1068 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1067, i32 0, i64 %1064
  %1069 = getelementptr inbounds [23 x [5 x double]]* %1068, i32 0, i64 1
  %1070 = getelementptr inbounds [5 x double]* %1069, i32 0, i64 %1062
  store double %1060, double* %1070, align 8
  %1071 = load i32* %m, align 4
  %1072 = sext i32 %1071 to i64
  %1073 = load i32* %j, align 4
  %1074 = sext i32 %1073 to i64
  %1075 = load i32* %k, align 4
  %1076 = sext i32 %1075 to i64
  %1077 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1076
  %1078 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1077, i32 0, i64 %1074
  %1079 = getelementptr inbounds [23 x [5 x double]]* %1078, i32 0, i64 2
  %1080 = getelementptr inbounds [5 x double]* %1079, i32 0, i64 %1072
  %1081 = load double* %1080, align 8
  %1082 = load double* @dssp, align 8
  %1083 = load i32* %m, align 4
  %1084 = sext i32 %1083 to i64
  %1085 = load i32* %j, align 4
  %1086 = sext i32 %1085 to i64
  %1087 = load i32* %k, align 4
  %1088 = sext i32 %1087 to i64
  %1089 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1088
  %1090 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1089, i32 0, i64 %1086
  %1091 = getelementptr inbounds [23 x [5 x double]]* %1090, i32 0, i64 1
  %1092 = getelementptr inbounds [5 x double]* %1091, i32 0, i64 %1084
  %1093 = load double* %1092, align 8
  %1094 = fmul double -4.000000e+00, %1093
  %1095 = load i32* %m, align 4
  %1096 = sext i32 %1095 to i64
  %1097 = load i32* %j, align 4
  %1098 = sext i32 %1097 to i64
  %1099 = load i32* %k, align 4
  %1100 = sext i32 %1099 to i64
  %1101 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1100
  %1102 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1101, i32 0, i64 %1098
  %1103 = getelementptr inbounds [23 x [5 x double]]* %1102, i32 0, i64 2
  %1104 = getelementptr inbounds [5 x double]* %1103, i32 0, i64 %1096
  %1105 = load double* %1104, align 8
  %1106 = fmul double 6.000000e+00, %1105
  %1107 = fadd double %1094, %1106
  %1108 = load i32* %m, align 4
  %1109 = sext i32 %1108 to i64
  %1110 = load i32* %j, align 4
  %1111 = sext i32 %1110 to i64
  %1112 = load i32* %k, align 4
  %1113 = sext i32 %1112 to i64
  %1114 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1113
  %1115 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1114, i32 0, i64 %1111
  %1116 = getelementptr inbounds [23 x [5 x double]]* %1115, i32 0, i64 3
  %1117 = getelementptr inbounds [5 x double]* %1116, i32 0, i64 %1109
  %1118 = load double* %1117, align 8
  %1119 = fmul double 4.000000e+00, %1118
  %1120 = fsub double %1107, %1119
  %1121 = load i32* %m, align 4
  %1122 = sext i32 %1121 to i64
  %1123 = load i32* %j, align 4
  %1124 = sext i32 %1123 to i64
  %1125 = load i32* %k, align 4
  %1126 = sext i32 %1125 to i64
  %1127 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1126
  %1128 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1127, i32 0, i64 %1124
  %1129 = getelementptr inbounds [23 x [5 x double]]* %1128, i32 0, i64 4
  %1130 = getelementptr inbounds [5 x double]* %1129, i32 0, i64 %1122
  %1131 = load double* %1130, align 8
  %1132 = fadd double %1120, %1131
  %1133 = fmul double %1082, %1132
  %1134 = fsub double %1081, %1133
  %1135 = load i32* %m, align 4
  %1136 = sext i32 %1135 to i64
  %1137 = load i32* %j, align 4
  %1138 = sext i32 %1137 to i64
  %1139 = load i32* %k, align 4
  %1140 = sext i32 %1139 to i64
  %1141 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1140
  %1142 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1141, i32 0, i64 %1138
  %1143 = getelementptr inbounds [23 x [5 x double]]* %1142, i32 0, i64 2
  %1144 = getelementptr inbounds [5 x double]* %1143, i32 0, i64 %1136
  store double %1134, double* %1144, align 8
  br label %1145

; <label>:1145                                    ; preds = %1009
  %1146 = load i32* %m, align 4
  %1147 = add nsw i32 %1146, 1
  store i32 %1147, i32* %m, align 4
  br label %1006

; <label>:1148                                    ; preds = %1006
  store i32 3, i32* %i, align 4
  br label %1149

; <label>:1149                                    ; preds = %1267, %1148
  %1150 = load i32* %i, align 4
  %1151 = load i32* @nx, align 4
  %1152 = sub nsw i32 %1151, 3
  %1153 = icmp slt i32 %1150, %1152
  br i1 %1153, label %1154, label %1270

; <label>:1154                                    ; preds = %1149
  store i32 0, i32* %m, align 4
  br label %1155

; <label>:1155                                    ; preds = %1263, %1154
  %1156 = load i32* %m, align 4
  %1157 = icmp slt i32 %1156, 5
  br i1 %1157, label %1158, label %1266

; <label>:1158                                    ; preds = %1155
  %1159 = load i32* %m, align 4
  %1160 = sext i32 %1159 to i64
  %1161 = load i32* %i, align 4
  %1162 = sext i32 %1161 to i64
  %1163 = load i32* %j, align 4
  %1164 = sext i32 %1163 to i64
  %1165 = load i32* %k, align 4
  %1166 = sext i32 %1165 to i64
  %1167 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1166
  %1168 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1167, i32 0, i64 %1164
  %1169 = getelementptr inbounds [23 x [5 x double]]* %1168, i32 0, i64 %1162
  %1170 = getelementptr inbounds [5 x double]* %1169, i32 0, i64 %1160
  %1171 = load double* %1170, align 8
  %1172 = load double* @dssp, align 8
  %1173 = load i32* %m, align 4
  %1174 = sext i32 %1173 to i64
  %1175 = load i32* %i, align 4
  %1176 = sub nsw i32 %1175, 2
  %1177 = sext i32 %1176 to i64
  %1178 = load i32* %j, align 4
  %1179 = sext i32 %1178 to i64
  %1180 = load i32* %k, align 4
  %1181 = sext i32 %1180 to i64
  %1182 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1181
  %1183 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1182, i32 0, i64 %1179
  %1184 = getelementptr inbounds [23 x [5 x double]]* %1183, i32 0, i64 %1177
  %1185 = getelementptr inbounds [5 x double]* %1184, i32 0, i64 %1174
  %1186 = load double* %1185, align 8
  %1187 = load i32* %m, align 4
  %1188 = sext i32 %1187 to i64
  %1189 = load i32* %i, align 4
  %1190 = sub nsw i32 %1189, 1
  %1191 = sext i32 %1190 to i64
  %1192 = load i32* %j, align 4
  %1193 = sext i32 %1192 to i64
  %1194 = load i32* %k, align 4
  %1195 = sext i32 %1194 to i64
  %1196 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1195
  %1197 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1196, i32 0, i64 %1193
  %1198 = getelementptr inbounds [23 x [5 x double]]* %1197, i32 0, i64 %1191
  %1199 = getelementptr inbounds [5 x double]* %1198, i32 0, i64 %1188
  %1200 = load double* %1199, align 8
  %1201 = fmul double 4.000000e+00, %1200
  %1202 = fsub double %1186, %1201
  %1203 = load i32* %m, align 4
  %1204 = sext i32 %1203 to i64
  %1205 = load i32* %i, align 4
  %1206 = sext i32 %1205 to i64
  %1207 = load i32* %j, align 4
  %1208 = sext i32 %1207 to i64
  %1209 = load i32* %k, align 4
  %1210 = sext i32 %1209 to i64
  %1211 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1210
  %1212 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1211, i32 0, i64 %1208
  %1213 = getelementptr inbounds [23 x [5 x double]]* %1212, i32 0, i64 %1206
  %1214 = getelementptr inbounds [5 x double]* %1213, i32 0, i64 %1204
  %1215 = load double* %1214, align 8
  %1216 = fmul double 6.000000e+00, %1215
  %1217 = fadd double %1202, %1216
  %1218 = load i32* %m, align 4
  %1219 = sext i32 %1218 to i64
  %1220 = load i32* %i, align 4
  %1221 = add nsw i32 %1220, 1
  %1222 = sext i32 %1221 to i64
  %1223 = load i32* %j, align 4
  %1224 = sext i32 %1223 to i64
  %1225 = load i32* %k, align 4
  %1226 = sext i32 %1225 to i64
  %1227 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1226
  %1228 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1227, i32 0, i64 %1224
  %1229 = getelementptr inbounds [23 x [5 x double]]* %1228, i32 0, i64 %1222
  %1230 = getelementptr inbounds [5 x double]* %1229, i32 0, i64 %1219
  %1231 = load double* %1230, align 8
  %1232 = fmul double 4.000000e+00, %1231
  %1233 = fsub double %1217, %1232
  %1234 = load i32* %m, align 4
  %1235 = sext i32 %1234 to i64
  %1236 = load i32* %i, align 4
  %1237 = add nsw i32 %1236, 2
  %1238 = sext i32 %1237 to i64
  %1239 = load i32* %j, align 4
  %1240 = sext i32 %1239 to i64
  %1241 = load i32* %k, align 4
  %1242 = sext i32 %1241 to i64
  %1243 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1242
  %1244 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1243, i32 0, i64 %1240
  %1245 = getelementptr inbounds [23 x [5 x double]]* %1244, i32 0, i64 %1238
  %1246 = getelementptr inbounds [5 x double]* %1245, i32 0, i64 %1235
  %1247 = load double* %1246, align 8
  %1248 = fadd double %1233, %1247
  %1249 = fmul double %1172, %1248
  %1250 = fsub double %1171, %1249
  %1251 = load i32* %m, align 4
  %1252 = sext i32 %1251 to i64
  %1253 = load i32* %i, align 4
  %1254 = sext i32 %1253 to i64
  %1255 = load i32* %j, align 4
  %1256 = sext i32 %1255 to i64
  %1257 = load i32* %k, align 4
  %1258 = sext i32 %1257 to i64
  %1259 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1258
  %1260 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1259, i32 0, i64 %1256
  %1261 = getelementptr inbounds [23 x [5 x double]]* %1260, i32 0, i64 %1254
  %1262 = getelementptr inbounds [5 x double]* %1261, i32 0, i64 %1252
  store double %1250, double* %1262, align 8
  br label %1263

; <label>:1263                                    ; preds = %1158
  %1264 = load i32* %m, align 4
  %1265 = add nsw i32 %1264, 1
  store i32 %1265, i32* %m, align 4
  br label %1155

; <label>:1266                                    ; preds = %1155
  br label %1267

; <label>:1267                                    ; preds = %1266
  %1268 = load i32* %i, align 4
  %1269 = add nsw i32 %1268, 1
  store i32 %1269, i32* %i, align 4
  br label %1149

; <label>:1270                                    ; preds = %1149
  store i32 0, i32* %m, align 4
  br label %1271

; <label>:1271                                    ; preds = %1443, %1270
  %1272 = load i32* %m, align 4
  %1273 = icmp slt i32 %1272, 5
  br i1 %1273, label %1274, label %1446

; <label>:1274                                    ; preds = %1271
  %1275 = load i32* %m, align 4
  %1276 = sext i32 %1275 to i64
  %1277 = load i32* @nx, align 4
  %1278 = sub nsw i32 %1277, 3
  %1279 = sext i32 %1278 to i64
  %1280 = load i32* %j, align 4
  %1281 = sext i32 %1280 to i64
  %1282 = load i32* %k, align 4
  %1283 = sext i32 %1282 to i64
  %1284 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1283
  %1285 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1284, i32 0, i64 %1281
  %1286 = getelementptr inbounds [23 x [5 x double]]* %1285, i32 0, i64 %1279
  %1287 = getelementptr inbounds [5 x double]* %1286, i32 0, i64 %1276
  %1288 = load double* %1287, align 8
  %1289 = load double* @dssp, align 8
  %1290 = load i32* %m, align 4
  %1291 = sext i32 %1290 to i64
  %1292 = load i32* @nx, align 4
  %1293 = sub nsw i32 %1292, 5
  %1294 = sext i32 %1293 to i64
  %1295 = load i32* %j, align 4
  %1296 = sext i32 %1295 to i64
  %1297 = load i32* %k, align 4
  %1298 = sext i32 %1297 to i64
  %1299 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1298
  %1300 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1299, i32 0, i64 %1296
  %1301 = getelementptr inbounds [23 x [5 x double]]* %1300, i32 0, i64 %1294
  %1302 = getelementptr inbounds [5 x double]* %1301, i32 0, i64 %1291
  %1303 = load double* %1302, align 8
  %1304 = load i32* %m, align 4
  %1305 = sext i32 %1304 to i64
  %1306 = load i32* @nx, align 4
  %1307 = sub nsw i32 %1306, 4
  %1308 = sext i32 %1307 to i64
  %1309 = load i32* %j, align 4
  %1310 = sext i32 %1309 to i64
  %1311 = load i32* %k, align 4
  %1312 = sext i32 %1311 to i64
  %1313 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1312
  %1314 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1313, i32 0, i64 %1310
  %1315 = getelementptr inbounds [23 x [5 x double]]* %1314, i32 0, i64 %1308
  %1316 = getelementptr inbounds [5 x double]* %1315, i32 0, i64 %1305
  %1317 = load double* %1316, align 8
  %1318 = fmul double 4.000000e+00, %1317
  %1319 = fsub double %1303, %1318
  %1320 = load i32* %m, align 4
  %1321 = sext i32 %1320 to i64
  %1322 = load i32* @nx, align 4
  %1323 = sub nsw i32 %1322, 3
  %1324 = sext i32 %1323 to i64
  %1325 = load i32* %j, align 4
  %1326 = sext i32 %1325 to i64
  %1327 = load i32* %k, align 4
  %1328 = sext i32 %1327 to i64
  %1329 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1328
  %1330 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1329, i32 0, i64 %1326
  %1331 = getelementptr inbounds [23 x [5 x double]]* %1330, i32 0, i64 %1324
  %1332 = getelementptr inbounds [5 x double]* %1331, i32 0, i64 %1321
  %1333 = load double* %1332, align 8
  %1334 = fmul double 6.000000e+00, %1333
  %1335 = fadd double %1319, %1334
  %1336 = load i32* %m, align 4
  %1337 = sext i32 %1336 to i64
  %1338 = load i32* @nx, align 4
  %1339 = sub nsw i32 %1338, 2
  %1340 = sext i32 %1339 to i64
  %1341 = load i32* %j, align 4
  %1342 = sext i32 %1341 to i64
  %1343 = load i32* %k, align 4
  %1344 = sext i32 %1343 to i64
  %1345 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1344
  %1346 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1345, i32 0, i64 %1342
  %1347 = getelementptr inbounds [23 x [5 x double]]* %1346, i32 0, i64 %1340
  %1348 = getelementptr inbounds [5 x double]* %1347, i32 0, i64 %1337
  %1349 = load double* %1348, align 8
  %1350 = fmul double 4.000000e+00, %1349
  %1351 = fsub double %1335, %1350
  %1352 = fmul double %1289, %1351
  %1353 = fsub double %1288, %1352
  %1354 = load i32* %m, align 4
  %1355 = sext i32 %1354 to i64
  %1356 = load i32* @nx, align 4
  %1357 = sub nsw i32 %1356, 3
  %1358 = sext i32 %1357 to i64
  %1359 = load i32* %j, align 4
  %1360 = sext i32 %1359 to i64
  %1361 = load i32* %k, align 4
  %1362 = sext i32 %1361 to i64
  %1363 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1362
  %1364 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1363, i32 0, i64 %1360
  %1365 = getelementptr inbounds [23 x [5 x double]]* %1364, i32 0, i64 %1358
  %1366 = getelementptr inbounds [5 x double]* %1365, i32 0, i64 %1355
  store double %1353, double* %1366, align 8
  %1367 = load i32* %m, align 4
  %1368 = sext i32 %1367 to i64
  %1369 = load i32* @nx, align 4
  %1370 = sub nsw i32 %1369, 2
  %1371 = sext i32 %1370 to i64
  %1372 = load i32* %j, align 4
  %1373 = sext i32 %1372 to i64
  %1374 = load i32* %k, align 4
  %1375 = sext i32 %1374 to i64
  %1376 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1375
  %1377 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1376, i32 0, i64 %1373
  %1378 = getelementptr inbounds [23 x [5 x double]]* %1377, i32 0, i64 %1371
  %1379 = getelementptr inbounds [5 x double]* %1378, i32 0, i64 %1368
  %1380 = load double* %1379, align 8
  %1381 = load double* @dssp, align 8
  %1382 = load i32* %m, align 4
  %1383 = sext i32 %1382 to i64
  %1384 = load i32* @nx, align 4
  %1385 = sub nsw i32 %1384, 4
  %1386 = sext i32 %1385 to i64
  %1387 = load i32* %j, align 4
  %1388 = sext i32 %1387 to i64
  %1389 = load i32* %k, align 4
  %1390 = sext i32 %1389 to i64
  %1391 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1390
  %1392 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1391, i32 0, i64 %1388
  %1393 = getelementptr inbounds [23 x [5 x double]]* %1392, i32 0, i64 %1386
  %1394 = getelementptr inbounds [5 x double]* %1393, i32 0, i64 %1383
  %1395 = load double* %1394, align 8
  %1396 = load i32* %m, align 4
  %1397 = sext i32 %1396 to i64
  %1398 = load i32* @nx, align 4
  %1399 = sub nsw i32 %1398, 3
  %1400 = sext i32 %1399 to i64
  %1401 = load i32* %j, align 4
  %1402 = sext i32 %1401 to i64
  %1403 = load i32* %k, align 4
  %1404 = sext i32 %1403 to i64
  %1405 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1404
  %1406 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1405, i32 0, i64 %1402
  %1407 = getelementptr inbounds [23 x [5 x double]]* %1406, i32 0, i64 %1400
  %1408 = getelementptr inbounds [5 x double]* %1407, i32 0, i64 %1397
  %1409 = load double* %1408, align 8
  %1410 = fmul double 4.000000e+00, %1409
  %1411 = fsub double %1395, %1410
  %1412 = load i32* %m, align 4
  %1413 = sext i32 %1412 to i64
  %1414 = load i32* @nx, align 4
  %1415 = sub nsw i32 %1414, 2
  %1416 = sext i32 %1415 to i64
  %1417 = load i32* %j, align 4
  %1418 = sext i32 %1417 to i64
  %1419 = load i32* %k, align 4
  %1420 = sext i32 %1419 to i64
  %1421 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1420
  %1422 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1421, i32 0, i64 %1418
  %1423 = getelementptr inbounds [23 x [5 x double]]* %1422, i32 0, i64 %1416
  %1424 = getelementptr inbounds [5 x double]* %1423, i32 0, i64 %1413
  %1425 = load double* %1424, align 8
  %1426 = fmul double 5.000000e+00, %1425
  %1427 = fadd double %1411, %1426
  %1428 = fmul double %1381, %1427
  %1429 = fsub double %1380, %1428
  %1430 = load i32* %m, align 4
  %1431 = sext i32 %1430 to i64
  %1432 = load i32* @nx, align 4
  %1433 = sub nsw i32 %1432, 2
  %1434 = sext i32 %1433 to i64
  %1435 = load i32* %j, align 4
  %1436 = sext i32 %1435 to i64
  %1437 = load i32* %k, align 4
  %1438 = sext i32 %1437 to i64
  %1439 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1438
  %1440 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1439, i32 0, i64 %1436
  %1441 = getelementptr inbounds [23 x [5 x double]]* %1440, i32 0, i64 %1434
  %1442 = getelementptr inbounds [5 x double]* %1441, i32 0, i64 %1431
  store double %1429, double* %1442, align 8
  br label %1443

; <label>:1443                                    ; preds = %1274
  %1444 = load i32* %m, align 4
  %1445 = add nsw i32 %1444, 1
  store i32 %1445, i32* %m, align 4
  br label %1271

; <label>:1446                                    ; preds = %1271
  br label %1447

; <label>:1447                                    ; preds = %1446
  %1448 = load i32* %j, align 4
  %1449 = add nsw i32 %1448, 1
  store i32 %1449, i32* %j, align 4
  br label %182

; <label>:1450                                    ; preds = %182
  br label %1451

; <label>:1451                                    ; preds = %1450
  %1452 = load i32* %k, align 4
  %1453 = add nsw i32 %1452, 1
  store i32 %1453, i32* %k, align 4
  br label %175

; <label>:1454                                    ; preds = %175
  %1455 = load i32* @timeron, align 4
  %1456 = icmp ne i32 %1455, 0
  br i1 %1456, label %1457, label %1458

; <label>:1457                                    ; preds = %1454
  call void @timer_stop(i32 2)
  br label %1458

; <label>:1458                                    ; preds = %1457, %1454
  %1459 = load i32* @timeron, align 4
  %1460 = icmp ne i32 %1459, 0
  br i1 %1460, label %1461, label %1462

; <label>:1461                                    ; preds = %1458
  call void @timer_start(i32 3)
  br label %1462

; <label>:1462                                    ; preds = %1461, %1458
  store i32 1, i32* %k, align 4
  br label %1463

; <label>:1463                                    ; preds = %2769, %1462
  %1464 = load i32* %k, align 4
  %1465 = load i32* @nz, align 4
  %1466 = sub nsw i32 %1465, 1
  %1467 = icmp slt i32 %1464, %1466
  br i1 %1467, label %1468, label %2772

; <label>:1468                                    ; preds = %1463
  %1469 = load i32* @ist, align 4
  store i32 %1469, i32* %i, align 4
  br label %1470

; <label>:1470                                    ; preds = %2294, %1468
  %1471 = load i32* %i, align 4
  %1472 = load i32* @iend, align 4
  %1473 = icmp slt i32 %1471, %1472
  br i1 %1473, label %1474, label %2297

; <label>:1474                                    ; preds = %1470
  store i32 0, i32* %j, align 4
  br label %1475

; <label>:1475                                    ; preds = %1614, %1474
  %1476 = load i32* %j, align 4
  %1477 = load i32* @ny, align 4
  %1478 = icmp slt i32 %1476, %1477
  br i1 %1478, label %1479, label %1617

; <label>:1479                                    ; preds = %1475
  %1480 = load i32* %i, align 4
  %1481 = sext i32 %1480 to i64
  %1482 = load i32* %j, align 4
  %1483 = sext i32 %1482 to i64
  %1484 = load i32* %k, align 4
  %1485 = sext i32 %1484 to i64
  %1486 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1485
  %1487 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1486, i32 0, i64 %1483
  %1488 = getelementptr inbounds [23 x [5 x double]]* %1487, i32 0, i64 %1481
  %1489 = getelementptr inbounds [5 x double]* %1488, i32 0, i64 2
  %1490 = load double* %1489, align 8
  %1491 = load i32* %j, align 4
  %1492 = sext i32 %1491 to i64
  %1493 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %1492
  %1494 = getelementptr inbounds [5 x double]* %1493, i32 0, i64 0
  store double %1490, double* %1494, align 8
  %1495 = load i32* %i, align 4
  %1496 = sext i32 %1495 to i64
  %1497 = load i32* %j, align 4
  %1498 = sext i32 %1497 to i64
  %1499 = load i32* %k, align 4
  %1500 = sext i32 %1499 to i64
  %1501 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1500
  %1502 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1501, i32 0, i64 %1498
  %1503 = getelementptr inbounds [23 x [5 x double]]* %1502, i32 0, i64 %1496
  %1504 = getelementptr inbounds [5 x double]* %1503, i32 0, i64 2
  %1505 = load double* %1504, align 8
  %1506 = load i32* %i, align 4
  %1507 = sext i32 %1506 to i64
  %1508 = load i32* %j, align 4
  %1509 = sext i32 %1508 to i64
  %1510 = load i32* %k, align 4
  %1511 = sext i32 %1510 to i64
  %1512 = getelementptr inbounds [22 x [23 x [23 x double]]]* @rho_i, i32 0, i64 %1511
  %1513 = getelementptr inbounds [23 x [23 x double]]* %1512, i32 0, i64 %1509
  %1514 = getelementptr inbounds [23 x double]* %1513, i32 0, i64 %1507
  %1515 = load double* %1514, align 8
  %1516 = fmul double %1505, %1515
  store double %1516, double* %u31, align 8
  %1517 = load i32* %i, align 4
  %1518 = sext i32 %1517 to i64
  %1519 = load i32* %j, align 4
  %1520 = sext i32 %1519 to i64
  %1521 = load i32* %k, align 4
  %1522 = sext i32 %1521 to i64
  %1523 = getelementptr inbounds [22 x [23 x [23 x double]]]* @qs, i32 0, i64 %1522
  %1524 = getelementptr inbounds [23 x [23 x double]]* %1523, i32 0, i64 %1520
  %1525 = getelementptr inbounds [23 x double]* %1524, i32 0, i64 %1518
  %1526 = load double* %1525, align 8
  store double %1526, double* %q, align 8
  %1527 = load i32* %i, align 4
  %1528 = sext i32 %1527 to i64
  %1529 = load i32* %j, align 4
  %1530 = sext i32 %1529 to i64
  %1531 = load i32* %k, align 4
  %1532 = sext i32 %1531 to i64
  %1533 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1532
  %1534 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1533, i32 0, i64 %1530
  %1535 = getelementptr inbounds [23 x [5 x double]]* %1534, i32 0, i64 %1528
  %1536 = getelementptr inbounds [5 x double]* %1535, i32 0, i64 1
  %1537 = load double* %1536, align 8
  %1538 = load double* %u31, align 8
  %1539 = fmul double %1537, %1538
  %1540 = load i32* %j, align 4
  %1541 = sext i32 %1540 to i64
  %1542 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %1541
  %1543 = getelementptr inbounds [5 x double]* %1542, i32 0, i64 1
  store double %1539, double* %1543, align 8
  %1544 = load i32* %i, align 4
  %1545 = sext i32 %1544 to i64
  %1546 = load i32* %j, align 4
  %1547 = sext i32 %1546 to i64
  %1548 = load i32* %k, align 4
  %1549 = sext i32 %1548 to i64
  %1550 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1549
  %1551 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1550, i32 0, i64 %1547
  %1552 = getelementptr inbounds [23 x [5 x double]]* %1551, i32 0, i64 %1545
  %1553 = getelementptr inbounds [5 x double]* %1552, i32 0, i64 2
  %1554 = load double* %1553, align 8
  %1555 = load double* %u31, align 8
  %1556 = fmul double %1554, %1555
  %1557 = load i32* %i, align 4
  %1558 = sext i32 %1557 to i64
  %1559 = load i32* %j, align 4
  %1560 = sext i32 %1559 to i64
  %1561 = load i32* %k, align 4
  %1562 = sext i32 %1561 to i64
  %1563 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1562
  %1564 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1563, i32 0, i64 %1560
  %1565 = getelementptr inbounds [23 x [5 x double]]* %1564, i32 0, i64 %1558
  %1566 = getelementptr inbounds [5 x double]* %1565, i32 0, i64 4
  %1567 = load double* %1566, align 8
  %1568 = load double* %q, align 8
  %1569 = fsub double %1567, %1568
  %1570 = fmul double 4.000000e-01, %1569
  %1571 = fadd double %1556, %1570
  %1572 = load i32* %j, align 4
  %1573 = sext i32 %1572 to i64
  %1574 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %1573
  %1575 = getelementptr inbounds [5 x double]* %1574, i32 0, i64 2
  store double %1571, double* %1575, align 8
  %1576 = load i32* %i, align 4
  %1577 = sext i32 %1576 to i64
  %1578 = load i32* %j, align 4
  %1579 = sext i32 %1578 to i64
  %1580 = load i32* %k, align 4
  %1581 = sext i32 %1580 to i64
  %1582 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1581
  %1583 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1582, i32 0, i64 %1579
  %1584 = getelementptr inbounds [23 x [5 x double]]* %1583, i32 0, i64 %1577
  %1585 = getelementptr inbounds [5 x double]* %1584, i32 0, i64 3
  %1586 = load double* %1585, align 8
  %1587 = load double* %u31, align 8
  %1588 = fmul double %1586, %1587
  %1589 = load i32* %j, align 4
  %1590 = sext i32 %1589 to i64
  %1591 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %1590
  %1592 = getelementptr inbounds [5 x double]* %1591, i32 0, i64 3
  store double %1588, double* %1592, align 8
  %1593 = load i32* %i, align 4
  %1594 = sext i32 %1593 to i64
  %1595 = load i32* %j, align 4
  %1596 = sext i32 %1595 to i64
  %1597 = load i32* %k, align 4
  %1598 = sext i32 %1597 to i64
  %1599 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1598
  %1600 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1599, i32 0, i64 %1596
  %1601 = getelementptr inbounds [23 x [5 x double]]* %1600, i32 0, i64 %1594
  %1602 = getelementptr inbounds [5 x double]* %1601, i32 0, i64 4
  %1603 = load double* %1602, align 8
  %1604 = fmul double 1.400000e+00, %1603
  %1605 = load double* %q, align 8
  %1606 = fmul double 4.000000e-01, %1605
  %1607 = fsub double %1604, %1606
  %1608 = load double* %u31, align 8
  %1609 = fmul double %1607, %1608
  %1610 = load i32* %j, align 4
  %1611 = sext i32 %1610 to i64
  %1612 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %1611
  %1613 = getelementptr inbounds [5 x double]* %1612, i32 0, i64 4
  store double %1609, double* %1613, align 8
  br label %1614

; <label>:1614                                    ; preds = %1479
  %1615 = load i32* %j, align 4
  %1616 = add nsw i32 %1615, 1
  store i32 %1616, i32* %j, align 4
  br label %1475

; <label>:1617                                    ; preds = %1475
  %1618 = load i32* @jst, align 4
  store i32 %1618, i32* %j, align 4
  br label %1619

; <label>:1619                                    ; preds = %1677, %1617
  %1620 = load i32* %j, align 4
  %1621 = load i32* @jend, align 4
  %1622 = icmp slt i32 %1620, %1621
  br i1 %1622, label %1623, label %1680

; <label>:1623                                    ; preds = %1619
  store i32 0, i32* %m, align 4
  br label %1624

; <label>:1624                                    ; preds = %1673, %1623
  %1625 = load i32* %m, align 4
  %1626 = icmp slt i32 %1625, 5
  br i1 %1626, label %1627, label %1676

; <label>:1627                                    ; preds = %1624
  %1628 = load i32* %m, align 4
  %1629 = sext i32 %1628 to i64
  %1630 = load i32* %i, align 4
  %1631 = sext i32 %1630 to i64
  %1632 = load i32* %j, align 4
  %1633 = sext i32 %1632 to i64
  %1634 = load i32* %k, align 4
  %1635 = sext i32 %1634 to i64
  %1636 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1635
  %1637 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1636, i32 0, i64 %1633
  %1638 = getelementptr inbounds [23 x [5 x double]]* %1637, i32 0, i64 %1631
  %1639 = getelementptr inbounds [5 x double]* %1638, i32 0, i64 %1629
  %1640 = load double* %1639, align 8
  %1641 = load double* @ty2, align 8
  %1642 = load i32* %m, align 4
  %1643 = sext i32 %1642 to i64
  %1644 = load i32* %j, align 4
  %1645 = add nsw i32 %1644, 1
  %1646 = sext i32 %1645 to i64
  %1647 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %1646
  %1648 = getelementptr inbounds [5 x double]* %1647, i32 0, i64 %1643
  %1649 = load double* %1648, align 8
  %1650 = load i32* %m, align 4
  %1651 = sext i32 %1650 to i64
  %1652 = load i32* %j, align 4
  %1653 = sub nsw i32 %1652, 1
  %1654 = sext i32 %1653 to i64
  %1655 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %1654
  %1656 = getelementptr inbounds [5 x double]* %1655, i32 0, i64 %1651
  %1657 = load double* %1656, align 8
  %1658 = fsub double %1649, %1657
  %1659 = fmul double %1641, %1658
  %1660 = fsub double %1640, %1659
  %1661 = load i32* %m, align 4
  %1662 = sext i32 %1661 to i64
  %1663 = load i32* %i, align 4
  %1664 = sext i32 %1663 to i64
  %1665 = load i32* %j, align 4
  %1666 = sext i32 %1665 to i64
  %1667 = load i32* %k, align 4
  %1668 = sext i32 %1667 to i64
  %1669 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1668
  %1670 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1669, i32 0, i64 %1666
  %1671 = getelementptr inbounds [23 x [5 x double]]* %1670, i32 0, i64 %1664
  %1672 = getelementptr inbounds [5 x double]* %1671, i32 0, i64 %1662
  store double %1660, double* %1672, align 8
  br label %1673

; <label>:1673                                    ; preds = %1627
  %1674 = load i32* %m, align 4
  %1675 = add nsw i32 %1674, 1
  store i32 %1675, i32* %m, align 4
  br label %1624

; <label>:1676                                    ; preds = %1624
  br label %1677

; <label>:1677                                    ; preds = %1676
  %1678 = load i32* %j, align 4
  %1679 = add nsw i32 %1678, 1
  store i32 %1679, i32* %j, align 4
  br label %1619

; <label>:1680                                    ; preds = %1619
  %1681 = load i32* @jst, align 4
  store i32 %1681, i32* %j, align 4
  br label %1682

; <label>:1682                                    ; preds = %1892, %1680
  %1683 = load i32* %j, align 4
  %1684 = load i32* @ny, align 4
  %1685 = icmp slt i32 %1683, %1684
  br i1 %1685, label %1686, label %1895

; <label>:1686                                    ; preds = %1682
  %1687 = load i32* %i, align 4
  %1688 = sext i32 %1687 to i64
  %1689 = load i32* %j, align 4
  %1690 = sext i32 %1689 to i64
  %1691 = load i32* %k, align 4
  %1692 = sext i32 %1691 to i64
  %1693 = getelementptr inbounds [22 x [23 x [23 x double]]]* @rho_i, i32 0, i64 %1692
  %1694 = getelementptr inbounds [23 x [23 x double]]* %1693, i32 0, i64 %1690
  %1695 = getelementptr inbounds [23 x double]* %1694, i32 0, i64 %1688
  %1696 = load double* %1695, align 8
  store double %1696, double* %tmp, align 8
  %1697 = load double* %tmp, align 8
  %1698 = load i32* %i, align 4
  %1699 = sext i32 %1698 to i64
  %1700 = load i32* %j, align 4
  %1701 = sext i32 %1700 to i64
  %1702 = load i32* %k, align 4
  %1703 = sext i32 %1702 to i64
  %1704 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1703
  %1705 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1704, i32 0, i64 %1701
  %1706 = getelementptr inbounds [23 x [5 x double]]* %1705, i32 0, i64 %1699
  %1707 = getelementptr inbounds [5 x double]* %1706, i32 0, i64 1
  %1708 = load double* %1707, align 8
  %1709 = fmul double %1697, %1708
  store double %1709, double* %u21j, align 8
  %1710 = load double* %tmp, align 8
  %1711 = load i32* %i, align 4
  %1712 = sext i32 %1711 to i64
  %1713 = load i32* %j, align 4
  %1714 = sext i32 %1713 to i64
  %1715 = load i32* %k, align 4
  %1716 = sext i32 %1715 to i64
  %1717 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1716
  %1718 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1717, i32 0, i64 %1714
  %1719 = getelementptr inbounds [23 x [5 x double]]* %1718, i32 0, i64 %1712
  %1720 = getelementptr inbounds [5 x double]* %1719, i32 0, i64 2
  %1721 = load double* %1720, align 8
  %1722 = fmul double %1710, %1721
  store double %1722, double* %u31j, align 8
  %1723 = load double* %tmp, align 8
  %1724 = load i32* %i, align 4
  %1725 = sext i32 %1724 to i64
  %1726 = load i32* %j, align 4
  %1727 = sext i32 %1726 to i64
  %1728 = load i32* %k, align 4
  %1729 = sext i32 %1728 to i64
  %1730 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1729
  %1731 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1730, i32 0, i64 %1727
  %1732 = getelementptr inbounds [23 x [5 x double]]* %1731, i32 0, i64 %1725
  %1733 = getelementptr inbounds [5 x double]* %1732, i32 0, i64 3
  %1734 = load double* %1733, align 8
  %1735 = fmul double %1723, %1734
  store double %1735, double* %u41j, align 8
  %1736 = load double* %tmp, align 8
  %1737 = load i32* %i, align 4
  %1738 = sext i32 %1737 to i64
  %1739 = load i32* %j, align 4
  %1740 = sext i32 %1739 to i64
  %1741 = load i32* %k, align 4
  %1742 = sext i32 %1741 to i64
  %1743 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1742
  %1744 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1743, i32 0, i64 %1740
  %1745 = getelementptr inbounds [23 x [5 x double]]* %1744, i32 0, i64 %1738
  %1746 = getelementptr inbounds [5 x double]* %1745, i32 0, i64 4
  %1747 = load double* %1746, align 8
  %1748 = fmul double %1736, %1747
  store double %1748, double* %u51j, align 8
  %1749 = load i32* %i, align 4
  %1750 = sext i32 %1749 to i64
  %1751 = load i32* %j, align 4
  %1752 = sub nsw i32 %1751, 1
  %1753 = sext i32 %1752 to i64
  %1754 = load i32* %k, align 4
  %1755 = sext i32 %1754 to i64
  %1756 = getelementptr inbounds [22 x [23 x [23 x double]]]* @rho_i, i32 0, i64 %1755
  %1757 = getelementptr inbounds [23 x [23 x double]]* %1756, i32 0, i64 %1753
  %1758 = getelementptr inbounds [23 x double]* %1757, i32 0, i64 %1750
  %1759 = load double* %1758, align 8
  store double %1759, double* %tmp, align 8
  %1760 = load double* %tmp, align 8
  %1761 = load i32* %i, align 4
  %1762 = sext i32 %1761 to i64
  %1763 = load i32* %j, align 4
  %1764 = sub nsw i32 %1763, 1
  %1765 = sext i32 %1764 to i64
  %1766 = load i32* %k, align 4
  %1767 = sext i32 %1766 to i64
  %1768 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1767
  %1769 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1768, i32 0, i64 %1765
  %1770 = getelementptr inbounds [23 x [5 x double]]* %1769, i32 0, i64 %1762
  %1771 = getelementptr inbounds [5 x double]* %1770, i32 0, i64 1
  %1772 = load double* %1771, align 8
  %1773 = fmul double %1760, %1772
  store double %1773, double* %u21jm1, align 8
  %1774 = load double* %tmp, align 8
  %1775 = load i32* %i, align 4
  %1776 = sext i32 %1775 to i64
  %1777 = load i32* %j, align 4
  %1778 = sub nsw i32 %1777, 1
  %1779 = sext i32 %1778 to i64
  %1780 = load i32* %k, align 4
  %1781 = sext i32 %1780 to i64
  %1782 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1781
  %1783 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1782, i32 0, i64 %1779
  %1784 = getelementptr inbounds [23 x [5 x double]]* %1783, i32 0, i64 %1776
  %1785 = getelementptr inbounds [5 x double]* %1784, i32 0, i64 2
  %1786 = load double* %1785, align 8
  %1787 = fmul double %1774, %1786
  store double %1787, double* %u31jm1, align 8
  %1788 = load double* %tmp, align 8
  %1789 = load i32* %i, align 4
  %1790 = sext i32 %1789 to i64
  %1791 = load i32* %j, align 4
  %1792 = sub nsw i32 %1791, 1
  %1793 = sext i32 %1792 to i64
  %1794 = load i32* %k, align 4
  %1795 = sext i32 %1794 to i64
  %1796 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1795
  %1797 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1796, i32 0, i64 %1793
  %1798 = getelementptr inbounds [23 x [5 x double]]* %1797, i32 0, i64 %1790
  %1799 = getelementptr inbounds [5 x double]* %1798, i32 0, i64 3
  %1800 = load double* %1799, align 8
  %1801 = fmul double %1788, %1800
  store double %1801, double* %u41jm1, align 8
  %1802 = load double* %tmp, align 8
  %1803 = load i32* %i, align 4
  %1804 = sext i32 %1803 to i64
  %1805 = load i32* %j, align 4
  %1806 = sub nsw i32 %1805, 1
  %1807 = sext i32 %1806 to i64
  %1808 = load i32* %k, align 4
  %1809 = sext i32 %1808 to i64
  %1810 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1809
  %1811 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1810, i32 0, i64 %1807
  %1812 = getelementptr inbounds [23 x [5 x double]]* %1811, i32 0, i64 %1804
  %1813 = getelementptr inbounds [5 x double]* %1812, i32 0, i64 4
  %1814 = load double* %1813, align 8
  %1815 = fmul double %1802, %1814
  store double %1815, double* %u51jm1, align 8
  %1816 = load double* @ty3, align 8
  %1817 = load double* %u21j, align 8
  %1818 = load double* %u21jm1, align 8
  %1819 = fsub double %1817, %1818
  %1820 = fmul double %1816, %1819
  %1821 = load i32* %j, align 4
  %1822 = sext i32 %1821 to i64
  %1823 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %1822
  %1824 = getelementptr inbounds [5 x double]* %1823, i32 0, i64 1
  store double %1820, double* %1824, align 8
  %1825 = load double* @ty3, align 8
  %1826 = fmul double 0x3FF5555555555555, %1825
  %1827 = load double* %u31j, align 8
  %1828 = load double* %u31jm1, align 8
  %1829 = fsub double %1827, %1828
  %1830 = fmul double %1826, %1829
  %1831 = load i32* %j, align 4
  %1832 = sext i32 %1831 to i64
  %1833 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %1832
  %1834 = getelementptr inbounds [5 x double]* %1833, i32 0, i64 2
  store double %1830, double* %1834, align 8
  %1835 = load double* @ty3, align 8
  %1836 = load double* %u41j, align 8
  %1837 = load double* %u41jm1, align 8
  %1838 = fsub double %1836, %1837
  %1839 = fmul double %1835, %1838
  %1840 = load i32* %j, align 4
  %1841 = sext i32 %1840 to i64
  %1842 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %1841
  %1843 = getelementptr inbounds [5 x double]* %1842, i32 0, i64 3
  store double %1839, double* %1843, align 8
  %1844 = load double* @ty3, align 8
  %1845 = fmul double 0xBFDEB851EB851EB6, %1844
  %1846 = load double* %u21j, align 8
  %1847 = load double* %u21j, align 8
  %1848 = fmul double %1846, %1847
  %1849 = load double* %u31j, align 8
  %1850 = load double* %u31j, align 8
  %1851 = fmul double %1849, %1850
  %1852 = fadd double %1848, %1851
  %1853 = load double* %u41j, align 8
  %1854 = load double* %u41j, align 8
  %1855 = fmul double %1853, %1854
  %1856 = fadd double %1852, %1855
  %1857 = load double* %u21jm1, align 8
  %1858 = load double* %u21jm1, align 8
  %1859 = fmul double %1857, %1858
  %1860 = load double* %u31jm1, align 8
  %1861 = load double* %u31jm1, align 8
  %1862 = fmul double %1860, %1861
  %1863 = fadd double %1859, %1862
  %1864 = load double* %u41jm1, align 8
  %1865 = load double* %u41jm1, align 8
  %1866 = fmul double %1864, %1865
  %1867 = fadd double %1863, %1866
  %1868 = fsub double %1856, %1867
  %1869 = fmul double %1845, %1868
  %1870 = load double* @ty3, align 8
  %1871 = fmul double 0x3FC5555555555555, %1870
  %1872 = load double* %u31j, align 8
  %1873 = load double* %u31j, align 8
  %1874 = fmul double %1872, %1873
  %1875 = load double* %u31jm1, align 8
  %1876 = load double* %u31jm1, align 8
  %1877 = fmul double %1875, %1876
  %1878 = fsub double %1874, %1877
  %1879 = fmul double %1871, %1878
  %1880 = fadd double %1869, %1879
  %1881 = load double* @ty3, align 8
  %1882 = fmul double 0x3FFF5C28F5C28F5B, %1881
  %1883 = load double* %u51j, align 8
  %1884 = load double* %u51jm1, align 8
  %1885 = fsub double %1883, %1884
  %1886 = fmul double %1882, %1885
  %1887 = fadd double %1880, %1886
  %1888 = load i32* %j, align 4
  %1889 = sext i32 %1888 to i64
  %1890 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %1889
  %1891 = getelementptr inbounds [5 x double]* %1890, i32 0, i64 4
  store double %1887, double* %1891, align 8
  br label %1892

; <label>:1892                                    ; preds = %1686
  %1893 = load i32* %j, align 4
  %1894 = add nsw i32 %1893, 1
  store i32 %1894, i32* %j, align 4
  br label %1682

; <label>:1895                                    ; preds = %1682
  %1896 = load i32* @jst, align 4
  store i32 %1896, i32* %j, align 4
  br label %1897

; <label>:1897                                    ; preds = %2290, %1895
  %1898 = load i32* %j, align 4
  %1899 = load i32* @jend, align 4
  %1900 = icmp slt i32 %1898, %1899
  br i1 %1900, label %1901, label %2293

; <label>:1901                                    ; preds = %1897
  %1902 = load i32* %i, align 4
  %1903 = sext i32 %1902 to i64
  %1904 = load i32* %j, align 4
  %1905 = sext i32 %1904 to i64
  %1906 = load i32* %k, align 4
  %1907 = sext i32 %1906 to i64
  %1908 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1907
  %1909 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1908, i32 0, i64 %1905
  %1910 = getelementptr inbounds [23 x [5 x double]]* %1909, i32 0, i64 %1903
  %1911 = getelementptr inbounds [5 x double]* %1910, i32 0, i64 0
  %1912 = load double* %1911, align 8
  %1913 = load double* @dy1, align 8
  %1914 = load double* @ty1, align 8
  %1915 = fmul double %1913, %1914
  %1916 = load i32* %i, align 4
  %1917 = sext i32 %1916 to i64
  %1918 = load i32* %j, align 4
  %1919 = sub nsw i32 %1918, 1
  %1920 = sext i32 %1919 to i64
  %1921 = load i32* %k, align 4
  %1922 = sext i32 %1921 to i64
  %1923 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1922
  %1924 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1923, i32 0, i64 %1920
  %1925 = getelementptr inbounds [23 x [5 x double]]* %1924, i32 0, i64 %1917
  %1926 = getelementptr inbounds [5 x double]* %1925, i32 0, i64 0
  %1927 = load double* %1926, align 8
  %1928 = load i32* %i, align 4
  %1929 = sext i32 %1928 to i64
  %1930 = load i32* %j, align 4
  %1931 = sext i32 %1930 to i64
  %1932 = load i32* %k, align 4
  %1933 = sext i32 %1932 to i64
  %1934 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1933
  %1935 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1934, i32 0, i64 %1931
  %1936 = getelementptr inbounds [23 x [5 x double]]* %1935, i32 0, i64 %1929
  %1937 = getelementptr inbounds [5 x double]* %1936, i32 0, i64 0
  %1938 = load double* %1937, align 8
  %1939 = fmul double 2.000000e+00, %1938
  %1940 = fsub double %1927, %1939
  %1941 = load i32* %i, align 4
  %1942 = sext i32 %1941 to i64
  %1943 = load i32* %j, align 4
  %1944 = add nsw i32 %1943, 1
  %1945 = sext i32 %1944 to i64
  %1946 = load i32* %k, align 4
  %1947 = sext i32 %1946 to i64
  %1948 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %1947
  %1949 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1948, i32 0, i64 %1945
  %1950 = getelementptr inbounds [23 x [5 x double]]* %1949, i32 0, i64 %1942
  %1951 = getelementptr inbounds [5 x double]* %1950, i32 0, i64 0
  %1952 = load double* %1951, align 8
  %1953 = fadd double %1940, %1952
  %1954 = fmul double %1915, %1953
  %1955 = fadd double %1912, %1954
  %1956 = load i32* %i, align 4
  %1957 = sext i32 %1956 to i64
  %1958 = load i32* %j, align 4
  %1959 = sext i32 %1958 to i64
  %1960 = load i32* %k, align 4
  %1961 = sext i32 %1960 to i64
  %1962 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1961
  %1963 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1962, i32 0, i64 %1959
  %1964 = getelementptr inbounds [23 x [5 x double]]* %1963, i32 0, i64 %1957
  %1965 = getelementptr inbounds [5 x double]* %1964, i32 0, i64 0
  store double %1955, double* %1965, align 8
  %1966 = load i32* %i, align 4
  %1967 = sext i32 %1966 to i64
  %1968 = load i32* %j, align 4
  %1969 = sext i32 %1968 to i64
  %1970 = load i32* %k, align 4
  %1971 = sext i32 %1970 to i64
  %1972 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %1971
  %1973 = getelementptr inbounds [23 x [23 x [5 x double]]]* %1972, i32 0, i64 %1969
  %1974 = getelementptr inbounds [23 x [5 x double]]* %1973, i32 0, i64 %1967
  %1975 = getelementptr inbounds [5 x double]* %1974, i32 0, i64 1
  %1976 = load double* %1975, align 8
  %1977 = load double* @ty3, align 8
  %1978 = fmul double %1977, 1.000000e-01
  %1979 = fmul double %1978, 1.000000e+00
  %1980 = load i32* %j, align 4
  %1981 = add nsw i32 %1980, 1
  %1982 = sext i32 %1981 to i64
  %1983 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %1982
  %1984 = getelementptr inbounds [5 x double]* %1983, i32 0, i64 1
  %1985 = load double* %1984, align 8
  %1986 = load i32* %j, align 4
  %1987 = sext i32 %1986 to i64
  %1988 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %1987
  %1989 = getelementptr inbounds [5 x double]* %1988, i32 0, i64 1
  %1990 = load double* %1989, align 8
  %1991 = fsub double %1985, %1990
  %1992 = fmul double %1979, %1991
  %1993 = fadd double %1976, %1992
  %1994 = load double* @dy2, align 8
  %1995 = load double* @ty1, align 8
  %1996 = fmul double %1994, %1995
  %1997 = load i32* %i, align 4
  %1998 = sext i32 %1997 to i64
  %1999 = load i32* %j, align 4
  %2000 = sub nsw i32 %1999, 1
  %2001 = sext i32 %2000 to i64
  %2002 = load i32* %k, align 4
  %2003 = sext i32 %2002 to i64
  %2004 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2003
  %2005 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2004, i32 0, i64 %2001
  %2006 = getelementptr inbounds [23 x [5 x double]]* %2005, i32 0, i64 %1998
  %2007 = getelementptr inbounds [5 x double]* %2006, i32 0, i64 1
  %2008 = load double* %2007, align 8
  %2009 = load i32* %i, align 4
  %2010 = sext i32 %2009 to i64
  %2011 = load i32* %j, align 4
  %2012 = sext i32 %2011 to i64
  %2013 = load i32* %k, align 4
  %2014 = sext i32 %2013 to i64
  %2015 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2014
  %2016 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2015, i32 0, i64 %2012
  %2017 = getelementptr inbounds [23 x [5 x double]]* %2016, i32 0, i64 %2010
  %2018 = getelementptr inbounds [5 x double]* %2017, i32 0, i64 1
  %2019 = load double* %2018, align 8
  %2020 = fmul double 2.000000e+00, %2019
  %2021 = fsub double %2008, %2020
  %2022 = load i32* %i, align 4
  %2023 = sext i32 %2022 to i64
  %2024 = load i32* %j, align 4
  %2025 = add nsw i32 %2024, 1
  %2026 = sext i32 %2025 to i64
  %2027 = load i32* %k, align 4
  %2028 = sext i32 %2027 to i64
  %2029 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2028
  %2030 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2029, i32 0, i64 %2026
  %2031 = getelementptr inbounds [23 x [5 x double]]* %2030, i32 0, i64 %2023
  %2032 = getelementptr inbounds [5 x double]* %2031, i32 0, i64 1
  %2033 = load double* %2032, align 8
  %2034 = fadd double %2021, %2033
  %2035 = fmul double %1996, %2034
  %2036 = fadd double %1993, %2035
  %2037 = load i32* %i, align 4
  %2038 = sext i32 %2037 to i64
  %2039 = load i32* %j, align 4
  %2040 = sext i32 %2039 to i64
  %2041 = load i32* %k, align 4
  %2042 = sext i32 %2041 to i64
  %2043 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2042
  %2044 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2043, i32 0, i64 %2040
  %2045 = getelementptr inbounds [23 x [5 x double]]* %2044, i32 0, i64 %2038
  %2046 = getelementptr inbounds [5 x double]* %2045, i32 0, i64 1
  store double %2036, double* %2046, align 8
  %2047 = load i32* %i, align 4
  %2048 = sext i32 %2047 to i64
  %2049 = load i32* %j, align 4
  %2050 = sext i32 %2049 to i64
  %2051 = load i32* %k, align 4
  %2052 = sext i32 %2051 to i64
  %2053 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2052
  %2054 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2053, i32 0, i64 %2050
  %2055 = getelementptr inbounds [23 x [5 x double]]* %2054, i32 0, i64 %2048
  %2056 = getelementptr inbounds [5 x double]* %2055, i32 0, i64 2
  %2057 = load double* %2056, align 8
  %2058 = load double* @ty3, align 8
  %2059 = fmul double %2058, 1.000000e-01
  %2060 = fmul double %2059, 1.000000e+00
  %2061 = load i32* %j, align 4
  %2062 = add nsw i32 %2061, 1
  %2063 = sext i32 %2062 to i64
  %2064 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %2063
  %2065 = getelementptr inbounds [5 x double]* %2064, i32 0, i64 2
  %2066 = load double* %2065, align 8
  %2067 = load i32* %j, align 4
  %2068 = sext i32 %2067 to i64
  %2069 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %2068
  %2070 = getelementptr inbounds [5 x double]* %2069, i32 0, i64 2
  %2071 = load double* %2070, align 8
  %2072 = fsub double %2066, %2071
  %2073 = fmul double %2060, %2072
  %2074 = fadd double %2057, %2073
  %2075 = load double* @dy3, align 8
  %2076 = load double* @ty1, align 8
  %2077 = fmul double %2075, %2076
  %2078 = load i32* %i, align 4
  %2079 = sext i32 %2078 to i64
  %2080 = load i32* %j, align 4
  %2081 = sub nsw i32 %2080, 1
  %2082 = sext i32 %2081 to i64
  %2083 = load i32* %k, align 4
  %2084 = sext i32 %2083 to i64
  %2085 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2084
  %2086 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2085, i32 0, i64 %2082
  %2087 = getelementptr inbounds [23 x [5 x double]]* %2086, i32 0, i64 %2079
  %2088 = getelementptr inbounds [5 x double]* %2087, i32 0, i64 2
  %2089 = load double* %2088, align 8
  %2090 = load i32* %i, align 4
  %2091 = sext i32 %2090 to i64
  %2092 = load i32* %j, align 4
  %2093 = sext i32 %2092 to i64
  %2094 = load i32* %k, align 4
  %2095 = sext i32 %2094 to i64
  %2096 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2095
  %2097 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2096, i32 0, i64 %2093
  %2098 = getelementptr inbounds [23 x [5 x double]]* %2097, i32 0, i64 %2091
  %2099 = getelementptr inbounds [5 x double]* %2098, i32 0, i64 2
  %2100 = load double* %2099, align 8
  %2101 = fmul double 2.000000e+00, %2100
  %2102 = fsub double %2089, %2101
  %2103 = load i32* %i, align 4
  %2104 = sext i32 %2103 to i64
  %2105 = load i32* %j, align 4
  %2106 = add nsw i32 %2105, 1
  %2107 = sext i32 %2106 to i64
  %2108 = load i32* %k, align 4
  %2109 = sext i32 %2108 to i64
  %2110 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2109
  %2111 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2110, i32 0, i64 %2107
  %2112 = getelementptr inbounds [23 x [5 x double]]* %2111, i32 0, i64 %2104
  %2113 = getelementptr inbounds [5 x double]* %2112, i32 0, i64 2
  %2114 = load double* %2113, align 8
  %2115 = fadd double %2102, %2114
  %2116 = fmul double %2077, %2115
  %2117 = fadd double %2074, %2116
  %2118 = load i32* %i, align 4
  %2119 = sext i32 %2118 to i64
  %2120 = load i32* %j, align 4
  %2121 = sext i32 %2120 to i64
  %2122 = load i32* %k, align 4
  %2123 = sext i32 %2122 to i64
  %2124 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2123
  %2125 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2124, i32 0, i64 %2121
  %2126 = getelementptr inbounds [23 x [5 x double]]* %2125, i32 0, i64 %2119
  %2127 = getelementptr inbounds [5 x double]* %2126, i32 0, i64 2
  store double %2117, double* %2127, align 8
  %2128 = load i32* %i, align 4
  %2129 = sext i32 %2128 to i64
  %2130 = load i32* %j, align 4
  %2131 = sext i32 %2130 to i64
  %2132 = load i32* %k, align 4
  %2133 = sext i32 %2132 to i64
  %2134 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2133
  %2135 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2134, i32 0, i64 %2131
  %2136 = getelementptr inbounds [23 x [5 x double]]* %2135, i32 0, i64 %2129
  %2137 = getelementptr inbounds [5 x double]* %2136, i32 0, i64 3
  %2138 = load double* %2137, align 8
  %2139 = load double* @ty3, align 8
  %2140 = fmul double %2139, 1.000000e-01
  %2141 = fmul double %2140, 1.000000e+00
  %2142 = load i32* %j, align 4
  %2143 = add nsw i32 %2142, 1
  %2144 = sext i32 %2143 to i64
  %2145 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %2144
  %2146 = getelementptr inbounds [5 x double]* %2145, i32 0, i64 3
  %2147 = load double* %2146, align 8
  %2148 = load i32* %j, align 4
  %2149 = sext i32 %2148 to i64
  %2150 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %2149
  %2151 = getelementptr inbounds [5 x double]* %2150, i32 0, i64 3
  %2152 = load double* %2151, align 8
  %2153 = fsub double %2147, %2152
  %2154 = fmul double %2141, %2153
  %2155 = fadd double %2138, %2154
  %2156 = load double* @dy4, align 8
  %2157 = load double* @ty1, align 8
  %2158 = fmul double %2156, %2157
  %2159 = load i32* %i, align 4
  %2160 = sext i32 %2159 to i64
  %2161 = load i32* %j, align 4
  %2162 = sub nsw i32 %2161, 1
  %2163 = sext i32 %2162 to i64
  %2164 = load i32* %k, align 4
  %2165 = sext i32 %2164 to i64
  %2166 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2165
  %2167 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2166, i32 0, i64 %2163
  %2168 = getelementptr inbounds [23 x [5 x double]]* %2167, i32 0, i64 %2160
  %2169 = getelementptr inbounds [5 x double]* %2168, i32 0, i64 3
  %2170 = load double* %2169, align 8
  %2171 = load i32* %i, align 4
  %2172 = sext i32 %2171 to i64
  %2173 = load i32* %j, align 4
  %2174 = sext i32 %2173 to i64
  %2175 = load i32* %k, align 4
  %2176 = sext i32 %2175 to i64
  %2177 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2176
  %2178 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2177, i32 0, i64 %2174
  %2179 = getelementptr inbounds [23 x [5 x double]]* %2178, i32 0, i64 %2172
  %2180 = getelementptr inbounds [5 x double]* %2179, i32 0, i64 3
  %2181 = load double* %2180, align 8
  %2182 = fmul double 2.000000e+00, %2181
  %2183 = fsub double %2170, %2182
  %2184 = load i32* %i, align 4
  %2185 = sext i32 %2184 to i64
  %2186 = load i32* %j, align 4
  %2187 = add nsw i32 %2186, 1
  %2188 = sext i32 %2187 to i64
  %2189 = load i32* %k, align 4
  %2190 = sext i32 %2189 to i64
  %2191 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2190
  %2192 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2191, i32 0, i64 %2188
  %2193 = getelementptr inbounds [23 x [5 x double]]* %2192, i32 0, i64 %2185
  %2194 = getelementptr inbounds [5 x double]* %2193, i32 0, i64 3
  %2195 = load double* %2194, align 8
  %2196 = fadd double %2183, %2195
  %2197 = fmul double %2158, %2196
  %2198 = fadd double %2155, %2197
  %2199 = load i32* %i, align 4
  %2200 = sext i32 %2199 to i64
  %2201 = load i32* %j, align 4
  %2202 = sext i32 %2201 to i64
  %2203 = load i32* %k, align 4
  %2204 = sext i32 %2203 to i64
  %2205 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2204
  %2206 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2205, i32 0, i64 %2202
  %2207 = getelementptr inbounds [23 x [5 x double]]* %2206, i32 0, i64 %2200
  %2208 = getelementptr inbounds [5 x double]* %2207, i32 0, i64 3
  store double %2198, double* %2208, align 8
  %2209 = load i32* %i, align 4
  %2210 = sext i32 %2209 to i64
  %2211 = load i32* %j, align 4
  %2212 = sext i32 %2211 to i64
  %2213 = load i32* %k, align 4
  %2214 = sext i32 %2213 to i64
  %2215 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2214
  %2216 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2215, i32 0, i64 %2212
  %2217 = getelementptr inbounds [23 x [5 x double]]* %2216, i32 0, i64 %2210
  %2218 = getelementptr inbounds [5 x double]* %2217, i32 0, i64 4
  %2219 = load double* %2218, align 8
  %2220 = load double* @ty3, align 8
  %2221 = fmul double %2220, 1.000000e-01
  %2222 = fmul double %2221, 1.000000e+00
  %2223 = load i32* %j, align 4
  %2224 = add nsw i32 %2223, 1
  %2225 = sext i32 %2224 to i64
  %2226 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %2225
  %2227 = getelementptr inbounds [5 x double]* %2226, i32 0, i64 4
  %2228 = load double* %2227, align 8
  %2229 = load i32* %j, align 4
  %2230 = sext i32 %2229 to i64
  %2231 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %2230
  %2232 = getelementptr inbounds [5 x double]* %2231, i32 0, i64 4
  %2233 = load double* %2232, align 8
  %2234 = fsub double %2228, %2233
  %2235 = fmul double %2222, %2234
  %2236 = fadd double %2219, %2235
  %2237 = load double* @dy5, align 8
  %2238 = load double* @ty1, align 8
  %2239 = fmul double %2237, %2238
  %2240 = load i32* %i, align 4
  %2241 = sext i32 %2240 to i64
  %2242 = load i32* %j, align 4
  %2243 = sub nsw i32 %2242, 1
  %2244 = sext i32 %2243 to i64
  %2245 = load i32* %k, align 4
  %2246 = sext i32 %2245 to i64
  %2247 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2246
  %2248 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2247, i32 0, i64 %2244
  %2249 = getelementptr inbounds [23 x [5 x double]]* %2248, i32 0, i64 %2241
  %2250 = getelementptr inbounds [5 x double]* %2249, i32 0, i64 4
  %2251 = load double* %2250, align 8
  %2252 = load i32* %i, align 4
  %2253 = sext i32 %2252 to i64
  %2254 = load i32* %j, align 4
  %2255 = sext i32 %2254 to i64
  %2256 = load i32* %k, align 4
  %2257 = sext i32 %2256 to i64
  %2258 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2257
  %2259 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2258, i32 0, i64 %2255
  %2260 = getelementptr inbounds [23 x [5 x double]]* %2259, i32 0, i64 %2253
  %2261 = getelementptr inbounds [5 x double]* %2260, i32 0, i64 4
  %2262 = load double* %2261, align 8
  %2263 = fmul double 2.000000e+00, %2262
  %2264 = fsub double %2251, %2263
  %2265 = load i32* %i, align 4
  %2266 = sext i32 %2265 to i64
  %2267 = load i32* %j, align 4
  %2268 = add nsw i32 %2267, 1
  %2269 = sext i32 %2268 to i64
  %2270 = load i32* %k, align 4
  %2271 = sext i32 %2270 to i64
  %2272 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2271
  %2273 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2272, i32 0, i64 %2269
  %2274 = getelementptr inbounds [23 x [5 x double]]* %2273, i32 0, i64 %2266
  %2275 = getelementptr inbounds [5 x double]* %2274, i32 0, i64 4
  %2276 = load double* %2275, align 8
  %2277 = fadd double %2264, %2276
  %2278 = fmul double %2239, %2277
  %2279 = fadd double %2236, %2278
  %2280 = load i32* %i, align 4
  %2281 = sext i32 %2280 to i64
  %2282 = load i32* %j, align 4
  %2283 = sext i32 %2282 to i64
  %2284 = load i32* %k, align 4
  %2285 = sext i32 %2284 to i64
  %2286 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2285
  %2287 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2286, i32 0, i64 %2283
  %2288 = getelementptr inbounds [23 x [5 x double]]* %2287, i32 0, i64 %2281
  %2289 = getelementptr inbounds [5 x double]* %2288, i32 0, i64 4
  store double %2279, double* %2289, align 8
  br label %2290

; <label>:2290                                    ; preds = %1901
  %2291 = load i32* %j, align 4
  %2292 = add nsw i32 %2291, 1
  store i32 %2292, i32* %j, align 4
  br label %1897

; <label>:2293                                    ; preds = %1897
  br label %2294

; <label>:2294                                    ; preds = %2293
  %2295 = load i32* %i, align 4
  %2296 = add nsw i32 %2295, 1
  store i32 %2296, i32* %i, align 4
  br label %1470

; <label>:2297                                    ; preds = %1470
  %2298 = load i32* @ist, align 4
  store i32 %2298, i32* %i, align 4
  br label %2299

; <label>:2299                                    ; preds = %2447, %2297
  %2300 = load i32* %i, align 4
  %2301 = load i32* @iend, align 4
  %2302 = icmp slt i32 %2300, %2301
  br i1 %2302, label %2303, label %2450

; <label>:2303                                    ; preds = %2299
  store i32 0, i32* %m, align 4
  br label %2304

; <label>:2304                                    ; preds = %2443, %2303
  %2305 = load i32* %m, align 4
  %2306 = icmp slt i32 %2305, 5
  br i1 %2306, label %2307, label %2446

; <label>:2307                                    ; preds = %2304
  %2308 = load i32* %m, align 4
  %2309 = sext i32 %2308 to i64
  %2310 = load i32* %i, align 4
  %2311 = sext i32 %2310 to i64
  %2312 = load i32* %k, align 4
  %2313 = sext i32 %2312 to i64
  %2314 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2313
  %2315 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2314, i32 0, i64 1
  %2316 = getelementptr inbounds [23 x [5 x double]]* %2315, i32 0, i64 %2311
  %2317 = getelementptr inbounds [5 x double]* %2316, i32 0, i64 %2309
  %2318 = load double* %2317, align 8
  %2319 = load double* @dssp, align 8
  %2320 = load i32* %m, align 4
  %2321 = sext i32 %2320 to i64
  %2322 = load i32* %i, align 4
  %2323 = sext i32 %2322 to i64
  %2324 = load i32* %k, align 4
  %2325 = sext i32 %2324 to i64
  %2326 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2325
  %2327 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2326, i32 0, i64 1
  %2328 = getelementptr inbounds [23 x [5 x double]]* %2327, i32 0, i64 %2323
  %2329 = getelementptr inbounds [5 x double]* %2328, i32 0, i64 %2321
  %2330 = load double* %2329, align 8
  %2331 = fmul double 5.000000e+00, %2330
  %2332 = load i32* %m, align 4
  %2333 = sext i32 %2332 to i64
  %2334 = load i32* %i, align 4
  %2335 = sext i32 %2334 to i64
  %2336 = load i32* %k, align 4
  %2337 = sext i32 %2336 to i64
  %2338 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2337
  %2339 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2338, i32 0, i64 2
  %2340 = getelementptr inbounds [23 x [5 x double]]* %2339, i32 0, i64 %2335
  %2341 = getelementptr inbounds [5 x double]* %2340, i32 0, i64 %2333
  %2342 = load double* %2341, align 8
  %2343 = fmul double 4.000000e+00, %2342
  %2344 = fsub double %2331, %2343
  %2345 = load i32* %m, align 4
  %2346 = sext i32 %2345 to i64
  %2347 = load i32* %i, align 4
  %2348 = sext i32 %2347 to i64
  %2349 = load i32* %k, align 4
  %2350 = sext i32 %2349 to i64
  %2351 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2350
  %2352 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2351, i32 0, i64 3
  %2353 = getelementptr inbounds [23 x [5 x double]]* %2352, i32 0, i64 %2348
  %2354 = getelementptr inbounds [5 x double]* %2353, i32 0, i64 %2346
  %2355 = load double* %2354, align 8
  %2356 = fadd double %2344, %2355
  %2357 = fmul double %2319, %2356
  %2358 = fsub double %2318, %2357
  %2359 = load i32* %m, align 4
  %2360 = sext i32 %2359 to i64
  %2361 = load i32* %i, align 4
  %2362 = sext i32 %2361 to i64
  %2363 = load i32* %k, align 4
  %2364 = sext i32 %2363 to i64
  %2365 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2364
  %2366 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2365, i32 0, i64 1
  %2367 = getelementptr inbounds [23 x [5 x double]]* %2366, i32 0, i64 %2362
  %2368 = getelementptr inbounds [5 x double]* %2367, i32 0, i64 %2360
  store double %2358, double* %2368, align 8
  %2369 = load i32* %m, align 4
  %2370 = sext i32 %2369 to i64
  %2371 = load i32* %i, align 4
  %2372 = sext i32 %2371 to i64
  %2373 = load i32* %k, align 4
  %2374 = sext i32 %2373 to i64
  %2375 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2374
  %2376 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2375, i32 0, i64 2
  %2377 = getelementptr inbounds [23 x [5 x double]]* %2376, i32 0, i64 %2372
  %2378 = getelementptr inbounds [5 x double]* %2377, i32 0, i64 %2370
  %2379 = load double* %2378, align 8
  %2380 = load double* @dssp, align 8
  %2381 = load i32* %m, align 4
  %2382 = sext i32 %2381 to i64
  %2383 = load i32* %i, align 4
  %2384 = sext i32 %2383 to i64
  %2385 = load i32* %k, align 4
  %2386 = sext i32 %2385 to i64
  %2387 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2386
  %2388 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2387, i32 0, i64 1
  %2389 = getelementptr inbounds [23 x [5 x double]]* %2388, i32 0, i64 %2384
  %2390 = getelementptr inbounds [5 x double]* %2389, i32 0, i64 %2382
  %2391 = load double* %2390, align 8
  %2392 = fmul double -4.000000e+00, %2391
  %2393 = load i32* %m, align 4
  %2394 = sext i32 %2393 to i64
  %2395 = load i32* %i, align 4
  %2396 = sext i32 %2395 to i64
  %2397 = load i32* %k, align 4
  %2398 = sext i32 %2397 to i64
  %2399 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2398
  %2400 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2399, i32 0, i64 2
  %2401 = getelementptr inbounds [23 x [5 x double]]* %2400, i32 0, i64 %2396
  %2402 = getelementptr inbounds [5 x double]* %2401, i32 0, i64 %2394
  %2403 = load double* %2402, align 8
  %2404 = fmul double 6.000000e+00, %2403
  %2405 = fadd double %2392, %2404
  %2406 = load i32* %m, align 4
  %2407 = sext i32 %2406 to i64
  %2408 = load i32* %i, align 4
  %2409 = sext i32 %2408 to i64
  %2410 = load i32* %k, align 4
  %2411 = sext i32 %2410 to i64
  %2412 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2411
  %2413 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2412, i32 0, i64 3
  %2414 = getelementptr inbounds [23 x [5 x double]]* %2413, i32 0, i64 %2409
  %2415 = getelementptr inbounds [5 x double]* %2414, i32 0, i64 %2407
  %2416 = load double* %2415, align 8
  %2417 = fmul double 4.000000e+00, %2416
  %2418 = fsub double %2405, %2417
  %2419 = load i32* %m, align 4
  %2420 = sext i32 %2419 to i64
  %2421 = load i32* %i, align 4
  %2422 = sext i32 %2421 to i64
  %2423 = load i32* %k, align 4
  %2424 = sext i32 %2423 to i64
  %2425 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2424
  %2426 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2425, i32 0, i64 4
  %2427 = getelementptr inbounds [23 x [5 x double]]* %2426, i32 0, i64 %2422
  %2428 = getelementptr inbounds [5 x double]* %2427, i32 0, i64 %2420
  %2429 = load double* %2428, align 8
  %2430 = fadd double %2418, %2429
  %2431 = fmul double %2380, %2430
  %2432 = fsub double %2379, %2431
  %2433 = load i32* %m, align 4
  %2434 = sext i32 %2433 to i64
  %2435 = load i32* %i, align 4
  %2436 = sext i32 %2435 to i64
  %2437 = load i32* %k, align 4
  %2438 = sext i32 %2437 to i64
  %2439 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2438
  %2440 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2439, i32 0, i64 2
  %2441 = getelementptr inbounds [23 x [5 x double]]* %2440, i32 0, i64 %2436
  %2442 = getelementptr inbounds [5 x double]* %2441, i32 0, i64 %2434
  store double %2432, double* %2442, align 8
  br label %2443

; <label>:2443                                    ; preds = %2307
  %2444 = load i32* %m, align 4
  %2445 = add nsw i32 %2444, 1
  store i32 %2445, i32* %m, align 4
  br label %2304

; <label>:2446                                    ; preds = %2304
  br label %2447

; <label>:2447                                    ; preds = %2446
  %2448 = load i32* %i, align 4
  %2449 = add nsw i32 %2448, 1
  store i32 %2449, i32* %i, align 4
  br label %2299

; <label>:2450                                    ; preds = %2299
  store i32 3, i32* %j, align 4
  br label %2451

; <label>:2451                                    ; preds = %2579, %2450
  %2452 = load i32* %j, align 4
  %2453 = load i32* @ny, align 4
  %2454 = sub nsw i32 %2453, 3
  %2455 = icmp slt i32 %2452, %2454
  br i1 %2455, label %2456, label %2582

; <label>:2456                                    ; preds = %2451
  %2457 = load i32* @ist, align 4
  store i32 %2457, i32* %i, align 4
  br label %2458

; <label>:2458                                    ; preds = %2575, %2456
  %2459 = load i32* %i, align 4
  %2460 = load i32* @iend, align 4
  %2461 = icmp slt i32 %2459, %2460
  br i1 %2461, label %2462, label %2578

; <label>:2462                                    ; preds = %2458
  store i32 0, i32* %m, align 4
  br label %2463

; <label>:2463                                    ; preds = %2571, %2462
  %2464 = load i32* %m, align 4
  %2465 = icmp slt i32 %2464, 5
  br i1 %2465, label %2466, label %2574

; <label>:2466                                    ; preds = %2463
  %2467 = load i32* %m, align 4
  %2468 = sext i32 %2467 to i64
  %2469 = load i32* %i, align 4
  %2470 = sext i32 %2469 to i64
  %2471 = load i32* %j, align 4
  %2472 = sext i32 %2471 to i64
  %2473 = load i32* %k, align 4
  %2474 = sext i32 %2473 to i64
  %2475 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2474
  %2476 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2475, i32 0, i64 %2472
  %2477 = getelementptr inbounds [23 x [5 x double]]* %2476, i32 0, i64 %2470
  %2478 = getelementptr inbounds [5 x double]* %2477, i32 0, i64 %2468
  %2479 = load double* %2478, align 8
  %2480 = load double* @dssp, align 8
  %2481 = load i32* %m, align 4
  %2482 = sext i32 %2481 to i64
  %2483 = load i32* %i, align 4
  %2484 = sext i32 %2483 to i64
  %2485 = load i32* %j, align 4
  %2486 = sub nsw i32 %2485, 2
  %2487 = sext i32 %2486 to i64
  %2488 = load i32* %k, align 4
  %2489 = sext i32 %2488 to i64
  %2490 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2489
  %2491 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2490, i32 0, i64 %2487
  %2492 = getelementptr inbounds [23 x [5 x double]]* %2491, i32 0, i64 %2484
  %2493 = getelementptr inbounds [5 x double]* %2492, i32 0, i64 %2482
  %2494 = load double* %2493, align 8
  %2495 = load i32* %m, align 4
  %2496 = sext i32 %2495 to i64
  %2497 = load i32* %i, align 4
  %2498 = sext i32 %2497 to i64
  %2499 = load i32* %j, align 4
  %2500 = sub nsw i32 %2499, 1
  %2501 = sext i32 %2500 to i64
  %2502 = load i32* %k, align 4
  %2503 = sext i32 %2502 to i64
  %2504 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2503
  %2505 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2504, i32 0, i64 %2501
  %2506 = getelementptr inbounds [23 x [5 x double]]* %2505, i32 0, i64 %2498
  %2507 = getelementptr inbounds [5 x double]* %2506, i32 0, i64 %2496
  %2508 = load double* %2507, align 8
  %2509 = fmul double 4.000000e+00, %2508
  %2510 = fsub double %2494, %2509
  %2511 = load i32* %m, align 4
  %2512 = sext i32 %2511 to i64
  %2513 = load i32* %i, align 4
  %2514 = sext i32 %2513 to i64
  %2515 = load i32* %j, align 4
  %2516 = sext i32 %2515 to i64
  %2517 = load i32* %k, align 4
  %2518 = sext i32 %2517 to i64
  %2519 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2518
  %2520 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2519, i32 0, i64 %2516
  %2521 = getelementptr inbounds [23 x [5 x double]]* %2520, i32 0, i64 %2514
  %2522 = getelementptr inbounds [5 x double]* %2521, i32 0, i64 %2512
  %2523 = load double* %2522, align 8
  %2524 = fmul double 6.000000e+00, %2523
  %2525 = fadd double %2510, %2524
  %2526 = load i32* %m, align 4
  %2527 = sext i32 %2526 to i64
  %2528 = load i32* %i, align 4
  %2529 = sext i32 %2528 to i64
  %2530 = load i32* %j, align 4
  %2531 = add nsw i32 %2530, 1
  %2532 = sext i32 %2531 to i64
  %2533 = load i32* %k, align 4
  %2534 = sext i32 %2533 to i64
  %2535 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2534
  %2536 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2535, i32 0, i64 %2532
  %2537 = getelementptr inbounds [23 x [5 x double]]* %2536, i32 0, i64 %2529
  %2538 = getelementptr inbounds [5 x double]* %2537, i32 0, i64 %2527
  %2539 = load double* %2538, align 8
  %2540 = fmul double 4.000000e+00, %2539
  %2541 = fsub double %2525, %2540
  %2542 = load i32* %m, align 4
  %2543 = sext i32 %2542 to i64
  %2544 = load i32* %i, align 4
  %2545 = sext i32 %2544 to i64
  %2546 = load i32* %j, align 4
  %2547 = add nsw i32 %2546, 2
  %2548 = sext i32 %2547 to i64
  %2549 = load i32* %k, align 4
  %2550 = sext i32 %2549 to i64
  %2551 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2550
  %2552 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2551, i32 0, i64 %2548
  %2553 = getelementptr inbounds [23 x [5 x double]]* %2552, i32 0, i64 %2545
  %2554 = getelementptr inbounds [5 x double]* %2553, i32 0, i64 %2543
  %2555 = load double* %2554, align 8
  %2556 = fadd double %2541, %2555
  %2557 = fmul double %2480, %2556
  %2558 = fsub double %2479, %2557
  %2559 = load i32* %m, align 4
  %2560 = sext i32 %2559 to i64
  %2561 = load i32* %i, align 4
  %2562 = sext i32 %2561 to i64
  %2563 = load i32* %j, align 4
  %2564 = sext i32 %2563 to i64
  %2565 = load i32* %k, align 4
  %2566 = sext i32 %2565 to i64
  %2567 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2566
  %2568 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2567, i32 0, i64 %2564
  %2569 = getelementptr inbounds [23 x [5 x double]]* %2568, i32 0, i64 %2562
  %2570 = getelementptr inbounds [5 x double]* %2569, i32 0, i64 %2560
  store double %2558, double* %2570, align 8
  br label %2571

; <label>:2571                                    ; preds = %2466
  %2572 = load i32* %m, align 4
  %2573 = add nsw i32 %2572, 1
  store i32 %2573, i32* %m, align 4
  br label %2463

; <label>:2574                                    ; preds = %2463
  br label %2575

; <label>:2575                                    ; preds = %2574
  %2576 = load i32* %i, align 4
  %2577 = add nsw i32 %2576, 1
  store i32 %2577, i32* %i, align 4
  br label %2458

; <label>:2578                                    ; preds = %2458
  br label %2579

; <label>:2579                                    ; preds = %2578
  %2580 = load i32* %j, align 4
  %2581 = add nsw i32 %2580, 1
  store i32 %2581, i32* %j, align 4
  br label %2451

; <label>:2582                                    ; preds = %2451
  %2583 = load i32* @ist, align 4
  store i32 %2583, i32* %i, align 4
  br label %2584

; <label>:2584                                    ; preds = %2765, %2582
  %2585 = load i32* %i, align 4
  %2586 = load i32* @iend, align 4
  %2587 = icmp slt i32 %2585, %2586
  br i1 %2587, label %2588, label %2768

; <label>:2588                                    ; preds = %2584
  store i32 0, i32* %m, align 4
  br label %2589

; <label>:2589                                    ; preds = %2761, %2588
  %2590 = load i32* %m, align 4
  %2591 = icmp slt i32 %2590, 5
  br i1 %2591, label %2592, label %2764

; <label>:2592                                    ; preds = %2589
  %2593 = load i32* %m, align 4
  %2594 = sext i32 %2593 to i64
  %2595 = load i32* %i, align 4
  %2596 = sext i32 %2595 to i64
  %2597 = load i32* @ny, align 4
  %2598 = sub nsw i32 %2597, 3
  %2599 = sext i32 %2598 to i64
  %2600 = load i32* %k, align 4
  %2601 = sext i32 %2600 to i64
  %2602 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2601
  %2603 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2602, i32 0, i64 %2599
  %2604 = getelementptr inbounds [23 x [5 x double]]* %2603, i32 0, i64 %2596
  %2605 = getelementptr inbounds [5 x double]* %2604, i32 0, i64 %2594
  %2606 = load double* %2605, align 8
  %2607 = load double* @dssp, align 8
  %2608 = load i32* %m, align 4
  %2609 = sext i32 %2608 to i64
  %2610 = load i32* %i, align 4
  %2611 = sext i32 %2610 to i64
  %2612 = load i32* @ny, align 4
  %2613 = sub nsw i32 %2612, 5
  %2614 = sext i32 %2613 to i64
  %2615 = load i32* %k, align 4
  %2616 = sext i32 %2615 to i64
  %2617 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2616
  %2618 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2617, i32 0, i64 %2614
  %2619 = getelementptr inbounds [23 x [5 x double]]* %2618, i32 0, i64 %2611
  %2620 = getelementptr inbounds [5 x double]* %2619, i32 0, i64 %2609
  %2621 = load double* %2620, align 8
  %2622 = load i32* %m, align 4
  %2623 = sext i32 %2622 to i64
  %2624 = load i32* %i, align 4
  %2625 = sext i32 %2624 to i64
  %2626 = load i32* @ny, align 4
  %2627 = sub nsw i32 %2626, 4
  %2628 = sext i32 %2627 to i64
  %2629 = load i32* %k, align 4
  %2630 = sext i32 %2629 to i64
  %2631 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2630
  %2632 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2631, i32 0, i64 %2628
  %2633 = getelementptr inbounds [23 x [5 x double]]* %2632, i32 0, i64 %2625
  %2634 = getelementptr inbounds [5 x double]* %2633, i32 0, i64 %2623
  %2635 = load double* %2634, align 8
  %2636 = fmul double 4.000000e+00, %2635
  %2637 = fsub double %2621, %2636
  %2638 = load i32* %m, align 4
  %2639 = sext i32 %2638 to i64
  %2640 = load i32* %i, align 4
  %2641 = sext i32 %2640 to i64
  %2642 = load i32* @ny, align 4
  %2643 = sub nsw i32 %2642, 3
  %2644 = sext i32 %2643 to i64
  %2645 = load i32* %k, align 4
  %2646 = sext i32 %2645 to i64
  %2647 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2646
  %2648 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2647, i32 0, i64 %2644
  %2649 = getelementptr inbounds [23 x [5 x double]]* %2648, i32 0, i64 %2641
  %2650 = getelementptr inbounds [5 x double]* %2649, i32 0, i64 %2639
  %2651 = load double* %2650, align 8
  %2652 = fmul double 6.000000e+00, %2651
  %2653 = fadd double %2637, %2652
  %2654 = load i32* %m, align 4
  %2655 = sext i32 %2654 to i64
  %2656 = load i32* %i, align 4
  %2657 = sext i32 %2656 to i64
  %2658 = load i32* @ny, align 4
  %2659 = sub nsw i32 %2658, 2
  %2660 = sext i32 %2659 to i64
  %2661 = load i32* %k, align 4
  %2662 = sext i32 %2661 to i64
  %2663 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2662
  %2664 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2663, i32 0, i64 %2660
  %2665 = getelementptr inbounds [23 x [5 x double]]* %2664, i32 0, i64 %2657
  %2666 = getelementptr inbounds [5 x double]* %2665, i32 0, i64 %2655
  %2667 = load double* %2666, align 8
  %2668 = fmul double 4.000000e+00, %2667
  %2669 = fsub double %2653, %2668
  %2670 = fmul double %2607, %2669
  %2671 = fsub double %2606, %2670
  %2672 = load i32* %m, align 4
  %2673 = sext i32 %2672 to i64
  %2674 = load i32* %i, align 4
  %2675 = sext i32 %2674 to i64
  %2676 = load i32* @ny, align 4
  %2677 = sub nsw i32 %2676, 3
  %2678 = sext i32 %2677 to i64
  %2679 = load i32* %k, align 4
  %2680 = sext i32 %2679 to i64
  %2681 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2680
  %2682 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2681, i32 0, i64 %2678
  %2683 = getelementptr inbounds [23 x [5 x double]]* %2682, i32 0, i64 %2675
  %2684 = getelementptr inbounds [5 x double]* %2683, i32 0, i64 %2673
  store double %2671, double* %2684, align 8
  %2685 = load i32* %m, align 4
  %2686 = sext i32 %2685 to i64
  %2687 = load i32* %i, align 4
  %2688 = sext i32 %2687 to i64
  %2689 = load i32* @ny, align 4
  %2690 = sub nsw i32 %2689, 2
  %2691 = sext i32 %2690 to i64
  %2692 = load i32* %k, align 4
  %2693 = sext i32 %2692 to i64
  %2694 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2693
  %2695 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2694, i32 0, i64 %2691
  %2696 = getelementptr inbounds [23 x [5 x double]]* %2695, i32 0, i64 %2688
  %2697 = getelementptr inbounds [5 x double]* %2696, i32 0, i64 %2686
  %2698 = load double* %2697, align 8
  %2699 = load double* @dssp, align 8
  %2700 = load i32* %m, align 4
  %2701 = sext i32 %2700 to i64
  %2702 = load i32* %i, align 4
  %2703 = sext i32 %2702 to i64
  %2704 = load i32* @ny, align 4
  %2705 = sub nsw i32 %2704, 4
  %2706 = sext i32 %2705 to i64
  %2707 = load i32* %k, align 4
  %2708 = sext i32 %2707 to i64
  %2709 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2708
  %2710 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2709, i32 0, i64 %2706
  %2711 = getelementptr inbounds [23 x [5 x double]]* %2710, i32 0, i64 %2703
  %2712 = getelementptr inbounds [5 x double]* %2711, i32 0, i64 %2701
  %2713 = load double* %2712, align 8
  %2714 = load i32* %m, align 4
  %2715 = sext i32 %2714 to i64
  %2716 = load i32* %i, align 4
  %2717 = sext i32 %2716 to i64
  %2718 = load i32* @ny, align 4
  %2719 = sub nsw i32 %2718, 3
  %2720 = sext i32 %2719 to i64
  %2721 = load i32* %k, align 4
  %2722 = sext i32 %2721 to i64
  %2723 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2722
  %2724 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2723, i32 0, i64 %2720
  %2725 = getelementptr inbounds [23 x [5 x double]]* %2724, i32 0, i64 %2717
  %2726 = getelementptr inbounds [5 x double]* %2725, i32 0, i64 %2715
  %2727 = load double* %2726, align 8
  %2728 = fmul double 4.000000e+00, %2727
  %2729 = fsub double %2713, %2728
  %2730 = load i32* %m, align 4
  %2731 = sext i32 %2730 to i64
  %2732 = load i32* %i, align 4
  %2733 = sext i32 %2732 to i64
  %2734 = load i32* @ny, align 4
  %2735 = sub nsw i32 %2734, 2
  %2736 = sext i32 %2735 to i64
  %2737 = load i32* %k, align 4
  %2738 = sext i32 %2737 to i64
  %2739 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2738
  %2740 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2739, i32 0, i64 %2736
  %2741 = getelementptr inbounds [23 x [5 x double]]* %2740, i32 0, i64 %2733
  %2742 = getelementptr inbounds [5 x double]* %2741, i32 0, i64 %2731
  %2743 = load double* %2742, align 8
  %2744 = fmul double 5.000000e+00, %2743
  %2745 = fadd double %2729, %2744
  %2746 = fmul double %2699, %2745
  %2747 = fsub double %2698, %2746
  %2748 = load i32* %m, align 4
  %2749 = sext i32 %2748 to i64
  %2750 = load i32* %i, align 4
  %2751 = sext i32 %2750 to i64
  %2752 = load i32* @ny, align 4
  %2753 = sub nsw i32 %2752, 2
  %2754 = sext i32 %2753 to i64
  %2755 = load i32* %k, align 4
  %2756 = sext i32 %2755 to i64
  %2757 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %2756
  %2758 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2757, i32 0, i64 %2754
  %2759 = getelementptr inbounds [23 x [5 x double]]* %2758, i32 0, i64 %2751
  %2760 = getelementptr inbounds [5 x double]* %2759, i32 0, i64 %2749
  store double %2747, double* %2760, align 8
  br label %2761

; <label>:2761                                    ; preds = %2592
  %2762 = load i32* %m, align 4
  %2763 = add nsw i32 %2762, 1
  store i32 %2763, i32* %m, align 4
  br label %2589

; <label>:2764                                    ; preds = %2589
  br label %2765

; <label>:2765                                    ; preds = %2764
  %2766 = load i32* %i, align 4
  %2767 = add nsw i32 %2766, 1
  store i32 %2767, i32* %i, align 4
  br label %2584

; <label>:2768                                    ; preds = %2584
  br label %2769

; <label>:2769                                    ; preds = %2768
  %2770 = load i32* %k, align 4
  %2771 = add nsw i32 %2770, 1
  store i32 %2771, i32* %k, align 4
  br label %1463

; <label>:2772                                    ; preds = %1463
  %2773 = load i32* @timeron, align 4
  %2774 = icmp ne i32 %2773, 0
  br i1 %2774, label %2775, label %2776

; <label>:2775                                    ; preds = %2772
  call void @timer_stop(i32 3)
  br label %2776

; <label>:2776                                    ; preds = %2775, %2772
  %2777 = load i32* @timeron, align 4
  %2778 = icmp ne i32 %2777, 0
  br i1 %2778, label %2779, label %2780

; <label>:2779                                    ; preds = %2776
  call void @timer_start(i32 4)
  br label %2780

; <label>:2780                                    ; preds = %2779, %2776
  %2781 = load i32* @jst, align 4
  store i32 %2781, i32* %j, align 4
  br label %2782

; <label>:2782                                    ; preds = %3747, %2780
  %2783 = load i32* %j, align 4
  %2784 = load i32* @jend, align 4
  %2785 = icmp slt i32 %2783, %2784
  br i1 %2785, label %2786, label %3750

; <label>:2786                                    ; preds = %2782
  %2787 = load i32* @ist, align 4
  store i32 %2787, i32* %i, align 4
  br label %2788

; <label>:2788                                    ; preds = %3743, %2786
  %2789 = load i32* %i, align 4
  %2790 = load i32* @iend, align 4
  %2791 = icmp slt i32 %2789, %2790
  br i1 %2791, label %2792, label %3746

; <label>:2792                                    ; preds = %2788
  store i32 0, i32* %k, align 4
  br label %2793

; <label>:2793                                    ; preds = %2887, %2792
  %2794 = load i32* %k, align 4
  %2795 = load i32* @nz, align 4
  %2796 = icmp slt i32 %2794, %2795
  br i1 %2796, label %2797, label %2890

; <label>:2797                                    ; preds = %2793
  %2798 = load i32* %i, align 4
  %2799 = sext i32 %2798 to i64
  %2800 = load i32* %j, align 4
  %2801 = sext i32 %2800 to i64
  %2802 = load i32* %k, align 4
  %2803 = sext i32 %2802 to i64
  %2804 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2803
  %2805 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2804, i32 0, i64 %2801
  %2806 = getelementptr inbounds [23 x [5 x double]]* %2805, i32 0, i64 %2799
  %2807 = getelementptr inbounds [5 x double]* %2806, i32 0, i64 0
  %2808 = load double* %2807, align 8
  %2809 = load i32* %k, align 4
  %2810 = sext i32 %2809 to i64
  %2811 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %2810
  %2812 = getelementptr inbounds [6 x double]* %2811, i32 0, i64 0
  store double %2808, double* %2812, align 8
  %2813 = load i32* %i, align 4
  %2814 = sext i32 %2813 to i64
  %2815 = load i32* %j, align 4
  %2816 = sext i32 %2815 to i64
  %2817 = load i32* %k, align 4
  %2818 = sext i32 %2817 to i64
  %2819 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2818
  %2820 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2819, i32 0, i64 %2816
  %2821 = getelementptr inbounds [23 x [5 x double]]* %2820, i32 0, i64 %2814
  %2822 = getelementptr inbounds [5 x double]* %2821, i32 0, i64 1
  %2823 = load double* %2822, align 8
  %2824 = load i32* %k, align 4
  %2825 = sext i32 %2824 to i64
  %2826 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %2825
  %2827 = getelementptr inbounds [6 x double]* %2826, i32 0, i64 1
  store double %2823, double* %2827, align 8
  %2828 = load i32* %i, align 4
  %2829 = sext i32 %2828 to i64
  %2830 = load i32* %j, align 4
  %2831 = sext i32 %2830 to i64
  %2832 = load i32* %k, align 4
  %2833 = sext i32 %2832 to i64
  %2834 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2833
  %2835 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2834, i32 0, i64 %2831
  %2836 = getelementptr inbounds [23 x [5 x double]]* %2835, i32 0, i64 %2829
  %2837 = getelementptr inbounds [5 x double]* %2836, i32 0, i64 2
  %2838 = load double* %2837, align 8
  %2839 = load i32* %k, align 4
  %2840 = sext i32 %2839 to i64
  %2841 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %2840
  %2842 = getelementptr inbounds [6 x double]* %2841, i32 0, i64 2
  store double %2838, double* %2842, align 8
  %2843 = load i32* %i, align 4
  %2844 = sext i32 %2843 to i64
  %2845 = load i32* %j, align 4
  %2846 = sext i32 %2845 to i64
  %2847 = load i32* %k, align 4
  %2848 = sext i32 %2847 to i64
  %2849 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2848
  %2850 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2849, i32 0, i64 %2846
  %2851 = getelementptr inbounds [23 x [5 x double]]* %2850, i32 0, i64 %2844
  %2852 = getelementptr inbounds [5 x double]* %2851, i32 0, i64 3
  %2853 = load double* %2852, align 8
  %2854 = load i32* %k, align 4
  %2855 = sext i32 %2854 to i64
  %2856 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %2855
  %2857 = getelementptr inbounds [6 x double]* %2856, i32 0, i64 3
  store double %2853, double* %2857, align 8
  %2858 = load i32* %i, align 4
  %2859 = sext i32 %2858 to i64
  %2860 = load i32* %j, align 4
  %2861 = sext i32 %2860 to i64
  %2862 = load i32* %k, align 4
  %2863 = sext i32 %2862 to i64
  %2864 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %2863
  %2865 = getelementptr inbounds [23 x [23 x [5 x double]]]* %2864, i32 0, i64 %2861
  %2866 = getelementptr inbounds [23 x [5 x double]]* %2865, i32 0, i64 %2859
  %2867 = getelementptr inbounds [5 x double]* %2866, i32 0, i64 4
  %2868 = load double* %2867, align 8
  %2869 = load i32* %k, align 4
  %2870 = sext i32 %2869 to i64
  %2871 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %2870
  %2872 = getelementptr inbounds [6 x double]* %2871, i32 0, i64 4
  store double %2868, double* %2872, align 8
  %2873 = load i32* %i, align 4
  %2874 = sext i32 %2873 to i64
  %2875 = load i32* %j, align 4
  %2876 = sext i32 %2875 to i64
  %2877 = load i32* %k, align 4
  %2878 = sext i32 %2877 to i64
  %2879 = getelementptr inbounds [22 x [23 x [23 x double]]]* @rho_i, i32 0, i64 %2878
  %2880 = getelementptr inbounds [23 x [23 x double]]* %2879, i32 0, i64 %2876
  %2881 = getelementptr inbounds [23 x double]* %2880, i32 0, i64 %2874
  %2882 = load double* %2881, align 8
  %2883 = load i32* %k, align 4
  %2884 = sext i32 %2883 to i64
  %2885 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %2884
  %2886 = getelementptr inbounds [6 x double]* %2885, i32 0, i64 5
  store double %2882, double* %2886, align 8
  br label %2887

; <label>:2887                                    ; preds = %2797
  %2888 = load i32* %k, align 4
  %2889 = add nsw i32 %2888, 1
  store i32 %2889, i32* %k, align 4
  br label %2793

; <label>:2890                                    ; preds = %2793
  store i32 0, i32* %k, align 4
  br label %2891

; <label>:2891                                    ; preds = %2983, %2890
  %2892 = load i32* %k, align 4
  %2893 = load i32* @nz, align 4
  %2894 = icmp slt i32 %2892, %2893
  br i1 %2894, label %2895, label %2986

; <label>:2895                                    ; preds = %2891
  %2896 = load i32* %k, align 4
  %2897 = sext i32 %2896 to i64
  %2898 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %2897
  %2899 = getelementptr inbounds [6 x double]* %2898, i32 0, i64 3
  %2900 = load double* %2899, align 8
  %2901 = load i32* %k, align 4
  %2902 = sext i32 %2901 to i64
  %2903 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %2902
  %2904 = getelementptr inbounds [5 x double]* %2903, i32 0, i64 0
  store double %2900, double* %2904, align 8
  %2905 = load i32* %k, align 4
  %2906 = sext i32 %2905 to i64
  %2907 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %2906
  %2908 = getelementptr inbounds [6 x double]* %2907, i32 0, i64 3
  %2909 = load double* %2908, align 8
  %2910 = load i32* %k, align 4
  %2911 = sext i32 %2910 to i64
  %2912 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %2911
  %2913 = getelementptr inbounds [6 x double]* %2912, i32 0, i64 5
  %2914 = load double* %2913, align 8
  %2915 = fmul double %2909, %2914
  store double %2915, double* %u41, align 8
  %2916 = load i32* %i, align 4
  %2917 = sext i32 %2916 to i64
  %2918 = load i32* %j, align 4
  %2919 = sext i32 %2918 to i64
  %2920 = load i32* %k, align 4
  %2921 = sext i32 %2920 to i64
  %2922 = getelementptr inbounds [22 x [23 x [23 x double]]]* @qs, i32 0, i64 %2921
  %2923 = getelementptr inbounds [23 x [23 x double]]* %2922, i32 0, i64 %2919
  %2924 = getelementptr inbounds [23 x double]* %2923, i32 0, i64 %2917
  %2925 = load double* %2924, align 8
  store double %2925, double* %q, align 8
  %2926 = load i32* %k, align 4
  %2927 = sext i32 %2926 to i64
  %2928 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %2927
  %2929 = getelementptr inbounds [6 x double]* %2928, i32 0, i64 1
  %2930 = load double* %2929, align 8
  %2931 = load double* %u41, align 8
  %2932 = fmul double %2930, %2931
  %2933 = load i32* %k, align 4
  %2934 = sext i32 %2933 to i64
  %2935 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %2934
  %2936 = getelementptr inbounds [5 x double]* %2935, i32 0, i64 1
  store double %2932, double* %2936, align 8
  %2937 = load i32* %k, align 4
  %2938 = sext i32 %2937 to i64
  %2939 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %2938
  %2940 = getelementptr inbounds [6 x double]* %2939, i32 0, i64 2
  %2941 = load double* %2940, align 8
  %2942 = load double* %u41, align 8
  %2943 = fmul double %2941, %2942
  %2944 = load i32* %k, align 4
  %2945 = sext i32 %2944 to i64
  %2946 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %2945
  %2947 = getelementptr inbounds [5 x double]* %2946, i32 0, i64 2
  store double %2943, double* %2947, align 8
  %2948 = load i32* %k, align 4
  %2949 = sext i32 %2948 to i64
  %2950 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %2949
  %2951 = getelementptr inbounds [6 x double]* %2950, i32 0, i64 3
  %2952 = load double* %2951, align 8
  %2953 = load double* %u41, align 8
  %2954 = fmul double %2952, %2953
  %2955 = load i32* %k, align 4
  %2956 = sext i32 %2955 to i64
  %2957 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %2956
  %2958 = getelementptr inbounds [6 x double]* %2957, i32 0, i64 4
  %2959 = load double* %2958, align 8
  %2960 = load double* %q, align 8
  %2961 = fsub double %2959, %2960
  %2962 = fmul double 4.000000e-01, %2961
  %2963 = fadd double %2954, %2962
  %2964 = load i32* %k, align 4
  %2965 = sext i32 %2964 to i64
  %2966 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %2965
  %2967 = getelementptr inbounds [5 x double]* %2966, i32 0, i64 3
  store double %2963, double* %2967, align 8
  %2968 = load i32* %k, align 4
  %2969 = sext i32 %2968 to i64
  %2970 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %2969
  %2971 = getelementptr inbounds [6 x double]* %2970, i32 0, i64 4
  %2972 = load double* %2971, align 8
  %2973 = fmul double 1.400000e+00, %2972
  %2974 = load double* %q, align 8
  %2975 = fmul double 4.000000e-01, %2974
  %2976 = fsub double %2973, %2975
  %2977 = load double* %u41, align 8
  %2978 = fmul double %2976, %2977
  %2979 = load i32* %k, align 4
  %2980 = sext i32 %2979 to i64
  %2981 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %2980
  %2982 = getelementptr inbounds [5 x double]* %2981, i32 0, i64 4
  store double %2978, double* %2982, align 8
  br label %2983

; <label>:2983                                    ; preds = %2895
  %2984 = load i32* %k, align 4
  %2985 = add nsw i32 %2984, 1
  store i32 %2985, i32* %k, align 4
  br label %2891

; <label>:2986                                    ; preds = %2891
  store i32 1, i32* %k, align 4
  br label %2987

; <label>:2987                                    ; preds = %3040, %2986
  %2988 = load i32* %k, align 4
  %2989 = load i32* @nz, align 4
  %2990 = sub nsw i32 %2989, 1
  %2991 = icmp slt i32 %2988, %2990
  br i1 %2991, label %2992, label %3043

; <label>:2992                                    ; preds = %2987
  store i32 0, i32* %m, align 4
  br label %2993

; <label>:2993                                    ; preds = %3036, %2992
  %2994 = load i32* %m, align 4
  %2995 = icmp slt i32 %2994, 5
  br i1 %2995, label %2996, label %3039

; <label>:2996                                    ; preds = %2993
  %2997 = load i32* %m, align 4
  %2998 = sext i32 %2997 to i64
  %2999 = load i32* %i, align 4
  %3000 = sext i32 %2999 to i64
  %3001 = load i32* %j, align 4
  %3002 = sext i32 %3001 to i64
  %3003 = load i32* %k, align 4
  %3004 = sext i32 %3003 to i64
  %3005 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3004
  %3006 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3005, i32 0, i64 %3002
  %3007 = getelementptr inbounds [23 x [5 x double]]* %3006, i32 0, i64 %3000
  %3008 = getelementptr inbounds [5 x double]* %3007, i32 0, i64 %2998
  %3009 = load double* %3008, align 8
  %3010 = load double* @tz2, align 8
  %3011 = load i32* %m, align 4
  %3012 = sext i32 %3011 to i64
  %3013 = load i32* %k, align 4
  %3014 = add nsw i32 %3013, 1
  %3015 = sext i32 %3014 to i64
  %3016 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3015
  %3017 = getelementptr inbounds [5 x double]* %3016, i32 0, i64 %3012
  %3018 = load double* %3017, align 8
  %3019 = load i32* %m, align 4
  %3020 = sext i32 %3019 to i64
  %3021 = load i32* %k, align 4
  %3022 = sub nsw i32 %3021, 1
  %3023 = sext i32 %3022 to i64
  %3024 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3023
  %3025 = getelementptr inbounds [5 x double]* %3024, i32 0, i64 %3020
  %3026 = load double* %3025, align 8
  %3027 = fsub double %3018, %3026
  %3028 = fmul double %3010, %3027
  %3029 = fsub double %3009, %3028
  %3030 = load i32* %m, align 4
  %3031 = sext i32 %3030 to i64
  %3032 = load i32* %k, align 4
  %3033 = sext i32 %3032 to i64
  %3034 = getelementptr inbounds [22 x [5 x double]]* %rtmp, i32 0, i64 %3033
  %3035 = getelementptr inbounds [5 x double]* %3034, i32 0, i64 %3031
  store double %3029, double* %3035, align 8
  br label %3036

; <label>:3036                                    ; preds = %2996
  %3037 = load i32* %m, align 4
  %3038 = add nsw i32 %3037, 1
  store i32 %3038, i32* %m, align 4
  br label %2993

; <label>:3039                                    ; preds = %2993
  br label %3040

; <label>:3040                                    ; preds = %3039
  %3041 = load i32* %k, align 4
  %3042 = add nsw i32 %3041, 1
  store i32 %3042, i32* %k, align 4
  br label %2987

; <label>:3043                                    ; preds = %2987
  store i32 1, i32* %k, align 4
  br label %3044

; <label>:3044                                    ; preds = %3196, %3043
  %3045 = load i32* %k, align 4
  %3046 = load i32* @nz, align 4
  %3047 = icmp slt i32 %3045, %3046
  br i1 %3047, label %3048, label %3199

; <label>:3048                                    ; preds = %3044
  %3049 = load i32* %k, align 4
  %3050 = sext i32 %3049 to i64
  %3051 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3050
  %3052 = getelementptr inbounds [6 x double]* %3051, i32 0, i64 5
  %3053 = load double* %3052, align 8
  store double %3053, double* %tmp, align 8
  %3054 = load double* %tmp, align 8
  %3055 = load i32* %k, align 4
  %3056 = sext i32 %3055 to i64
  %3057 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3056
  %3058 = getelementptr inbounds [6 x double]* %3057, i32 0, i64 1
  %3059 = load double* %3058, align 8
  %3060 = fmul double %3054, %3059
  store double %3060, double* %u21k, align 8
  %3061 = load double* %tmp, align 8
  %3062 = load i32* %k, align 4
  %3063 = sext i32 %3062 to i64
  %3064 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3063
  %3065 = getelementptr inbounds [6 x double]* %3064, i32 0, i64 2
  %3066 = load double* %3065, align 8
  %3067 = fmul double %3061, %3066
  store double %3067, double* %u31k, align 8
  %3068 = load double* %tmp, align 8
  %3069 = load i32* %k, align 4
  %3070 = sext i32 %3069 to i64
  %3071 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3070
  %3072 = getelementptr inbounds [6 x double]* %3071, i32 0, i64 3
  %3073 = load double* %3072, align 8
  %3074 = fmul double %3068, %3073
  store double %3074, double* %u41k, align 8
  %3075 = load double* %tmp, align 8
  %3076 = load i32* %k, align 4
  %3077 = sext i32 %3076 to i64
  %3078 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3077
  %3079 = getelementptr inbounds [6 x double]* %3078, i32 0, i64 4
  %3080 = load double* %3079, align 8
  %3081 = fmul double %3075, %3080
  store double %3081, double* %u51k, align 8
  %3082 = load i32* %k, align 4
  %3083 = sub nsw i32 %3082, 1
  %3084 = sext i32 %3083 to i64
  %3085 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3084
  %3086 = getelementptr inbounds [6 x double]* %3085, i32 0, i64 5
  %3087 = load double* %3086, align 8
  store double %3087, double* %tmp, align 8
  %3088 = load double* %tmp, align 8
  %3089 = load i32* %k, align 4
  %3090 = sub nsw i32 %3089, 1
  %3091 = sext i32 %3090 to i64
  %3092 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3091
  %3093 = getelementptr inbounds [6 x double]* %3092, i32 0, i64 1
  %3094 = load double* %3093, align 8
  %3095 = fmul double %3088, %3094
  store double %3095, double* %u21km1, align 8
  %3096 = load double* %tmp, align 8
  %3097 = load i32* %k, align 4
  %3098 = sub nsw i32 %3097, 1
  %3099 = sext i32 %3098 to i64
  %3100 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3099
  %3101 = getelementptr inbounds [6 x double]* %3100, i32 0, i64 2
  %3102 = load double* %3101, align 8
  %3103 = fmul double %3096, %3102
  store double %3103, double* %u31km1, align 8
  %3104 = load double* %tmp, align 8
  %3105 = load i32* %k, align 4
  %3106 = sub nsw i32 %3105, 1
  %3107 = sext i32 %3106 to i64
  %3108 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3107
  %3109 = getelementptr inbounds [6 x double]* %3108, i32 0, i64 3
  %3110 = load double* %3109, align 8
  %3111 = fmul double %3104, %3110
  store double %3111, double* %u41km1, align 8
  %3112 = load double* %tmp, align 8
  %3113 = load i32* %k, align 4
  %3114 = sub nsw i32 %3113, 1
  %3115 = sext i32 %3114 to i64
  %3116 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3115
  %3117 = getelementptr inbounds [6 x double]* %3116, i32 0, i64 4
  %3118 = load double* %3117, align 8
  %3119 = fmul double %3112, %3118
  store double %3119, double* %u51km1, align 8
  %3120 = load double* @tz3, align 8
  %3121 = load double* %u21k, align 8
  %3122 = load double* %u21km1, align 8
  %3123 = fsub double %3121, %3122
  %3124 = fmul double %3120, %3123
  %3125 = load i32* %k, align 4
  %3126 = sext i32 %3125 to i64
  %3127 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3126
  %3128 = getelementptr inbounds [5 x double]* %3127, i32 0, i64 1
  store double %3124, double* %3128, align 8
  %3129 = load double* @tz3, align 8
  %3130 = load double* %u31k, align 8
  %3131 = load double* %u31km1, align 8
  %3132 = fsub double %3130, %3131
  %3133 = fmul double %3129, %3132
  %3134 = load i32* %k, align 4
  %3135 = sext i32 %3134 to i64
  %3136 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3135
  %3137 = getelementptr inbounds [5 x double]* %3136, i32 0, i64 2
  store double %3133, double* %3137, align 8
  %3138 = load double* @tz3, align 8
  %3139 = fmul double 0x3FF5555555555555, %3138
  %3140 = load double* %u41k, align 8
  %3141 = load double* %u41km1, align 8
  %3142 = fsub double %3140, %3141
  %3143 = fmul double %3139, %3142
  %3144 = load i32* %k, align 4
  %3145 = sext i32 %3144 to i64
  %3146 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3145
  %3147 = getelementptr inbounds [5 x double]* %3146, i32 0, i64 3
  store double %3143, double* %3147, align 8
  %3148 = load double* @tz3, align 8
  %3149 = fmul double 0xBFDEB851EB851EB6, %3148
  %3150 = load double* %u21k, align 8
  %3151 = load double* %u21k, align 8
  %3152 = fmul double %3150, %3151
  %3153 = load double* %u31k, align 8
  %3154 = load double* %u31k, align 8
  %3155 = fmul double %3153, %3154
  %3156 = fadd double %3152, %3155
  %3157 = load double* %u41k, align 8
  %3158 = load double* %u41k, align 8
  %3159 = fmul double %3157, %3158
  %3160 = fadd double %3156, %3159
  %3161 = load double* %u21km1, align 8
  %3162 = load double* %u21km1, align 8
  %3163 = fmul double %3161, %3162
  %3164 = load double* %u31km1, align 8
  %3165 = load double* %u31km1, align 8
  %3166 = fmul double %3164, %3165
  %3167 = fadd double %3163, %3166
  %3168 = load double* %u41km1, align 8
  %3169 = load double* %u41km1, align 8
  %3170 = fmul double %3168, %3169
  %3171 = fadd double %3167, %3170
  %3172 = fsub double %3160, %3171
  %3173 = fmul double %3149, %3172
  %3174 = load double* @tz3, align 8
  %3175 = fmul double 0x3FC5555555555555, %3174
  %3176 = load double* %u41k, align 8
  %3177 = load double* %u41k, align 8
  %3178 = fmul double %3176, %3177
  %3179 = load double* %u41km1, align 8
  %3180 = load double* %u41km1, align 8
  %3181 = fmul double %3179, %3180
  %3182 = fsub double %3178, %3181
  %3183 = fmul double %3175, %3182
  %3184 = fadd double %3173, %3183
  %3185 = load double* @tz3, align 8
  %3186 = fmul double 0x3FFF5C28F5C28F5B, %3185
  %3187 = load double* %u51k, align 8
  %3188 = load double* %u51km1, align 8
  %3189 = fsub double %3187, %3188
  %3190 = fmul double %3186, %3189
  %3191 = fadd double %3184, %3190
  %3192 = load i32* %k, align 4
  %3193 = sext i32 %3192 to i64
  %3194 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3193
  %3195 = getelementptr inbounds [5 x double]* %3194, i32 0, i64 4
  store double %3191, double* %3195, align 8
  br label %3196

; <label>:3196                                    ; preds = %3048
  %3197 = load i32* %k, align 4
  %3198 = add nsw i32 %3197, 1
  store i32 %3198, i32* %k, align 4
  br label %3044

; <label>:3199                                    ; preds = %3044
  store i32 1, i32* %k, align 4
  br label %3200

; <label>:3200                                    ; preds = %3444, %3199
  %3201 = load i32* %k, align 4
  %3202 = load i32* @nz, align 4
  %3203 = sub nsw i32 %3202, 1
  %3204 = icmp slt i32 %3201, %3203
  br i1 %3204, label %3205, label %3447

; <label>:3205                                    ; preds = %3200
  %3206 = load i32* %k, align 4
  %3207 = sext i32 %3206 to i64
  %3208 = getelementptr inbounds [22 x [5 x double]]* %rtmp, i32 0, i64 %3207
  %3209 = getelementptr inbounds [5 x double]* %3208, i32 0, i64 0
  %3210 = load double* %3209, align 8
  %3211 = load double* @dz1, align 8
  %3212 = load double* @tz1, align 8
  %3213 = fmul double %3211, %3212
  %3214 = load i32* %k, align 4
  %3215 = sub nsw i32 %3214, 1
  %3216 = sext i32 %3215 to i64
  %3217 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3216
  %3218 = getelementptr inbounds [6 x double]* %3217, i32 0, i64 0
  %3219 = load double* %3218, align 8
  %3220 = load i32* %k, align 4
  %3221 = sext i32 %3220 to i64
  %3222 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3221
  %3223 = getelementptr inbounds [6 x double]* %3222, i32 0, i64 0
  %3224 = load double* %3223, align 8
  %3225 = fmul double 2.000000e+00, %3224
  %3226 = fsub double %3219, %3225
  %3227 = load i32* %k, align 4
  %3228 = add nsw i32 %3227, 1
  %3229 = sext i32 %3228 to i64
  %3230 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3229
  %3231 = getelementptr inbounds [6 x double]* %3230, i32 0, i64 0
  %3232 = load double* %3231, align 8
  %3233 = fadd double %3226, %3232
  %3234 = fmul double %3213, %3233
  %3235 = fadd double %3210, %3234
  %3236 = load i32* %k, align 4
  %3237 = sext i32 %3236 to i64
  %3238 = getelementptr inbounds [22 x [5 x double]]* %rtmp, i32 0, i64 %3237
  %3239 = getelementptr inbounds [5 x double]* %3238, i32 0, i64 0
  store double %3235, double* %3239, align 8
  %3240 = load i32* %k, align 4
  %3241 = sext i32 %3240 to i64
  %3242 = getelementptr inbounds [22 x [5 x double]]* %rtmp, i32 0, i64 %3241
  %3243 = getelementptr inbounds [5 x double]* %3242, i32 0, i64 1
  %3244 = load double* %3243, align 8
  %3245 = load double* @tz3, align 8
  %3246 = fmul double %3245, 1.000000e-01
  %3247 = fmul double %3246, 1.000000e+00
  %3248 = load i32* %k, align 4
  %3249 = add nsw i32 %3248, 1
  %3250 = sext i32 %3249 to i64
  %3251 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3250
  %3252 = getelementptr inbounds [5 x double]* %3251, i32 0, i64 1
  %3253 = load double* %3252, align 8
  %3254 = load i32* %k, align 4
  %3255 = sext i32 %3254 to i64
  %3256 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3255
  %3257 = getelementptr inbounds [5 x double]* %3256, i32 0, i64 1
  %3258 = load double* %3257, align 8
  %3259 = fsub double %3253, %3258
  %3260 = fmul double %3247, %3259
  %3261 = fadd double %3244, %3260
  %3262 = load double* @dz2, align 8
  %3263 = load double* @tz1, align 8
  %3264 = fmul double %3262, %3263
  %3265 = load i32* %k, align 4
  %3266 = sub nsw i32 %3265, 1
  %3267 = sext i32 %3266 to i64
  %3268 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3267
  %3269 = getelementptr inbounds [6 x double]* %3268, i32 0, i64 1
  %3270 = load double* %3269, align 8
  %3271 = load i32* %k, align 4
  %3272 = sext i32 %3271 to i64
  %3273 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3272
  %3274 = getelementptr inbounds [6 x double]* %3273, i32 0, i64 1
  %3275 = load double* %3274, align 8
  %3276 = fmul double 2.000000e+00, %3275
  %3277 = fsub double %3270, %3276
  %3278 = load i32* %k, align 4
  %3279 = add nsw i32 %3278, 1
  %3280 = sext i32 %3279 to i64
  %3281 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3280
  %3282 = getelementptr inbounds [6 x double]* %3281, i32 0, i64 1
  %3283 = load double* %3282, align 8
  %3284 = fadd double %3277, %3283
  %3285 = fmul double %3264, %3284
  %3286 = fadd double %3261, %3285
  %3287 = load i32* %k, align 4
  %3288 = sext i32 %3287 to i64
  %3289 = getelementptr inbounds [22 x [5 x double]]* %rtmp, i32 0, i64 %3288
  %3290 = getelementptr inbounds [5 x double]* %3289, i32 0, i64 1
  store double %3286, double* %3290, align 8
  %3291 = load i32* %k, align 4
  %3292 = sext i32 %3291 to i64
  %3293 = getelementptr inbounds [22 x [5 x double]]* %rtmp, i32 0, i64 %3292
  %3294 = getelementptr inbounds [5 x double]* %3293, i32 0, i64 2
  %3295 = load double* %3294, align 8
  %3296 = load double* @tz3, align 8
  %3297 = fmul double %3296, 1.000000e-01
  %3298 = fmul double %3297, 1.000000e+00
  %3299 = load i32* %k, align 4
  %3300 = add nsw i32 %3299, 1
  %3301 = sext i32 %3300 to i64
  %3302 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3301
  %3303 = getelementptr inbounds [5 x double]* %3302, i32 0, i64 2
  %3304 = load double* %3303, align 8
  %3305 = load i32* %k, align 4
  %3306 = sext i32 %3305 to i64
  %3307 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3306
  %3308 = getelementptr inbounds [5 x double]* %3307, i32 0, i64 2
  %3309 = load double* %3308, align 8
  %3310 = fsub double %3304, %3309
  %3311 = fmul double %3298, %3310
  %3312 = fadd double %3295, %3311
  %3313 = load double* @dz3, align 8
  %3314 = load double* @tz1, align 8
  %3315 = fmul double %3313, %3314
  %3316 = load i32* %k, align 4
  %3317 = sub nsw i32 %3316, 1
  %3318 = sext i32 %3317 to i64
  %3319 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3318
  %3320 = getelementptr inbounds [6 x double]* %3319, i32 0, i64 2
  %3321 = load double* %3320, align 8
  %3322 = load i32* %k, align 4
  %3323 = sext i32 %3322 to i64
  %3324 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3323
  %3325 = getelementptr inbounds [6 x double]* %3324, i32 0, i64 2
  %3326 = load double* %3325, align 8
  %3327 = fmul double 2.000000e+00, %3326
  %3328 = fsub double %3321, %3327
  %3329 = load i32* %k, align 4
  %3330 = add nsw i32 %3329, 1
  %3331 = sext i32 %3330 to i64
  %3332 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3331
  %3333 = getelementptr inbounds [6 x double]* %3332, i32 0, i64 2
  %3334 = load double* %3333, align 8
  %3335 = fadd double %3328, %3334
  %3336 = fmul double %3315, %3335
  %3337 = fadd double %3312, %3336
  %3338 = load i32* %k, align 4
  %3339 = sext i32 %3338 to i64
  %3340 = getelementptr inbounds [22 x [5 x double]]* %rtmp, i32 0, i64 %3339
  %3341 = getelementptr inbounds [5 x double]* %3340, i32 0, i64 2
  store double %3337, double* %3341, align 8
  %3342 = load i32* %k, align 4
  %3343 = sext i32 %3342 to i64
  %3344 = getelementptr inbounds [22 x [5 x double]]* %rtmp, i32 0, i64 %3343
  %3345 = getelementptr inbounds [5 x double]* %3344, i32 0, i64 3
  %3346 = load double* %3345, align 8
  %3347 = load double* @tz3, align 8
  %3348 = fmul double %3347, 1.000000e-01
  %3349 = fmul double %3348, 1.000000e+00
  %3350 = load i32* %k, align 4
  %3351 = add nsw i32 %3350, 1
  %3352 = sext i32 %3351 to i64
  %3353 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3352
  %3354 = getelementptr inbounds [5 x double]* %3353, i32 0, i64 3
  %3355 = load double* %3354, align 8
  %3356 = load i32* %k, align 4
  %3357 = sext i32 %3356 to i64
  %3358 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3357
  %3359 = getelementptr inbounds [5 x double]* %3358, i32 0, i64 3
  %3360 = load double* %3359, align 8
  %3361 = fsub double %3355, %3360
  %3362 = fmul double %3349, %3361
  %3363 = fadd double %3346, %3362
  %3364 = load double* @dz4, align 8
  %3365 = load double* @tz1, align 8
  %3366 = fmul double %3364, %3365
  %3367 = load i32* %k, align 4
  %3368 = sub nsw i32 %3367, 1
  %3369 = sext i32 %3368 to i64
  %3370 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3369
  %3371 = getelementptr inbounds [6 x double]* %3370, i32 0, i64 3
  %3372 = load double* %3371, align 8
  %3373 = load i32* %k, align 4
  %3374 = sext i32 %3373 to i64
  %3375 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3374
  %3376 = getelementptr inbounds [6 x double]* %3375, i32 0, i64 3
  %3377 = load double* %3376, align 8
  %3378 = fmul double 2.000000e+00, %3377
  %3379 = fsub double %3372, %3378
  %3380 = load i32* %k, align 4
  %3381 = add nsw i32 %3380, 1
  %3382 = sext i32 %3381 to i64
  %3383 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3382
  %3384 = getelementptr inbounds [6 x double]* %3383, i32 0, i64 3
  %3385 = load double* %3384, align 8
  %3386 = fadd double %3379, %3385
  %3387 = fmul double %3366, %3386
  %3388 = fadd double %3363, %3387
  %3389 = load i32* %k, align 4
  %3390 = sext i32 %3389 to i64
  %3391 = getelementptr inbounds [22 x [5 x double]]* %rtmp, i32 0, i64 %3390
  %3392 = getelementptr inbounds [5 x double]* %3391, i32 0, i64 3
  store double %3388, double* %3392, align 8
  %3393 = load i32* %k, align 4
  %3394 = sext i32 %3393 to i64
  %3395 = getelementptr inbounds [22 x [5 x double]]* %rtmp, i32 0, i64 %3394
  %3396 = getelementptr inbounds [5 x double]* %3395, i32 0, i64 4
  %3397 = load double* %3396, align 8
  %3398 = load double* @tz3, align 8
  %3399 = fmul double %3398, 1.000000e-01
  %3400 = fmul double %3399, 1.000000e+00
  %3401 = load i32* %k, align 4
  %3402 = add nsw i32 %3401, 1
  %3403 = sext i32 %3402 to i64
  %3404 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3403
  %3405 = getelementptr inbounds [5 x double]* %3404, i32 0, i64 4
  %3406 = load double* %3405, align 8
  %3407 = load i32* %k, align 4
  %3408 = sext i32 %3407 to i64
  %3409 = getelementptr inbounds [22 x [5 x double]]* @flux, i32 0, i64 %3408
  %3410 = getelementptr inbounds [5 x double]* %3409, i32 0, i64 4
  %3411 = load double* %3410, align 8
  %3412 = fsub double %3406, %3411
  %3413 = fmul double %3400, %3412
  %3414 = fadd double %3397, %3413
  %3415 = load double* @dz5, align 8
  %3416 = load double* @tz1, align 8
  %3417 = fmul double %3415, %3416
  %3418 = load i32* %k, align 4
  %3419 = sub nsw i32 %3418, 1
  %3420 = sext i32 %3419 to i64
  %3421 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3420
  %3422 = getelementptr inbounds [6 x double]* %3421, i32 0, i64 4
  %3423 = load double* %3422, align 8
  %3424 = load i32* %k, align 4
  %3425 = sext i32 %3424 to i64
  %3426 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3425
  %3427 = getelementptr inbounds [6 x double]* %3426, i32 0, i64 4
  %3428 = load double* %3427, align 8
  %3429 = fmul double 2.000000e+00, %3428
  %3430 = fsub double %3423, %3429
  %3431 = load i32* %k, align 4
  %3432 = add nsw i32 %3431, 1
  %3433 = sext i32 %3432 to i64
  %3434 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3433
  %3435 = getelementptr inbounds [6 x double]* %3434, i32 0, i64 4
  %3436 = load double* %3435, align 8
  %3437 = fadd double %3430, %3436
  %3438 = fmul double %3417, %3437
  %3439 = fadd double %3414, %3438
  %3440 = load i32* %k, align 4
  %3441 = sext i32 %3440 to i64
  %3442 = getelementptr inbounds [22 x [5 x double]]* %rtmp, i32 0, i64 %3441
  %3443 = getelementptr inbounds [5 x double]* %3442, i32 0, i64 4
  store double %3439, double* %3443, align 8
  br label %3444

; <label>:3444                                    ; preds = %3205
  %3445 = load i32* %k, align 4
  %3446 = add nsw i32 %3445, 1
  store i32 %3446, i32* %k, align 4
  br label %3200

; <label>:3447                                    ; preds = %3200
  store i32 0, i32* %m, align 4
  br label %3448

; <label>:3448                                    ; preds = %3531, %3447
  %3449 = load i32* %m, align 4
  %3450 = icmp slt i32 %3449, 5
  br i1 %3450, label %3451, label %3534

; <label>:3451                                    ; preds = %3448
  %3452 = load i32* %m, align 4
  %3453 = sext i32 %3452 to i64
  %3454 = getelementptr inbounds [22 x [5 x double]]* %rtmp, i32 0, i64 1
  %3455 = getelementptr inbounds [5 x double]* %3454, i32 0, i64 %3453
  %3456 = load double* %3455, align 8
  %3457 = load double* @dssp, align 8
  %3458 = load i32* %m, align 4
  %3459 = sext i32 %3458 to i64
  %3460 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 1
  %3461 = getelementptr inbounds [6 x double]* %3460, i32 0, i64 %3459
  %3462 = load double* %3461, align 8
  %3463 = fmul double 5.000000e+00, %3462
  %3464 = load i32* %m, align 4
  %3465 = sext i32 %3464 to i64
  %3466 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 2
  %3467 = getelementptr inbounds [6 x double]* %3466, i32 0, i64 %3465
  %3468 = load double* %3467, align 8
  %3469 = fmul double 4.000000e+00, %3468
  %3470 = fsub double %3463, %3469
  %3471 = load i32* %m, align 4
  %3472 = sext i32 %3471 to i64
  %3473 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 3
  %3474 = getelementptr inbounds [6 x double]* %3473, i32 0, i64 %3472
  %3475 = load double* %3474, align 8
  %3476 = fadd double %3470, %3475
  %3477 = fmul double %3457, %3476
  %3478 = fsub double %3456, %3477
  %3479 = load i32* %m, align 4
  %3480 = sext i32 %3479 to i64
  %3481 = load i32* %i, align 4
  %3482 = sext i32 %3481 to i64
  %3483 = load i32* %j, align 4
  %3484 = sext i32 %3483 to i64
  %3485 = getelementptr inbounds [23 x [23 x [5 x double]]]* getelementptr inbounds ([22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 1), i32 0, i64 %3484
  %3486 = getelementptr inbounds [23 x [5 x double]]* %3485, i32 0, i64 %3482
  %3487 = getelementptr inbounds [5 x double]* %3486, i32 0, i64 %3480
  store double %3478, double* %3487, align 8
  %3488 = load i32* %m, align 4
  %3489 = sext i32 %3488 to i64
  %3490 = getelementptr inbounds [22 x [5 x double]]* %rtmp, i32 0, i64 2
  %3491 = getelementptr inbounds [5 x double]* %3490, i32 0, i64 %3489
  %3492 = load double* %3491, align 8
  %3493 = load double* @dssp, align 8
  %3494 = load i32* %m, align 4
  %3495 = sext i32 %3494 to i64
  %3496 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 1
  %3497 = getelementptr inbounds [6 x double]* %3496, i32 0, i64 %3495
  %3498 = load double* %3497, align 8
  %3499 = fmul double -4.000000e+00, %3498
  %3500 = load i32* %m, align 4
  %3501 = sext i32 %3500 to i64
  %3502 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 2
  %3503 = getelementptr inbounds [6 x double]* %3502, i32 0, i64 %3501
  %3504 = load double* %3503, align 8
  %3505 = fmul double 6.000000e+00, %3504
  %3506 = fadd double %3499, %3505
  %3507 = load i32* %m, align 4
  %3508 = sext i32 %3507 to i64
  %3509 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 3
  %3510 = getelementptr inbounds [6 x double]* %3509, i32 0, i64 %3508
  %3511 = load double* %3510, align 8
  %3512 = fmul double 4.000000e+00, %3511
  %3513 = fsub double %3506, %3512
  %3514 = load i32* %m, align 4
  %3515 = sext i32 %3514 to i64
  %3516 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 4
  %3517 = getelementptr inbounds [6 x double]* %3516, i32 0, i64 %3515
  %3518 = load double* %3517, align 8
  %3519 = fadd double %3513, %3518
  %3520 = fmul double %3493, %3519
  %3521 = fsub double %3492, %3520
  %3522 = load i32* %m, align 4
  %3523 = sext i32 %3522 to i64
  %3524 = load i32* %i, align 4
  %3525 = sext i32 %3524 to i64
  %3526 = load i32* %j, align 4
  %3527 = sext i32 %3526 to i64
  %3528 = getelementptr inbounds [23 x [23 x [5 x double]]]* getelementptr inbounds ([22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 2), i32 0, i64 %3527
  %3529 = getelementptr inbounds [23 x [5 x double]]* %3528, i32 0, i64 %3525
  %3530 = getelementptr inbounds [5 x double]* %3529, i32 0, i64 %3523
  store double %3521, double* %3530, align 8
  br label %3531

; <label>:3531                                    ; preds = %3451
  %3532 = load i32* %m, align 4
  %3533 = add nsw i32 %3532, 1
  store i32 %3533, i32* %m, align 4
  br label %3448

; <label>:3534                                    ; preds = %3448
  store i32 3, i32* %k, align 4
  br label %3535

; <label>:3535                                    ; preds = %3617, %3534
  %3536 = load i32* %k, align 4
  %3537 = load i32* @nz, align 4
  %3538 = sub nsw i32 %3537, 3
  %3539 = icmp slt i32 %3536, %3538
  br i1 %3539, label %3540, label %3620

; <label>:3540                                    ; preds = %3535
  store i32 0, i32* %m, align 4
  br label %3541

; <label>:3541                                    ; preds = %3613, %3540
  %3542 = load i32* %m, align 4
  %3543 = icmp slt i32 %3542, 5
  br i1 %3543, label %3544, label %3616

; <label>:3544                                    ; preds = %3541
  %3545 = load i32* %m, align 4
  %3546 = sext i32 %3545 to i64
  %3547 = load i32* %k, align 4
  %3548 = sext i32 %3547 to i64
  %3549 = getelementptr inbounds [22 x [5 x double]]* %rtmp, i32 0, i64 %3548
  %3550 = getelementptr inbounds [5 x double]* %3549, i32 0, i64 %3546
  %3551 = load double* %3550, align 8
  %3552 = load double* @dssp, align 8
  %3553 = load i32* %m, align 4
  %3554 = sext i32 %3553 to i64
  %3555 = load i32* %k, align 4
  %3556 = sub nsw i32 %3555, 2
  %3557 = sext i32 %3556 to i64
  %3558 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3557
  %3559 = getelementptr inbounds [6 x double]* %3558, i32 0, i64 %3554
  %3560 = load double* %3559, align 8
  %3561 = load i32* %m, align 4
  %3562 = sext i32 %3561 to i64
  %3563 = load i32* %k, align 4
  %3564 = sub nsw i32 %3563, 1
  %3565 = sext i32 %3564 to i64
  %3566 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3565
  %3567 = getelementptr inbounds [6 x double]* %3566, i32 0, i64 %3562
  %3568 = load double* %3567, align 8
  %3569 = fmul double 4.000000e+00, %3568
  %3570 = fsub double %3560, %3569
  %3571 = load i32* %m, align 4
  %3572 = sext i32 %3571 to i64
  %3573 = load i32* %k, align 4
  %3574 = sext i32 %3573 to i64
  %3575 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3574
  %3576 = getelementptr inbounds [6 x double]* %3575, i32 0, i64 %3572
  %3577 = load double* %3576, align 8
  %3578 = fmul double 6.000000e+00, %3577
  %3579 = fadd double %3570, %3578
  %3580 = load i32* %m, align 4
  %3581 = sext i32 %3580 to i64
  %3582 = load i32* %k, align 4
  %3583 = add nsw i32 %3582, 1
  %3584 = sext i32 %3583 to i64
  %3585 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3584
  %3586 = getelementptr inbounds [6 x double]* %3585, i32 0, i64 %3581
  %3587 = load double* %3586, align 8
  %3588 = fmul double 4.000000e+00, %3587
  %3589 = fsub double %3579, %3588
  %3590 = load i32* %m, align 4
  %3591 = sext i32 %3590 to i64
  %3592 = load i32* %k, align 4
  %3593 = add nsw i32 %3592, 2
  %3594 = sext i32 %3593 to i64
  %3595 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3594
  %3596 = getelementptr inbounds [6 x double]* %3595, i32 0, i64 %3591
  %3597 = load double* %3596, align 8
  %3598 = fadd double %3589, %3597
  %3599 = fmul double %3552, %3598
  %3600 = fsub double %3551, %3599
  %3601 = load i32* %m, align 4
  %3602 = sext i32 %3601 to i64
  %3603 = load i32* %i, align 4
  %3604 = sext i32 %3603 to i64
  %3605 = load i32* %j, align 4
  %3606 = sext i32 %3605 to i64
  %3607 = load i32* %k, align 4
  %3608 = sext i32 %3607 to i64
  %3609 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3608
  %3610 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3609, i32 0, i64 %3606
  %3611 = getelementptr inbounds [23 x [5 x double]]* %3610, i32 0, i64 %3604
  %3612 = getelementptr inbounds [5 x double]* %3611, i32 0, i64 %3602
  store double %3600, double* %3612, align 8
  br label %3613

; <label>:3613                                    ; preds = %3544
  %3614 = load i32* %m, align 4
  %3615 = add nsw i32 %3614, 1
  store i32 %3615, i32* %m, align 4
  br label %3541

; <label>:3616                                    ; preds = %3541
  br label %3617

; <label>:3617                                    ; preds = %3616
  %3618 = load i32* %k, align 4
  %3619 = add nsw i32 %3618, 1
  store i32 %3619, i32* %k, align 4
  br label %3535

; <label>:3620                                    ; preds = %3535
  store i32 0, i32* %m, align 4
  br label %3621

; <label>:3621                                    ; preds = %3739, %3620
  %3622 = load i32* %m, align 4
  %3623 = icmp slt i32 %3622, 5
  br i1 %3623, label %3624, label %3742

; <label>:3624                                    ; preds = %3621
  %3625 = load i32* %m, align 4
  %3626 = sext i32 %3625 to i64
  %3627 = load i32* @nz, align 4
  %3628 = sub nsw i32 %3627, 3
  %3629 = sext i32 %3628 to i64
  %3630 = getelementptr inbounds [22 x [5 x double]]* %rtmp, i32 0, i64 %3629
  %3631 = getelementptr inbounds [5 x double]* %3630, i32 0, i64 %3626
  %3632 = load double* %3631, align 8
  %3633 = load double* @dssp, align 8
  %3634 = load i32* %m, align 4
  %3635 = sext i32 %3634 to i64
  %3636 = load i32* @nz, align 4
  %3637 = sub nsw i32 %3636, 5
  %3638 = sext i32 %3637 to i64
  %3639 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3638
  %3640 = getelementptr inbounds [6 x double]* %3639, i32 0, i64 %3635
  %3641 = load double* %3640, align 8
  %3642 = load i32* %m, align 4
  %3643 = sext i32 %3642 to i64
  %3644 = load i32* @nz, align 4
  %3645 = sub nsw i32 %3644, 4
  %3646 = sext i32 %3645 to i64
  %3647 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3646
  %3648 = getelementptr inbounds [6 x double]* %3647, i32 0, i64 %3643
  %3649 = load double* %3648, align 8
  %3650 = fmul double 4.000000e+00, %3649
  %3651 = fsub double %3641, %3650
  %3652 = load i32* %m, align 4
  %3653 = sext i32 %3652 to i64
  %3654 = load i32* @nz, align 4
  %3655 = sub nsw i32 %3654, 3
  %3656 = sext i32 %3655 to i64
  %3657 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3656
  %3658 = getelementptr inbounds [6 x double]* %3657, i32 0, i64 %3653
  %3659 = load double* %3658, align 8
  %3660 = fmul double 6.000000e+00, %3659
  %3661 = fadd double %3651, %3660
  %3662 = load i32* %m, align 4
  %3663 = sext i32 %3662 to i64
  %3664 = load i32* @nz, align 4
  %3665 = sub nsw i32 %3664, 2
  %3666 = sext i32 %3665 to i64
  %3667 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3666
  %3668 = getelementptr inbounds [6 x double]* %3667, i32 0, i64 %3663
  %3669 = load double* %3668, align 8
  %3670 = fmul double 4.000000e+00, %3669
  %3671 = fsub double %3661, %3670
  %3672 = fmul double %3633, %3671
  %3673 = fsub double %3632, %3672
  %3674 = load i32* %m, align 4
  %3675 = sext i32 %3674 to i64
  %3676 = load i32* %i, align 4
  %3677 = sext i32 %3676 to i64
  %3678 = load i32* %j, align 4
  %3679 = sext i32 %3678 to i64
  %3680 = load i32* @nz, align 4
  %3681 = sub nsw i32 %3680, 3
  %3682 = sext i32 %3681 to i64
  %3683 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3682
  %3684 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3683, i32 0, i64 %3679
  %3685 = getelementptr inbounds [23 x [5 x double]]* %3684, i32 0, i64 %3677
  %3686 = getelementptr inbounds [5 x double]* %3685, i32 0, i64 %3675
  store double %3673, double* %3686, align 8
  %3687 = load i32* %m, align 4
  %3688 = sext i32 %3687 to i64
  %3689 = load i32* @nz, align 4
  %3690 = sub nsw i32 %3689, 2
  %3691 = sext i32 %3690 to i64
  %3692 = getelementptr inbounds [22 x [5 x double]]* %rtmp, i32 0, i64 %3691
  %3693 = getelementptr inbounds [5 x double]* %3692, i32 0, i64 %3688
  %3694 = load double* %3693, align 8
  %3695 = load double* @dssp, align 8
  %3696 = load i32* %m, align 4
  %3697 = sext i32 %3696 to i64
  %3698 = load i32* @nz, align 4
  %3699 = sub nsw i32 %3698, 4
  %3700 = sext i32 %3699 to i64
  %3701 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3700
  %3702 = getelementptr inbounds [6 x double]* %3701, i32 0, i64 %3697
  %3703 = load double* %3702, align 8
  %3704 = load i32* %m, align 4
  %3705 = sext i32 %3704 to i64
  %3706 = load i32* @nz, align 4
  %3707 = sub nsw i32 %3706, 3
  %3708 = sext i32 %3707 to i64
  %3709 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3708
  %3710 = getelementptr inbounds [6 x double]* %3709, i32 0, i64 %3705
  %3711 = load double* %3710, align 8
  %3712 = fmul double 4.000000e+00, %3711
  %3713 = fsub double %3703, %3712
  %3714 = load i32* %m, align 4
  %3715 = sext i32 %3714 to i64
  %3716 = load i32* @nz, align 4
  %3717 = sub nsw i32 %3716, 2
  %3718 = sext i32 %3717 to i64
  %3719 = getelementptr inbounds [22 x [6 x double]]* %utmp, i32 0, i64 %3718
  %3720 = getelementptr inbounds [6 x double]* %3719, i32 0, i64 %3715
  %3721 = load double* %3720, align 8
  %3722 = fmul double 5.000000e+00, %3721
  %3723 = fadd double %3713, %3722
  %3724 = fmul double %3695, %3723
  %3725 = fsub double %3694, %3724
  %3726 = load i32* %m, align 4
  %3727 = sext i32 %3726 to i64
  %3728 = load i32* %i, align 4
  %3729 = sext i32 %3728 to i64
  %3730 = load i32* %j, align 4
  %3731 = sext i32 %3730 to i64
  %3732 = load i32* @nz, align 4
  %3733 = sub nsw i32 %3732, 2
  %3734 = sext i32 %3733 to i64
  %3735 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %3734
  %3736 = getelementptr inbounds [23 x [23 x [5 x double]]]* %3735, i32 0, i64 %3731
  %3737 = getelementptr inbounds [23 x [5 x double]]* %3736, i32 0, i64 %3729
  %3738 = getelementptr inbounds [5 x double]* %3737, i32 0, i64 %3727
  store double %3725, double* %3738, align 8
  br label %3739

; <label>:3739                                    ; preds = %3624
  %3740 = load i32* %m, align 4
  %3741 = add nsw i32 %3740, 1
  store i32 %3741, i32* %m, align 4
  br label %3621

; <label>:3742                                    ; preds = %3621
  br label %3743

; <label>:3743                                    ; preds = %3742
  %3744 = load i32* %i, align 4
  %3745 = add nsw i32 %3744, 1
  store i32 %3745, i32* %i, align 4
  br label %2788

; <label>:3746                                    ; preds = %2788
  br label %3747

; <label>:3747                                    ; preds = %3746
  %3748 = load i32* %j, align 4
  %3749 = add nsw i32 %3748, 1
  store i32 %3749, i32* %j, align 4
  br label %2782

; <label>:3750                                    ; preds = %2782
  %3751 = load i32* @timeron, align 4
  %3752 = icmp ne i32 %3751, 0
  br i1 %3752, label %3753, label %3754

; <label>:3753                                    ; preds = %3750
  call void @timer_stop(i32 4)
  br label %3754

; <label>:3754                                    ; preds = %3753, %3750
  %3755 = load i32* @timeron, align 4
  %3756 = icmp ne i32 %3755, 0
  br i1 %3756, label %3757, label %3758

; <label>:3757                                    ; preds = %3754
  call void @timer_stop(i32 5)
  br label %3758

; <label>:3758                                    ; preds = %3757, %3754
  ret void
}

; Function Attrs: nounwind uwtable
define void @setbv() #0 {
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %m = alloca i32, align 4
  %temp1 = alloca [5 x double], align 16
  %temp2 = alloca [5 x double], align 16
  store i32 0, i32* %j, align 4
  br label %1

; <label>:1                                       ; preds = %61, %0
  %2 = load i32* %j, align 4
  %3 = load i32* @ny, align 4
  %4 = icmp slt i32 %2, %3
  br i1 %4, label %5, label %64

; <label>:5                                       ; preds = %1
  store i32 0, i32* %i, align 4
  br label %6

; <label>:6                                       ; preds = %57, %5
  %7 = load i32* %i, align 4
  %8 = load i32* @nx, align 4
  %9 = icmp slt i32 %7, %8
  br i1 %9, label %10, label %60

; <label>:10                                      ; preds = %6
  %11 = load i32* %i, align 4
  %12 = load i32* %j, align 4
  %13 = getelementptr inbounds [5 x double]* %temp1, i32 0, i32 0
  call void @exact(i32 %11, i32 %12, i32 0, double* %13)
  %14 = load i32* %i, align 4
  %15 = load i32* %j, align 4
  %16 = load i32* @nz, align 4
  %17 = sub nsw i32 %16, 1
  %18 = getelementptr inbounds [5 x double]* %temp2, i32 0, i32 0
  call void @exact(i32 %14, i32 %15, i32 %17, double* %18)
  store i32 0, i32* %m, align 4
  br label %19

; <label>:19                                      ; preds = %53, %10
  %20 = load i32* %m, align 4
  %21 = icmp slt i32 %20, 5
  br i1 %21, label %22, label %56

; <label>:22                                      ; preds = %19
  %23 = load i32* %m, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [5 x double]* %temp1, i32 0, i64 %24
  %26 = load double* %25, align 8
  %27 = load i32* %m, align 4
  %28 = sext i32 %27 to i64
  %29 = load i32* %i, align 4
  %30 = sext i32 %29 to i64
  %31 = load i32* %j, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [23 x [23 x [5 x double]]]* getelementptr inbounds ([22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 0), i32 0, i64 %32
  %34 = getelementptr inbounds [23 x [5 x double]]* %33, i32 0, i64 %30
  %35 = getelementptr inbounds [5 x double]* %34, i32 0, i64 %28
  store double %26, double* %35, align 8
  %36 = load i32* %m, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [5 x double]* %temp2, i32 0, i64 %37
  %39 = load double* %38, align 8
  %40 = load i32* %m, align 4
  %41 = sext i32 %40 to i64
  %42 = load i32* %i, align 4
  %43 = sext i32 %42 to i64
  %44 = load i32* %j, align 4
  %45 = sext i32 %44 to i64
  %46 = load i32* @nz, align 4
  %47 = sub nsw i32 %46, 1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %48
  %50 = getelementptr inbounds [23 x [23 x [5 x double]]]* %49, i32 0, i64 %45
  %51 = getelementptr inbounds [23 x [5 x double]]* %50, i32 0, i64 %43
  %52 = getelementptr inbounds [5 x double]* %51, i32 0, i64 %41
  store double %39, double* %52, align 8
  br label %53

; <label>:53                                      ; preds = %22
  %54 = load i32* %m, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %m, align 4
  br label %19

; <label>:56                                      ; preds = %19
  br label %57

; <label>:57                                      ; preds = %56
  %58 = load i32* %i, align 4
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %i, align 4
  br label %6

; <label>:60                                      ; preds = %6
  br label %61

; <label>:61                                      ; preds = %60
  %62 = load i32* %j, align 4
  %63 = add nsw i32 %62, 1
  store i32 %63, i32* %j, align 4
  br label %1

; <label>:64                                      ; preds = %1
  store i32 0, i32* %k, align 4
  br label %65

; <label>:65                                      ; preds = %126, %64
  %66 = load i32* %k, align 4
  %67 = load i32* @nz, align 4
  %68 = icmp slt i32 %66, %67
  br i1 %68, label %69, label %129

; <label>:69                                      ; preds = %65
  store i32 0, i32* %i, align 4
  br label %70

; <label>:70                                      ; preds = %122, %69
  %71 = load i32* %i, align 4
  %72 = load i32* @nx, align 4
  %73 = icmp slt i32 %71, %72
  br i1 %73, label %74, label %125

; <label>:74                                      ; preds = %70
  %75 = load i32* %i, align 4
  %76 = load i32* %k, align 4
  %77 = getelementptr inbounds [5 x double]* %temp1, i32 0, i32 0
  call void @exact(i32 %75, i32 0, i32 %76, double* %77)
  %78 = load i32* %i, align 4
  %79 = load i32* @ny, align 4
  %80 = sub nsw i32 %79, 1
  %81 = load i32* %k, align 4
  %82 = getelementptr inbounds [5 x double]* %temp2, i32 0, i32 0
  call void @exact(i32 %78, i32 %80, i32 %81, double* %82)
  store i32 0, i32* %m, align 4
  br label %83

; <label>:83                                      ; preds = %118, %74
  %84 = load i32* %m, align 4
  %85 = icmp slt i32 %84, 5
  br i1 %85, label %86, label %121

; <label>:86                                      ; preds = %83
  %87 = load i32* %m, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds [5 x double]* %temp1, i32 0, i64 %88
  %90 = load double* %89, align 8
  %91 = load i32* %m, align 4
  %92 = sext i32 %91 to i64
  %93 = load i32* %i, align 4
  %94 = sext i32 %93 to i64
  %95 = load i32* %k, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %96
  %98 = getelementptr inbounds [23 x [23 x [5 x double]]]* %97, i32 0, i64 0
  %99 = getelementptr inbounds [23 x [5 x double]]* %98, i32 0, i64 %94
  %100 = getelementptr inbounds [5 x double]* %99, i32 0, i64 %92
  store double %90, double* %100, align 8
  %101 = load i32* %m, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds [5 x double]* %temp2, i32 0, i64 %102
  %104 = load double* %103, align 8
  %105 = load i32* %m, align 4
  %106 = sext i32 %105 to i64
  %107 = load i32* %i, align 4
  %108 = sext i32 %107 to i64
  %109 = load i32* @ny, align 4
  %110 = sub nsw i32 %109, 1
  %111 = sext i32 %110 to i64
  %112 = load i32* %k, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %113
  %115 = getelementptr inbounds [23 x [23 x [5 x double]]]* %114, i32 0, i64 %111
  %116 = getelementptr inbounds [23 x [5 x double]]* %115, i32 0, i64 %108
  %117 = getelementptr inbounds [5 x double]* %116, i32 0, i64 %106
  store double %104, double* %117, align 8
  br label %118

; <label>:118                                     ; preds = %86
  %119 = load i32* %m, align 4
  %120 = add nsw i32 %119, 1
  store i32 %120, i32* %m, align 4
  br label %83

; <label>:121                                     ; preds = %83
  br label %122

; <label>:122                                     ; preds = %121
  %123 = load i32* %i, align 4
  %124 = add nsw i32 %123, 1
  store i32 %124, i32* %i, align 4
  br label %70

; <label>:125                                     ; preds = %70
  br label %126

; <label>:126                                     ; preds = %125
  %127 = load i32* %k, align 4
  %128 = add nsw i32 %127, 1
  store i32 %128, i32* %k, align 4
  br label %65

; <label>:129                                     ; preds = %65
  store i32 0, i32* %k, align 4
  br label %130

; <label>:130                                     ; preds = %191, %129
  %131 = load i32* %k, align 4
  %132 = load i32* @nz, align 4
  %133 = icmp slt i32 %131, %132
  br i1 %133, label %134, label %194

; <label>:134                                     ; preds = %130
  store i32 0, i32* %j, align 4
  br label %135

; <label>:135                                     ; preds = %187, %134
  %136 = load i32* %j, align 4
  %137 = load i32* @ny, align 4
  %138 = icmp slt i32 %136, %137
  br i1 %138, label %139, label %190

; <label>:139                                     ; preds = %135
  %140 = load i32* %j, align 4
  %141 = load i32* %k, align 4
  %142 = getelementptr inbounds [5 x double]* %temp1, i32 0, i32 0
  call void @exact(i32 0, i32 %140, i32 %141, double* %142)
  %143 = load i32* @nx, align 4
  %144 = sub nsw i32 %143, 1
  %145 = load i32* %j, align 4
  %146 = load i32* %k, align 4
  %147 = getelementptr inbounds [5 x double]* %temp2, i32 0, i32 0
  call void @exact(i32 %144, i32 %145, i32 %146, double* %147)
  store i32 0, i32* %m, align 4
  br label %148

; <label>:148                                     ; preds = %183, %139
  %149 = load i32* %m, align 4
  %150 = icmp slt i32 %149, 5
  br i1 %150, label %151, label %186

; <label>:151                                     ; preds = %148
  %152 = load i32* %m, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds [5 x double]* %temp1, i32 0, i64 %153
  %155 = load double* %154, align 8
  %156 = load i32* %m, align 4
  %157 = sext i32 %156 to i64
  %158 = load i32* %j, align 4
  %159 = sext i32 %158 to i64
  %160 = load i32* %k, align 4
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %161
  %163 = getelementptr inbounds [23 x [23 x [5 x double]]]* %162, i32 0, i64 %159
  %164 = getelementptr inbounds [23 x [5 x double]]* %163, i32 0, i64 0
  %165 = getelementptr inbounds [5 x double]* %164, i32 0, i64 %157
  store double %155, double* %165, align 8
  %166 = load i32* %m, align 4
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds [5 x double]* %temp2, i32 0, i64 %167
  %169 = load double* %168, align 8
  %170 = load i32* %m, align 4
  %171 = sext i32 %170 to i64
  %172 = load i32* @nx, align 4
  %173 = sub nsw i32 %172, 1
  %174 = sext i32 %173 to i64
  %175 = load i32* %j, align 4
  %176 = sext i32 %175 to i64
  %177 = load i32* %k, align 4
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %178
  %180 = getelementptr inbounds [23 x [23 x [5 x double]]]* %179, i32 0, i64 %176
  %181 = getelementptr inbounds [23 x [5 x double]]* %180, i32 0, i64 %174
  %182 = getelementptr inbounds [5 x double]* %181, i32 0, i64 %171
  store double %169, double* %182, align 8
  br label %183

; <label>:183                                     ; preds = %151
  %184 = load i32* %m, align 4
  %185 = add nsw i32 %184, 1
  store i32 %185, i32* %m, align 4
  br label %148

; <label>:186                                     ; preds = %148
  br label %187

; <label>:187                                     ; preds = %186
  %188 = load i32* %j, align 4
  %189 = add nsw i32 %188, 1
  store i32 %189, i32* %j, align 4
  br label %135

; <label>:190                                     ; preds = %135
  br label %191

; <label>:191                                     ; preds = %190
  %192 = load i32* %k, align 4
  %193 = add nsw i32 %192, 1
  store i32 %193, i32* %k, align 4
  br label %130

; <label>:194                                     ; preds = %130
  ret void
}

; Function Attrs: nounwind uwtable
define void @setcoeff() #0 {
  %1 = load i32* @nx0, align 4
  %2 = sub nsw i32 %1, 1
  %3 = sitofp i32 %2 to double
  %4 = fdiv double 1.000000e+00, %3
  store double %4, double* @dxi, align 8
  %5 = load i32* @ny0, align 4
  %6 = sub nsw i32 %5, 1
  %7 = sitofp i32 %6 to double
  %8 = fdiv double 1.000000e+00, %7
  store double %8, double* @deta, align 8
  %9 = load i32* @nz0, align 4
  %10 = sub nsw i32 %9, 1
  %11 = sitofp i32 %10 to double
  %12 = fdiv double 1.000000e+00, %11
  store double %12, double* @dzeta, align 8
  %13 = load double* @dxi, align 8
  %14 = load double* @dxi, align 8
  %15 = fmul double %13, %14
  %16 = fdiv double 1.000000e+00, %15
  store double %16, double* @tx1, align 8
  %17 = load double* @dxi, align 8
  %18 = fmul double 2.000000e+00, %17
  %19 = fdiv double 1.000000e+00, %18
  store double %19, double* @tx2, align 8
  %20 = load double* @dxi, align 8
  %21 = fdiv double 1.000000e+00, %20
  store double %21, double* @tx3, align 8
  %22 = load double* @deta, align 8
  %23 = load double* @deta, align 8
  %24 = fmul double %22, %23
  %25 = fdiv double 1.000000e+00, %24
  store double %25, double* @ty1, align 8
  %26 = load double* @deta, align 8
  %27 = fmul double 2.000000e+00, %26
  %28 = fdiv double 1.000000e+00, %27
  store double %28, double* @ty2, align 8
  %29 = load double* @deta, align 8
  %30 = fdiv double 1.000000e+00, %29
  store double %30, double* @ty3, align 8
  %31 = load double* @dzeta, align 8
  %32 = load double* @dzeta, align 8
  %33 = fmul double %31, %32
  %34 = fdiv double 1.000000e+00, %33
  store double %34, double* @tz1, align 8
  %35 = load double* @dzeta, align 8
  %36 = fmul double 2.000000e+00, %35
  %37 = fdiv double 1.000000e+00, %36
  store double %37, double* @tz2, align 8
  %38 = load double* @dzeta, align 8
  %39 = fdiv double 1.000000e+00, %38
  store double %39, double* @tz3, align 8
  store double 7.500000e-01, double* @dx1, align 8
  %40 = load double* @dx1, align 8
  store double %40, double* @dx2, align 8
  %41 = load double* @dx1, align 8
  store double %41, double* @dx3, align 8
  %42 = load double* @dx1, align 8
  store double %42, double* @dx4, align 8
  %43 = load double* @dx1, align 8
  store double %43, double* @dx5, align 8
  store double 7.500000e-01, double* @dy1, align 8
  %44 = load double* @dy1, align 8
  store double %44, double* @dy2, align 8
  %45 = load double* @dy1, align 8
  store double %45, double* @dy3, align 8
  %46 = load double* @dy1, align 8
  store double %46, double* @dy4, align 8
  %47 = load double* @dy1, align 8
  store double %47, double* @dy5, align 8
  store double 1.000000e+00, double* @dz1, align 8
  %48 = load double* @dz1, align 8
  store double %48, double* @dz2, align 8
  %49 = load double* @dz1, align 8
  store double %49, double* @dz3, align 8
  %50 = load double* @dz1, align 8
  store double %50, double* @dz4, align 8
  %51 = load double* @dz1, align 8
  store double %51, double* @dz5, align 8
  %52 = load double* @dx1, align 8
  %53 = load double* @dy1, align 8
  %54 = fcmp ogt double %52, %53
  br i1 %54, label %55, label %57

; <label>:55                                      ; preds = %0
  %56 = load double* @dx1, align 8
  br label %59

; <label>:57                                      ; preds = %0
  %58 = load double* @dy1, align 8
  br label %59

; <label>:59                                      ; preds = %57, %55
  %60 = phi double [ %56, %55 ], [ %58, %57 ]
  %61 = load double* @dz1, align 8
  %62 = fcmp ogt double %60, %61
  br i1 %62, label %63, label %73

; <label>:63                                      ; preds = %59
  %64 = load double* @dx1, align 8
  %65 = load double* @dy1, align 8
  %66 = fcmp ogt double %64, %65
  br i1 %66, label %67, label %69

; <label>:67                                      ; preds = %63
  %68 = load double* @dx1, align 8
  br label %71

; <label>:69                                      ; preds = %63
  %70 = load double* @dy1, align 8
  br label %71

; <label>:71                                      ; preds = %69, %67
  %72 = phi double [ %68, %67 ], [ %70, %69 ]
  br label %75

; <label>:73                                      ; preds = %59
  %74 = load double* @dz1, align 8
  br label %75

; <label>:75                                      ; preds = %73, %71
  %76 = phi double [ %72, %71 ], [ %74, %73 ]
  %77 = fdiv double %76, 4.000000e+00
  store double %77, double* @dssp, align 8
  store double 2.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 0, i64 0), align 8
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 0, i64 1), align 8
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 0, i64 2), align 8
  store double 4.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 0, i64 3), align 8
  store double 5.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 0, i64 4), align 8
  store double 3.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 0, i64 5), align 8
  store double 5.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 0, i64 6), align 8
  store double 2.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 0, i64 7), align 8
  store double 1.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 0, i64 8), align 8
  store double 3.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 0, i64 9), align 8
  store double 5.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 0, i64 10), align 8
  store double 4.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 0, i64 11), align 8
  store double 3.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 0, i64 12), align 8
  store double 1.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 1, i64 0), align 8
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 1, i64 1), align 8
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 1, i64 2), align 8
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 1, i64 3), align 8
  store double 1.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 1, i64 4), align 8
  store double 2.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 1, i64 5), align 8
  store double 3.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 1, i64 6), align 8
  store double 1.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 1, i64 7), align 8
  store double 3.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 1, i64 8), align 8
  store double 2.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 1, i64 9), align 8
  store double 4.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 1, i64 10), align 8
  store double 3.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 1, i64 11), align 8
  store double 5.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 1, i64 12), align 8
  store double 2.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 2, i64 0), align 8
  store double 2.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 2, i64 1), align 8
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 2, i64 2), align 8
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 2, i64 3), align 8
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 2, i64 4), align 8
  store double 2.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 2, i64 5), align 8
  store double 3.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 2, i64 6), align 8
  store double 4.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 2, i64 7), align 8
  store double 3.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 2, i64 8), align 8
  store double 5.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 2, i64 9), align 8
  store double 3.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 2, i64 10), align 8
  store double 5.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 2, i64 11), align 8
  store double 4.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 2, i64 12), align 8
  store double 2.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 3, i64 0), align 8
  store double 2.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 3, i64 1), align 8
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 3, i64 2), align 8
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 3, i64 3), align 8
  store double 0.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 3, i64 4), align 8
  store double 2.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 3, i64 5), align 8
  store double 3.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 3, i64 6), align 8
  store double 3.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 3, i64 7), align 8
  store double 5.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 3, i64 8), align 8
  store double 4.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 3, i64 9), align 8
  store double 2.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 3, i64 10), align 8
  store double 1.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 3, i64 11), align 8
  store double 3.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 3, i64 12), align 8
  store double 5.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 4, i64 0), align 8
  store double 4.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 4, i64 1), align 8
  store double 3.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 4, i64 2), align 8
  store double 2.000000e+00, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 4, i64 3), align 8
  store double 1.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 4, i64 4), align 8
  store double 4.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 4, i64 5), align 8
  store double 3.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 4, i64 6), align 8
  store double 5.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 4, i64 7), align 8
  store double 4.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 4, i64 8), align 8
  store double 3.000000e-02, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 4, i64 9), align 8
  store double 1.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 4, i64 10), align 8
  store double 3.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 4, i64 11), align 8
  store double 2.000000e-01, double* getelementptr inbounds ([5 x [13 x double]]* @ce, i32 0, i64 4, i64 12), align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @setiv() #0 {
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %m = alloca i32, align 4
  %xi = alloca double, align 8
  %eta = alloca double, align 8
  %zeta = alloca double, align 8
  %pxi = alloca double, align 8
  %peta = alloca double, align 8
  %pzeta = alloca double, align 8
  %ue_1jk = alloca [5 x double], align 16
  %ue_nx0jk = alloca [5 x double], align 16
  %ue_i1k = alloca [5 x double], align 16
  %ue_iny0k = alloca [5 x double], align 16
  %ue_ij1 = alloca [5 x double], align 16
  %ue_ijnz = alloca [5 x double], align 16
  store i32 1, i32* %k, align 4
  br label %1

; <label>:1                                       ; preds = %154, %0
  %2 = load i32* %k, align 4
  %3 = load i32* @nz, align 4
  %4 = sub nsw i32 %3, 1
  %5 = icmp slt i32 %2, %4
  br i1 %5, label %6, label %157

; <label>:6                                       ; preds = %1
  %7 = load i32* %k, align 4
  %8 = sitofp i32 %7 to double
  %9 = load i32* @nz, align 4
  %10 = sub nsw i32 %9, 1
  %11 = sitofp i32 %10 to double
  %12 = fdiv double %8, %11
  store double %12, double* %zeta, align 8
  store i32 1, i32* %j, align 4
  br label %13

; <label>:13                                      ; preds = %150, %6
  %14 = load i32* %j, align 4
  %15 = load i32* @ny, align 4
  %16 = sub nsw i32 %15, 1
  %17 = icmp slt i32 %14, %16
  br i1 %17, label %18, label %153

; <label>:18                                      ; preds = %13
  %19 = load i32* %j, align 4
  %20 = sitofp i32 %19 to double
  %21 = load i32* @ny0, align 4
  %22 = sub nsw i32 %21, 1
  %23 = sitofp i32 %22 to double
  %24 = fdiv double %20, %23
  store double %24, double* %eta, align 8
  store i32 1, i32* %i, align 4
  br label %25

; <label>:25                                      ; preds = %146, %18
  %26 = load i32* %i, align 4
  %27 = load i32* @nx, align 4
  %28 = sub nsw i32 %27, 1
  %29 = icmp slt i32 %26, %28
  br i1 %29, label %30, label %149

; <label>:30                                      ; preds = %25
  %31 = load i32* %i, align 4
  %32 = sitofp i32 %31 to double
  %33 = load i32* @nx0, align 4
  %34 = sub nsw i32 %33, 1
  %35 = sitofp i32 %34 to double
  %36 = fdiv double %32, %35
  store double %36, double* %xi, align 8
  %37 = load i32* %j, align 4
  %38 = load i32* %k, align 4
  %39 = getelementptr inbounds [5 x double]* %ue_1jk, i32 0, i32 0
  call void @exact(i32 0, i32 %37, i32 %38, double* %39)
  %40 = load i32* @nx0, align 4
  %41 = sub nsw i32 %40, 1
  %42 = load i32* %j, align 4
  %43 = load i32* %k, align 4
  %44 = getelementptr inbounds [5 x double]* %ue_nx0jk, i32 0, i32 0
  call void @exact(i32 %41, i32 %42, i32 %43, double* %44)
  %45 = load i32* %i, align 4
  %46 = load i32* %k, align 4
  %47 = getelementptr inbounds [5 x double]* %ue_i1k, i32 0, i32 0
  call void @exact(i32 %45, i32 0, i32 %46, double* %47)
  %48 = load i32* %i, align 4
  %49 = load i32* @ny0, align 4
  %50 = sub nsw i32 %49, 1
  %51 = load i32* %k, align 4
  %52 = getelementptr inbounds [5 x double]* %ue_iny0k, i32 0, i32 0
  call void @exact(i32 %48, i32 %50, i32 %51, double* %52)
  %53 = load i32* %i, align 4
  %54 = load i32* %j, align 4
  %55 = getelementptr inbounds [5 x double]* %ue_ij1, i32 0, i32 0
  call void @exact(i32 %53, i32 %54, i32 0, double* %55)
  %56 = load i32* %i, align 4
  %57 = load i32* %j, align 4
  %58 = load i32* @nz, align 4
  %59 = sub nsw i32 %58, 1
  %60 = getelementptr inbounds [5 x double]* %ue_ijnz, i32 0, i32 0
  call void @exact(i32 %56, i32 %57, i32 %59, double* %60)
  store i32 0, i32* %m, align 4
  br label %61

; <label>:61                                      ; preds = %142, %30
  %62 = load i32* %m, align 4
  %63 = icmp slt i32 %62, 5
  br i1 %63, label %64, label %145

; <label>:64                                      ; preds = %61
  %65 = load double* %xi, align 8
  %66 = fsub double 1.000000e+00, %65
  %67 = load i32* %m, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [5 x double]* %ue_1jk, i32 0, i64 %68
  %70 = load double* %69, align 8
  %71 = fmul double %66, %70
  %72 = load double* %xi, align 8
  %73 = load i32* %m, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds [5 x double]* %ue_nx0jk, i32 0, i64 %74
  %76 = load double* %75, align 8
  %77 = fmul double %72, %76
  %78 = fadd double %71, %77
  store double %78, double* %pxi, align 8
  %79 = load double* %eta, align 8
  %80 = fsub double 1.000000e+00, %79
  %81 = load i32* %m, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds [5 x double]* %ue_i1k, i32 0, i64 %82
  %84 = load double* %83, align 8
  %85 = fmul double %80, %84
  %86 = load double* %eta, align 8
  %87 = load i32* %m, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds [5 x double]* %ue_iny0k, i32 0, i64 %88
  %90 = load double* %89, align 8
  %91 = fmul double %86, %90
  %92 = fadd double %85, %91
  store double %92, double* %peta, align 8
  %93 = load double* %zeta, align 8
  %94 = fsub double 1.000000e+00, %93
  %95 = load i32* %m, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [5 x double]* %ue_ij1, i32 0, i64 %96
  %98 = load double* %97, align 8
  %99 = fmul double %94, %98
  %100 = load double* %zeta, align 8
  %101 = load i32* %m, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds [5 x double]* %ue_ijnz, i32 0, i64 %102
  %104 = load double* %103, align 8
  %105 = fmul double %100, %104
  %106 = fadd double %99, %105
  store double %106, double* %pzeta, align 8
  %107 = load double* %pxi, align 8
  %108 = load double* %peta, align 8
  %109 = fadd double %107, %108
  %110 = load double* %pzeta, align 8
  %111 = fadd double %109, %110
  %112 = load double* %pxi, align 8
  %113 = load double* %peta, align 8
  %114 = fmul double %112, %113
  %115 = fsub double %111, %114
  %116 = load double* %peta, align 8
  %117 = load double* %pzeta, align 8
  %118 = fmul double %116, %117
  %119 = fsub double %115, %118
  %120 = load double* %pzeta, align 8
  %121 = load double* %pxi, align 8
  %122 = fmul double %120, %121
  %123 = fsub double %119, %122
  %124 = load double* %pxi, align 8
  %125 = load double* %peta, align 8
  %126 = fmul double %124, %125
  %127 = load double* %pzeta, align 8
  %128 = fmul double %126, %127
  %129 = fadd double %123, %128
  %130 = load i32* %m, align 4
  %131 = sext i32 %130 to i64
  %132 = load i32* %i, align 4
  %133 = sext i32 %132 to i64
  %134 = load i32* %j, align 4
  %135 = sext i32 %134 to i64
  %136 = load i32* %k, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %137
  %139 = getelementptr inbounds [23 x [23 x [5 x double]]]* %138, i32 0, i64 %135
  %140 = getelementptr inbounds [23 x [5 x double]]* %139, i32 0, i64 %133
  %141 = getelementptr inbounds [5 x double]* %140, i32 0, i64 %131
  store double %129, double* %141, align 8
  br label %142

; <label>:142                                     ; preds = %64
  %143 = load i32* %m, align 4
  %144 = add nsw i32 %143, 1
  store i32 %144, i32* %m, align 4
  br label %61

; <label>:145                                     ; preds = %61
  br label %146

; <label>:146                                     ; preds = %145
  %147 = load i32* %i, align 4
  %148 = add nsw i32 %147, 1
  store i32 %148, i32* %i, align 4
  br label %25

; <label>:149                                     ; preds = %25
  br label %150

; <label>:150                                     ; preds = %149
  %151 = load i32* %j, align 4
  %152 = add nsw i32 %151, 1
  store i32 %152, i32* %j, align 4
  br label %13

; <label>:153                                     ; preds = %13
  br label %154

; <label>:154                                     ; preds = %153
  %155 = load i32* %k, align 4
  %156 = add nsw i32 %155, 1
  store i32 %156, i32* %k, align 4
  br label %1

; <label>:157                                     ; preds = %1
  ret void
}

; Function Attrs: nounwind uwtable
define void @ssor(i32 %niter) #0 {
  %1 = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %m = alloca i32, align 4
  %n = alloca i32, align 4
  %istep = alloca i32, align 4
  %tmp = alloca double, align 8
  %tv = alloca [22 x [22 x [5 x double]]], align 16
  %delunm = alloca [5 x double], align 16
  store i32 %niter, i32* %1, align 4
  %2 = load double* @omega, align 8
  %3 = load double* @omega, align 8
  %4 = fsub double 2.000000e+00, %3
  %5 = fmul double %2, %4
  %6 = fdiv double 1.000000e+00, %5
  store double %6, double* %tmp, align 8
  store i32 0, i32* %j, align 4
  br label %7

; <label>:7                                       ; preds = %83, %0
  %8 = load i32* %j, align 4
  %9 = icmp slt i32 %8, 22
  br i1 %9, label %10, label %86

; <label>:10                                      ; preds = %7
  store i32 0, i32* %i, align 4
  br label %11

; <label>:11                                      ; preds = %79, %10
  %12 = load i32* %i, align 4
  %13 = icmp slt i32 %12, 22
  br i1 %13, label %14, label %82

; <label>:14                                      ; preds = %11
  store i32 0, i32* %n, align 4
  br label %15

; <label>:15                                      ; preds = %75, %14
  %16 = load i32* %n, align 4
  %17 = icmp slt i32 %16, 5
  br i1 %17, label %18, label %78

; <label>:18                                      ; preds = %15
  store i32 0, i32* %m, align 4
  br label %19

; <label>:19                                      ; preds = %71, %18
  %20 = load i32* %m, align 4
  %21 = icmp slt i32 %20, 5
  br i1 %21, label %22, label %74

; <label>:22                                      ; preds = %19
  %23 = load i32* %m, align 4
  %24 = sext i32 %23 to i64
  %25 = load i32* %n, align 4
  %26 = sext i32 %25 to i64
  %27 = load i32* %i, align 4
  %28 = sext i32 %27 to i64
  %29 = load i32* %j, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i64 %30
  %32 = getelementptr inbounds [23 x [5 x [5 x double]]]* %31, i32 0, i64 %28
  %33 = getelementptr inbounds [5 x [5 x double]]* %32, i32 0, i64 %26
  %34 = getelementptr inbounds [5 x double]* %33, i32 0, i64 %24
  store double 0.000000e+00, double* %34, align 8
  %35 = load i32* %m, align 4
  %36 = sext i32 %35 to i64
  %37 = load i32* %n, align 4
  %38 = sext i32 %37 to i64
  %39 = load i32* %i, align 4
  %40 = sext i32 %39 to i64
  %41 = load i32* %j, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i64 %42
  %44 = getelementptr inbounds [23 x [5 x [5 x double]]]* %43, i32 0, i64 %40
  %45 = getelementptr inbounds [5 x [5 x double]]* %44, i32 0, i64 %38
  %46 = getelementptr inbounds [5 x double]* %45, i32 0, i64 %36
  store double 0.000000e+00, double* %46, align 8
  %47 = load i32* %m, align 4
  %48 = sext i32 %47 to i64
  %49 = load i32* %n, align 4
  %50 = sext i32 %49 to i64
  %51 = load i32* %i, align 4
  %52 = sext i32 %51 to i64
  %53 = load i32* %j, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i64 %54
  %56 = getelementptr inbounds [23 x [5 x [5 x double]]]* %55, i32 0, i64 %52
  %57 = getelementptr inbounds [5 x [5 x double]]* %56, i32 0, i64 %50
  %58 = getelementptr inbounds [5 x double]* %57, i32 0, i64 %48
  store double 0.000000e+00, double* %58, align 8
  %59 = load i32* %m, align 4
  %60 = sext i32 %59 to i64
  %61 = load i32* %n, align 4
  %62 = sext i32 %61 to i64
  %63 = load i32* %i, align 4
  %64 = sext i32 %63 to i64
  %65 = load i32* %j, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds [22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i64 %66
  %68 = getelementptr inbounds [23 x [5 x [5 x double]]]* %67, i32 0, i64 %64
  %69 = getelementptr inbounds [5 x [5 x double]]* %68, i32 0, i64 %62
  %70 = getelementptr inbounds [5 x double]* %69, i32 0, i64 %60
  store double 0.000000e+00, double* %70, align 8
  br label %71

; <label>:71                                      ; preds = %22
  %72 = load i32* %m, align 4
  %73 = add nsw i32 %72, 1
  store i32 %73, i32* %m, align 4
  br label %19

; <label>:74                                      ; preds = %19
  br label %75

; <label>:75                                      ; preds = %74
  %76 = load i32* %n, align 4
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %n, align 4
  br label %15

; <label>:78                                      ; preds = %15
  br label %79

; <label>:79                                      ; preds = %78
  %80 = load i32* %i, align 4
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %i, align 4
  br label %11

; <label>:82                                      ; preds = %11
  br label %83

; <label>:83                                      ; preds = %82
  %84 = load i32* %j, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %j, align 4
  br label %7

; <label>:86                                      ; preds = %7
  store i32 1, i32* %i, align 4
  br label %87

; <label>:87                                      ; preds = %92, %86
  %88 = load i32* %i, align 4
  %89 = icmp sle i32 %88, 11
  br i1 %89, label %90, label %95

; <label>:90                                      ; preds = %87
  %91 = load i32* %i, align 4
  call void @timer_clear(i32 %91)
  br label %92

; <label>:92                                      ; preds = %90
  %93 = load i32* %i, align 4
  %94 = add nsw i32 %93, 1
  store i32 %94, i32* %i, align 4
  br label %87

; <label>:95                                      ; preds = %87
  call void (...)* bitcast (void ()* @rhs to void (...)*)()
  %96 = load i32* @nx0, align 4
  %97 = load i32* @ny0, align 4
  %98 = load i32* @nz0, align 4
  %99 = load i32* @ist, align 4
  %100 = load i32* @iend, align 4
  %101 = load i32* @jst, align 4
  %102 = load i32* @jend, align 4
  call void @l2norm(i32 22, i32 22, i32 22, i32 %96, i32 %97, i32 %98, i32 %99, i32 %100, i32 %101, i32 %102, [5 x double]* getelementptr inbounds ([22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i32 0, i32 0, i32 0), double* getelementptr inbounds ([5 x double]* @rsdnm, i32 0, i32 0))
  store i32 1, i32* %i, align 4
  br label %103

; <label>:103                                     ; preds = %108, %95
  %104 = load i32* %i, align 4
  %105 = icmp sle i32 %104, 11
  br i1 %105, label %106, label %111

; <label>:106                                     ; preds = %103
  %107 = load i32* %i, align 4
  call void @timer_clear(i32 %107)
  br label %108

; <label>:108                                     ; preds = %106
  %109 = load i32* %i, align 4
  %110 = add nsw i32 %109, 1
  store i32 %110, i32* %i, align 4
  br label %103

; <label>:111                                     ; preds = %103
  call void @timer_start(i32 1)
  store i32 1, i32* %istep, align 4
  br label %112

; <label>:112                                     ; preds = %443, %111
  %113 = load i32* %istep, align 4
  %114 = load i32* %1, align 4
  %115 = icmp sle i32 %113, %114
  br i1 %115, label %116, label %446

; <label>:116                                     ; preds = %112
  %117 = load i32* %istep, align 4
  %118 = srem i32 %117, 20
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %127, label %120

; <label>:120                                     ; preds = %116
  %121 = load i32* %istep, align 4
  %122 = load i32* @itmax, align 4
  %123 = icmp eq i32 %121, %122
  br i1 %123, label %127, label %124

; <label>:124                                     ; preds = %120
  %125 = load i32* %istep, align 4
  %126 = icmp eq i32 %125, 1
  br i1 %126, label %127, label %134

; <label>:127                                     ; preds = %124, %120, %116
  %128 = load i32* %1, align 4
  %129 = icmp sgt i32 %128, 1
  br i1 %129, label %130, label %133

; <label>:130                                     ; preds = %127
  %131 = load i32* %istep, align 4
  %132 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([16 x i8]* @.str185, i32 0, i32 0), i32 %131)
  br label %133

; <label>:133                                     ; preds = %130, %127
  br label %134

; <label>:134                                     ; preds = %133, %124
  %135 = load i32* @timeron, align 4
  %136 = icmp ne i32 %135, 0
  br i1 %136, label %137, label %138

; <label>:137                                     ; preds = %134
  call void @timer_start(i32 5)
  br label %138

; <label>:138                                     ; preds = %137, %134
  store i32 1, i32* %k, align 4
  br label %139

; <label>:139                                     ; preds = %200, %138
  %140 = load i32* %k, align 4
  %141 = load i32* @nz, align 4
  %142 = sub nsw i32 %141, 1
  %143 = icmp slt i32 %140, %142
  br i1 %143, label %144, label %203

; <label>:144                                     ; preds = %139
  %145 = load i32* @jst, align 4
  store i32 %145, i32* %j, align 4
  br label %146

; <label>:146                                     ; preds = %196, %144
  %147 = load i32* %j, align 4
  %148 = load i32* @jend, align 4
  %149 = icmp slt i32 %147, %148
  br i1 %149, label %150, label %199

; <label>:150                                     ; preds = %146
  %151 = load i32* @ist, align 4
  store i32 %151, i32* %i, align 4
  br label %152

; <label>:152                                     ; preds = %192, %150
  %153 = load i32* %i, align 4
  %154 = load i32* @iend, align 4
  %155 = icmp slt i32 %153, %154
  br i1 %155, label %156, label %195

; <label>:156                                     ; preds = %152
  store i32 0, i32* %m, align 4
  br label %157

; <label>:157                                     ; preds = %188, %156
  %158 = load i32* %m, align 4
  %159 = icmp slt i32 %158, 5
  br i1 %159, label %160, label %191

; <label>:160                                     ; preds = %157
  %161 = load double* @dt, align 8
  %162 = load i32* %m, align 4
  %163 = sext i32 %162 to i64
  %164 = load i32* %i, align 4
  %165 = sext i32 %164 to i64
  %166 = load i32* %j, align 4
  %167 = sext i32 %166 to i64
  %168 = load i32* %k, align 4
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %169
  %171 = getelementptr inbounds [23 x [23 x [5 x double]]]* %170, i32 0, i64 %167
  %172 = getelementptr inbounds [23 x [5 x double]]* %171, i32 0, i64 %165
  %173 = getelementptr inbounds [5 x double]* %172, i32 0, i64 %163
  %174 = load double* %173, align 8
  %175 = fmul double %161, %174
  %176 = load i32* %m, align 4
  %177 = sext i32 %176 to i64
  %178 = load i32* %i, align 4
  %179 = sext i32 %178 to i64
  %180 = load i32* %j, align 4
  %181 = sext i32 %180 to i64
  %182 = load i32* %k, align 4
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %183
  %185 = getelementptr inbounds [23 x [23 x [5 x double]]]* %184, i32 0, i64 %181
  %186 = getelementptr inbounds [23 x [5 x double]]* %185, i32 0, i64 %179
  %187 = getelementptr inbounds [5 x double]* %186, i32 0, i64 %177
  store double %175, double* %187, align 8
  br label %188

; <label>:188                                     ; preds = %160
  %189 = load i32* %m, align 4
  %190 = add nsw i32 %189, 1
  store i32 %190, i32* %m, align 4
  br label %157

; <label>:191                                     ; preds = %157
  br label %192

; <label>:192                                     ; preds = %191
  %193 = load i32* %i, align 4
  %194 = add nsw i32 %193, 1
  store i32 %194, i32* %i, align 4
  br label %152

; <label>:195                                     ; preds = %152
  br label %196

; <label>:196                                     ; preds = %195
  %197 = load i32* %j, align 4
  %198 = add nsw i32 %197, 1
  store i32 %198, i32* %j, align 4
  br label %146

; <label>:199                                     ; preds = %146
  br label %200

; <label>:200                                     ; preds = %199
  %201 = load i32* %k, align 4
  %202 = add nsw i32 %201, 1
  store i32 %202, i32* %k, align 4
  br label %139

; <label>:203                                     ; preds = %139
  %204 = load i32* @timeron, align 4
  %205 = icmp ne i32 %204, 0
  br i1 %205, label %206, label %207

; <label>:206                                     ; preds = %203
  call void @timer_stop(i32 5)
  br label %207

; <label>:207                                     ; preds = %206, %203
  store i32 1, i32* %k, align 4
  br label %208

; <label>:208                                     ; preds = %242, %207
  %209 = load i32* %k, align 4
  %210 = load i32* @nz, align 4
  %211 = sub nsw i32 %210, 1
  %212 = icmp slt i32 %209, %211
  br i1 %212, label %213, label %245

; <label>:213                                     ; preds = %208
  %214 = load i32* @timeron, align 4
  %215 = icmp ne i32 %214, 0
  br i1 %215, label %216, label %217

; <label>:216                                     ; preds = %213
  call void @timer_start(i32 6)
  br label %217

; <label>:217                                     ; preds = %216, %213
  %218 = load i32* %k, align 4
  call void @jacld(i32 %218)
  %219 = load i32* @timeron, align 4
  %220 = icmp ne i32 %219, 0
  br i1 %220, label %221, label %222

; <label>:221                                     ; preds = %217
  call void @timer_stop(i32 6)
  br label %222

; <label>:222                                     ; preds = %221, %217
  %223 = load i32* @timeron, align 4
  %224 = icmp ne i32 %223, 0
  br i1 %224, label %225, label %226

; <label>:225                                     ; preds = %222
  call void @timer_start(i32 7)
  br label %226

; <label>:226                                     ; preds = %225, %222
  %227 = load i32* @nx, align 4
  %228 = load i32* @ny, align 4
  %229 = load i32* @nz, align 4
  %230 = load i32* %k, align 4
  %231 = load double* @omega, align 8
  %232 = load i32* @ist, align 4
  %233 = load i32* @iend, align 4
  %234 = load i32* @jst, align 4
  %235 = load i32* @jend, align 4
  %236 = load i32* @nx0, align 4
  %237 = load i32* @ny0, align 4
  call void @blts(i32 22, i32 22, i32 22, i32 %227, i32 %228, i32 %229, i32 %230, double %231, [5 x double]* getelementptr inbounds ([22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i32 0, i32 0, i32 0), [5 x [5 x double]]* getelementptr inbounds ([22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i32 0, i32 0), [5 x [5 x double]]* getelementptr inbounds ([22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i32 0, i32 0), [5 x [5 x double]]* getelementptr inbounds ([22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i32 0, i32 0), [5 x [5 x double]]* getelementptr inbounds ([22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i32 0, i32 0), i32 %232, i32 %233, i32 %234, i32 %235, i32 %236, i32 %237)
  %238 = load i32* @timeron, align 4
  %239 = icmp ne i32 %238, 0
  br i1 %239, label %240, label %241

; <label>:240                                     ; preds = %226
  call void @timer_stop(i32 7)
  br label %241

; <label>:241                                     ; preds = %240, %226
  br label %242

; <label>:242                                     ; preds = %241
  %243 = load i32* %k, align 4
  %244 = add nsw i32 %243, 1
  store i32 %244, i32* %k, align 4
  br label %208

; <label>:245                                     ; preds = %208
  %246 = load i32* @nz, align 4
  %247 = sub nsw i32 %246, 2
  store i32 %247, i32* %k, align 4
  br label %248

; <label>:248                                     ; preds = %282, %245
  %249 = load i32* %k, align 4
  %250 = icmp sgt i32 %249, 0
  br i1 %250, label %251, label %285

; <label>:251                                     ; preds = %248
  %252 = load i32* @timeron, align 4
  %253 = icmp ne i32 %252, 0
  br i1 %253, label %254, label %255

; <label>:254                                     ; preds = %251
  call void @timer_start(i32 8)
  br label %255

; <label>:255                                     ; preds = %254, %251
  %256 = load i32* %k, align 4
  call void @jacu(i32 %256)
  %257 = load i32* @timeron, align 4
  %258 = icmp ne i32 %257, 0
  br i1 %258, label %259, label %260

; <label>:259                                     ; preds = %255
  call void @timer_stop(i32 8)
  br label %260

; <label>:260                                     ; preds = %259, %255
  %261 = load i32* @timeron, align 4
  %262 = icmp ne i32 %261, 0
  br i1 %262, label %263, label %264

; <label>:263                                     ; preds = %260
  call void @timer_start(i32 9)
  br label %264

; <label>:264                                     ; preds = %263, %260
  %265 = load i32* @nx, align 4
  %266 = load i32* @ny, align 4
  %267 = load i32* @nz, align 4
  %268 = load i32* %k, align 4
  %269 = load double* @omega, align 8
  %270 = getelementptr inbounds [22 x [22 x [5 x double]]]* %tv, i32 0, i32 0
  %271 = bitcast [22 x [5 x double]]* %270 to [5 x double]*
  %272 = load i32* @ist, align 4
  %273 = load i32* @iend, align 4
  %274 = load i32* @jst, align 4
  %275 = load i32* @jend, align 4
  %276 = load i32* @nx0, align 4
  %277 = load i32* @ny0, align 4
  call void @buts(i32 22, i32 22, i32 22, i32 %265, i32 %266, i32 %267, i32 %268, double %269, [5 x double]* getelementptr inbounds ([22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i32 0, i32 0, i32 0), [5 x double]* %271, [5 x [5 x double]]* getelementptr inbounds ([22 x [23 x [5 x [5 x double]]]]* @d, i32 0, i32 0, i32 0), [5 x [5 x double]]* getelementptr inbounds ([22 x [23 x [5 x [5 x double]]]]* @a, i32 0, i32 0, i32 0), [5 x [5 x double]]* getelementptr inbounds ([22 x [23 x [5 x [5 x double]]]]* @b, i32 0, i32 0, i32 0), [5 x [5 x double]]* getelementptr inbounds ([22 x [23 x [5 x [5 x double]]]]* @c, i32 0, i32 0, i32 0), i32 %272, i32 %273, i32 %274, i32 %275, i32 %276, i32 %277)
  %278 = load i32* @timeron, align 4
  %279 = icmp ne i32 %278, 0
  br i1 %279, label %280, label %281

; <label>:280                                     ; preds = %264
  call void @timer_stop(i32 9)
  br label %281

; <label>:281                                     ; preds = %280, %264
  br label %282

; <label>:282                                     ; preds = %281
  %283 = load i32* %k, align 4
  %284 = add nsw i32 %283, -1
  store i32 %284, i32* %k, align 4
  br label %248

; <label>:285                                     ; preds = %248
  %286 = load i32* @timeron, align 4
  %287 = icmp ne i32 %286, 0
  br i1 %287, label %288, label %289

; <label>:288                                     ; preds = %285
  call void @timer_start(i32 10)
  br label %289

; <label>:289                                     ; preds = %288, %285
  store i32 1, i32* %k, align 4
  br label %290

; <label>:290                                     ; preds = %365, %289
  %291 = load i32* %k, align 4
  %292 = load i32* @nz, align 4
  %293 = sub nsw i32 %292, 1
  %294 = icmp slt i32 %291, %293
  br i1 %294, label %295, label %368

; <label>:295                                     ; preds = %290
  %296 = load i32* @jst, align 4
  store i32 %296, i32* %j, align 4
  br label %297

; <label>:297                                     ; preds = %361, %295
  %298 = load i32* %j, align 4
  %299 = load i32* @jend, align 4
  %300 = icmp slt i32 %298, %299
  br i1 %300, label %301, label %364

; <label>:301                                     ; preds = %297
  %302 = load i32* @ist, align 4
  store i32 %302, i32* %i, align 4
  br label %303

; <label>:303                                     ; preds = %357, %301
  %304 = load i32* %i, align 4
  %305 = load i32* @iend, align 4
  %306 = icmp slt i32 %304, %305
  br i1 %306, label %307, label %360

; <label>:307                                     ; preds = %303
  store i32 0, i32* %m, align 4
  br label %308

; <label>:308                                     ; preds = %353, %307
  %309 = load i32* %m, align 4
  %310 = icmp slt i32 %309, 5
  br i1 %310, label %311, label %356

; <label>:311                                     ; preds = %308
  %312 = load i32* %m, align 4
  %313 = sext i32 %312 to i64
  %314 = load i32* %i, align 4
  %315 = sext i32 %314 to i64
  %316 = load i32* %j, align 4
  %317 = sext i32 %316 to i64
  %318 = load i32* %k, align 4
  %319 = sext i32 %318 to i64
  %320 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %319
  %321 = getelementptr inbounds [23 x [23 x [5 x double]]]* %320, i32 0, i64 %317
  %322 = getelementptr inbounds [23 x [5 x double]]* %321, i32 0, i64 %315
  %323 = getelementptr inbounds [5 x double]* %322, i32 0, i64 %313
  %324 = load double* %323, align 8
  %325 = load double* %tmp, align 8
  %326 = load i32* %m, align 4
  %327 = sext i32 %326 to i64
  %328 = load i32* %i, align 4
  %329 = sext i32 %328 to i64
  %330 = load i32* %j, align 4
  %331 = sext i32 %330 to i64
  %332 = load i32* %k, align 4
  %333 = sext i32 %332 to i64
  %334 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i64 %333
  %335 = getelementptr inbounds [23 x [23 x [5 x double]]]* %334, i32 0, i64 %331
  %336 = getelementptr inbounds [23 x [5 x double]]* %335, i32 0, i64 %329
  %337 = getelementptr inbounds [5 x double]* %336, i32 0, i64 %327
  %338 = load double* %337, align 8
  %339 = fmul double %325, %338
  %340 = fadd double %324, %339
  %341 = load i32* %m, align 4
  %342 = sext i32 %341 to i64
  %343 = load i32* %i, align 4
  %344 = sext i32 %343 to i64
  %345 = load i32* %j, align 4
  %346 = sext i32 %345 to i64
  %347 = load i32* %k, align 4
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds [22 x [23 x [23 x [5 x double]]]]* @u, i32 0, i64 %348
  %350 = getelementptr inbounds [23 x [23 x [5 x double]]]* %349, i32 0, i64 %346
  %351 = getelementptr inbounds [23 x [5 x double]]* %350, i32 0, i64 %344
  %352 = getelementptr inbounds [5 x double]* %351, i32 0, i64 %342
  store double %340, double* %352, align 8
  br label %353

; <label>:353                                     ; preds = %311
  %354 = load i32* %m, align 4
  %355 = add nsw i32 %354, 1
  store i32 %355, i32* %m, align 4
  br label %308

; <label>:356                                     ; preds = %308
  br label %357

; <label>:357                                     ; preds = %356
  %358 = load i32* %i, align 4
  %359 = add nsw i32 %358, 1
  store i32 %359, i32* %i, align 4
  br label %303

; <label>:360                                     ; preds = %303
  br label %361

; <label>:361                                     ; preds = %360
  %362 = load i32* %j, align 4
  %363 = add nsw i32 %362, 1
  store i32 %363, i32* %j, align 4
  br label %297

; <label>:364                                     ; preds = %297
  br label %365

; <label>:365                                     ; preds = %364
  %366 = load i32* %k, align 4
  %367 = add nsw i32 %366, 1
  store i32 %367, i32* %k, align 4
  br label %290

; <label>:368                                     ; preds = %290
  %369 = load i32* @timeron, align 4
  %370 = icmp ne i32 %369, 0
  br i1 %370, label %371, label %372

; <label>:371                                     ; preds = %368
  call void @timer_stop(i32 10)
  br label %372

; <label>:372                                     ; preds = %371, %368
  %373 = load i32* %istep, align 4
  %374 = load i32* @inorm, align 4
  %375 = srem i32 %373, %374
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %377, label %394

; <label>:377                                     ; preds = %372
  %378 = load i32* @timeron, align 4
  %379 = icmp ne i32 %378, 0
  br i1 %379, label %380, label %381

; <label>:380                                     ; preds = %377
  call void @timer_start(i32 11)
  br label %381

; <label>:381                                     ; preds = %380, %377
  %382 = load i32* @nx0, align 4
  %383 = load i32* @ny0, align 4
  %384 = load i32* @nz0, align 4
  %385 = load i32* @ist, align 4
  %386 = load i32* @iend, align 4
  %387 = load i32* @jst, align 4
  %388 = load i32* @jend, align 4
  %389 = getelementptr inbounds [5 x double]* %delunm, i32 0, i32 0
  call void @l2norm(i32 22, i32 22, i32 22, i32 %382, i32 %383, i32 %384, i32 %385, i32 %386, i32 %387, i32 %388, [5 x double]* getelementptr inbounds ([22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i32 0, i32 0, i32 0), double* %389)
  %390 = load i32* @timeron, align 4
  %391 = icmp ne i32 %390, 0
  br i1 %391, label %392, label %393

; <label>:392                                     ; preds = %381
  call void @timer_stop(i32 11)
  br label %393

; <label>:393                                     ; preds = %392, %381
  br label %394

; <label>:394                                     ; preds = %393, %372
  call void (...)* bitcast (void ()* @rhs to void (...)*)()
  %395 = load i32* %istep, align 4
  %396 = load i32* @inorm, align 4
  %397 = srem i32 %395, %396
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %403, label %399

; <label>:399                                     ; preds = %394
  %400 = load i32* %istep, align 4
  %401 = load i32* @itmax, align 4
  %402 = icmp eq i32 %400, %401
  br i1 %402, label %403, label %419

; <label>:403                                     ; preds = %399, %394
  %404 = load i32* @timeron, align 4
  %405 = icmp ne i32 %404, 0
  br i1 %405, label %406, label %407

; <label>:406                                     ; preds = %403
  call void @timer_start(i32 11)
  br label %407

; <label>:407                                     ; preds = %406, %403
  %408 = load i32* @nx0, align 4
  %409 = load i32* @ny0, align 4
  %410 = load i32* @nz0, align 4
  %411 = load i32* @ist, align 4
  %412 = load i32* @iend, align 4
  %413 = load i32* @jst, align 4
  %414 = load i32* @jend, align 4
  call void @l2norm(i32 22, i32 22, i32 22, i32 %408, i32 %409, i32 %410, i32 %411, i32 %412, i32 %413, i32 %414, [5 x double]* getelementptr inbounds ([22 x [23 x [23 x [5 x double]]]]* @rsd, i32 0, i32 0, i32 0, i32 0), double* getelementptr inbounds ([5 x double]* @rsdnm, i32 0, i32 0))
  %415 = load i32* @timeron, align 4
  %416 = icmp ne i32 %415, 0
  br i1 %416, label %417, label %418

; <label>:417                                     ; preds = %407
  call void @timer_stop(i32 11)
  br label %418

; <label>:418                                     ; preds = %417, %407
  br label %419

; <label>:419                                     ; preds = %418, %399
  %420 = load double* getelementptr inbounds ([5 x double]* @rsdnm, i32 0, i64 0), align 8
  %421 = load double* getelementptr inbounds ([5 x double]* @tolrsd, i32 0, i64 0), align 8
  %422 = fcmp olt double %420, %421
  br i1 %422, label %423, label %442

; <label>:423                                     ; preds = %419
  %424 = load double* getelementptr inbounds ([5 x double]* @rsdnm, i32 0, i64 1), align 8
  %425 = load double* getelementptr inbounds ([5 x double]* @tolrsd, i32 0, i64 1), align 8
  %426 = fcmp olt double %424, %425
  br i1 %426, label %427, label %442

; <label>:427                                     ; preds = %423
  %428 = load double* getelementptr inbounds ([5 x double]* @rsdnm, i32 0, i64 2), align 8
  %429 = load double* getelementptr inbounds ([5 x double]* @tolrsd, i32 0, i64 2), align 8
  %430 = fcmp olt double %428, %429
  br i1 %430, label %431, label %442

; <label>:431                                     ; preds = %427
  %432 = load double* getelementptr inbounds ([5 x double]* @rsdnm, i32 0, i64 3), align 8
  %433 = load double* getelementptr inbounds ([5 x double]* @tolrsd, i32 0, i64 3), align 8
  %434 = fcmp olt double %432, %433
  br i1 %434, label %435, label %442

; <label>:435                                     ; preds = %431
  %436 = load double* getelementptr inbounds ([5 x double]* @rsdnm, i32 0, i64 4), align 8
  %437 = load double* getelementptr inbounds ([5 x double]* @tolrsd, i32 0, i64 4), align 8
  %438 = fcmp olt double %436, %437
  br i1 %438, label %439, label %442

; <label>:439                                     ; preds = %435
  %440 = load i32* %istep, align 4
  %441 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([57 x i8]* @.str1186, i32 0, i32 0), i32 %440)
  br label %446

; <label>:442                                     ; preds = %435, %431, %427, %423, %419
  br label %443

; <label>:443                                     ; preds = %442
  %444 = load i32* %istep, align 4
  %445 = add nsw i32 %444, 1
  store i32 %445, i32* %istep, align 4
  br label %112

; <label>:446                                     ; preds = %439, %112
  call void @timer_stop(i32 1)
  %447 = call double @timer_read(i32 1)
  store double %447, double* @maxtime, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define void @verify(double* %xcr, double* %xce, double %xci, i8* %Class, i32* %verified) #0 {
  %1 = alloca double*, align 8
  %2 = alloca double*, align 8
  %3 = alloca double, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32*, align 8
  %xcrref = alloca [5 x double], align 16
  %xceref = alloca [5 x double], align 16
  %xciref = alloca double, align 8
  %xcrdif = alloca [5 x double], align 16
  %xcedif = alloca [5 x double], align 16
  %xcidif = alloca double, align 8
  %epsilon = alloca double, align 8
  %dtref = alloca double, align 8
  %m = alloca i32, align 4
  store double* %xcr, double** %1, align 8
  store double* %xce, double** %2, align 8
  store double %xci, double* %3, align 8
  store i8* %Class, i8** %4, align 8
  store i32* %verified, i32** %5, align 8
  store double 0.000000e+00, double* %dtref, align 8
  store double 1.000000e-08, double* %epsilon, align 8
  %6 = load i8** %4, align 8
  store i8 85, i8* %6, align 1
  %7 = load i32** %5, align 8
  store i32 1, i32* %7, align 4
  store i32 0, i32* %m, align 4
  br label %8

; <label>:8                                       ; preds = %18, %0
  %9 = load i32* %m, align 4
  %10 = icmp slt i32 %9, 5
  br i1 %10, label %11, label %21

; <label>:11                                      ; preds = %8
  %12 = load i32* %m, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 %13
  store double 1.000000e+00, double* %14, align 8
  %15 = load i32* %m, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 %16
  store double 1.000000e+00, double* %17, align 8
  br label %18

; <label>:18                                      ; preds = %11
  %19 = load i32* %m, align 4
  %20 = add nsw i32 %19, 1
  store i32 %20, i32* %m, align 4
  br label %8

; <label>:21                                      ; preds = %8
  store double 1.000000e+00, double* %xciref, align 8
  %22 = load i32* @nx0, align 4
  %23 = icmp eq i32 %22, 12
  br i1 %23, label %24, label %45

; <label>:24                                      ; preds = %21
  %25 = load i32* @ny0, align 4
  %26 = icmp eq i32 %25, 12
  br i1 %26, label %27, label %45

; <label>:27                                      ; preds = %24
  %28 = load i32* @nz0, align 4
  %29 = icmp eq i32 %28, 12
  br i1 %29, label %30, label %45

; <label>:30                                      ; preds = %27
  %31 = load i32* @itmax, align 4
  %32 = icmp eq i32 %31, 50
  br i1 %32, label %33, label %45

; <label>:33                                      ; preds = %30
  %34 = load i8** %4, align 8
  store i8 83, i8* %34, align 1
  store double 5.000000e-01, double* %dtref, align 8
  %35 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 0
  store double 0x3F9095C6319FADD6, double* %35, align 8
  %36 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 1
  store double 0x3F6200DB859E0D21, double* %36, align 8
  %37 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 2
  store double 0x3F58DEEC5217BFDD, double* %37, align 8
  %38 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 3
  store double 0x3F589FDD57334EFA, double* %38, align 8
  %39 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 4
  store double 0x3FA18B0F8343C057, double* %39, align 8
  %40 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 0
  store double 0x3F450B714B573D84, double* %40, align 8
  %41 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 1
  store double 0x3F160ED4C9F87163, double* %41, align 8
  %42 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 2
  store double 0x3F0EB7959D8E8ADC, double* %42, align 8
  %43 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 3
  store double 0x3F0EA846FD592A40, double* %43, align 8
  %44 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 4
  store double 0x3F5577F144DBE709, double* %44, align 8
  store double 0x401F5E192B3A9EBC, double* %xciref, align 8
  br label %197

; <label>:45                                      ; preds = %30, %27, %24, %21
  %46 = load i32* @nx0, align 4
  %47 = icmp eq i32 %46, 33
  br i1 %47, label %48, label %69

; <label>:48                                      ; preds = %45
  %49 = load i32* @ny0, align 4
  %50 = icmp eq i32 %49, 33
  br i1 %50, label %51, label %69

; <label>:51                                      ; preds = %48
  %52 = load i32* @nz0, align 4
  %53 = icmp eq i32 %52, 33
  br i1 %53, label %54, label %69

; <label>:54                                      ; preds = %51
  %55 = load i32* @itmax, align 4
  %56 = icmp eq i32 %55, 300
  br i1 %56, label %57, label %69

; <label>:57                                      ; preds = %54
  %58 = load i8** %4, align 8
  store i8 87, i8* %58, align 1
  store double 1.500000e-03, double* %dtref, align 8
  %59 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 0
  store double 0x4028BAF088CF2916, double* %59, align 8
  %60 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 1
  store double 0x3FF5135E2B181AE6, double* %60, align 8
  %61 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 2
  store double 0x400466A5B03CC305, double* %61, align 8
  %62 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 3
  store double 0x40029C0852BD8158, double* %62, align 8
  %63 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 4
  store double 0x403C449B48A36D65, double* %63, align 8
  %64 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 0
  store double 0x3FDF2787A8624355, double* %64, align 8
  %65 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 1
  store double 0x3FA9EE5781C9C74E, double* %65, align 8
  %66 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 2
  store double 0x3FB7C2EEABF4115D, double* %66, align 8
  %67 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 3
  store double 0x3FB5F084A43C7776, double* %67, align 8
  %68 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 4
  store double 0x3FF15933471353D7, double* %68, align 8
  store double 0x40273A5D4E10D079, double* %xciref, align 8
  br label %196

; <label>:69                                      ; preds = %54, %51, %48, %45
  %70 = load i32* @nx0, align 4
  %71 = icmp eq i32 %70, 64
  br i1 %71, label %72, label %93

; <label>:72                                      ; preds = %69
  %73 = load i32* @ny0, align 4
  %74 = icmp eq i32 %73, 64
  br i1 %74, label %75, label %93

; <label>:75                                      ; preds = %72
  %76 = load i32* @nz0, align 4
  %77 = icmp eq i32 %76, 64
  br i1 %77, label %78, label %93

; <label>:78                                      ; preds = %75
  %79 = load i32* @itmax, align 4
  %80 = icmp eq i32 %79, 250
  br i1 %80, label %81, label %93

; <label>:81                                      ; preds = %78
  %82 = load i8** %4, align 8
  store i8 65, i8* %82, align 1
  store double 2.000000e+00, double* %dtref, align 8
  %83 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 0
  store double 0x4088582B29EDD04B, double* %83, align 8
  %84 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 1
  store double 0x404FB38DCFE12C44, double* %84, align 8
  %85 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 2
  store double 0x40685FC289A41299, double* %85, align 8
  %86 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 3
  store double 0x40664E7F123115E9, double* %86, align 8
  %87 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 4
  store double 0x409CB9E775B47A97, double* %87, align 8
  %88 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 0
  store double 0x403DF6CE51C9A4CC, double* %88, align 8
  %89 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 1
  store double 0x40068E3FCE29CFA8, double* %89, align 8
  %90 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 2
  store double 0x401D63AD6E0AB30F, double* %90, align 8
  %91 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 3
  store double 0x401ADB0E84931B31, double* %91, align 8
  %92 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 4
  store double 0x4051ADC7BB73FD8F, double* %92, align 8
  store double 0x403A07EABD8D9878, double* %xciref, align 8
  br label %195

; <label>:93                                      ; preds = %78, %75, %72, %69
  %94 = load i32* @nx0, align 4
  %95 = icmp eq i32 %94, 102
  br i1 %95, label %96, label %117

; <label>:96                                      ; preds = %93
  %97 = load i32* @ny0, align 4
  %98 = icmp eq i32 %97, 102
  br i1 %98, label %99, label %117

; <label>:99                                      ; preds = %96
  %100 = load i32* @nz0, align 4
  %101 = icmp eq i32 %100, 102
  br i1 %101, label %102, label %117

; <label>:102                                     ; preds = %99
  %103 = load i32* @itmax, align 4
  %104 = icmp eq i32 %103, 250
  br i1 %104, label %105, label %117

; <label>:105                                     ; preds = %102
  %106 = load i8** %4, align 8
  store i8 66, i8* %106, align 1
  store double 2.000000e+00, double* %dtref, align 8
  %107 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 0
  store double 0x40ABC288DB26F3CF, double* %107, align 8
  %108 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 1
  store double 0x4070625C314CA7E8, double* %108, align 8
  %109 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 2
  store double 0x408B9AB29F9E3005, double* %109, align 8
  %110 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 3
  store double 0x40885105A06D03B7, double* %110, align 8
  %111 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 4
  store double 0x40BC8CCC05858E75, double* %111, align 8
  %112 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 0
  store double 0x405C80C0BCF65A66, double* %112, align 8
  %113 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 1
  store double 0x40203844561FE7D9, double* %113, align 8
  %114 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 2
  store double 0x403C7B086D020F3F, double* %114, align 8
  %115 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 3
  store double 0x4039E7C7F03AD18B, double* %115, align 8
  %116 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 4
  store double 0x407048C902EB0ACF, double* %116, align 8
  store double 0x4047F18E8C26784B, double* %xciref, align 8
  br label %194

; <label>:117                                     ; preds = %102, %99, %96, %93
  %118 = load i32* @nx0, align 4
  %119 = icmp eq i32 %118, 162
  br i1 %119, label %120, label %141

; <label>:120                                     ; preds = %117
  %121 = load i32* @ny0, align 4
  %122 = icmp eq i32 %121, 162
  br i1 %122, label %123, label %141

; <label>:123                                     ; preds = %120
  %124 = load i32* @nz0, align 4
  %125 = icmp eq i32 %124, 162
  br i1 %125, label %126, label %141

; <label>:126                                     ; preds = %123
  %127 = load i32* @itmax, align 4
  %128 = icmp eq i32 %127, 250
  br i1 %128, label %129, label %141

; <label>:129                                     ; preds = %126
  %130 = load i8** %4, align 8
  store i8 67, i8* %130, align 1
  store double 2.000000e+00, double* %dtref, align 8
  %131 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 0
  store double 0x40C44459591FC987, double* %131, align 8
  %132 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 1
  store double 0x408BE1B31D9990A2, double* %132, align 8
  %133 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 2
  store double 0x40A404C6BB0CBEBA, double* %133, align 8
  %134 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 3
  store double 0x40A11FE30A619F4A, double* %134, align 8
  %135 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 4
  store double 0x40D163F391043AD4, double* %135, align 8
  %136 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 0
  store double 0x406AFF909623A296, double* %136, align 8
  %137 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 1
  store double 0x402F286CE92EB19A, double* %137, align 8
  %138 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 2
  store double 0x404B10E1A68939B8, double* %138, align 8
  %139 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 3
  store double 0x40481CF63AA57509, double* %139, align 8
  %140 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 4
  store double 0x407C7E7251CD2FD8, double* %140, align 8
  store double 0x4050A8FD38777331, double* %xciref, align 8
  store double 0x4050A8FD38777331, double* %xciref, align 8
  br label %193

; <label>:141                                     ; preds = %126, %123, %120, %117
  %142 = load i32* @nx0, align 4
  %143 = icmp eq i32 %142, 408
  br i1 %143, label %144, label %165

; <label>:144                                     ; preds = %141
  %145 = load i32* @ny0, align 4
  %146 = icmp eq i32 %145, 408
  br i1 %146, label %147, label %165

; <label>:147                                     ; preds = %144
  %148 = load i32* @nz0, align 4
  %149 = icmp eq i32 %148, 408
  br i1 %149, label %150, label %165

; <label>:150                                     ; preds = %147
  %151 = load i32* @itmax, align 4
  %152 = icmp eq i32 %151, 300
  br i1 %152, label %153, label %165

; <label>:153                                     ; preds = %150
  %154 = load i8** %4, align 8
  store i8 68, i8* %154, align 1
  store double 1.000000e+00, double* %dtref, align 8
  %155 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 0
  store double 0x40E7C585BD66ADB4, double* %155, align 8
  %156 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 1
  store double 0x40B2585EFD233020, double* %156, align 8
  %157 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 2
  store double 0x40C7CA929FABAC6C, double* %157, align 8
  %158 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 3
  store double 0x40C43101E96096C4, double* %158, align 8
  %159 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 4
  store double 0x40F16FFFBF07AA6E, double* %159, align 8
  %160 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 0
  store double 0x407773D42CB4EEFF, double* %160, align 8
  %161 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 1
  store double 0x403ED75EB6352403, double* %161, align 8
  %162 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 2
  store double 0x405795EFED9DFE5C, double* %162, align 8
  %163 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 3
  store double 0x405493A3B4BA4240, double* %163, align 8
  %164 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 4
  store double 0x4085E218B4CFCD55, double* %164, align 8
  store double 0x4054D5D32C11DF01, double* %xciref, align 8
  br label %192

; <label>:165                                     ; preds = %150, %147, %144, %141
  %166 = load i32* @nx0, align 4
  %167 = icmp eq i32 %166, 1020
  br i1 %167, label %168, label %189

; <label>:168                                     ; preds = %165
  %169 = load i32* @ny0, align 4
  %170 = icmp eq i32 %169, 1020
  br i1 %170, label %171, label %189

; <label>:171                                     ; preds = %168
  %172 = load i32* @nz0, align 4
  %173 = icmp eq i32 %172, 1020
  br i1 %173, label %174, label %189

; <label>:174                                     ; preds = %171
  %175 = load i32* @itmax, align 4
  %176 = icmp eq i32 %175, 300
  br i1 %176, label %177, label %189

; <label>:177                                     ; preds = %174
  %178 = load i8** %4, align 8
  store i8 69, i8* %178, align 1
  store double 5.000000e-01, double* %dtref, align 8
  %179 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 0
  store double 0x4109A16159AD3558, double* %179, align 8
  %180 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 1
  store double 0x40D4CE0202F9E534, double* %180, align 8
  %181 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 2
  store double 0x40E9F909366CDEA6, double* %181, align 8
  %182 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 3
  store double 0x40E60533B988FD95, double* %182, align 8
  %183 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 4
  store double 0x4111E5D000ACC0BE, double* %183, align 8
  %184 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 0
  store double 0x407E00EA8730976A, double* %184, align 8
  %185 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 1
  store double 0x40451C26CC209732, double* %185, align 8
  %186 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 2
  store double 0x405E4573C39EB53E, double* %186, align 8
  %187 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 3
  store double 0x405A327D50E064A7, double* %187, align 8
  %188 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 4
  store double 0x408A226C2FE6A7B3, double* %188, align 8
  store double 0x4057C7C8D49D8FEC, double* %xciref, align 8
  br label %191

; <label>:189                                     ; preds = %174, %171, %168, %165
  %190 = load i32** %5, align 8
  store i32 0, i32* %190, align 4
  br label %191

; <label>:191                                     ; preds = %189, %177
  br label %192

; <label>:192                                     ; preds = %191, %153
  br label %193

; <label>:193                                     ; preds = %192, %129
  br label %194

; <label>:194                                     ; preds = %193, %105
  br label %195

; <label>:195                                     ; preds = %194, %81
  br label %196

; <label>:196                                     ; preds = %195, %57
  br label %197

; <label>:197                                     ; preds = %196, %33
  store i32 0, i32* %m, align 4
  br label %198

; <label>:198                                     ; preds = %240, %197
  %199 = load i32* %m, align 4
  %200 = icmp slt i32 %199, 5
  br i1 %200, label %201, label %243

; <label>:201                                     ; preds = %198
  %202 = load i32* %m, align 4
  %203 = sext i32 %202 to i64
  %204 = load double** %1, align 8
  %205 = getelementptr inbounds double* %204, i64 %203
  %206 = load double* %205, align 8
  %207 = load i32* %m, align 4
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 %208
  %210 = load double* %209, align 8
  %211 = fsub double %206, %210
  %212 = load i32* %m, align 4
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 %213
  %215 = load double* %214, align 8
  %216 = fdiv double %211, %215
  %217 = call double @fabs(double %216) #7
  %218 = load i32* %m, align 4
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds [5 x double]* %xcrdif, i32 0, i64 %219
  store double %217, double* %220, align 8
  %221 = load i32* %m, align 4
  %222 = sext i32 %221 to i64
  %223 = load double** %2, align 8
  %224 = getelementptr inbounds double* %223, i64 %222
  %225 = load double* %224, align 8
  %226 = load i32* %m, align 4
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 %227
  %229 = load double* %228, align 8
  %230 = fsub double %225, %229
  %231 = load i32* %m, align 4
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 %232
  %234 = load double* %233, align 8
  %235 = fdiv double %230, %234
  %236 = call double @fabs(double %235) #7
  %237 = load i32* %m, align 4
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds [5 x double]* %xcedif, i32 0, i64 %238
  store double %236, double* %239, align 8
  br label %240

; <label>:240                                     ; preds = %201
  %241 = load i32* %m, align 4
  %242 = add nsw i32 %241, 1
  store i32 %242, i32* %m, align 4
  br label %198

; <label>:243                                     ; preds = %198
  %244 = load double* %3, align 8
  %245 = load double* %xciref, align 8
  %246 = fsub double %244, %245
  %247 = load double* %xciref, align 8
  %248 = fdiv double %246, %247
  %249 = call double @fabs(double %248) #7
  store double %249, double* %xcidif, align 8
  %250 = load i8** %4, align 8
  %251 = load i8* %250, align 1
  %252 = sext i8 %251 to i32
  %253 = icmp ne i32 %252, 85
  br i1 %253, label %254, label %277

; <label>:254                                     ; preds = %243
  %255 = load i8** %4, align 8
  %256 = load i8* %255, align 1
  %257 = sext i8 %256 to i32
  %258 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([45 x i8]* @.str189, i32 0, i32 0), i32 %257)
  %259 = load double* %epsilon, align 8
  %260 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([41 x i8]* @.str1190, i32 0, i32 0), double %259)
  %261 = load double* @dt, align 8
  %262 = load double* %dtref, align 8
  %263 = fsub double %261, %262
  %264 = call double @fabs(double %263) #7
  %265 = load double* %epsilon, align 8
  %266 = fcmp ole double %264, %265
  %267 = zext i1 %266 to i32
  %268 = load i32** %5, align 8
  store i32 %267, i32* %268, align 4
  %269 = load i32** %5, align 8
  %270 = load i32* %269, align 4
  %271 = icmp ne i32 %270, 0
  br i1 %271, label %276, label %272

; <label>:272                                     ; preds = %254
  %273 = load i8** %4, align 8
  store i8 85, i8* %273, align 1
  %274 = load double* %dtref, align 8
  %275 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([50 x i8]* @.str2191, i32 0, i32 0), double %274)
  br label %276

; <label>:276                                     ; preds = %272, %254
  br label %279

; <label>:277                                     ; preds = %243
  %278 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([16 x i8]* @.str3192, i32 0, i32 0))
  br label %279

; <label>:279                                     ; preds = %277, %276
  %280 = load i8** %4, align 8
  %281 = load i8* %280, align 1
  %282 = sext i8 %281 to i32
  %283 = icmp ne i32 %282, 85
  br i1 %283, label %284, label %286

; <label>:284                                     ; preds = %279
  %285 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str4193, i32 0, i32 0))
  br label %288

; <label>:286                                     ; preds = %279
  %287 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str5194, i32 0, i32 0))
  br label %288

; <label>:288                                     ; preds = %286, %284
  store i32 0, i32* %m, align 4
  br label %289

; <label>:289                                     ; preds = %350, %288
  %290 = load i32* %m, align 4
  %291 = icmp slt i32 %290, 5
  br i1 %291, label %292, label %353

; <label>:292                                     ; preds = %289
  %293 = load i8** %4, align 8
  %294 = load i8* %293, align 1
  %295 = sext i8 %294 to i32
  %296 = icmp eq i32 %295, 85
  br i1 %296, label %297, label %306

; <label>:297                                     ; preds = %292
  %298 = load i32* %m, align 4
  %299 = add nsw i32 %298, 1
  %300 = load i32* %m, align 4
  %301 = sext i32 %300 to i64
  %302 = load double** %1, align 8
  %303 = getelementptr inbounds double* %302, i64 %301
  %304 = load double* %303, align 8
  %305 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str6195, i32 0, i32 0), i32 %299, double %304)
  br label %349

; <label>:306                                     ; preds = %292
  %307 = load i32* %m, align 4
  %308 = sext i32 %307 to i64
  %309 = getelementptr inbounds [5 x double]* %xcrdif, i32 0, i64 %308
  %310 = load double* %309, align 8
  %311 = load double* %epsilon, align 8
  %312 = fcmp ole double %310, %311
  br i1 %312, label %313, label %330

; <label>:313                                     ; preds = %306
  %314 = load i32* %m, align 4
  %315 = add nsw i32 %314, 1
  %316 = load i32* %m, align 4
  %317 = sext i32 %316 to i64
  %318 = load double** %1, align 8
  %319 = getelementptr inbounds double* %318, i64 %317
  %320 = load double* %319, align 8
  %321 = load i32* %m, align 4
  %322 = sext i32 %321 to i64
  %323 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 %322
  %324 = load double* %323, align 8
  %325 = load i32* %m, align 4
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds [5 x double]* %xcrdif, i32 0, i64 %326
  %328 = load double* %327, align 8
  %329 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str7196, i32 0, i32 0), i32 %315, double %320, double %324, double %328)
  br label %348

; <label>:330                                     ; preds = %306
  %331 = load i32** %5, align 8
  store i32 0, i32* %331, align 4
  %332 = load i32* %m, align 4
  %333 = add nsw i32 %332, 1
  %334 = load i32* %m, align 4
  %335 = sext i32 %334 to i64
  %336 = load double** %1, align 8
  %337 = getelementptr inbounds double* %336, i64 %335
  %338 = load double* %337, align 8
  %339 = load i32* %m, align 4
  %340 = sext i32 %339 to i64
  %341 = getelementptr inbounds [5 x double]* %xcrref, i32 0, i64 %340
  %342 = load double* %341, align 8
  %343 = load i32* %m, align 4
  %344 = sext i32 %343 to i64
  %345 = getelementptr inbounds [5 x double]* %xcrdif, i32 0, i64 %344
  %346 = load double* %345, align 8
  %347 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str8197, i32 0, i32 0), i32 %333, double %338, double %342, double %346)
  br label %348

; <label>:348                                     ; preds = %330, %313
  br label %349

; <label>:349                                     ; preds = %348, %297
  br label %350

; <label>:350                                     ; preds = %349
  %351 = load i32* %m, align 4
  %352 = add nsw i32 %351, 1
  store i32 %352, i32* %m, align 4
  br label %289

; <label>:353                                     ; preds = %289
  %354 = load i8** %4, align 8
  %355 = load i8* %354, align 1
  %356 = sext i8 %355 to i32
  %357 = icmp ne i32 %356, 85
  br i1 %357, label %358, label %360

; <label>:358                                     ; preds = %353
  %359 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([44 x i8]* @.str9198, i32 0, i32 0))
  br label %362

; <label>:360                                     ; preds = %353
  %361 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([30 x i8]* @.str10199, i32 0, i32 0))
  br label %362

; <label>:362                                     ; preds = %360, %358
  store i32 0, i32* %m, align 4
  br label %363

; <label>:363                                     ; preds = %424, %362
  %364 = load i32* %m, align 4
  %365 = icmp slt i32 %364, 5
  br i1 %365, label %366, label %427

; <label>:366                                     ; preds = %363
  %367 = load i8** %4, align 8
  %368 = load i8* %367, align 1
  %369 = sext i8 %368 to i32
  %370 = icmp eq i32 %369, 85
  br i1 %370, label %371, label %380

; <label>:371                                     ; preds = %366
  %372 = load i32* %m, align 4
  %373 = add nsw i32 %372, 1
  %374 = load i32* %m, align 4
  %375 = sext i32 %374 to i64
  %376 = load double** %2, align 8
  %377 = getelementptr inbounds double* %376, i64 %375
  %378 = load double* %377, align 8
  %379 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str6195, i32 0, i32 0), i32 %373, double %378)
  br label %423

; <label>:380                                     ; preds = %366
  %381 = load i32* %m, align 4
  %382 = sext i32 %381 to i64
  %383 = getelementptr inbounds [5 x double]* %xcedif, i32 0, i64 %382
  %384 = load double* %383, align 8
  %385 = load double* %epsilon, align 8
  %386 = fcmp ole double %384, %385
  br i1 %386, label %387, label %404

; <label>:387                                     ; preds = %380
  %388 = load i32* %m, align 4
  %389 = add nsw i32 %388, 1
  %390 = load i32* %m, align 4
  %391 = sext i32 %390 to i64
  %392 = load double** %2, align 8
  %393 = getelementptr inbounds double* %392, i64 %391
  %394 = load double* %393, align 8
  %395 = load i32* %m, align 4
  %396 = sext i32 %395 to i64
  %397 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 %396
  %398 = load double* %397, align 8
  %399 = load i32* %m, align 4
  %400 = sext i32 %399 to i64
  %401 = getelementptr inbounds [5 x double]* %xcedif, i32 0, i64 %400
  %402 = load double* %401, align 8
  %403 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str7196, i32 0, i32 0), i32 %389, double %394, double %398, double %402)
  br label %422

; <label>:404                                     ; preds = %380
  %405 = load i32** %5, align 8
  store i32 0, i32* %405, align 4
  %406 = load i32* %m, align 4
  %407 = add nsw i32 %406, 1
  %408 = load i32* %m, align 4
  %409 = sext i32 %408 to i64
  %410 = load double** %2, align 8
  %411 = getelementptr inbounds double* %410, i64 %409
  %412 = load double* %411, align 8
  %413 = load i32* %m, align 4
  %414 = sext i32 %413 to i64
  %415 = getelementptr inbounds [5 x double]* %xceref, i32 0, i64 %414
  %416 = load double* %415, align 8
  %417 = load i32* %m, align 4
  %418 = sext i32 %417 to i64
  %419 = getelementptr inbounds [5 x double]* %xcedif, i32 0, i64 %418
  %420 = load double* %419, align 8
  %421 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str8197, i32 0, i32 0), i32 %407, double %412, double %416, double %420)
  br label %422

; <label>:422                                     ; preds = %404, %387
  br label %423

; <label>:423                                     ; preds = %422, %371
  br label %424

; <label>:424                                     ; preds = %423
  %425 = load i32* %m, align 4
  %426 = add nsw i32 %425, 1
  store i32 %426, i32* %m, align 4
  br label %363

; <label>:427                                     ; preds = %363
  %428 = load i8** %4, align 8
  %429 = load i8* %428, align 1
  %430 = sext i8 %429 to i32
  %431 = icmp ne i32 %430, 85
  br i1 %431, label %432, label %434

; <label>:432                                     ; preds = %427
  %433 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([33 x i8]* @.str11200, i32 0, i32 0))
  br label %436

; <label>:434                                     ; preds = %427
  %435 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([19 x i8]* @.str12201, i32 0, i32 0))
  br label %436

; <label>:436                                     ; preds = %434, %432
  %437 = load i8** %4, align 8
  %438 = load i8* %437, align 1
  %439 = sext i8 %438 to i32
  %440 = icmp eq i32 %439, 85
  br i1 %440, label %441, label %444

; <label>:441                                     ; preds = %436
  %442 = load double* %3, align 8
  %443 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([23 x i8]* @.str13202, i32 0, i32 0), double %442)
  br label %460

; <label>:444                                     ; preds = %436
  %445 = load double* %xcidif, align 8
  %446 = load double* %epsilon, align 8
  %447 = fcmp ole double %445, %446
  br i1 %447, label %448, label %453

; <label>:448                                     ; preds = %444
  %449 = load double* %3, align 8
  %450 = load double* %xciref, align 8
  %451 = load double* %xcidif, align 8
  %452 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str14203, i32 0, i32 0), double %449, double %450, double %451)
  br label %459

; <label>:453                                     ; preds = %444
  %454 = load i32** %5, align 8
  store i32 0, i32* %454, align 4
  %455 = load double* %3, align 8
  %456 = load double* %xciref, align 8
  %457 = load double* %xcidif, align 8
  %458 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str15204, i32 0, i32 0), double %455, double %456, double %457)
  br label %459

; <label>:459                                     ; preds = %453, %448
  br label %460

; <label>:460                                     ; preds = %459, %441
  %461 = load i8** %4, align 8
  %462 = load i8* %461, align 1
  %463 = sext i8 %462 to i32
  %464 = icmp eq i32 %463, 85
  br i1 %464, label %465, label %468

; <label>:465                                     ; preds = %460
  %466 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str16205, i32 0, i32 0))
  %467 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([27 x i8]* @.str17206, i32 0, i32 0))
  br label %477

; <label>:468                                     ; preds = %460
  %469 = load i32** %5, align 8
  %470 = load i32* %469, align 4
  %471 = icmp ne i32 %470, 0
  br i1 %471, label %472, label %474

; <label>:472                                     ; preds = %468
  %473 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([26 x i8]* @.str18207, i32 0, i32 0))
  br label %476

; <label>:474                                     ; preds = %468
  %475 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([22 x i8]* @.str19208, i32 0, i32 0))
  br label %476

; <label>:476                                     ; preds = %474, %472
  br label %477

; <label>:477                                     ; preds = %476, %465
  ret void
}

; Function Attrs: nounwind readnone
declare double @fabs(double) #4

; Function Attrs: nounwind uwtable
define void @wtime_(double* %t) #0 {
  %1 = alloca double*, align 8
  %tv = alloca %struct.timeval, align 8
  store double* %t, double** %1, align 8
  %2 = call i32 @gettimeofday(%struct.timeval* %tv, %struct.timezone* null) #6
  %3 = load i32* @wtime_.sec, align 4
  %4 = icmp slt i32 %3, 0
  br i1 %4, label %5, label %9

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct.timeval* %tv, i32 0, i32 0
  %7 = load i64* %6, align 8
  %8 = trunc i64 %7 to i32
  store i32 %8, i32* @wtime_.sec, align 4
  br label %9

; <label>:9                                       ; preds = %5, %0
  %10 = getelementptr inbounds %struct.timeval* %tv, i32 0, i32 0
  %11 = load i64* %10, align 8
  %12 = load i32* @wtime_.sec, align 4
  %13 = sext i32 %12 to i64
  %14 = sub nsw i64 %11, %13
  %15 = sitofp i64 %14 to double
  %16 = getelementptr inbounds %struct.timeval* %tv, i32 0, i32 1
  %17 = load i64* %16, align 8
  %18 = sitofp i64 %17 to double
  %19 = fmul double 1.000000e-06, %18
  %20 = fadd double %15, %19
  %21 = load double** %1, align 8
  store double %20, double* %21, align 8
  ret void
}

; Function Attrs: nounwind
declare i32 @gettimeofday(%struct.timeval*, %struct.timezone*) #3

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind }
attributes #6 = { nounwind }
attributes #7 = { nounwind readnone }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}

!0 = metadata !{metadata !"clang version 3.4 (tags/RELEASE_34/final)"}
